{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "22e9e2d5-d931-4e7b-8287-2dcf2bd79914",
        "name": "Clear Cache",
        "item": [
          {
            "id": "670279bf-85cd-4e35-9bde-e537407dcc2a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e594573d-34b1-4440-a87b-b611bc711f64",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "595b2241-f896-4c56-83a4-e8079a963e3b"
                }
              }
            ]
          },
          {
            "id": "aa8126c1-40ae-46fb-8fdd-c39c58473495",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d7f8ed3-6da0-4e77-ba6a-c6e99542e1b9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1c891538-2ba2-427f-a7aa-24aac2815c81"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2247eff5-41bd-4e69-aab0-11ed7cbd65ae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e4a1447a-48d7-4b21-8846-a66b7637f086",
            "name": "Positive Testing",
            "item": [
              {
                "id": "de3a61ab-172f-4956-81c5-c0789c66a592",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9974d087-0942-464e-a418-98c844837447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09186580-54e9-4cce-bf3b-8cf4c29ce08e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e385cb3-9f5e-4754-bc5a-4161b391f0a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8afdcdc3-ccf1-407f-8d83-74b395b037aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21d22a0b-4247-4f9b-b7fb-5ea118b4728f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22b25c4b-ac6b-4b77-bb80-6a27dc520dbd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff545a30-be66-4612-9135-8c53da8814a8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "05a3dc63-e624-4a37-b1da-1f0f1c721a3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f6897c6-3895-4e2f-83e4-f5da97f0941b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21e147cb-29e4-46c3-a2c2-1da160b3241f"
            }
          }
        ]
      },
      {
        "id": "e9a1b664-7cf8-4f48-bf6d-474ea973acdb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f233083f-d802-4a23-8fdc-069672f4815a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ecf89b5f-969d-4eee-90c2-66d7dce1563a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9441c397-bada-41ad-98b5-4ad1d234c2bb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354de0bf-ccd1-4bad-a350-b04878da4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13467d4a-0d73-4a69-9aa1-425688fbbf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd0346e-7837-4e87-aae5-500d9291b250",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70f83a9-a378-45c6-9b1e-02d1d33a5e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16ae3b35-1e95-4b23-91e9-b18e331934cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37130509-1962-4725-9649-adc96da94c72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1e2ab-4b19-4156-9616-258d7cf67303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0fc81c1-012d-43e1-a60b-efe1b18eb1f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f9abe118-9ef0-402c-999c-9af371444a6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ae752d4-7038-4bf7-8ad4-0e866b02063a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aed54b-cb9a-416c-9933-c2daab4991b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5806f33e-ad0d-4ab0-a72b-be477fbf4f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc11261-a933-4fbd-ba3a-6ed8f6cea6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01804d34-da5a-40a2-a4e6-8e08b19b1b3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "92178604-aa85-4deb-9700-c3df3195836a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34c9559d-d050-4144-86da-105aa22f4955",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e0db550-2a85-405b-8f76-672221c4d577",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fa1bd615-434c-4725-beda-155ca3ed33a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b3a3318-4447-49fd-90ce-684bad4c7dbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a8a284a0-9631-4987-a60d-d66640942544"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ab41c82-a07f-429b-8182-88c4312f82a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc41f2d9-1e5b-4f87-8d5c-7042fedd985d"
            }
          }
        ]
      },
      {
        "id": "bcf1cf5c-b20c-411d-80f3-73f32471d242",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "68c25715-3e92-4eb5-a2c1-1e9180f80bd5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fc33950-233f-4473-881e-034f14a75c4c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "99ca397b-e2ed-46a5-b254-bd742ca7da0e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5ecdeb-5826-4a4e-a8bb-7e75fc211b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a57368-2ece-48a0-af16-f44af5b21212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450a8165-96c0-451e-a2af-7b9aaa9402e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a709707-9e7f-4f9b-b2bd-3d96cd6315b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bde00d1-6ddd-4351-9999-48fce71d0d0a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f91770-b341-49ca-b87a-ba545cf0e64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8be25b8-8ca6-47c4-9c70-e851b8f6098d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91852bd1-6de0-4781-a86f-8179cd1be9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bf87d9a-1164-4913-b6ea-6f304ac248ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df94cf12-ce50-43d5-92bb-63b1f6c99d42",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342fc0ec-b938-4b1e-bb05-787d36ea76f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d28bb3-e2e5-42f8-98fd-c24d429c1b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e743d116-c927-407e-b458-1bbaa08fff5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78b0d595-2721-4363-908c-58234f9f69f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2524244-e307-48ca-9129-89c49b9c8e08",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47931475-32ae-4c7d-84c2-8ada633ec5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caf9b1a-d141-4c34-9bce-80594dee2c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e960283-f492-4cae-a1ec-dc96c40d0b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92d0ba9c-010e-4024-a098-dc68f56b18b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ac85f4-9ec0-4902-8f84-720f53f094ee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ad4cb2-b720-4c72-b550-daf6a4b55b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706b0ecc-67b9-46c9-b52c-783d207ccc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5699ca-270d-4c3c-a039-6ff4c0e9077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fb81f69-0906-4b91-88bd-c88c6e41b08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3532e38-0527-4950-b225-3d16a25659fa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646cdf1e-b971-41e6-a164-bbe77b006756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7281fac4-52b4-4753-9e48-a9d8bb1753b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe251078-6915-41f8-9f3d-2249c9672448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "224c944e-1c93-445e-923e-17710bee96a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f6aa15-7071-4801-b8fd-39492eda5ec5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c054ec3-1855-471c-89e1-9a64272c5e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61dd5c8f-dd08-4dce-bf3f-cc51186f9d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dabb43a3-8fac-404b-8518-97959fde75c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579e883a-acf4-42c9-9fb4-f1a3051f0008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f705502-0cc4-416d-b1e8-e0ec294139ad",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c54970-e8fc-4db2-abd1-84c9aa4edb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efd73f3-27b2-43b2-a280-27ff6f97df01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eff9c1d-0915-4144-805c-e7a829e658cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e99103c8-83e2-4953-8abf-9a8b62a91b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef258bf-4153-4037-b5aa-480621ccbbe9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "939ab0bf-1e8b-413c-bec0-7ce28175ae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e036cdef-f07b-4232-8539-f61925847833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d93ff1a-0711-4de6-982d-5f913969da54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58427a1f-6d44-4a55-9518-c24e3a1a3fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc80ac6c-921c-4ad3-a168-a513c6456ac7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17f0555-a8f7-42d2-82a5-82c9f8683e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999168eb-871c-4d9e-86b9-4c5d3c262be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669d2d6d-9b18-40ac-8340-f5101a90372a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b186fc9f-d261-4ea3-9dec-96e40772871f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9954a4-5636-4bda-a47f-b568eececa20",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a366c34-6911-4335-b8a6-bb099c4cd55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9de09a-889b-4cdc-ae9a-7d1358dcf538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990f407e-52c4-4860-8c17-edbc728fc799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dca5604-adfe-4edf-aae3-60beaae79d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2106c700-8385-48eb-941c-6e9410428d22",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8c5768-c992-46b8-a693-e2bb575f2479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174bd2de-e3a9-4ce4-881f-c5269127c1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4215be37-057a-48e6-aa84-91f60e24d965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ca81b82-beb1-416f-8935-500e3665dd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4744a42a-5a65-49f5-adeb-4ca32bb748ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8fe39a-a877-4834-9353-e137d364c096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98d31be-cfc2-490e-ac3d-29f952218cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a2994f-937a-4755-bd0a-0e4fcb0a7209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59bbc40f-57d2-4fc4-a20f-c81ebe514be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08dad2f0-5d21-4860-82f5-d0b75c7aae94",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059647c2-af64-467c-b19d-1a9fad6f2900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ebd7e5-830d-4c4d-b352-77514092d1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d879529b-51cc-49ce-9b40-acdd8b716af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f913e24e-3da9-41b0-8a23-d9e15363301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eeea49-cbf2-48f8-97f5-206b93b66cf0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffd7185-cbb3-414b-b3a9-370ab8b1e627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5090399e-8678-41ba-ade5-12d2c9c610dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6ff46e-0aef-4829-a4ec-c69a1eb33730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c30b6e81-37ce-45b7-ac78-4d0e5485e440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86ac242-9047-4339-9864-89039383a66c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6d6ad-0ccb-4d79-a0fd-e2747ca1515b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a63489-b6c5-4a5f-b445-4b8f50cf02d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9121dc38-f5f6-4fcd-81c3-9c713c234347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0848891c-07c8-4f49-a687-19fe56cae800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603794a7-8122-420a-bae5-de650d6008ae",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5b5777-e895-421b-9b99-ee8e296dd07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1df3fc-b70b-4186-aeda-2d39fdbc35eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92043c6a-66d9-4c70-9b5b-e062ef4f4071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb08ebb-0f82-43c3-860c-38cbd7d37046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6ae79f-0c13-4f78-acd9-6fa61c5147a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5ec346-de9d-480f-b267-94f1fa88ead5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a855f399-c227-44b8-9c09-44f5565d4148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e413293-8718-41b6-8a8b-c25c642d56e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd4dee0-0d34-4d7e-ba1a-ff0da02a3480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce0399e-e221-45ce-9c37-99af34674f13",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d7aa5c-ba65-44be-9003-2b9133d0fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b477bd-059f-4382-8f9b-620e8d32a040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45adf2bf-5099-44e9-8ca9-12105244d7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "439f3833-519b-4e80-a0a6-36dbd0056424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2def0002-9106-4dda-a1dd-134f0c3dd456",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50223f09-7612-4728-a98a-9adf0df68576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5aa48ca-1e0a-4dfe-8962-8ef767ee0a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e86f66d-a04c-440b-9059-56a8ceaac160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0da73d-d5f8-4e15-8899-7420988ac81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3770a9b-2976-4bfc-9183-2b5e0c4bf0a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e073bd3-41a9-4772-855f-4872eb72f59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc17adc-c294-486a-b8f4-d899079978ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549db40b-fcdd-4eef-a835-dfe50598b36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55154329-2fe3-4f2e-89b6-3b6c30d415b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c25861-aaaa-430d-a639-c29aa023029e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e90f7b-ef24-4bd1-93ee-35192fa54b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39e1f05-c8bf-4a67-ab23-5f4f9021681b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288fa23a-fdd9-4275-9c71-02bd3ec949de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1133d94a-b762-46cb-93a4-fe29a3ccdcfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389e7bf1-222a-4181-810d-34abff24db01",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1682dd3b-0396-4246-892c-f0ff350f5e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e287ad-c386-4002-9832-ddf3ea37a64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d588c1-e35a-4035-966f-5c5b6ea06eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a032c567-d9ea-44a9-baf6-9919841e0830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e769bac-99a7-4dad-b8dc-01695b232290",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f57d77a-7593-4c1f-9131-8966da6c2d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878f1fe4-f933-4eb6-8700-dc90458ad3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d97ee4d-d507-4d57-80de-8e9bef0094ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e586887c-3251-46e7-a19e-e489af336edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c8eb21-92b6-4e84-a7ed-bfd67607cb51",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d891439d-3d04-4947-a30e-994c1935816b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc1e5cc-f507-44f5-a281-da6946763c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ee6568-62fe-44eb-b442-73ed6f36b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c42e72-bd54-44a5-bc2a-b00bb2916297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e2a4e8-e46c-46b5-917e-3885694b23ff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4785a4-cb3c-487f-9656-3d662f7a822c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ffac3b1-03a5-455b-b5c0-9afef4214a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318ffce6-a712-4b3e-911d-61b4ddce2f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d197dfd-b53f-41a7-8c4f-8dc7d0fd8814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891923c8-2915-44ec-9968-d0a110438d5a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582d4876-dbaf-4f16-875e-37bee8ce3b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc8fe04-4d6f-4d70-af8a-2dc72d8b9ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb39c28f-3b64-40ec-9c73-4bd8175d934e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "238d2fe6-6520-404f-842d-faa498cf05e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af735496-1d3c-4737-bf7e-8616dfb1f976",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e47b91-dec7-41a9-8588-8eebf3233aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd852554-caf4-48b4-b82f-41f4d351f112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5763dd1-95e3-4062-8e80-6f7bbc782221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c050a23e-2350-470c-83f3-d4e1cd0a9033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a357a9d4-1ec1-45ef-923f-5430de90f5c6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc1c273-c626-4142-8f79-80c6acb97c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9f27ab-c805-4cee-a5db-1ebee23e0bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020bdc72-8b21-4e94-909f-e83e88634441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "307da4be-5b44-4908-8a3f-a0e96c840277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef54e8c1-7a39-40d1-9b04-5ca57e8899c4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52c3cd5-de21-4059-8035-336fe68e6bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c0b672-8016-456a-854c-0dd67e2afbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38be0140-085e-40b6-994b-963344d25842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e4ff94-e7f3-4f7f-9ff6-bbbfe13dc8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bddec204-a543-4473-8f16-67ac918b5a0a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c79b94-bc39-4bad-8656-1f8d42dff832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10de48d-ae96-4577-8f4e-7c3daadaff7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab67210a-a620-4fcf-9bee-ff3321dedbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63927765-ddb4-4d90-842d-455011c5af78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07d4a3c-4b6b-4e07-adea-263b53ee0175",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c82d76-f77a-4f52-adbc-194e07c55a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c30cc5aa-cb2b-4339-8411-65c044f57fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b602c005-528f-4c38-8f64-4f53eab763fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11f8ba1c-0e59-485b-a9c6-96775ed2de0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681c17ac-651d-4660-8feb-f6f0b46874ad",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446c4336-ffc4-435b-bce1-4c396f53c90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5fa8fa-c060-41eb-8506-2456f4e0d200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8933d795-7be0-4f8f-95d1-20c3aeb8ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0536216-fbf9-422b-9279-1298be8a7db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3e83d4-579a-4e0d-8870-e0411bfd5c61",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ea43fe-13fa-4223-adce-9647ba2bc894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8bc519-c492-424a-b6f3-c7eec6d85e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4e9814-1cfc-4351-a938-3f41b0b5a3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "985ba326-49df-44ce-95c2-bf5e9b43a52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131aa672-4aa9-4fd0-97e7-71d2dd43d733",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fbfb37-9919-4c8c-a6f0-a57fa6c48ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3b2ba2-ceb8-4c27-8cda-110b9b43b79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109b9558-912f-4588-93ac-e5044dc970e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7b55d788-d7d2-4359-bbd1-20c5d1e8e209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e529a7f-4fb9-432d-b83b-b97f67cb28d2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60c87b5-6644-4219-985a-711371c40e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50618b40-973b-4a02-8802-dc1bfc525da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40f0588-6ee4-46b6-8c2b-1715593f1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c568108e-6143-4645-a8ec-dff47d71eb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ddc43d-952b-4e3a-bdad-56647291d9e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b26af4-79ff-43cd-b04c-9b682527362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7618bcc-3b80-4556-adae-29469ea2f0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b401b750-f6fb-498d-8bb9-13128cdc6339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "001248c1-a66e-4003-8993-0b0d562dca39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f123fe1c-e39a-4ad3-b672-8d12aff6a96f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e211464-b2d3-4e61-a04a-ab40d3ca961f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7ed0c8-5f2d-4b5a-918c-9f76987370e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359a7ac8-636b-43bb-9448-ef19334527de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de985d90-a6e5-4ce4-9627-12d80163afe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77014642-880f-4953-ae92-adc72fbdfc46",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff53fe-4aed-42d3-b7f6-ce2db2b205c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220daf21-620c-498d-96be-5a37cdf92df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8e32d6-e943-46c0-93fc-acc70d98f7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7415c2-458b-46bf-ac79-109cbc484469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fddff7d-b89e-4463-b048-f6c53f5da086",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749e49f3-7549-449f-95db-c2066419d9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce028c7-237c-49e9-a837-529edd758b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a413947-40fc-4d80-9fb1-980cbb6dc9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ace875a9-3c48-4a44-9068-be02c3564858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff44892-171f-47f5-b3a9-04b0571db289",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d280eef1-4ece-4e5b-b3b4-b3b3d3c81c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1081c21d-d98d-4531-932f-d84b90093644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d2989f-6672-4777-b714-9d5bc70a450e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d97e2c-a1d0-495e-a152-9337343e9507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8a2015-04ef-4e0e-94c1-f9b83bb85f27",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713da479-9763-423c-a219-713f9a106582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd35f953-66ad-4858-9922-2628bb16ea58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef78d52-bd86-425d-828f-acd1f115d552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "01ebd437-4be7-491c-b87f-33bab4d81e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3f3dbc-fe5e-45db-bf29-a4ad75df467c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a48cd48-84f8-46b6-9dbc-4a171704006d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd57a43-7f5f-4b41-a47d-f1e1fa2aac81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0ac5fd-93b9-40f8-8654-e585c42d8960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dac3d736-d2db-4fbf-8521-3e57631e3dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4e4a89-bfd0-4361-8568-fafec4afee85",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69718aac-6a13-434a-bf95-adcb6eaa2f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "844d0402-ba97-4020-8c5f-a1ed06cc4fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49857b30-2641-4e1a-a2b5-8b49924c4b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb629987-2851-42ff-921a-eb1d6efcb7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871dc3c7-ef1c-4b48-bf48-e6d8db88482d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e93baa3-c3da-4a41-bad9-308dfe47a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f1e5fd-960a-47b5-a83f-e9f13464c7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1b9df-2d0d-44df-b3b4-8fc249ebfc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f89530-7814-4c71-afa7-99a64d781206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13cbe4f-2e8d-4ab4-af3c-8914bc228262",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e0c031-3f11-4051-b511-8b84b98cbdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27feb90c-fcb6-485a-b92c-3e8ea26eccfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8061dd-8643-4e9a-9aa7-416360b5c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bba6bfa-f946-4524-8d0b-ea1e460b78cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423e72a9-3027-4fd1-9376-a194f5fc939d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25fdd6a-6a69-444f-bc67-64c1c66bd301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b76247-700f-442d-94b9-6c8e4e4313c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a28cbf-0128-4006-b473-84251cd30c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a058065e-192f-4cb4-a134-704f5bf4e86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119984c4-b822-4b15-bb55-84554495b103",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94616996-80a6-453b-980a-9a1649215fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6433a12-be35-4124-bc58-7b4afae2cea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb187c-b0e5-4461-a975-8411a2d3cc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1e352e-2aa3-471e-9da4-b9d338e71758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffd0273-8d41-47a9-9239-78f4b716bae9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf19ab0-c43f-4f7f-a10b-f655f6b32138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c7c723-b3eb-4e23-a8e8-5d254f4aead6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8feb20-d4e9-44cd-be77-f5168687761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bbd3d8-a58e-436b-8b53-ab4ea660fe3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec8ce00-06dc-4684-829f-580849bc8e35",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a533b961-3370-48a8-8f10-7016753cfb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c770b3-1ef5-4d3c-a4bc-733f336b16b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e14b91e-bcf9-4906-ba60-8d5964ff5e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "002ed893-5623-44f6-b6fa-d0dc576f6626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606f0558-1b5c-46eb-b018-eedb68643a91",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547136dc-a44d-4264-9c7a-50a887ff4393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "628fc031-d4ab-4d8e-8fa1-2289b866593b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2723137-f811-446b-952b-526d0e373f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b7fc8f-c7a2-49e2-b9be-ea598855f7b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a14eb9-adbf-4bb1-bb30-9f00de9b38e0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26635d1-139d-4083-a8f4-68462371f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aad7e3-a422-46f5-bdde-93397b39c2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315284ac-0a7c-4b6f-a4a5-5a1874d7bd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa974603-eca5-4d26-b9e1-4b51a6b09c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0165f69b-81f7-490b-bae6-fb9c62cc3b59",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d122c6-5d1f-4cba-bb69-79261f6b2d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0c1ab0-dd9d-48d9-8f4d-296d7dfa7d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114b48a-6d64-4264-a2a0-3442397ca492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fa5681-4a4b-44ea-bd5f-5b30eff1995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b682ad-dea7-4d29-8d3d-7a184a4f76f4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1efa8-6443-4afb-a375-769d3fc1c98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c92daf7-c9ef-453d-851e-754ae1bbb873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f338b48-2d74-40ff-b981-69553754e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2541bfa3-3a99-4b9a-a8ef-77e4911f3658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e06c31f9-fbee-45cc-8ad6-04e1b01e1cee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c54dd4-fb4a-4873-9c42-de4899a5fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e108fd59-cb1b-4545-82b7-51fed219c9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696b2af4-3a07-46d7-899f-8171885179ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3208eb92-eab6-4cf4-ab52-ce8a33c8a226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8b09ad-f005-469d-80b9-81fd50ce91f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a35751-0cb7-47a8-b032-57326553d699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926c90f6-a273-430a-9c9c-3998f5f5e203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677113df-49fc-4c9a-b188-975420de1f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "86767c30-60da-48ad-ab5b-0165dc119c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5946e1a8-cd19-4d3b-bc14-3d68f974697d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62a5997-3199-43ca-a7cb-3fd1a9da158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25fddd6-eff3-43f8-9e40-1c62683100b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71c5908-dd12-4c56-b734-b90985500a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c64a1b5-b6be-483e-902d-cae73aa08b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa376ce-1f6a-4b91-9e81-2b578b5c451f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6dafb8-b5ab-4b48-890f-25090634237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60660cd2-ae8d-45ff-bec4-c074001c94d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a85102-8818-4ecf-a5b6-c2a2f576cf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "52b3c595-b360-44b5-9e66-92a1bb27dba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f472ea-20cd-4061-a919-f778f0ed4f73",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de574831-8e88-4f4b-8807-0fe009797a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2448f89d-886b-4b3d-9983-2fbb750a5b8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa4fbce-7e92-42ba-8774-124b93fe80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8926c6f0-77f8-4d1b-95e4-f2195aa9ccda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f211d74-e510-43a8-a4cd-e154d4d8bf3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4546fe1e-a17c-46f6-98df-8fa8db773fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a334e6a2-4226-473e-b73f-7f51cae26c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b186233-f87f-4360-96f0-9623191523f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "36934d8f-dd7a-44a9-96b2-396390122ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f0ad7b-2665-4f46-8f80-c0f5a3e87dbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cb8c43-3e76-4da1-988c-66ffbbe6a53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ccadb8-1b96-46b1-8311-40a1998fd267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ff798-dbae-461e-857e-90aaa00a536d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81ebd59-db22-42a8-9281-3472ac608c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0950ce16-6352-415f-8360-66d7c4779361",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05a2e5-4d11-47f9-b91d-5736fa751311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25613589-4a4b-4cf8-a922-7b8f40138329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c413090-d1a7-4281-9df2-ecdce5b9a915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "50607a41-9b53-4487-93e3-68ed0f36b3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d80de4-d087-4f4d-bc49-e90abc1a64e6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa67589-dfd9-4ddf-984f-4d83c3c713e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8a458f-eedd-41da-89d3-b68fe7e52da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406f17aa-cae7-41a0-a0ce-b509368918ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "15eea1f8-9830-4e2e-b2d5-d8c2ae67a4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f476da-6f8d-4143-9eba-b72d355709ab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd3b7cb-90f0-41c6-ac04-9575b47c6dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ca6063-aa4c-4641-a2cf-4bcc32050946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c461b2-914c-4c00-bf78-3d4c21453018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36e2e2a-adc9-41b6-8e02-3ab7361cb843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9edd02-3cda-4bf9-9886-6d74a18199bb",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ca0b05-9353-4047-a17d-f4d02addc919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d437655-8bdc-4cae-9d9a-08a149c73ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43537ce4-cf51-423a-b9b6-d94b5cc0d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0f4647-e935-4ab8-a6d8-f1953fa2cdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca74e61c-9e34-403a-8a44-4c94ca9fe1a5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac5026a-84ea-4c28-b2a8-355432d139f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7151f9b7-f725-4c3f-982a-ff6f42943f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104b55fa-23fe-4de1-afca-598b90fbcc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc87baca-a0ef-4bf9-addc-8e2772bacc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62546652-2b92-40ff-85b6-89e4fa58d556",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1323a0-22a4-47df-bbba-c0701f5041a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b49d09-2794-4173-8184-c29b303416bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6e5f7f-b66e-40a7-be28-c1add6e7f160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db579b90-3916-4f03-8f1b-82edfc77b2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fe927c-430d-4a60-afc6-3589336571b1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b427a-f0f7-49cc-8869-55512d4bfa1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8733d71-ac47-476f-ac89-69692d498c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e2e2f4-065b-4e5f-bd41-4bd8c2147b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "568befa8-5cec-479e-bcb8-c0a5df97da9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb8d2f-2fa2-4961-ad0b-2b80b812ccb1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18dd0eb-2f4e-4d82-8379-2941969d493e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52ff42-da2f-4ef4-b1e0-891b9f168c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b4ca8e-288a-47f4-ace8-1015fc1cec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a9caf6-5bbf-4f6e-8c31-c6d3bdc4e502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d02761b-d7b1-47dd-ae5c-9b8ab02c2d7b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8b2ffd-d2de-4e59-96c0-9a0673ea79fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ad64af-cc5b-46d0-9f3d-6b2b55151c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1365eb-0b4d-46eb-a65e-85e43d8dc072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8526b5a7-540d-4e66-a1e9-7f08afcca9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0015a2-462c-4ff4-be12-57771d45011b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a31e2-a2f1-4f50-a4e5-b72edc915a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef494f0-6c65-4d94-ada8-3524dd0bbd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bc66b8-b9db-4e82-b8d8-031a86113e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd6e26e-6483-4815-95e4-257c122f22b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cf7322-21bc-4d63-94d8-7dd3be2c5531",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a670c703-d496-4d51-a51c-fbf5d82503b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb00b0f-a748-4743-bcfc-81addf78903f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1942272c-2217-4df4-9ddc-c1f87831645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5e9b61-c99a-4962-b5ba-61b37eda7902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d236268b-d437-47f8-a717-3834257d584a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d994a6e7-fd8d-48dc-9479-ed8988e95ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc392af-ab00-43ea-ad6f-4b6ae298a9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1478af49-527e-4bcf-b749-4ce9405e67d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b79a70-aa6d-4d2d-8b53-7e86548a12b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68720f2-a3e6-4e0c-8a4b-0fcfdf04e204",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e792e601-4565-436f-9584-386169ee6d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c429d54-354b-4e88-a545-413de9da7a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8199d0bd-2497-4e19-8732-fe414da2085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2462a6-85cc-4386-a71b-f217ed87041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3ba1ff-2def-48e4-b944-07e770417210",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14712a-370d-4251-a9b1-1189f79203c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d164842-27ba-46e4-95b1-405e25388c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8a1950-8ae2-4c16-b154-bb5487719930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9becf4d-3eda-445a-83f6-ae68f5ef22b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9d1960-5921-4616-bb3e-405a167242d8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3026798-747a-4bee-ac1b-db6d4133586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c07f32-3ae0-4db5-a117-92f9ff52b6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629e20c6-c19d-409d-a5a8-3e4c8c7631f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2ce7fb-351b-4e7e-bb1e-c8fc4d32cf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2568aef-5775-44f5-960d-98bc01692583",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60dcd339-85c3-4975-84b4-74b7272b4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13b384a-0fa2-45e6-9cd4-e4d5ca6ae8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c07a37f-d6b8-44af-910d-680d1870c5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6502f773-1364-41c2-841f-86b625e7fd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a9798f-8227-4174-b66c-3b660a756d13",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06850930-ac06-45b9-8289-c723215ef303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64591c4-2544-4e6d-8864-496ec60a0fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396c1c73-ef89-4785-b405-f94797ab2b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e936b46-6765-496f-9bb9-28cc4d8bbccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb2861c-db8d-43bc-900f-727043bb8be8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d550cc-9b54-4865-ac08-fff15279141d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f16f05e-884a-4bfb-be0c-dc2e8a03dc9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b15f36-0d7f-49e3-8001-c395d8a74bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61bda74b-b902-4368-9fd4-d6fb51f76463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821c4995-492f-438d-b2e9-f11a527bb5b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fea064-e9a7-4735-994f-1f6f893348e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60dfd432-f667-4792-bf19-e035fb6d2fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646f53f-1869-432e-9c84-a13812c5149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd690b4-4de3-4391-84f8-c9513839a811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36457a4-6938-40be-a9ea-09d11fbb15bf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18064669-02ce-4067-8a7a-49b55acdcbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cf602a-7090-4f00-a4f4-bfb6f4b7b3af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2769f351-5535-4e0d-8ade-daa555527f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab37e163-7832-475d-a6aa-2bce8012d953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4da7a9-4c8c-4607-a0fe-07be16f26f3f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60cc1bb-7549-48aa-aeae-c187f18853a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f011624c-0b21-4029-a9df-df64c093a3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368ae144-0776-4daf-9845-9f033ec29d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf72909f-a45f-442c-b6b0-34a82df5c5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc772f0-ab00-4e0f-b779-00638eac8b30",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee3d3a9-d84f-47e5-a6f6-f65431d8f0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f3bcc3-f43a-4665-a357-432034d32edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54386fa2-0920-4351-b8a1-3acf021861c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ce220a-4eb2-40ab-b87b-cadcc1d07839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e31700-4688-45bd-8a3e-fcd0e54919ff",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91087881-684e-436f-81ab-7fb74a1a6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc59bbb1-4340-47ff-aedb-25b3b6dff00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8f51a2-4c6e-4651-ae33-c05dd741a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0ab098-1f81-43dc-be65-c3ea90a0e042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7547b202-ae80-4803-9ed0-1ca4af345898",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e084e5e-dc3f-4b18-9787-fdd1bb20ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0689f39-99f5-4419-9123-322a1a4d4ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3736d9c7-9ce4-4cfe-b130-9ffe15ff2e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f72c84-c609-4253-a78e-648018c5248d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dfc5d9-295b-4bee-9f3c-26c45df9e80e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26361e5-8bb6-4667-bc23-64ae72637cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415b22bb-790e-4631-9fb3-28b8b11aeb66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb904c3-6b14-41b9-9f22-46514c5e7bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8ce07a-1d18-4b13-88ce-6fb207241448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6830bf01-c287-4c96-a54e-56484a3922f0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3e839d-a31c-4c3b-972a-76447215b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7854f5b9-fedf-4f7c-a816-1247ee433673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f35992-a81d-4a9b-a3af-79c1599e2247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e4c52c8-d493-4ade-b0b5-f6d3853668e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18790f0-384d-4c93-a88d-7e56cec59426",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d365e63-b0f6-4436-9eb9-16c7d1bb1cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d10a5c-8358-4b4a-85a6-aca8cf2d1528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c87f79-032f-40c1-abb9-3343663a394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a7721d-8526-493c-848c-b09bb69f3afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7b4a50-cd04-4179-8daf-89d26259123b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3ce748-53a7-4bf0-a923-d2593e9590f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1479193-91bf-41d6-a577-abd769cbb16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c0a6f-8369-4b4e-9ba0-48f069e408b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcee5df-95a2-4943-9230-03f345535f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed8cba3-1f73-40b8-a118-aff64bf84a67",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d5788c-35b0-404b-9f2d-9a8fb157eecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51724d6-7f9b-4ad5-96a1-53691e1db167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daca7cff-9b3c-4422-831e-3626114dcfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "291aca7d-5720-4866-8fbd-6dfcc2db2941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4758f19e-e776-4079-b0df-2a0e9e2f7e44",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf482ac-e4a9-4005-b654-a577e000f785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb18f80-fb87-44cf-808f-d6b234153f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac695179-029c-458f-bdc9-bf567b38c3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "975e8022-b7b9-466d-8859-2dcf489c5554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f49b42-1ecc-4377-8ac9-e7fa0f6e70d2",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fd2c39-c9bf-4b45-be3b-3ff49f37909b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5f14affb-8724-45b4-915a-6cc63daef05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e4bc81-a593-4546-bd32-45079c5ddd15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5af6d1-2a13-43cf-8441-a03b4e009b2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a0e5562-a59e-4535-a5d2-f240eccc5fa4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c723b8e-8686-480f-9126-690fd78bf4a0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c2c533-73b1-4540-a296-1baf5ad1f32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a1de371-a2ec-4205-aa3a-adb88d20a93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48af58df-abc4-47b9-8ed7-8e2820cda3db",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a771f123-4c09-43ea-9b4f-dc9b8429e35e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b12fa365-3772-4da9-aa2e-bb6ba3d2b088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1354d887-b6ef-4a53-afdd-05be40a1ca85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fdbd62-ac37-423a-b04c-7827de300760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "feeb872c-5446-41a3-b93b-1f0f78d3f273"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80275eef-a387-4362-9ac9-47d4fca81c98",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e73cc795-f839-4751-a47e-e75f95710438"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e840cf73-b008-4000-b592-9b2dd3ed10df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "239be2bf-56ff-4398-97f1-1b25c53a65b2"
                }
              }
            ]
          },
          {
            "id": "25c9ff37-1903-4d68-ad50-c76ecb9479f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "255d854e-9ae8-43bb-8ec0-8508c2138504",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14472db8-16db-4373-a603-daa062b5efac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d33c9c95-f76d-4479-84f2-03cc8ae6f487"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f77b97f-cce1-4a3b-8a71-7a1f8d5480e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f3535d7e-304c-4f66-bf22-91870dab9a72"
                    }
                  }
                ]
              },
              {
                "id": "aca48bf6-e2e9-41d2-ac0a-2228c9a4027a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aeab631-5f5d-4f86-a784-51cd177c3cfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ceb99106-bd5c-42b6-991e-d94152bfbe83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "216d1f92-60bb-4eea-b607-93dc2c132920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61c14569-188e-4765-903f-505c21ef3d6b"
                    }
                  }
                ]
              },
              {
                "id": "835b8c45-1a70-4b10-8d81-8015a36b66be",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1493b1ce-640d-4286-9da2-9bd5d218933c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c39e4b8-808b-4500-8cbd-a85502cb503d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37545817-c08a-48da-962f-7df16620c15b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef49812b-50c3-492c-83b1-ec4e4f1f823c"
                    }
                  }
                ]
              },
              {
                "id": "72483155-bba4-4992-be2d-f3357fb2a2d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb7cfda0-e89b-45e1-82d9-ab1830ef6340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7772312a-7ab4-40a8-86f2-d4fa55bbb4f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d42129c9-8515-4187-b2a2-86ed972e09f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "275531ae-d97d-408d-ad7b-3f18466d2395"
                    }
                  }
                ]
              },
              {
                "id": "8dd0928e-1aaa-401d-a8c2-74039e578e2c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3037136f-9a85-47d7-818a-29ab89c838f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0432809-3bbd-4d9b-a9ff-4d1529ca656e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67f4a95d-bff6-4dff-b014-3221472ebcd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d199a04e-893d-4312-894f-734852cf0ea4"
                    }
                  }
                ]
              },
              {
                "id": "046c9a44-43be-41e8-9224-4b7172318769",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2b182bb-328c-4862-88e2-e591cc5603b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ac13144-0473-47ec-9e4e-21116f185fef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d0ca59-ffe2-4364-8485-d913a27574e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "727e9637-4cc1-4503-a0f2-7bf9d3cec9e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e9778a5-c28f-417c-99a2-f5c8a9b85b27",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b24b5df1-57f7-4f71-8a54-89c7ef76d1c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aceed3a3-ea60-4b23-a694-3e3b1bf72e1b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ee3fc87-f8ba-48e0-b3b8-6a943ac68667"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3215c784-cb13-46c2-8346-494b1897667d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b092ddba-0ad5-466d-a7b6-25600b875c7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f86c5aa2-bec9-443c-9402-c4e470575637",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23a62239-2b4d-4926-b757-b1c71e7051a7"
            }
          }
        ]
      },
      {
        "id": "4ca42904-bd24-4fdb-aea0-3b37e0b70bf9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aa4a769d-6c0a-45d7-afe4-dbf7c51b98bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e3e6d2b-d571-4939-b645-08aab5a85266",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "970df7a4-e1f6-4d5a-9a6c-647c5cbd2fdb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849c27d-2ddf-4be8-a15d-4649e25659dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dffe21-2b11-432f-8440-36dcba2c56cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7dcf33-05c8-4005-9182-b992f866228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "20efb764-ca0a-44b0-b6d8-3febe87e9524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351bc49f-88e9-44dc-b3de-968bf2c449b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e5a47-fff7-4764-820f-251fef25cee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90b6f66-1923-4479-b373-cffab185c9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e564472b-32fb-4bbc-a547-586b34848432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "927d6434-06f2-4154-9f7c-82c9a7298cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8fe38-30e5-4b12-bf7d-d3338372438c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a5e241-ec75-4d6d-a641-38bd33a282d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c771bb6-1798-40ef-98ab-003cc8744909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462be9be-72f0-45b8-8273-d8be8f78157b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9052d42f-3ffd-4d08-b5f6-268690bc5289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b14a9f5-a679-4d63-8d6b-396fa608e290",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8446cd85-59a6-4f98-82fb-c1360bf2b9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87bb5ced-bb0e-463f-b4a2-9e6c0e843dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39c5379-deed-4c86-bcc7-d0f7472f0125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84dcaecc-eaef-4369-ba40-54fa53926126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601fa12b-1bd8-426d-bce9-e22d16eb34b6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aa7847-6188-4f3a-8a95-dca363bac527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b523319-fa3c-463e-91c2-8262b0f9cf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ce7b5-eda6-4be3-ae9b-38988fe4cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa21af7-f1a2-4763-ad1e-e989e72a6716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808f4b97-cb76-40a4-b8c2-91fd086109da",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68262482-5c0f-413d-b013-62bb8c8b14fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4f08f1-3e91-4d3e-a1a6-29353afe60b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8861f76-e545-470f-b76a-d2ebde25806d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e231a97c-000a-472a-b123-3c6ff1992780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9931bc-db9f-4c69-8983-9f941e398de1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f53a1c8-2b79-4267-a2c3-62cb5eac401c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5906dff3-dd22-4c3c-af73-a00d4da484c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379a9178-6e7f-4f73-9aa1-3787fb993c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc62e2fb-46b7-421a-99ba-76945a0035ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94fd188-383b-41d0-999c-cfe6d075b4bc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b220f8-14f5-4ee8-9bbb-240dedb8e3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5ed03e-90f6-4715-904f-2dca05f1df9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302e4014-32b1-4c0e-83f7-2b38f6541156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a68cd2-32fb-421b-9bfe-57570ca5dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2209744-28c3-43af-ab83-89f5385073d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52fcf71-a5b2-4663-bdd2-c1c82a21bbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d4c6d8-6ee0-42ce-a6b2-3d173f7f6540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034e8316-3f6d-4b24-89f4-1c5c35577661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f745cb2-f908-4ad9-936e-421b52933192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368304fc-a579-4c1c-bdb5-8eacf07d30f7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c60e691-c564-4205-b831-bfa3085a4d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3253f4-e068-4721-962f-698e7e30e2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cdcfc6-5562-4608-ae93-8d8514eec994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04a73d7-08a0-4e8a-a5f9-91e8e324817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc0a8cb-d289-42ea-9b46-664f814463b1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd08bdf0-5447-410a-ac31-7eb83a812d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cab8e4-5286-430f-a94f-46501c5dd3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1940290b-1bc0-4f59-81c7-bf17966cd24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff3a114-2b72-4186-bd47-5b90cfded7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bca167c-4ab8-4648-8654-7a4f9c937b1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf93974-aceb-4472-94c6-08b20a09a9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e2293b-bb81-4862-a697-fec5b96b0f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827c0d63-d9bd-4ee7-a301-36878af60d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a21420f2-19ef-4bbc-9faf-4eab3d593220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c4bb48-71a7-49cf-b570-2e5b2febf4fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d873265-e30c-4c82-bffa-f42aaaa9cbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416f2609-367c-4f54-ba0f-41123fbc542a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088367d6-f118-4fe1-b0ea-cc77861f26a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba32b0c-d6a8-414c-a649-94acbed63bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab15e9-94e2-4cc8-af90-c15f29b20877",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b96b2b-1a4a-4f45-b541-3a781695ef7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c5bc98-4a40-4b47-b5fb-828dab60fa90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199da9da-f160-4150-93ed-e4b54317e3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "646d2931-485a-4b6a-904c-a84c152ce7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543ff6c6-f17d-4f39-bd8b-b0f180294dbf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df627b16-f190-48be-8fe1-47f87f8384c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07d6b4d-220b-4222-b72a-6f7491f8f586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9192bd-ad32-455e-b5e7-b1843abfeecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b00017ff-2233-4b83-a0f5-ce62753b028a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae2c4f3-8fe8-4c68-8172-de1d3e075130",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0219d2c-b608-46f5-966d-cf82df612182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f65ed62-80d3-4bdb-bc1a-1daa3e4acc7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3351d8-d3f9-46ab-9a04-5c1067809ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f1dbdc-a212-42b4-b209-2caec0dec451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285c97ed-05b3-4314-bad3-c32d57cfc9aa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63e36e8-3c35-412d-a330-1300e5ff0266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103975fc-5b22-42b2-8808-79247acfe1dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c970b4-ce14-462c-91d5-ec8e3c5d83db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b796e14d-52a5-4707-9741-e0b267585f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3275775d-effb-4c5d-aa12-42f9cfa86a36",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6cf6cf-7b70-4758-a627-349a55099618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c6188e-0769-479b-839b-03d6ce6be9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c842f74-2117-4203-acbd-47064bda8251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "587d5796-4a0e-4bfc-893e-b567e6254e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c7854a-98ae-4ad6-b321-40a30410ea6e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933350c2-68c7-4109-83e1-fa0e0deb22b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37ec4ec-30a0-4459-bd85-7ddf3819a81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec071ca6-808e-43b9-868e-0cbb8ff5357e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d07905f-dbcd-42fd-84b9-6fae4ebd2a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2b14bf-dbeb-4a54-b28c-cb2fa70d4e05",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df74b068-e3e5-48e8-8188-0f6abf42782c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0602cb-9486-4449-b6e1-438ec79a89a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5343ea-8b24-43ac-8649-274f2899baa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27014e1-adec-4cde-be2c-b5bb67b57577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8c7d00-e1c3-45d0-9109-bba9a502bac8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a28880-76a0-4491-b158-d53341840c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72033651-d9fe-4c22-978a-3451a2cc5ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94375f33-3aff-4070-8d51-3089e08cf743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75389d1-fe4b-4c41-b22d-fb734035327c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea35bd0-eca0-47ed-827a-46a503c5a975",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5991459-f7df-43c5-be77-a2cb8612f855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b69d7a2-3eae-4e0f-b180-3d0bc658263d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05079c-a0d8-447b-a009-37f230b197f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "161764a6-494e-4f0a-96a0-85af2f256fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86758b46-7356-4f1f-b0f3-6c0ce5405bd3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0c14c5-c9d9-47ed-9f9a-0dd42aca4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abce28d-4494-41f7-a9d6-e8865d75b79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72ea989-246e-4c91-ae72-becac13f323e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "791068b5-d59f-44bd-81ec-6ab0d817e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa4796d-8373-4a97-b01d-8b2fe125c706",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9e3dc2-5522-46e8-a1f5-fcd0f1a5d852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96c7d99-e3b4-4ffe-bb80-eb86ea03ba06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3307b89-6acc-4c7b-81a5-54df9db623dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3bccf29-af3c-4ac8-9601-229f9277b15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f91b61-5ef8-4fee-a540-426d82dda61b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abaa0ef-c5ab-478f-94e1-c8deea9964d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603be03c-636d-425a-b3ed-dbffed123036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a042e8-9b5f-4e78-9e03-7d687eebfd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fad5ee-066e-48fd-ade1-957fea6d3177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050d942f-2e5c-4ef3-89f1-cfe3c4f59ba9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e64ea08-812d-4a36-bb30-721564c9ccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb64705-179b-4e91-83bd-68447451c60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eccb9ad-f3db-4ffb-91e1-a8b04b14bad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbbbeb4-2ea7-44d6-8d40-23906de9b0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ef1246-8508-47d2-a4b3-b4a1a3c56b85",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe38d934-722d-42c5-9f54-6a25d4cba9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31ef631-df6a-4d1f-bcc5-715b55f3c4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc416eb6-0686-441e-833f-a0eab3356375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71c6e4ff-6ab6-4934-88ab-acc28689f483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d3ddaf-1592-496f-a6e9-e7070938cfd3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0655f99a-a204-42d3-b528-5be372ef0c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1abac685-9c53-48b6-83e3-1ac1c740e386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0826be8f-d943-496f-a710-23fa5d9eba18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc393e7-1d13-4be2-bc75-d718324cb0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4fad89-2ed9-461d-ba02-470d04f39507",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfabac4d-4aa0-4cc6-89da-32e954d33f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e367b0-2b64-416d-8a2d-9ba1c3c00194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458265b7-3ed9-404d-830e-76940689982a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95bd8944-57fc-42e7-a567-a13fde9548ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3493bbf-35d1-4d7d-9aa4-20e96c442189",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1a3f4-39f5-4bbb-922c-3182e2039995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f0c040-2735-4520-a6aa-df1b5b3361b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fca30-e667-4d67-a581-bbf5393fb8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "349a48b9-cc1e-4a42-97d8-236699103572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ef9f9-752e-4da1-bab6-0bc7d05455ba",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de8006e-340d-4d80-93e6-48a91ebfd35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6025a48-5593-45f7-b84d-024c30d445cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738ad62b-a870-4e01-98ea-e21c3fef7032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191e65b4-3f8a-462b-8f64-07fca71bce8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9765a39a-397b-43f1-8a20-2b9c6936e8a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec70a58-5877-44ff-a4b0-22d53c73bc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c46d9d-7b86-4117-a19a-52da5c77ce2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4985b94-bbd4-467b-acc5-aa0c932852eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8bab783-b1ce-4c87-9f5a-48a20824bf43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b0cda21-22c6-474f-a1c6-86f1472a21d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "401e492b-d2c9-44f7-b255-6ce86131147c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cfd9e6-4623-46d6-a74d-a21720eb0fb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6feba58d-aca4-4245-b80d-be8c0f3e29bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0916f31-1e8f-4bac-a039-4dcbabaed8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e039e602-e5a0-40b9-892d-3f4841336933"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0cdceaa5-57b4-42d8-a46b-175ec991c089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2540f3e2-d6c0-439d-8c73-e8748da2ef9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38b09690-e799-4cb3-bc94-478cc06e2e6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db4279b8-84fe-4897-baa4-42b991020edb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92f1ac67-dee1-4de3-a5b9-efdd07cb6751",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "87665b0b-f96d-4278-a6ce-f3377623dd07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea33c827-b9c5-4311-8c83-f1abf879c851",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62d71ebf-a16a-4595-89f4-e01ac90a88d5"
            }
          }
        ]
      },
      {
        "id": "4b6cb299-98bc-4c5b-914b-cb2770ca4f7a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9717e19f-3c85-469b-9c43-f7a56309f294",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee96a997-f9ab-4b76-affb-ecdb8babc3ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3093ff8c-efa1-4a4d-a9af-d18c024b5694",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a98e410-c136-4ee7-97b1-9fbf16e2dbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6b4fa1-83fd-4d39-8f04-eebaab1bc115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac587b1-ef72-4371-b0d5-3f0c19b245a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fec6b8-3b78-4efd-8664-632a827faadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "230e726d-5453-4c37-a397-f67fa231372a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4589a4f-67a1-49b7-ad49-aac6a24828e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93436ffe-b260-44ce-bbb7-0973cf56b702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493725b6-a693-4d11-ad50-a056d1c4e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5257b0-4ba0-4900-9d0c-558e1fee41f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb8e4a4-9f97-44a0-9cf0-b0831660efd2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3317f7-ce46-4ac4-9f58-fb96dd93052f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b95b93c-f962-4789-a6df-aa8a167b2f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3b6abb-3037-4fb4-ba4e-584682ac498f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7978fb94-d1b5-466c-891b-b66afa12052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1080e781-5826-4a92-b71c-1cbe2adbf1c4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1900a15-3d6d-4971-aa0d-5d79c6cf412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761f1e3e-5e36-470f-80c8-377e3e85cafa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fa5722-2042-4574-9211-0ee720b2f5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a6d70f-03b5-4bb6-b458-5bf8419ad16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ab4b70-2ef0-4b07-9a26-9d5b019de3b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44e99a5-f000-4579-b6d5-f979e32fceda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0785521-79a6-4746-99e2-996a13ad5a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fd7a14-38c5-4409-9efd-7023920e17d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7eaabd5-e5c1-42b1-b609-905c8149ac0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3221ec93-0ff2-4680-a025-7c90d31d01bc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038d5d3e-1ae2-4db3-8d15-18c7a77edbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845303f2-e6f8-4a63-abba-22084815a7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edc9e9b-cc9b-4b82-9598-83e4653b1cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60edc26a-73fe-48a0-aa0d-a7b5772d949e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c29b690-70f7-4523-9236-995bd2546833",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4b985b-9480-4121-bf06-8018d18c4f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c83122f-43db-48e4-ac8e-d33d0f2bd719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f026791-4f7c-451d-abac-5be3e5fe9181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d4c592-230b-4a9f-a673-2a2d5bec81a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d24fbb-7f31-4a59-a111-157b02ba9677",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8b9698-44cb-4a1f-b1c5-44f35592fc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e550559f-bee6-4b6f-9dc2-658d97cbb7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d141a5b3-61e8-48e9-bb3d-15cc50630468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3304058d-7451-4def-83d2-2b6339a52256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8041a5-abd4-4a06-a7f3-c9cf18efdf38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdbcca3-f80a-4ab7-b019-8251a7b278b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b689a2c-ea50-40f1-a82f-e1e489700e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7031f1-75c4-43ae-8f0f-105d78833514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ff8f6e-2a9f-46b0-8fb6-53ee7d7e5a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16439ad0-d48f-45b1-b31e-166a2f7f1ca8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa949b6-0272-462f-95de-98b87e25e879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6771b5-7dde-4297-9f6a-d7ff83d19818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3860ce67-384c-4567-91da-b54b69b13d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea576127-5d26-4bbb-8cc8-f222b3bd2a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bc0b5a-2eee-4829-ac2c-879723816816",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3342aea-c447-489f-ba23-978e7bf6eb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd080f5-c06a-427c-aa35-f16a2a65e019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dac3843-623e-429c-9017-fb6086239907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29c90538-5eb8-43d7-a2fb-86d9aa61ecac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4148c290-26ce-4f63-866b-1f03ba4fdb84",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0d5147-7f54-4fb4-89d6-84194399113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee2f789-dd09-40b9-8bd5-d0df6aaf65bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a0d133-af8d-434a-9181-7540a8892f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a445ebdd-8d7f-4a75-b8d1-44e79056f1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bf3f1b-3032-49f6-aed5-7ef7ca6f4728",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3f657f-8c9c-43b4-9b31-fef8b755d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f31bdf-06ab-4468-b117-67ba929f131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d99b00-0064-4cce-b6a5-e3c3dc31b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be29540a-3bbc-43a5-88c2-cadc9a478ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd519fc-179f-422f-9884-18fc388a0800",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55338226-2d8a-45b3-ad61-1d905be39b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd24e28-4d92-4024-afbc-0c611f160c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6662b502-a493-4c32-9b96-aac149d34f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be8db00-dbad-41e4-a282-e528fd4cf8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5b7e7b-0852-4f33-80d6-73f1f57dabe9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1db893-0748-4a0b-b45c-4564cd15b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ba9376-3387-4640-a6da-370d724d77c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f574e1cb-6673-42fd-9baf-1cba97ff76c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0eb5c7-0929-462d-aef4-8930b090e4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebced10e-388a-40e4-a150-29e3675be1d1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc95b77-6b3c-4a04-8571-24129782747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f403cda-04d2-458f-b631-372cc171f502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ef21c4-8364-4280-8d71-75e65bbb34cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "46023478-a920-4f58-b8ac-f8c92e567ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652bca1b-46e5-47b7-97ea-3aef9b5d465a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66a779d-6379-4c12-8f49-94fa1915b059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be759b7-92ee-4e79-9f52-ff4abd0dae76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476f9ffd-23f8-49c6-bd07-c55784fb2f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "674b297d-9653-47bc-810c-b158e02958e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f540166-a78d-4805-a3f3-d4027b23344a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef393703-7eaa-4bd8-8033-d8c6f8aa2f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82ca7e8d-78a6-4d41-8468-66bea65a23df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ded6c3-847e-4155-9633-ae6da37f5e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "62559a06-d9ea-4f0b-8bf9-ce85ed0ce140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e751bfb5-4600-4647-b2e8-76f5ea5e5ffe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0e1ca4-7d0b-48f6-ab13-45b2cc9dcf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e71cc93-1ae7-4c79-a802-1dc0f1ff4aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e4d921-07ec-49fb-9973-be2c555bf4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efab842f-9b6e-4af9-bdac-61d4c0fc9765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523a323f-3075-41f2-a66e-6d2367d3b62d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9051c170-5bd5-481a-b520-d09f53ac0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "643d3e85-ecc8-433c-a1c1-4e0933c01906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821adbc4-fd89-43bb-ac58-ed76896beb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e127a524-41f0-4e54-9e05-254d1b854577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ee561f-e214-474d-8b17-1c2370d83f52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a3d1e-9235-4b37-bed4-5e87acf1092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064e3590-94e0-4e60-9cc9-7d80d695c2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede8b6d1-8a7d-47c4-b58f-54786d56f492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3356e4b4-0bc9-416a-a3a5-4ef7daa208e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f3d92-e54d-4f23-a8c5-391d31ccac44",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9edfa8-f476-43f8-a5af-dcc1d856b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a24a0d4-d6c1-49d3-8fcd-9952a55c6670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4abfd94-633c-4d07-a345-24c23e0f2685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1094651-8437-46ae-bdf5-8f112922d14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb26080-99b7-48d3-8ede-62991b50067c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9aa014-c102-4360-be6e-90cce86e650f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e578341-037d-41e0-b7e5-c85628fd7847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a7669-e9c6-42a7-9458-34a2e4313e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0334bcd4-7aea-4be7-8109-373330487312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1c6ac0-a0ee-4954-a261-c3e3bceb86cf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748311cd-3c73-4371-a7de-22337304370f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac67ccf9-ca0e-40f8-ae2e-5fa3e8bf3f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79feaec-27d0-4d39-b2b3-eb11cba20626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af78a4d1-4e2f-46bd-9e8f-b48ebf6f75e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e60939b-0276-4acb-afea-b17c2a992bea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "969401c1-acdd-424e-af26-64637f22d087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8071d5-a24a-498d-9662-0d40d0b86d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5356f77d-067a-419c-b3ac-ce5849380d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "317e413c-3498-4710-94a2-f5055cf4a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6c4a9d-d05a-4bd8-82cd-76f2fed68e26",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bbfada-7207-4557-9c45-11f4352506fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b119ab9-5a92-46ac-87c7-8c0ddd55d5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b2d270-6690-4d9a-8748-521276279d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c77f5cb4-5f54-475c-bc5a-75bcb340e087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65367375-72c9-4cb3-a3d1-9e1b58b6bc8e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c9dc60-3ab1-49f5-a991-c4dc28271a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8113aa4e-4d4a-41a6-902c-f96854bfa43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dde896-8b18-414f-a6a0-0514289963fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "605351dd-9b59-49fe-a33f-d5222669b32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef5e56a-da27-4f91-9589-a256f0da1f31",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9671ee27-d5a4-4a29-a9b9-9f3ce83f74c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0998b3f8-d5e8-4db6-8c0c-a9eab91b81ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fad8ac-ace6-4a14-b0bb-0c49fdf4fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14623b90-f01b-4024-9d32-c5034f4ab923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25f8a83-82d6-462a-86dd-6882114dbcd4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31bf1f5-55f5-45b2-92f1-1fbc99f9e76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bae97d-8ff3-4485-951c-a869adf7e475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7d3f37-839e-4228-ad3e-8e2a0e54d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e72d0a7-1741-426a-9f4a-02afef715cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9736efa1-6363-41ff-a0eb-e105f80cdfaf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323d45ee-79d7-4f59-9be4-5180196aa082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52faca3c-6339-49bd-9c9b-c8951c7661cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16afa0cb-0fa5-4e3f-9f0d-229413644224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9376f83-c56e-4f39-905f-efc1c47af6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed5ba4d-ca2d-4265-b8b7-ab7be00c4ad7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eeb9498-dfc8-4971-ab73-0d040c8f0852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e41a3fe-784a-4ef8-8315-6904886ff3b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55431a6-5f93-41f1-b127-d0d99cce8e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3f86f7-a818-42bb-b4e2-b475fdf68a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df2b62e-9019-4737-aca5-5ae28becbc80",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b176fee6-d8b8-4b2b-ab3e-a6ec18c2be18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52054538-f181-4573-84c4-8acfda631db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2c0c46-35f6-4a0b-9723-d7115487e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af6296e-66cb-47ee-85d1-e2021917b18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45160b93-1fb9-45bd-929a-827daaf45a2f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32750756-d854-40f9-8ca0-f010ea285e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31ae4f3-0ed8-4864-96cc-68b94b9dde59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bc5add-7c86-47c5-a222-d91a48933d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21963f15-a302-4827-9183-3310b9b121ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7587846b-bea3-4dbf-ac7a-e553547113b1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c0d73e-6eba-43a3-951f-0a6f41492114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607d9bc1-8d27-4ba6-b346-de921b3602a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6aef99-48d6-42fc-969a-0a5bf8d2facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d6f559-c22f-4dde-9a8d-84b8f90b0759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a3f133-b87f-46e4-88d1-94f1d371c417",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ac25a0-39b2-43d9-a46e-ccc1c0972667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88f03aa-a398-453e-b5f8-70840b15cc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b18642-68f3-480e-92b9-7b0ffa9f76de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9985497e-e0fa-49cc-b967-9ac60deea21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d602cf-c863-46a7-bc2e-2a51c5675393",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e8741c-ca42-401d-b366-71aa3a3a696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e0f6d7-dba6-49bf-bf85-9ad12cd7195f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea57706b-86f4-437f-a000-3711af816af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e8a796-e6ab-43fc-9329-097c55bdcf2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3d4d02-7ea6-428c-b29f-994dcbcadfaa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea9b77f-1e00-455e-b78a-ddd3c5f5f927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f598d052-8f3d-4839-bf2e-46df3ecc6f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f9492d-2df0-44a9-8244-7f764036f39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c79a9c43-b040-4f29-8bf9-d82fc0740cb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a2810ad-dd5d-48c4-a34e-16d87d687fef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0047a2b0-4889-444d-b8e7-b28753b25bc4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c12b29-c0ea-41e8-92dc-ec0090103816",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a78796c4-fca4-413f-9cd7-f1f7382dc593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d05923-5008-490d-ada1-fac4cc9ae87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b655c13-dc52-4948-a2c7-ca204514b1dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43723af1-5297-46b9-b0b5-a200b2fbb402",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dae36393-4a9a-41ae-8acc-15bde242bfbf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d39e195b-32c5-4fde-9603-2f9117060eac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "791de511-3545-4204-8366-d54116809a71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3b37bd7-926b-434f-ae2e-852a27f4f708",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f628b396-85db-4afe-910f-fc0072d88622"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4aafb46-8252-4b66-a854-3779212ecb95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3ca54d0-68fd-4bb3-8ed3-dd90068ddbc5"
            }
          }
        ]
      },
      {
        "id": "ff48973c-d66b-436d-8929-dc2fd24326d6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f359c16f-410b-4137-93d1-9a48756cd5e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c41a53c-6f0e-4b12-86ed-5304e48bce22",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1556b3db-8c16-4974-826e-9a351464fde0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5213bd6-ad70-4a1d-8a3a-2c043984b04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6a145d-0767-475b-9929-d66222274780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6245403-3c6f-490f-97cd-5a26a51505fa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764e4a69-94d7-4cc4-9def-d97c81db16b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab41ca42-1215-4a44-bdf0-0fbd0eba80ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42083058-4dd8-496f-8f28-7cd06355031a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3a2c8-ed13-48a2-9f9c-2aa1ca231784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a36e350-c265-4d08-9e61-c80da6e51942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106ff5a3-a9bb-4338-a275-17732ec2f6ed",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068685f5-af98-42df-be9c-d755cd7169a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f727c8-212c-4fb8-9d1e-ea9b58f3afa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45418c-6206-40d8-abec-ecec670e3a31",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da72f799-c44d-460c-bc8f-3baa228abd14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58b7b3a-f50a-4345-8d2d-ed86e2d3016c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de9a275-a2f2-413e-9218-08973a6f3646",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872fd335-f0d6-44ae-90e5-d2282f5f60ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f7d0e3-cae2-4231-b917-ad0e0f2db8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a31dc0-7c37-4df3-b727-9af5927cd8c8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2684525-08cd-452f-9f46-c64e6dd54365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2ff111-51d0-4999-87a5-e9185169820b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "298ab0f2-ea8a-40b7-b3e3-02590fe550f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f0ff67-9a77-4480-9382-e4506e5acd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8089a25-e2a1-456a-ba49-a14caae63d94",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd70344-401d-4720-a790-3818c341fd99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88916749-96e8-4853-a8fe-20c1ab3753f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb68862e-233e-490b-9de4-02372bf6c6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fb4d92-784c-42da-806b-060176c64986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99223c8-54f3-4b05-bd45-616c010c6983",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e78b4-aab7-4444-bb1c-7305d5081706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82528339-7203-4172-94ec-6b8e0e448478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013683b1-5f4b-4924-8ed2-ff2259709f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00647db7-6b14-431f-a0eb-d8f7a1236780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b26133-72e5-4083-9bca-33c80ebdfa81",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4907e1e-0ec9-47ba-84f3-5fc31ecb1125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3262791-cf1c-488a-a316-45b616ae603b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bf43e4-acac-4332-976f-7b2a304c67a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5932f5-d07f-4b27-8df9-6ad979263f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33a08ef-1a0d-4e68-bcc8-26e05b3113f2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acecdf5b-de2a-4b5a-b59b-e5e5959a2631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf488817-205d-4896-8f49-0c361145601a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d770cb7-0513-4752-a46a-1111b7355a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b8ad3f-621a-4509-bef1-0e9de5d3cdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05251be5-31f6-42e3-bf01-b8781fbc64b3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d14a1e-c1e8-4c58-81e6-979fd0ba0201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49785413-888f-4dee-8c16-e242579b6f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814312c1-be71-4660-8932-f786a959d210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703d15f6-01ea-45de-b22d-ecc364230170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0f91f-c42b-4be6-9c32-88f8fb601ed3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d12c84b-c249-4dac-b28c-c72354a79de9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0d134d-aef0-44a8-a106-c35f04123aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acbc3c7-3c4b-447a-9a8e-36e32c103d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb81463d-19a0-4565-b80e-910e46f14c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac32c65f-bfb7-4505-bca3-bfbe7d66cd09",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f1e7a8-b3cd-403c-91a6-8adbffc42465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50932f17-84ea-4a24-b9fe-68e67dc5eead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d6e243-6e71-469f-b3d1-1e56cf3bfcf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc65064-8a9f-4b75-b29f-ae1fcf2c8656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1d6ec5-c9d0-4243-817e-4289443e12fe",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf55d69e-34bc-4914-8c46-76e35772d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace42336-8d99-4106-9b8c-d6c2b4e35a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade7643-d210-4f0d-aafd-73c7a6acfa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d602b364-d333-4d4a-9fe5-616763c673c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0118f8-5c69-4b48-bdcf-9895d6d5e4c1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e058b3-9196-4064-b752-f157bcd934fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e00bd550-f603-41a8-9a3e-a9583e38adc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe98c0ba-fc28-4583-944c-8508ffaa94c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72bce30-5b09-4f30-b4f3-2f5028d9d294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a545366-3269-46ca-8a13-0566d3d4ff12",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca96988-5bb1-4190-a345-dcff3b673d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93ff6701-72ae-418c-9aa8-028ef35128d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6863683-3e13-4383-a822-5c86986fecfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540a942d-525e-448c-9c70-ecd1c40c1d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f02e7f-e650-4989-a958-a08514a40d60",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dc2180-3593-416c-963f-9c4c94dce1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca616bc7-8710-4fb0-98ca-4c1bd522a0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f4ec1b-feba-4f66-ba91-1cbe33cb2bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91a93b4-0db7-4f89-9b5f-2eaecb6b9044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240d796d-e8bd-4409-937d-205914b44ffc",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f65aee-7ec5-4442-bd69-c2c82ae75ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7693ad69-b46f-4f9e-a7a7-0f4a25f38d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd38ca9-c70c-486c-a510-90b5a215f05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d54ecf6-9441-4650-89f0-54d048ed7184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627f9b7-337e-4d0e-a6c0-79148314b7ab",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b4d8e-5114-4aed-959b-5abb93e38a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a580c9b-3e9c-41f9-a1ff-cf12053e4126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48634d10-1925-4c99-957e-3bfc201a0a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1453142-4149-4f61-898b-8ae94ead5c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac39ec7-f04c-4b16-af37-3808a8c406de",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cb2ba2-e418-447c-a657-c0efbb56957a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984cd57c-cc35-42e2-8b86-554efb7645dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293a7cd3-2507-45a4-aa78-99e750a16688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3355a0-9e02-44c3-abe9-b55706e72734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78608e1-cb02-44ff-a1c1-96583e4ea856",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f437bac-a18f-478c-a103-d92ec2153a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b028e2e4-76cd-484d-8a9a-43c4c3d71d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4e55aa-3217-448d-9501-78d0700b8a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72e18ce-cd9c-4e2e-afde-ccf0ba3747fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f3b1d4-e1d3-432a-9fc6-027912b0a1be",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f8a726-cffc-4ee3-aa16-6fd1a9840907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa34920-2c32-4a9b-9544-bead3e1e7b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5554d6cc-57e0-499c-98a1-16a1932e22de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f45108-ebb2-4acb-a9ff-5c543e18a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59826624-acca-4b2d-916b-107e475e3df8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eba7ab4-33be-4b8f-8ff1-d942d2758edb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "757b8efa-65e4-4234-92d6-d661bae25b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78daf542-dc53-4aca-9da9-e375511d467a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6650dfd-0f43-422e-9e03-c37173e1e891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91e6bd8-b5ef-45f4-9cbc-95e7c393cb12",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd8d301-a8cd-441f-a239-100609fa8c62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca90d35c-2a10-45f0-9ac3-ef8bed18cf7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de42c87d-f3e8-4542-a810-895677871488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08dd5a4-a32e-4219-a7a0-00f1d7fedc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08da9624-f7ef-4dc9-86c7-c465a5be696f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ad7a45-556e-4972-8fd6-f1aa4bc6b04b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4591d7-9181-483d-9a76-ccd2dc09e2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ae1006-5047-452c-a0d9-f36f757f43fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a025eb-222f-47ef-934d-ccc7a5b19099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ff46f7-5f03-4bf9-bce9-f35ff6f9865d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabe368a-86eb-45f3-a6a1-75b89b13b6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc665b3c-de5b-4515-948c-3180981499f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1d5829-5f59-49d9-84d1-662689d76108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd324753-f1c4-4c6c-80f9-f4939cc60ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac41be8-4c52-4449-b1c4-58ba34cd789b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256e4720-550e-4798-b3b2-0b0c18b011e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d046cc87-f712-492c-8b76-b4c09a13a4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d405ba-7089-4946-a6c6-efda375980ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9b6475-2d75-4c9c-8c7a-4a405f1cb039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980cdc32-9892-41e5-bd5a-b8ebc3e6b344",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd2a7c7-76a3-43a3-980d-247f9d22601c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aeaba40-caa1-41ff-a47f-95dc2f0acd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec91927-e719-4cff-8dd0-b60124481517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54eccbe-d9d7-4504-b889-c2ee4dd61183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0b101-cd06-4749-9e49-ffde4363a168",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbd24e3-23e1-4047-9251-0dac50c03067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785d251e-9927-4590-9f91-3ac8b0bea121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa83c235-166d-448e-9735-97fa972a56a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ec5426-d5db-445d-b563-b23f5ac2cb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35718aba-4e08-4dc3-99ea-86a4c075ce0c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2436b3-7649-4ccd-927d-07ff9b4f67e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01aef50f-35ab-4077-9574-e0a3f1b0f07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13da86a8-d3bc-4d38-8cce-4bb93403aadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a521b43-eb40-4413-a65f-4682096125e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6029ae-c849-4702-ac54-20977ab62f4f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eaa3db-d698-4b8a-8f9e-7ff8e55ccd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4c9558-23c0-4b0b-a54b-af55f94329b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42de96a3-eacc-4cec-a555-326de9b14f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f3a0fa-f460-4c7a-b90d-6d381ac36dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c5be51-ebcd-4750-a278-217a78a365f5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a68456b-1213-4c85-92de-9846f667cb94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0becb2ee-0623-452c-a9ae-69d899f1a931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14914e3-5bad-4c8b-9538-4129483bb99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7969c83-4e55-4cdf-b5c0-593b92d707c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6dae5-b161-43f0-a4aa-3f8819723bf3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fbfb32-2ccc-4ff7-8b7d-5fb2d65a0344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b688e25a-abea-4e01-b8c6-97153473801d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c034990d-57b5-4d30-a7c9-c1ee60b47758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e01d36-eb2c-401c-b2f9-cb7646fe83fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf765f57-aad4-4325-bc89-fe89ee2720b1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2206274c-28e9-40cb-a9b8-92931247e462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d7bedc-53eb-4940-bb35-c63416040411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52437784-246f-4ab3-9364-8e6a5b4a1c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3910a23-152e-4679-969b-37e6331cf677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45edf003-8148-4d39-b7eb-ec9d37682924",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028c0093-8a2c-4fa3-ad76-1378fb8838ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1056f9-ab7b-405c-ab09-64b295412b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e3b470-47fa-40c3-8927-d091c9cf625f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ef3a96-8727-441b-9a02-480ba290ae28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b09e3d0-6760-4408-ac58-74d50a39ea53",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2c891d-8aff-4d53-8435-a415a0172ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661b81eb-dfb5-4dd0-9c61-63a9ee235438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f03653-bceb-4cda-938a-6bd913b6b396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d0e88c-ceda-455f-8855-64edef8cb0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6487ecf5-e5bb-407e-94a5-b2c47b17b283",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ffb6b3-ac76-4e39-abbd-44c40c6f689e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3f741d-ebfd-4140-a05f-86973579b3cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f246e1d8-9952-4870-a316-4b92fee1b1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e639f646-93b1-4385-b9da-1ff7b7212f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02fd75-f8d0-4224-b3c7-3f4e098ef6a8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd87993-4074-43e4-a0fb-07f24fc2055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22339e13-2fa8-4662-8ef2-2ee9ea03b811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6119fc90-1a73-4095-a061-d6e7024ef3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06b976f-46fb-4355-bb14-68f69ba8afbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bf3c7d-c355-4ae2-876a-422b9455469f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e771afc2-c9bb-4687-b785-eab2542c74c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d151ed-1375-4a53-b8e0-083a87fc6528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6a5582-5331-4329-8c62-7880f901151f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25057d90-da38-42bb-acb2-c07fd99424ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c1ddd-4565-485e-af74-da484e61a536",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4948331-5a4a-40c1-9145-2d2e2ef2f23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3171b898-947f-4d7b-b6e7-260f860daf40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8cc7e8-244d-4bd6-8638-086e765c3e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc48671c-cbda-4f98-a6f7-0c95d66c84a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f5a9f0-dd78-48f5-8785-1e41b2f7d9ed",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4967d3-9940-4a73-b39c-5f87510d3564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95ac10b-6d76-40dd-bfc0-dc104e4c9b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0600504-b941-40d2-aa0b-5b449410e133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e181b704-35b0-46d2-ab13-26a53bcd5f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ca0163-44be-48d1-a6c6-a3cb5a811d49",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5bc657-67f0-4bd2-ae8e-9fc787ba2834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b701cb9f-b4fe-417c-82d0-36d00b6a040b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02552de7-57d1-4413-9c0b-24c906ff9c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07ea03f-f866-4312-8062-209e44f8b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986dbe6-d4c3-4165-9e01-40dfc4dbc422",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d49d63-f4d7-435c-bf67-1831bf7cf97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22be3a6b-3bf7-464c-a8fd-487b58b3b7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ae1db7-0857-4f3d-9ff2-c3b560a5acfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf91fd2-e077-41ce-a379-17a52294422b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf7763e-a60e-48c2-bec0-4adfd189bb18",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314e5de-1ec7-45a3-bff5-66d5656a504c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad97171-a56e-4389-a5b7-19c72279cda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2ae766-f640-4a08-a9e5-3c413d299a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b30802-bdc3-4219-83d1-35a7ae2ac5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aab635a-13cf-4f7d-ba97-f0e0f7e2fd3e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb477e93-0fbf-4fc6-9f28-db6f8a4211a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0733365-52cb-46eb-934e-07026fbff2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e47ca2-7088-4285-8709-27d77c3b7230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1e6746-d433-4ffe-bbea-10a50abf0b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f0639c-3073-409e-a4e3-e4125779480d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e962d9-4ccd-42e4-a119-804a4ad1e644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e19a9f-3dea-4c47-97f1-61989f47b8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c82ff5a-0b4c-4c63-b685-1f33e96a55ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383e1798-6714-41ee-b246-18327a842222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a71504-b57f-4baf-8890-5dd72a776136",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0049b8c-ee87-4364-a21a-7028e862d36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a2aba9-f7aa-4003-ba0e-b9de65f06815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df924bf9-5962-4aaf-828e-ff1abf44421f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e68c24-94ce-4471-b0dc-ce5e34e69599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5898c896-6878-44f3-a8e9-cf5d9eb96874",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c0896c-d568-4636-b430-fd3ca0e4ef48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07d2e64-bc7e-47b8-a3e0-a424c1388ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5de8058-a155-4eb4-8f8c-b5d29958fa52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e2729d-af89-4582-b40f-590eedcf59ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff33555a-3147-498e-b6c1-32270f1a245d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d10dfe-08bb-404b-ab1d-c24e1c323738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771a5669-d620-4717-b1c6-1ff238d18eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf92d9a-1593-4b4a-9acd-6edd85e4c7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb097de-3cc4-4646-8161-7478f9da4087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d373e4-9430-4a31-b4e9-284550554794",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d48264-2884-475f-b111-c6ced544b87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28310eb8-ebad-43a4-aa2e-2a5db3cf2ae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9385ba3d-e4d7-4ce5-b88d-23106981403f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4614ae4-156b-478b-94b8-fcdc9fbb535c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4934091-d3e9-420a-98a6-5d2469028093",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3089b5ee-b7e4-4c4f-ae33-20a426e6b388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d696e46-086a-4007-bbe1-cc7b8f74f0bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "affc4396-f6cc-4757-9d0a-e6774fc93513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268964de-4dee-4ea7-98f0-955bcd995782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed986f39-e283-4985-989c-2181ee77c97e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ba7afa-33b4-41d6-bf96-bb034544871c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a26af9-67ac-434a-8dee-8487f63e0337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2b6fab-01b2-4c06-9a64-7b11646be75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0564c6-294e-4a9f-854d-86add3b6b7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bd023e-c3da-4acc-9b17-1072a5df196e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04dd408-6577-49d5-8510-645ea21e3250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a22537c-31d2-4766-ba7b-98859981ecf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30c2cca-3639-46f4-9644-f5bf443f4238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a67994a-4a56-499b-8c58-1c285ec173e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57444cc-2c2c-426a-9ccd-dec46394879a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc933735-3d37-4bba-86b2-0018fccc7f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58964ee3-3319-4827-8000-1bac5e624a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43656632-fd58-4f63-b0cf-a3d61d040f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdaa6bc-5577-45d2-b440-6eccb52cb316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134de973-8ac9-4b4a-aa27-c43a22c339ba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6220836-5005-4e5e-839b-a377444e0254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fa970cf-2041-4462-93bd-d9c8031af7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1a981a-f6db-44c3-a4fe-126a6a6692f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899fced8-7e99-4680-ab21-f47af93b0ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be128307-96ce-45bf-9442-004ca2988f49",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f57604-6e81-4abe-b225-2d8d2ad87ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2dfa7d-9bc2-4515-af84-63543607ed06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd7cef3-c44d-471a-baef-01a093561a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c6bb01-4dd2-4695-ba07-8b9b0b2aa5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5282ccc4-cb23-4d1f-849a-48ab19d076e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55680d89-30f2-49ea-8548-e6c5b2da926a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dd613e-ab9d-43f5-873e-e4ea4eb929fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedabf9c-8c22-4337-ab59-51d0347256c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67af3fad-5f63-414b-8b41-bf3d3a5b0de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ca6df9-658e-449d-a161-79eb5beb27e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f6a15-1240-46a2-9f2f-8e019c74b785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205294cb-e47a-4e5f-a018-7cae5cc0cc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0675f7a2-f441-4e54-b5f3-d26c8560d4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437a28df-2bb1-4469-95bf-83a7908f9040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4440fce0-c100-4802-928d-586e173dee65",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1c9d15-b2dc-4416-b598-84e0e3d3d6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9552e9e-9ad6-4221-bf32-d7f00a2398d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75092dbd-2be6-45c2-8df3-286f9308f61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a11f55-564e-4822-bb16-d0eb88c80c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6daa26-107c-49d1-b8cf-dc74663c05b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0325a44d-b205-45c3-ace1-07f3ba86ec19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeed7ce-c975-4b35-85c9-ade658fe08bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088e34fe-d9d6-444f-86a5-e6d31213a8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420edfd8-5d92-4a9d-8d20-49c8d4308ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53007c3-03a1-462b-9ab4-b72494240468",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa782a3-ece0-4059-88d6-8910a636fdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "343394f7-853b-4bb3-8a00-906f97ad82d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e489c93e-d9a9-43a7-837f-97f24a086de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc163cd-1bf9-420b-9c1a-3e1b3c0c9494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5590ff5-61af-492c-8c2a-1a33d464179e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaaf7bb-6dfa-43fc-ac24-e446b869c5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae47fc52-0e4b-4ac7-8d51-8dff24422dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecff7aba-8b4b-4696-9e8f-02686150e775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2b4f41-7447-47cb-afbb-191170d3dd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a432c589-b80f-4ddb-9d58-ee938a3c066d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f97e5d-6d90-4087-b1fe-599fab74b082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb535de0-7452-4b7e-89d5-b9d4b1bfd0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af692839-eaa2-40dd-8477-bf7694fee84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60e5757-2ef9-4043-9bf8-fe5804d54579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34561ed9-0207-42d8-84a2-cacd7e3b35c3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda6e39f-12bc-4a56-8f14-c452b0c6a1c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "474255c8-3d4f-4af9-9c2f-0aab461383bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb076367-5cd2-4a99-9f2d-0950a11e2aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18d63ff-3ce5-45d1-b4ad-8f07e20d5e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44a4cae-c120-401f-a643-762f5539c692",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1f4c9-989b-41fd-9b35-3a0a4005c40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb0b461-06a9-48e0-9889-9872486075fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49d9d2d-4345-49f5-a71e-1883de71f1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d565c6-546b-44ef-9ec4-97a64cb5cd07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22483d2-f441-46a3-a346-5bbb5cbfb09f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe587331-9b10-41e7-adea-dcb761ee2572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf34498-74d6-4014-b1ab-0612a1101173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e6c199-b17b-4e22-970d-9d1b6d58e5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1f0ff9-a26e-48be-93ff-d4702742a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4375cee-b1bb-4cca-9ddf-b3e5282a5e97",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6bd6ad-17ef-4d8e-9bbe-000e0c0842a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2232d370-7f1f-49d8-b96e-161a449906fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f82a63-40a4-4283-9af5-8fda6e785bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2369786-0eda-431a-9138-2eb867bef1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b1169c-2de7-447e-94bd-0cd22308334c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee16781-8265-4a51-84aa-89f9e75aae9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a132db9-064f-4e62-b43d-2b34481de854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5dc7c9-99cb-430c-9350-0264c0135b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9651dcb-0a9f-4aed-ba23-5b7959f318c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09085ac-f51f-4d3e-b087-f74b30bebbe1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4de634b-05c1-40a5-a96f-55fd7ffcb91e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d830ee-c82d-4460-bb4e-607e089494bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d410bc0-8c68-47ab-8709-81ef919243e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72f7019-e5b7-4881-b698-222e1b9ad6ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f7465f-7f99-4fd1-a9d0-ae9114e8cffa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52a9b51-18e4-4dc9-b61e-d3a6a9b73cc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0a6642-5a7a-4fc6-bfde-48e4d921601e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bce72f-8062-4772-915f-e204a0c6a812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9221bd0e-9cd9-4916-8c4e-e13214c1ac64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbe0c60-fa04-43b6-bb08-6b6f9c41bed2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574a9cd7-3dd1-4aa2-8541-c11df372b08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477bc9ba-20f6-42e8-8875-46e2eaba9344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691720e4-a0e6-4282-a098-3dd8c020a212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641ff701-d017-44e6-b7d1-b75cb8b59bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f0267e-a994-4a62-b6ad-28198f881c3e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d2d24d-35a0-47d1-9180-909add8dc689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effb6468-6830-4cce-b22c-a7048f02c15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b98e0f-7f86-4301-8b7f-66f2a2cd30ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485c38fc-a957-45f7-84bb-0b41fb7afed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08d3701-6899-48a1-b5a9-631030dba5fd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f9ce87-c34b-4a7f-83a1-b206b3a39cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2414152-2cf3-4355-b165-c1a58344b89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc7c05b-5b27-4e64-a08c-13120ff97c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43219f3e-7d3c-4f22-99aa-73a4282f9825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166b1da5-f22f-49cc-b41e-f16e6a179a8a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9f9359-0cc1-4d26-8904-2c96486300b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e20f310-080d-4bbc-91c3-77ef61915257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b9bc5d-670d-445b-8e1d-f468ed839fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cc1e0d-d578-446d-891b-362656862ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaf3d19-a540-4794-a5ea-63d49ff73de5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadaddde-a12c-4018-83d2-45c5916e1d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e296c2d-834f-4637-8cc3-295d1a509223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91000f94-a3d0-4fab-9021-1f2a70b29bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "852adaaf-69a4-4269-b103-659a1144a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c0657a-1450-4918-8c0f-ab1aa61955e2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82affff3-661b-4b12-a484-9a3568045712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1953bc-216f-4b40-b724-91c5e301ae4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c957ea-fc4a-47ec-8ac5-96215db37129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0be1888-6649-4008-a708-7778e3c6b09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfca2442-6982-4174-83a8-8c015575ab1f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d40143-4d1a-48cf-a639-d8143deef0d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3932322c-94bb-4482-b709-85cff30763df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f9a4fa-b273-45a3-b646-04f3f3a28d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3164fd18-ce22-4e9a-9d8c-3a2b3b56983a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e25d78-852f-49a5-8db0-ad945453a6da",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b15a70e-24d6-41c9-9a37-dd47d20a9847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73905f4b-9c77-44e0-b8b0-82eaad1520a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a790d-0677-4782-8f6f-43b1d727f0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1307f3f3-a106-410b-963b-bfe4788b09d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e470ab-bdd9-46a3-937f-bdc7e3836fa8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ade283-78a3-4252-819d-4daea620ca41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a007f058-c475-4f29-a807-c613f4ba2c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bf6f8c-eb15-406e-84ec-cd9d14595a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf9c428-8aa2-4a23-b332-30a6396552a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef0136-8db0-4389-b013-0f961a9b8251",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f76db-200d-426b-9b53-c882dab0a8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f3f9e3-4c31-47c4-89df-32c00ee21891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2c5538-836f-4f79-8006-1554c23dada1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6039cecd-312b-4d12-a13c-ea325bd78539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a18329-5eae-447f-8809-26a4e72533d6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478bd660-673a-468f-9edf-14bfe67198ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179a356b-ae58-42e8-bd4b-7f4dd0cda1bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10abc221-d686-4af0-a114-c13ddaf05628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba655c00-e77e-4b12-b1d0-8968c6be4998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0f7903-d853-4b6e-91ef-47fb4ce48c4c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c61d0c5-4f45-4f26-a141-04dff229473a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4baa2f3-cf77-44e8-9d9b-596767b6ecd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9bcc57-95b1-4056-b303-cd46788330e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddd8873-354c-4357-b626-efaa17ae2c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f40f73-bd17-400a-813c-b7a836514908",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d36e99-ef2f-46e6-b0e8-3fc2ee03ceab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f12b4163-1d8c-4dad-b946-bb3b46464ad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a186c0a-879b-4553-a819-f885cabb64e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561455cb-b4d9-409a-8fcd-f3c1c94dc051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7ea9a-0d95-4de9-8d07-e7c345ae115d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8951e9c-7826-40df-898c-b7657ca4e16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84d993d6-9131-495e-8d53-d615d1f4ede1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c97cdc-9a79-41c9-81f7-d0a1154e2c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c40709-f59a-4a26-8cf9-01fc7a7583a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f081357-dc28-4fd2-980f-3e4e9bfee250",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c266d8-5803-4078-8703-91ab0f17ae95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa899e9b-82e7-4572-b2ff-b74d371d6bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7f8590-5d47-4ac7-a994-47293b75349c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a03cb8e-f1d2-42e7-91b0-1b8d6468fbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b2e753-c3ef-4c95-b114-2409b18e3a9f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a053a38-b9af-4a7e-b703-479e67478b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a835255f-17a0-40d1-ae45-eaa7a9bdde02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31900a68-71ce-40fc-bcfb-9d5403cae055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e029ee79-2e7e-4480-addc-d32e87090375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef89a0-26e0-4e6b-97fe-5e913836e526",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009d61c9-ae44-4809-b0d3-0d3171dc1e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fca98d7-1e23-4d17-8243-c11d05ce920e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69019fc6-d515-4aff-9ec3-3352593e796f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "908c0adb-3992-45b5-9d42-6046c9c0c768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2814268-7881-43d3-b154-d1b1e17e723f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3489b5-e1ff-416b-90b1-f42883023733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41e5798c-ebd1-4580-b901-90405494b3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f004d6d2-3012-4717-8f97-d5a2567e4d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6084d318-b732-44c0-a37e-0b55a63d43a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9e862d-cb2b-4c75-adcf-bf8912b93422",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c75d5a0-9195-454f-aa00-c33f9ae19ba4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0ef780-598a-45ee-a7b8-bf684722872e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d0318-9662-4268-a41a-5f9a03cefaed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d5d8c7-f52d-4fc3-a872-c8d773ae768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e14bd96-ddb0-4853-9704-5117b8dc7e6b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4476f12b-9477-4cbb-a548-ffd3a64bdcb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432da6af-5b0b-41ea-89c1-e3de4c565f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1608b5-5533-4886-96c2-0c790f5f49f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32eb37a-8759-467a-ade8-a281ebafda6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b582ecfb-ffd2-4458-bb9b-a3dcdbd4d267",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efca048-c47d-4d77-ac99-3d5b84b45426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f206356c-f542-4e78-b421-e128a4e753a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3705577b-e24c-4c07-bfd8-b09da28df21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7121f9c2-6f3b-4bec-a02b-58c6a18b7d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e63425-e9c6-4d40-b152-b9c9864d6a4c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55a0444-f771-48e8-bdd6-5eee34d7c954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a671bc17-a340-445c-bbf1-cd01cb734745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab8c855-a420-45d7-8325-b6bdd4447bf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b7abe1-166e-42c5-a79b-7a0cd15e06c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bbc575-3d0c-459b-98c2-924245f25898",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5a36d5-b11d-4fd0-ba5f-c2c10accf365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63cc99c3-a93d-4927-9566-7b3eeab7bb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "576c0ead-7461-46d2-9e0f-eb2e4803074c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4297381-272d-40f7-9b78-089f25059a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d766534-88bf-418b-b311-97d148d48745",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fe981d-259e-4a4c-bac1-bb4bc44f2031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0d53bb1-3ca6-4957-b8da-c301bde6beb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d81b33-bc91-4659-87ea-932f1634c870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1160d7-59a1-4d2f-a803-953d9a2f4eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212280f6-6cd6-4455-98b1-0dea57125fa0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a3258-2926-4bcc-992b-b38b4977ee62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f21c3b22-00d0-4540-9ba2-9033cfdbd8b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2570edad-34b9-412a-aa1e-38838164df22",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3f4e09-e740-429f-a630-0f8d5a78e668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334bf57-16a5-44bd-8616-6b85bb310306",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3edc2f4-bdb5-416b-87b0-ac3e0ee96c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81c0bf1-2aa8-44a1-84a4-8a316074e41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14446620-dae1-4c81-a16c-63353973dcdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837f6d01-d361-4a75-b4fc-222a99ea6d19"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "867da14e-9b59-4cf4-aefb-7c82298f6bd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b310f960-d71f-425b-8690-a0ed9cd99361"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b08ee7f1-4d48-4b81-8c19-de09b4774f06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e7a3052-9256-4e03-8b6a-65129335f75f"
                    }
                  }
                ]
              },
              {
                "id": "145f3836-f2af-414d-ba1d-c08c45c24348",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b707e00d-9bf6-424f-8538-cdc4c304a677",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017bcffd-f5c1-4335-ac31-5db7587c78dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2714e3b5-d08e-4b0a-805c-511b331db65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea5dca4-e0cb-4fee-9cce-adaa65b849c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "316c791b-ee5d-401a-8389-369d37145c74"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "924a3394-9730-41cd-9e1d-aff5550f2344",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f72873cb-5c7f-481e-93cd-9ae572dd69d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6ac3b1-6cce-47cd-b37d-1d621792823f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93f74d3d-e68d-4eea-8c79-f461d39e4f2d"
                    }
                  }
                ]
              },
              {
                "id": "2ec611b4-ef0b-41ac-bc9d-50d6ef8cdda6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f938d13e-d054-48bc-98ff-0a859815acff",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8726dfd-cc0d-41e0-8b20-6704ff128fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d90ca17f-6f44-4e26-acf6-2db4fcd5982d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7265fe4-1b4e-442e-b7cd-978287a3410a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7d3e3d-c652-453a-b4fb-aee6859cdeaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c6886a65-340b-444c-9c0a-a66bc923f1c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e121d546-e29b-46da-85fb-96548fe9fef1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e19c0b7-2a86-4a87-b42a-116bd7ab3bc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cab55b49-9da1-4fe8-a6b3-a8fc58d365a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfcbf660-9c9c-4998-8662-2cc3c8cd16bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50efc676-ed21-4f8e-a429-3d683d0bf044"
                    }
                  }
                ]
              },
              {
                "id": "74731950-7342-475d-8aeb-a402ce3b013d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d352ee9-8266-4bca-bcc8-baf72a18b7a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "33125ea4-4dbf-43ca-8b39-377ec04ecdd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b03a21e3-6936-4171-87d8-ba33eec8a380",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4f608a6-5dea-42f0-ac54-68e181c1a06c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e0f6770-07da-4f1d-94a0-17736a52da6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "dc2e3fe4-1d66-402a-ba32-90abf15b25ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "303a8360-dbf6-4839-931a-84e538e3f073",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7bbc4ea0-829e-4b66-97ec-b46ba8307b93"
            }
          }
        ]
      },
      {
        "id": "68ade025-6501-4ce1-bba4-14145fd9217a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ff748988-2e8c-4fc9-97cb-6ce6ea32e6cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "68f81ddc-532b-43da-b289-455fafad07b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cf44a16-29db-4d3c-9752-f34fed3be769",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e55c8b-32eb-4e68-8b4b-f6b3693fd373",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bdc61239-da2a-4323-a743-f6229c18504b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849c75bd-7ddf-43f6-9e9c-18cef8f58e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f57873-1ec6-4cf8-b291-1b12c8f14c57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d74bf1c-28b5-4ef9-ad4a-bda27a3abccb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abfe8779-3bdd-4c0d-ad7f-3d4477cefe10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c6ab73f-ca77-46ec-a5b3-09bb268cf773",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb33f3f2-b0c5-4249-bfef-e1f4f2b79419"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed3be09e-9837-45ab-8258-b0347ad7182d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aecf6f69-a765-485e-a727-b2d58a4b0034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74df2c0f-b588-4e39-a171-063ea124b469",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e113c24-c918-474f-8006-356ae12b513e"
            }
          }
        ]
      },
      {
        "id": "03f0f903-52ac-469f-ba9f-be9144d8613c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2a775992-7dcb-4992-b8e4-0e987bc10ebb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "612a36b3-2314-4220-bc7c-ba2957686eb4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a9d3af7-4079-4539-8e64-61346256d478",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ab069c-0572-494a-8258-9607ee6a012b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd0f915f-968b-48b7-8f8c-12033b1df6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e121305-5237-4b41-91d0-7275b4dad228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43020bb8-6635-4211-a7aa-9663ef39e7f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af026b49-d655-4682-9e64-364f67db1ef6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8888c974-4192-4126-9f32-4ad1a335c02d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56cb7e04-19a3-4ec2-97d1-1ca68cc57832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6107bcff-a0d5-4e27-ad91-d0a64f73feba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab846aa5-fdf9-4a05-afa2-abcf7367894e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37efa909-ec94-4e1a-a320-1755519180d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37dd915a-6dbf-4daf-8508-57a013836bf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef0d2085-c987-43c1-8d73-91a7939b5a0f"
            }
          }
        ]
      },
      {
        "id": "0b40296c-7bf3-45ce-9189-ed5fd98a14c0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dc2ef5bf-c0a1-4f64-bcd5-2ff8e68addfc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7835afcd-bf1d-4961-9e8f-3e7a668d9b5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7de2b7b3-181a-4f76-9c07-b0c2ad6d35cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02924fdd-f2ae-4581-85a1-c6517c7f690e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37f6dcb3-b8dc-4289-b334-c7d2e9f2f44d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0cc2b-452f-4c2b-af28-8a8adb2ab637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa1cacc3-a985-4efa-8fda-18c6e6785ba1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32f3f827-2d83-4f1b-8fab-7dbcb440c784",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "116dc36d-e2f2-4951-9777-08ff77cb8ae7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d6e67ea-8ba2-401e-b5ef-c36646da5b61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cf8d5c1-c30a-4a0d-ae63-6568d1e71aa1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddf69df0-e311-4136-8c08-78bcd42cf0ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5f30936d-8f1f-4a12-81d2-c73209cb6e38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8612db31-9513-4e41-afd3-daa5ad1aad25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ef858fa-2897-47fc-9233-7e501935428e"
            }
          }
        ]
      },
      {
        "id": "7dbffa16-573a-44fd-b2a4-1c3c26085a33",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a8e5e1d-760e-4126-a43c-b7aae64308b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ec74d52-f0e9-499f-a590-7ecf10baa7bf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b6e1a2e6-f586-4a02-9dca-a10a07c03476",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1e0b657-ad1d-4626-93ea-83d1eb98959c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de05e714-243e-4b5e-b980-ff40cb9700d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 348.345070422535,
      "responseMin": 10,
      "responseMax": 8686,
      "responseSd": 1015.5600969434879,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696552410723,
      "completed": 1696552522135
    },
    "executions": [
      {
        "id": "670279bf-85cd-4e35-9bde-e537407dcc2a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "608609f7-f8ae-4782-90db-f7bbf8f57d98",
          "httpRequestId": "788b9de6-4763-47c7-af75-697d8b4c2abf"
        },
        "item": {
          "id": "670279bf-85cd-4e35-9bde-e537407dcc2a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d1dc2479-abc7-466a-b5fb-ed7feac11ddb",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "aa8126c1-40ae-46fb-8fdd-c39c58473495",
        "cursor": {
          "ref": "4efa609a-c112-42d5-b745-80230319561c",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "54d40bfd-68ee-4dec-adfa-01a56bc91011"
        },
        "item": {
          "id": "aa8126c1-40ae-46fb-8fdd-c39c58473495",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4aea93bc-89c7-4a2f-a22c-b2315dc0c7b7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "de3a61ab-172f-4956-81c5-c0789c66a592",
        "cursor": {
          "ref": "e2510511-b328-43ad-8d96-ad20385fe90d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3cd595e9-9aee-4887-a90f-1f7452135053"
        },
        "item": {
          "id": "de3a61ab-172f-4956-81c5-c0789c66a592",
          "name": "did_json"
        },
        "response": {
          "id": "f75880be-bb05-4c2a-acfc-883921ae0f8a",
          "status": "OK",
          "code": 200,
          "responseTime": 1613,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441c397-bada-41ad-98b5-4ad1d234c2bb",
        "cursor": {
          "ref": "d7dae8d4-2b9b-4da9-a7bc-00f81ecc881e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cf3edfc-4925-4f7a-a742-75e1f4fb47cd"
        },
        "item": {
          "id": "9441c397-bada-41ad-98b5-4ad1d234c2bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "75efcf24-c662-443b-bbf1-a9ef069e9f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9441c397-bada-41ad-98b5-4ad1d234c2bb",
        "cursor": {
          "ref": "d7dae8d4-2b9b-4da9-a7bc-00f81ecc881e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cf3edfc-4925-4f7a-a742-75e1f4fb47cd"
        },
        "item": {
          "id": "9441c397-bada-41ad-98b5-4ad1d234c2bb",
          "name": "did:invalid"
        },
        "response": {
          "id": "75efcf24-c662-443b-bbf1-a9ef069e9f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd0346e-7837-4e87-aae5-500d9291b250",
        "cursor": {
          "ref": "27a34726-fa55-466b-a23e-12e163bcb9d2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2ca08307-96a2-4204-a701-32ccc1225641"
        },
        "item": {
          "id": "bfd0346e-7837-4e87-aae5-500d9291b250",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "61615e2b-fe07-4cf1-b286-da0cf154e127",
          "status": "Not Found",
          "code": 404,
          "responseTime": 401,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37130509-1962-4725-9649-adc96da94c72",
        "cursor": {
          "ref": "3a3b1a77-da41-4b09-9a76-024395569fb9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b205a15d-3d81-4b47-8cfd-fb48984ef369"
        },
        "item": {
          "id": "37130509-1962-4725-9649-adc96da94c72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "326b6a8a-d151-40a9-89ca-1ec5ef3e8a40",
          "status": "Not Found",
          "code": 404,
          "responseTime": 263,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae752d4-7038-4bf7-8ad4-0e866b02063a",
        "cursor": {
          "ref": "9880c242-0f37-469b-a04a-bad34e99a5be",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9ab295fb-7d83-4682-8a7e-1c753976449d"
        },
        "item": {
          "id": "7ae752d4-7038-4bf7-8ad4-0e866b02063a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d414a96-f4f1-4648-91cc-02e68b3322a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c9559d-d050-4144-86da-105aa22f4955",
        "cursor": {
          "ref": "f6810136-9e10-48e0-9dd9-d35a47f4c9bb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d40e7d17-3a4c-481c-934f-3903cac62b40"
        },
        "item": {
          "id": "34c9559d-d050-4144-86da-105aa22f4955",
          "name": "identifiers"
        },
        "response": {
          "id": "6754fa51-c030-4c28-bd12-1a0368df2847",
          "status": "OK",
          "code": 200,
          "responseTime": 1179,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca397b-e2ed-46a5-b254-bd742ca7da0e",
        "cursor": {
          "ref": "37eb9433-1a07-4a8d-a2d2-09293337d725",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ffeefe41-7514-4444-8edf-806ebcce3415"
        },
        "item": {
          "id": "99ca397b-e2ed-46a5-b254-bd742ca7da0e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c2fbe992-aef8-4f2c-9ade-d435d88a22a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bde00d1-6ddd-4351-9999-48fce71d0d0a",
        "cursor": {
          "ref": "c30bf9ee-6c43-4c5c-8593-cda5de70e4ad",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "45b56fe6-1f79-4662-b2ec-edd7d70a7708"
        },
        "item": {
          "id": "6bde00d1-6ddd-4351-9999-48fce71d0d0a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7688c7c4-8ff0-4c4f-832a-c836029dbf76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df94cf12-ce50-43d5-92bb-63b1f6c99d42",
        "cursor": {
          "ref": "9ed67880-5e9b-4da5-9171-181a02d8a9ac",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c894869f-9ae5-4c47-8fec-b80a796214c2"
        },
        "item": {
          "id": "df94cf12-ce50-43d5-92bb-63b1f6c99d42",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7c5f28a4-8a9a-4ce1-9ea6-2d0e523493a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2524244-e307-48ca-9129-89c49b9c8e08",
        "cursor": {
          "ref": "f8214f1d-e6cc-440c-96ea-ee89d9b892a8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "780ece42-e1cc-4eee-84ce-b0332b4eb57a"
        },
        "item": {
          "id": "b2524244-e307-48ca-9129-89c49b9c8e08",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "38043e60-8a35-4061-ba4e-fcda7c6da308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ac85f4-9ec0-4902-8f84-720f53f094ee",
        "cursor": {
          "ref": "a08c497e-62ba-41f0-9483-607847859d14",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7f0ba242-3ea6-4786-9e5c-40edb895d904"
        },
        "item": {
          "id": "b3ac85f4-9ec0-4902-8f84-720f53f094ee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b1a6861b-fdaf-4b41-ae6a-888d72ba6262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3532e38-0527-4950-b225-3d16a25659fa",
        "cursor": {
          "ref": "188897d6-109d-43cc-99f2-34bfb80ec856",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4ae5d163-238e-4599-af99-502b8d41a0cc"
        },
        "item": {
          "id": "c3532e38-0527-4950-b225-3d16a25659fa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "858a7fae-814e-4c78-9e36-de53eedbaa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f6aa15-7071-4801-b8fd-39492eda5ec5",
        "cursor": {
          "ref": "cfaf9811-06db-4f1e-afec-f98e68b73501",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9a3bf2dd-1817-42bf-8914-0e85b66b0302"
        },
        "item": {
          "id": "19f6aa15-7071-4801-b8fd-39492eda5ec5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98e7571a-6025-4e87-8a71-99400339380f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f705502-0cc4-416d-b1e8-e0ec294139ad",
        "cursor": {
          "ref": "56f3088e-5f49-4a7b-ba0d-167a73657b4f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f26ca072-d697-4214-927a-929eea2761e9"
        },
        "item": {
          "id": "0f705502-0cc4-416d-b1e8-e0ec294139ad",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f9a18cf6-1301-4c49-ba5c-df5d2e0ef12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef258bf-4153-4037-b5aa-480621ccbbe9",
        "cursor": {
          "ref": "c4e359c7-6d83-4abd-a6a5-ed0b219e993f",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "322f387b-a490-416c-9e02-44a56f20a15c"
        },
        "item": {
          "id": "9ef258bf-4153-4037-b5aa-480621ccbbe9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "eab8ed43-bbc1-4c47-99d5-c704c7fb00d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc80ac6c-921c-4ad3-a168-a513c6456ac7",
        "cursor": {
          "ref": "cfa0d4e3-3530-4ff7-8664-606154a13cd0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e2b2ea8f-840d-4d05-b682-8dd541db9e10"
        },
        "item": {
          "id": "cc80ac6c-921c-4ad3-a168-a513c6456ac7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7647af4b-5405-4848-86fa-3c9ee94d7b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9954a4-5636-4bda-a47f-b568eececa20",
        "cursor": {
          "ref": "543243a4-721d-42fb-8b5c-f7b7f3a31ac6",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5cd572ba-4a06-4cf0-bddd-9132a9fe1d16"
        },
        "item": {
          "id": "7b9954a4-5636-4bda-a47f-b568eececa20",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9c72487d-1734-47f7-8f13-5faba847c3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2106c700-8385-48eb-941c-6e9410428d22",
        "cursor": {
          "ref": "37b69fe1-20b3-4d92-9a37-37e4d5dbae94",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "095dae64-f1f4-4ef4-9cb5-3fbf72ef58f7"
        },
        "item": {
          "id": "2106c700-8385-48eb-941c-6e9410428d22",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b785bb71-ce68-4e68-beab-cdc6883ae74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4744a42a-5a65-49f5-adeb-4ca32bb748ec",
        "cursor": {
          "ref": "bd33ddd0-dc2e-4fa3-b1f9-0b852c2ed2fb",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af5b01d4-b7dc-4493-a48a-48a77d225b45"
        },
        "item": {
          "id": "4744a42a-5a65-49f5-adeb-4ca32bb748ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "604f8007-cb3f-41fa-ae08-3eee94897671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08dad2f0-5d21-4860-82f5-d0b75c7aae94",
        "cursor": {
          "ref": "03bb566b-5566-40a8-9bc4-179c9f020e9f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "10328e52-9870-46e2-8a82-63c7710192dc"
        },
        "item": {
          "id": "08dad2f0-5d21-4860-82f5-d0b75c7aae94",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3c507d30-2119-4fc9-87c2-a5ee4098e519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eeea49-cbf2-48f8-97f5-206b93b66cf0",
        "cursor": {
          "ref": "9212af4f-5910-4b6a-bba2-f33dfcf5b81e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "75cdeeb8-9194-414a-bb29-ed14b4a17d30"
        },
        "item": {
          "id": "a8eeea49-cbf2-48f8-97f5-206b93b66cf0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bbf22ea6-91c8-443e-b89a-4477433346fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86ac242-9047-4339-9864-89039383a66c",
        "cursor": {
          "ref": "f917ea25-c29e-4aad-91d7-0e97ee8b910e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bded958f-5603-4d89-8a88-f07300c3cb87"
        },
        "item": {
          "id": "e86ac242-9047-4339-9864-89039383a66c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7d12091a-1ece-4a78-8a1d-615315fc6318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603794a7-8122-420a-bae5-de650d6008ae",
        "cursor": {
          "ref": "f7f05915-30d8-4976-bc93-6c01705aa1e4",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "621b839a-e59f-4e44-ba48-49f5a809dae3"
        },
        "item": {
          "id": "603794a7-8122-420a-bae5-de650d6008ae",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6ca80f77-2be2-4291-9414-5db89df2278f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6ae79f-0c13-4f78-acd9-6fa61c5147a4",
        "cursor": {
          "ref": "50449895-f977-43e9-8581-7edac1f3e0ee",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3b943104-8e56-4571-bec0-6521e49dd76d"
        },
        "item": {
          "id": "3d6ae79f-0c13-4f78-acd9-6fa61c5147a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ecc9762f-f256-4f89-8547-83422a9c8a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce0399e-e221-45ce-9c37-99af34674f13",
        "cursor": {
          "ref": "916ed061-29f8-44d9-8bd3-7019732db717",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f243c9ef-95b0-4fa9-aa61-917f5710ad70"
        },
        "item": {
          "id": "cce0399e-e221-45ce-9c37-99af34674f13",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c589fb84-2bfc-46a5-869a-6afbc4efb068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2def0002-9106-4dda-a1dd-134f0c3dd456",
        "cursor": {
          "ref": "7728e9c4-412a-44e7-b747-cb595fde4532",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1fa17061-5b93-4cc6-8110-1c0ab46a9de8"
        },
        "item": {
          "id": "2def0002-9106-4dda-a1dd-134f0c3dd456",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3ba19c34-36ab-42e3-bb45-a9d2ae30fa5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3770a9b-2976-4bfc-9183-2b5e0c4bf0a6",
        "cursor": {
          "ref": "a35b5b0a-8c72-4a0e-ac5f-d75ee22e1e78",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cc646528-93f8-48e4-a46a-376c3d55c814"
        },
        "item": {
          "id": "e3770a9b-2976-4bfc-9183-2b5e0c4bf0a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b6a5126a-0737-4407-8714-0d0c739e1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c25861-aaaa-430d-a639-c29aa023029e",
        "cursor": {
          "ref": "fd2feb41-9625-4e62-b14f-2dae31850e93",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f53be0e9-1310-408b-a587-cc618e341f4d"
        },
        "item": {
          "id": "d6c25861-aaaa-430d-a639-c29aa023029e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f273cca8-5eee-4d8d-b309-fcdaac87c918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e7bf1-222a-4181-810d-34abff24db01",
        "cursor": {
          "ref": "8b3fa597-6aab-4037-8fca-e4ae5897d20b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "566e0460-1353-4492-a0d1-8d752d3f3095"
        },
        "item": {
          "id": "389e7bf1-222a-4181-810d-34abff24db01",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bab0cfb8-423d-4080-888a-7ff9f1b15789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e769bac-99a7-4dad-b8dc-01695b232290",
        "cursor": {
          "ref": "34078d8f-553a-437c-aa19-7efd8025a28f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "756cbac6-ba25-443a-a85e-1a7d7e06b503"
        },
        "item": {
          "id": "1e769bac-99a7-4dad-b8dc-01695b232290",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ff0a4d78-c6da-4adb-9a1f-0ab9bc76ff06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8eb21-92b6-4e84-a7ed-bfd67607cb51",
        "cursor": {
          "ref": "37449ff3-ed85-4310-bb12-977e32086144",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "49aafd54-12e7-4a32-8e7f-a43bdf5dae1d"
        },
        "item": {
          "id": "62c8eb21-92b6-4e84-a7ed-bfd67607cb51",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4441616a-2e81-4eb7-a01e-d508cffa8a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e2a4e8-e46c-46b5-917e-3885694b23ff",
        "cursor": {
          "ref": "aad38eae-f15e-41ee-a521-83685c89ef08",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a3c42422-259a-40e6-b19f-06d2c880d636"
        },
        "item": {
          "id": "00e2a4e8-e46c-46b5-917e-3885694b23ff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29d90737-59cb-4c5a-b743-137e6c96d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891923c8-2915-44ec-9968-d0a110438d5a",
        "cursor": {
          "ref": "0ee2224d-ce83-4312-9df6-74f25be62d85",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d8b4d955-4688-4bf2-a571-9fa88ef0dd7d"
        },
        "item": {
          "id": "891923c8-2915-44ec-9968-d0a110438d5a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6c60eec9-8d05-4201-8bbd-7e8489e72101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af735496-1d3c-4737-bf7e-8616dfb1f976",
        "cursor": {
          "ref": "e576c0f3-a1e9-45ca-82e7-8d3d64d364ec",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1d5b91fc-f2f6-4727-827b-f9ee2ee2fb81"
        },
        "item": {
          "id": "af735496-1d3c-4737-bf7e-8616dfb1f976",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "98eee5c0-d697-4aca-8a3e-813bd90829e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a357a9d4-1ec1-45ef-923f-5430de90f5c6",
        "cursor": {
          "ref": "5d5b6579-f6ad-40cc-bb23-8459e40a8418",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2d789c08-c8ff-4187-8ce4-5c34bcd1a166"
        },
        "item": {
          "id": "a357a9d4-1ec1-45ef-923f-5430de90f5c6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c9109f81-75d7-4b55-8ed2-32ca90026304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef54e8c1-7a39-40d1-9b04-5ca57e8899c4",
        "cursor": {
          "ref": "f79bf4c6-448a-4ef0-9d11-fa68414728a7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "dd73b73e-c86b-4f13-b703-6d61dff65e45"
        },
        "item": {
          "id": "ef54e8c1-7a39-40d1-9b04-5ca57e8899c4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f0b0971f-4322-46e9-b498-93197f21e558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddec204-a543-4473-8f16-67ac918b5a0a",
        "cursor": {
          "ref": "307929c9-dfc0-407b-a54b-06e62f4f6742",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "996fb317-0538-430e-a95c-5401c54e2737"
        },
        "item": {
          "id": "bddec204-a543-4473-8f16-67ac918b5a0a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f2098e9c-2f28-4c26-9655-e699193b9bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07d4a3c-4b6b-4e07-adea-263b53ee0175",
        "cursor": {
          "ref": "9b45a8b7-f4b0-48ea-8c3e-382a17fb8973",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "75e132b7-a710-4963-8eba-489db28b2137"
        },
        "item": {
          "id": "d07d4a3c-4b6b-4e07-adea-263b53ee0175",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4563b453-ca06-41a3-bfc8-201b740a7d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681c17ac-651d-4660-8feb-f6f0b46874ad",
        "cursor": {
          "ref": "c8cce5cb-726b-480f-adb4-87b5b88f98df",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1fe27207-1196-4459-a1ed-26845904207c"
        },
        "item": {
          "id": "681c17ac-651d-4660-8feb-f6f0b46874ad",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "750c4414-4a2f-4cf7-9e39-a7a43fba91db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3e83d4-579a-4e0d-8870-e0411bfd5c61",
        "cursor": {
          "ref": "5f359f4a-4ccb-4359-8820-75e6e4d936ef",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "13f5e070-2cb2-4648-973c-8b0a06fa0dd6"
        },
        "item": {
          "id": "3c3e83d4-579a-4e0d-8870-e0411bfd5c61",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0b5c811b-dd93-4786-b86e-572e85904787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131aa672-4aa9-4fd0-97e7-71d2dd43d733",
        "cursor": {
          "ref": "74d9fa29-3e12-4080-86b3-403e662cf472",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "12daa2e0-f9e0-4130-b301-465a4e90fe1f"
        },
        "item": {
          "id": "131aa672-4aa9-4fd0-97e7-71d2dd43d733",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "becf6a1f-403e-4793-bbf8-e5dfa0a94ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e529a7f-4fb9-432d-b83b-b97f67cb28d2",
        "cursor": {
          "ref": "33922938-2a35-4db9-b4bc-faffcdac6df6",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e3ec6952-1711-4714-a70a-9b7f447b69f0"
        },
        "item": {
          "id": "7e529a7f-4fb9-432d-b83b-b97f67cb28d2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ef6a4cdd-dd32-4981-9219-90a021d37bd7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 618,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ddc43d-952b-4e3a-bdad-56647291d9e1",
        "cursor": {
          "ref": "48e18a6f-df85-4a63-a553-1e593c42b608",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5719c239-6d4d-4bb3-8d6f-3e0d6a0f5dde"
        },
        "item": {
          "id": "77ddc43d-952b-4e3a-bdad-56647291d9e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "84ae9ca0-73b0-41ec-a2e7-1ed749be8e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f123fe1c-e39a-4ad3-b672-8d12aff6a96f",
        "cursor": {
          "ref": "62939142-aa25-4bdc-9392-3ccb85319d41",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3bdd7c68-a933-4d50-afba-02db6dbf231a"
        },
        "item": {
          "id": "f123fe1c-e39a-4ad3-b672-8d12aff6a96f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c76e28cf-426a-4b42-b172-a32313d05890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77014642-880f-4953-ae92-adc72fbdfc46",
        "cursor": {
          "ref": "2a3c62e1-7a91-4fd9-925d-c962075fdef1",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "675a1662-6c9d-4238-8181-9cf9e6a865e1"
        },
        "item": {
          "id": "77014642-880f-4953-ae92-adc72fbdfc46",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "21269ea9-0ef4-4d42-ae1e-8d7310b4ddbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fddff7d-b89e-4463-b048-f6c53f5da086",
        "cursor": {
          "ref": "45ed7a2d-1dde-4a6e-a538-ddac6290b59e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f595e8da-f8e2-43b5-a40e-57eb9ce3f278"
        },
        "item": {
          "id": "2fddff7d-b89e-4463-b048-f6c53f5da086",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3129cc7c-ab25-4e46-b0cd-195b1d576154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff44892-171f-47f5-b3a9-04b0571db289",
        "cursor": {
          "ref": "fa6728ea-4c4e-4a78-99a1-c98628ec9a3e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4d638c4e-fd2a-435d-bd59-159b54f58e71"
        },
        "item": {
          "id": "aff44892-171f-47f5-b3a9-04b0571db289",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1da931b5-2937-4c20-a8a3-928fa3890ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8a2015-04ef-4e0e-94c1-f9b83bb85f27",
        "cursor": {
          "ref": "b18b2034-a046-47b8-9cf9-614f472527ff",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8226fe10-3a02-4705-b96b-d06f26596043"
        },
        "item": {
          "id": "5a8a2015-04ef-4e0e-94c1-f9b83bb85f27",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cc0b4bfe-789d-4004-95c3-6e5b0df5f0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3f3dbc-fe5e-45db-bf29-a4ad75df467c",
        "cursor": {
          "ref": "1969770d-85ed-4ae3-9feb-ce2392c66d15",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "541e9e2d-07e9-4149-bd7d-0529307d1c5c"
        },
        "item": {
          "id": "6a3f3dbc-fe5e-45db-bf29-a4ad75df467c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "72c0071f-1821-480e-a5a2-283a0f9caabf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 605,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4e4a89-bfd0-4361-8568-fafec4afee85",
        "cursor": {
          "ref": "d982742b-b33d-4fdc-acfe-4e30ec1ff0b2",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a48adcb6-e5af-459d-b732-b513076e1a82"
        },
        "item": {
          "id": "7d4e4a89-bfd0-4361-8568-fafec4afee85",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9b95f326-d483-4129-ab6b-d1675c086975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871dc3c7-ef1c-4b48-bf48-e6d8db88482d",
        "cursor": {
          "ref": "77eef21b-471b-4ef8-9920-b5a089e3f5f4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1dc2a104-acd3-44b1-8839-f13a014f84da"
        },
        "item": {
          "id": "871dc3c7-ef1c-4b48-bf48-e6d8db88482d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "86e20a62-bad4-44c1-9e44-854b812f0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13cbe4f-2e8d-4ab4-af3c-8914bc228262",
        "cursor": {
          "ref": "ab199560-96a7-46a4-bc13-0044c30afeb5",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d3865018-7d91-4a9d-aaf1-651ca9b4bb74"
        },
        "item": {
          "id": "c13cbe4f-2e8d-4ab4-af3c-8914bc228262",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a32e9fed-b798-4db7-81a2-907c9865a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423e72a9-3027-4fd1-9376-a194f5fc939d",
        "cursor": {
          "ref": "dbad0054-532d-4183-9def-7d3fc81fbc58",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d131cf26-0cdf-466a-8047-62397b337d51"
        },
        "item": {
          "id": "423e72a9-3027-4fd1-9376-a194f5fc939d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "912b87c8-8684-4247-8896-9a2257dcc410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119984c4-b822-4b15-bb55-84554495b103",
        "cursor": {
          "ref": "ef800f93-639a-40dc-af61-2d28830d3e63",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7a70943a-4743-4e97-a142-a6b856a4d4ab"
        },
        "item": {
          "id": "119984c4-b822-4b15-bb55-84554495b103",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "37397b15-5bc8-4a60-aef7-d738b3957f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffd0273-8d41-47a9-9239-78f4b716bae9",
        "cursor": {
          "ref": "ca3e08d7-57dc-4fb1-b4dd-fd2ddfa97898",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "212031d5-a064-491f-9a09-fdae77d7486d"
        },
        "item": {
          "id": "fffd0273-8d41-47a9-9239-78f4b716bae9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ff11035e-70cb-4415-b1a5-39143f6f21d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec8ce00-06dc-4684-829f-580849bc8e35",
        "cursor": {
          "ref": "92291bbb-8d9c-430d-af26-4994e02a7fac",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c8cd99f3-999d-4f94-8e87-f815dd0f01b0"
        },
        "item": {
          "id": "eec8ce00-06dc-4684-829f-580849bc8e35",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0456175-e9ee-44d2-ad62-f6562675babc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606f0558-1b5c-46eb-b018-eedb68643a91",
        "cursor": {
          "ref": "e1558679-344a-4331-b8e7-79d2cc95aa62",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f5db324c-5586-4f59-bc2a-ac4d4b60813d"
        },
        "item": {
          "id": "606f0558-1b5c-46eb-b018-eedb68643a91",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81a874f4-79bd-407e-947a-fe7e194e4559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a14eb9-adbf-4bb1-bb30-9f00de9b38e0",
        "cursor": {
          "ref": "8a78b6ab-f345-4407-a4f4-84683924bddf",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e53d4865-997d-431c-b9e3-ba20b7fd9dc6"
        },
        "item": {
          "id": "e7a14eb9-adbf-4bb1-bb30-9f00de9b38e0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "dff6e030-9496-483c-96c3-3161cc51c0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0165f69b-81f7-490b-bae6-fb9c62cc3b59",
        "cursor": {
          "ref": "562081db-07c4-4cdb-9aef-6e3ecac6b169",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "003d70b7-08e5-429d-ac0c-e142c358b8e1"
        },
        "item": {
          "id": "0165f69b-81f7-490b-bae6-fb9c62cc3b59",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "76a2402a-f0f8-49d2-9a71-3cc95f6e0ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b682ad-dea7-4d29-8d3d-7a184a4f76f4",
        "cursor": {
          "ref": "b4be2a21-2ecd-4582-8635-e41456708b3d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c730201c-89d6-4330-88da-c6254736c31b"
        },
        "item": {
          "id": "b8b682ad-dea7-4d29-8d3d-7a184a4f76f4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6c97b40c-ae24-4d54-b557-300427f7d642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06c31f9-fbee-45cc-8ad6-04e1b01e1cee",
        "cursor": {
          "ref": "f7b706f8-5e33-4082-b0a9-60f18cb1e4db",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "63bce096-3e84-4842-9128-e05008331ff7"
        },
        "item": {
          "id": "e06c31f9-fbee-45cc-8ad6-04e1b01e1cee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12a7146a-2a5f-4123-80cd-99cd8ac57f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8b09ad-f005-469d-80b9-81fd50ce91f0",
        "cursor": {
          "ref": "f764ca9f-978c-4e2d-8c8d-476782b57716",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "264e069d-28d4-4de2-8910-dce298d86676"
        },
        "item": {
          "id": "1f8b09ad-f005-469d-80b9-81fd50ce91f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dcd24134-a011-4fd6-b45a-235ab7c1c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5946e1a8-cd19-4d3b-bc14-3d68f974697d",
        "cursor": {
          "ref": "aac95787-3fc9-42f1-b378-f347d78fb0ef",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "30542ba6-2224-4382-917c-fd3180232d05"
        },
        "item": {
          "id": "5946e1a8-cd19-4d3b-bc14-3d68f974697d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "73995444-c8f6-438b-9f49-ca1eb2306414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa376ce-1f6a-4b91-9e81-2b578b5c451f",
        "cursor": {
          "ref": "b2faa62f-e448-4d97-a4fb-cf23a08a920c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "10e5abad-d919-4e6e-9661-6d743025665e"
        },
        "item": {
          "id": "6fa376ce-1f6a-4b91-9e81-2b578b5c451f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f729326d-dbd6-4160-8bf3-cbed007d922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f472ea-20cd-4061-a919-f778f0ed4f73",
        "cursor": {
          "ref": "6a0ef761-5a45-4e8c-91a1-e3cdeb55d80a",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c5f8455-3ca0-4cfa-b4f7-66dfd28242b6"
        },
        "item": {
          "id": "21f472ea-20cd-4061-a919-f778f0ed4f73",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c5e6994d-6afa-4643-bc3b-92dfe702441b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f211d74-e510-43a8-a4cd-e154d4d8bf3a",
        "cursor": {
          "ref": "91a0ef76-80be-4838-bd42-836ab91b5214",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "328378cd-e14b-40ed-b850-bd712f2553ec"
        },
        "item": {
          "id": "0f211d74-e510-43a8-a4cd-e154d4d8bf3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d187e4af-867e-4b49-989c-33beb655f645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f0ad7b-2665-4f46-8f80-c0f5a3e87dbf",
        "cursor": {
          "ref": "21b06a55-53a3-4b6d-a921-f868a39daed7",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dca76d6f-b3be-4964-9fc9-455cc7f9c1e6"
        },
        "item": {
          "id": "50f0ad7b-2665-4f46-8f80-c0f5a3e87dbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0f3fe689-dae3-4c5a-8569-a9120470c97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0950ce16-6352-415f-8360-66d7c4779361",
        "cursor": {
          "ref": "82b32d24-c6fd-42ab-9100-86f84e2a0745",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0c4cbbac-4c1f-4a29-97e9-8da9e369b43f"
        },
        "item": {
          "id": "0950ce16-6352-415f-8360-66d7c4779361",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4a2dc563-40e8-4c18-8d2e-79e744d6ab9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d80de4-d087-4f4d-bc49-e90abc1a64e6",
        "cursor": {
          "ref": "d27ac781-e57b-4b2e-a116-024fec1b4fe1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3119cbc7-2a7c-430d-9b59-d5a158ea481a"
        },
        "item": {
          "id": "d6d80de4-d087-4f4d-bc49-e90abc1a64e6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7edc84f5-24f8-47c3-b5c2-e69b4234ff7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f476da-6f8d-4143-9eba-b72d355709ab",
        "cursor": {
          "ref": "134eb369-922b-4188-9d14-7dfc343a252d",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f8005d8e-52ca-4544-bcec-ff6653b32802"
        },
        "item": {
          "id": "23f476da-6f8d-4143-9eba-b72d355709ab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e17e569d-ade1-4acb-8b3c-a16662c808e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9edd02-3cda-4bf9-9886-6d74a18199bb",
        "cursor": {
          "ref": "5386a8ca-ab63-433c-84c3-f539fe261ca7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "078d11d1-8708-4b65-a491-b1b612fa92d9"
        },
        "item": {
          "id": "aa9edd02-3cda-4bf9-9886-6d74a18199bb",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "16581d95-664d-4dc8-b733-a2ddd7d69f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca74e61c-9e34-403a-8a44-4c94ca9fe1a5",
        "cursor": {
          "ref": "8ca5a6db-ff26-4ac5-b7e6-0cc688808585",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1fe09985-edf5-47be-8110-82bae062a012"
        },
        "item": {
          "id": "ca74e61c-9e34-403a-8a44-4c94ca9fe1a5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fcfd51f1-dc72-4e31-b2cf-1eda3cb36cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62546652-2b92-40ff-85b6-89e4fa58d556",
        "cursor": {
          "ref": "4e457e7e-a9b4-42c7-8696-f022ceaaf265",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a48ffded-79ae-4d1e-838c-71c036fa3857"
        },
        "item": {
          "id": "62546652-2b92-40ff-85b6-89e4fa58d556",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1ce69351-0446-4a06-96b5-6697dc948a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fe927c-430d-4a60-afc6-3589336571b1",
        "cursor": {
          "ref": "803a9d2d-eb88-45d0-bf6a-0504119a9f56",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da76b353-6564-4496-8558-fbd9c99d2c30"
        },
        "item": {
          "id": "b0fe927c-430d-4a60-afc6-3589336571b1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "965ca361-3895-42a1-a66f-f4f5c7aea99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb8d2f-2fa2-4961-ad0b-2b80b812ccb1",
        "cursor": {
          "ref": "d90a5da5-936f-4d7d-a55d-f0fdcdccf44e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3fc8625b-2032-4dab-8f77-4730265eda53"
        },
        "item": {
          "id": "fcdb8d2f-2fa2-4961-ad0b-2b80b812ccb1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "96dce36b-63a5-4e59-8ba2-2fd85354136b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d02761b-d7b1-47dd-ae5c-9b8ab02c2d7b",
        "cursor": {
          "ref": "4e7c9611-abcf-416e-b284-bb1ba6fc88f4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fb4bbc12-fa50-4fa1-a17c-f3e5ac115ee9"
        },
        "item": {
          "id": "7d02761b-d7b1-47dd-ae5c-9b8ab02c2d7b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "81e8e616-e8d3-4567-81eb-5c640c77e182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0015a2-462c-4ff4-be12-57771d45011b",
        "cursor": {
          "ref": "5322bd09-45bd-4e13-88a3-dc0ffbcd3972",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2e7ba876-e601-4581-8d34-358abb0504c3"
        },
        "item": {
          "id": "7f0015a2-462c-4ff4-be12-57771d45011b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d838e247-eb83-45f4-a8d5-5df0f3984c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cf7322-21bc-4d63-94d8-7dd3be2c5531",
        "cursor": {
          "ref": "c0bdb0ba-e395-4daf-9a88-499966993681",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "914ae3cf-09be-4f36-bebc-f3307bdda7c4"
        },
        "item": {
          "id": "e8cf7322-21bc-4d63-94d8-7dd3be2c5531",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5e3bc894-b855-4389-92b1-16cdf2be41c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d236268b-d437-47f8-a717-3834257d584a",
        "cursor": {
          "ref": "d02abb6e-4e23-402d-aeee-a49c5f5df8a7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d7750dc-3f5f-4e10-994a-a3055099c1c0"
        },
        "item": {
          "id": "d236268b-d437-47f8-a717-3834257d584a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "de6eba41-f997-44fa-8f92-5fe64a8cfd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68720f2-a3e6-4e0c-8a4b-0fcfdf04e204",
        "cursor": {
          "ref": "62115a6e-a1a6-4b4a-a68f-d0dadfe44fe4",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c1be36f1-02b8-4a9c-97c1-8c446e22c95a"
        },
        "item": {
          "id": "a68720f2-a3e6-4e0c-8a4b-0fcfdf04e204",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3503eab8-4173-46f3-8c92-b3fbcc881b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3ba1ff-2def-48e4-b944-07e770417210",
        "cursor": {
          "ref": "db9bf86b-ac57-450b-bd1d-bdf682e2ebc9",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8ef13979-b79f-40d5-bdac-8878b3ad0280"
        },
        "item": {
          "id": "bb3ba1ff-2def-48e4-b944-07e770417210",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b3eff07-7592-43bd-a592-89f7b355c4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9d1960-5921-4616-bb3e-405a167242d8",
        "cursor": {
          "ref": "6c2b6769-9280-4081-9a2a-911f8bfa74fd",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e6739b01-4a8e-4091-93ac-e536b3752994"
        },
        "item": {
          "id": "3e9d1960-5921-4616-bb3e-405a167242d8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bd35f485-ea2b-4afa-9283-d8d71ea51696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2568aef-5775-44f5-960d-98bc01692583",
        "cursor": {
          "ref": "4ba37580-821a-4344-9148-2ea4eb9c6fca",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "61c3b737-5c2f-4620-95a0-c1062cb27dc8"
        },
        "item": {
          "id": "d2568aef-5775-44f5-960d-98bc01692583",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "75a87ac1-e051-47df-986a-b458695293b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a9798f-8227-4174-b66c-3b660a756d13",
        "cursor": {
          "ref": "4f3165aa-173d-406e-bf61-709aeafcd818",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e4d360b1-0a41-4bd4-861d-bc33d6b603ab"
        },
        "item": {
          "id": "25a9798f-8227-4174-b66c-3b660a756d13",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "115c7014-c8c6-4ba1-9966-566797b6fa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb2861c-db8d-43bc-900f-727043bb8be8",
        "cursor": {
          "ref": "5fb3b255-b7dd-442b-b009-4ad5d3cef30f",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a23c5559-a756-48f0-9429-c675e7d7a283"
        },
        "item": {
          "id": "4bb2861c-db8d-43bc-900f-727043bb8be8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a56d596-bd72-42ec-9819-ddcada7b8d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821c4995-492f-438d-b2e9-f11a527bb5b0",
        "cursor": {
          "ref": "60984760-a631-4071-83bf-e6c49b93b966",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "630932d0-b489-47b1-ad07-0f91d0b52ee5"
        },
        "item": {
          "id": "821c4995-492f-438d-b2e9-f11a527bb5b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "498c1c50-5bc6-4ab2-907b-595be039b287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36457a4-6938-40be-a9ea-09d11fbb15bf",
        "cursor": {
          "ref": "f99ac6a2-86fb-437c-9f18-160fe50a5432",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87a30fd1-9cb5-4e1a-bf97-417f30dd1128"
        },
        "item": {
          "id": "e36457a4-6938-40be-a9ea-09d11fbb15bf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9aa0e50a-b077-458e-b9ac-613bf57cb981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4da7a9-4c8c-4607-a0fe-07be16f26f3f",
        "cursor": {
          "ref": "fab6e0bf-0bed-4e24-a4ed-8ea0dd2a4817",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "71b56a50-959f-48e4-90bb-b762d233733b"
        },
        "item": {
          "id": "ab4da7a9-4c8c-4607-a0fe-07be16f26f3f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "af9f51d4-052e-4b50-9266-7944e2b7e891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc772f0-ab00-4e0f-b779-00638eac8b30",
        "cursor": {
          "ref": "c8137efe-95a9-4e73-b02e-8807fec93e75",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "60feb976-ad67-4e62-aea5-d882f682f2e5"
        },
        "item": {
          "id": "1dc772f0-ab00-4e0f-b779-00638eac8b30",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "42df19b6-e361-43f4-bb3d-bcbbdde364ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e31700-4688-45bd-8a3e-fcd0e54919ff",
        "cursor": {
          "ref": "9473d342-6552-455d-b995-910902d5e418",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69863bae-8fd0-4ce7-9122-e084636fad5b"
        },
        "item": {
          "id": "80e31700-4688-45bd-8a3e-fcd0e54919ff",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "953d9b7c-75f6-4cec-b664-57709c968468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7547b202-ae80-4803-9ed0-1ca4af345898",
        "cursor": {
          "ref": "39e0e252-c032-4208-985d-742d9a9aa776",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0b6a347c-6b9d-4907-991a-4a9843c3001f"
        },
        "item": {
          "id": "7547b202-ae80-4803-9ed0-1ca4af345898",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b9a0103-7d30-4687-911a-aadd1e0a4b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dfc5d9-295b-4bee-9f3c-26c45df9e80e",
        "cursor": {
          "ref": "f7a77cb0-8519-4ddb-be62-757538926f2b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2c736f3e-1eec-440d-a6fd-8109e3b31b2d"
        },
        "item": {
          "id": "f6dfc5d9-295b-4bee-9f3c-26c45df9e80e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dbd58d01-729a-4426-85c3-565e26854f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6830bf01-c287-4c96-a54e-56484a3922f0",
        "cursor": {
          "ref": "b1d2532c-3130-44d0-b111-ded4ab44c3e9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "423f3955-c363-42b4-b032-21df9b46a2e4"
        },
        "item": {
          "id": "6830bf01-c287-4c96-a54e-56484a3922f0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd1e1fb3-21ae-4fd8-80f3-34e9530563f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18790f0-384d-4c93-a88d-7e56cec59426",
        "cursor": {
          "ref": "b31bd6db-0c1f-467a-b19b-f7acbf756ecc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b9f9b67f-a0ed-41d3-83bb-8355c76d29dc"
        },
        "item": {
          "id": "b18790f0-384d-4c93-a88d-7e56cec59426",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b642bdcb-0416-4883-8f0b-b51cdfd38396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7b4a50-cd04-4179-8daf-89d26259123b",
        "cursor": {
          "ref": "b58cef21-b8d4-4cf4-a620-adbf101b1cbc",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "57af9263-f802-490e-93a8-1e36e6b95582"
        },
        "item": {
          "id": "ae7b4a50-cd04-4179-8daf-89d26259123b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0fa0fde1-cb02-4428-b4f0-e36bf99cd705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed8cba3-1f73-40b8-a118-aff64bf84a67",
        "cursor": {
          "ref": "e83e40ed-f6a9-4f9d-8226-7408e095e187",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "719a7934-55e4-4527-b530-cbf83eec695f"
        },
        "item": {
          "id": "6ed8cba3-1f73-40b8-a118-aff64bf84a67",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a1532a02-170d-4302-bb11-b7e9a9768b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4758f19e-e776-4079-b0df-2a0e9e2f7e44",
        "cursor": {
          "ref": "3b8a369e-26fd-457d-9b28-1de198649d4d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "414a258f-2db1-42a2-bd21-78f973d0bbcd"
        },
        "item": {
          "id": "4758f19e-e776-4079-b0df-2a0e9e2f7e44",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "77490602-b424-4b15-bd66-aed3901b5641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f49b42-1ecc-4377-8ac9-e7fa0f6e70d2",
        "cursor": {
          "ref": "3db225d4-08e8-477d-8eaa-1e851360cc5a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "474a21fd-7d86-4337-87f2-4c3f53dbcf86"
        },
        "item": {
          "id": "03f49b42-1ecc-4377-8ac9-e7fa0f6e70d2",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "93abf60b-5931-4ce9-984e-0a7f69420476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c723b8e-8686-480f-9126-690fd78bf4a0",
        "cursor": {
          "ref": "96628b9a-b2ca-4f22-a214-57537ea1ca57",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2fe6e1fa-bf45-430d-9570-34ee424c7f9f"
        },
        "item": {
          "id": "1c723b8e-8686-480f-9126-690fd78bf4a0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "082ca07a-2128-43b0-92b8-a8ceefea63b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255d854e-9ae8-43bb-8ec0-8508c2138504",
        "cursor": {
          "ref": "295294b3-a3dc-453e-8f94-941d0f18cf9e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5e5b579a-e72a-4819-8fb4-a44ce30e0e5e"
        },
        "item": {
          "id": "255d854e-9ae8-43bb-8ec0-8508c2138504",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cc9051d7-4b6c-46df-9ba4-4dcf809df069",
          "status": "Created",
          "code": 201,
          "responseTime": 7890,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca48bf6-e2e9-41d2-ac0a-2228c9a4027a",
        "cursor": {
          "ref": "09c75674-18b9-4f7a-ba34-098f4e3b02c4",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4a4032ba-820f-4482-8f91-fcef61f9140d"
        },
        "item": {
          "id": "aca48bf6-e2e9-41d2-ac0a-2228c9a4027a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b947320a-04fe-4d23-98a8-bb2f13cb5324",
          "status": "Created",
          "code": 201,
          "responseTime": 7669,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "835b8c45-1a70-4b10-8d81-8015a36b66be",
        "cursor": {
          "ref": "9db86a32-f973-46f5-ab63-291a4d75f363",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b6757f4-9702-4e9d-b17f-e9fb66c317ff"
        },
        "item": {
          "id": "835b8c45-1a70-4b10-8d81-8015a36b66be",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1dfd5cec-ad03-41a9-9dd6-9f94b60dbfbd",
          "status": "Created",
          "code": 201,
          "responseTime": 8686,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "72483155-bba4-4992-be2d-f3357fb2a2d2",
        "cursor": {
          "ref": "2f19d855-8d0b-4f2d-bd15-547e2763983f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "56a44c5d-03c6-4c11-9db0-cb08be69b708"
        },
        "item": {
          "id": "72483155-bba4-4992-be2d-f3357fb2a2d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1d1cadb3-90d6-494a-a138-c4c4bdba99cb",
          "status": "Created",
          "code": 201,
          "responseTime": 7341,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd0928e-1aaa-401d-a8c2-74039e578e2c",
        "cursor": {
          "ref": "2645ae57-872d-4eaa-81a3-ffa19056f769",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "654efcb7-329f-4f58-a257-b5aafc8eb744"
        },
        "item": {
          "id": "8dd0928e-1aaa-401d-a8c2-74039e578e2c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ac299cea-d794-48c8-853c-f52576c9f578",
          "status": "Created",
          "code": 201,
          "responseTime": 7241,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "046c9a44-43be-41e8-9224-4b7172318769",
        "cursor": {
          "ref": "b28c7f96-ab43-4eee-96f5-578e51999555",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec34c23e-3a57-4a79-8672-346a99d31225"
        },
        "item": {
          "id": "046c9a44-43be-41e8-9224-4b7172318769",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7d415177-7d79-470c-ae0a-d216de9cf451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "970df7a4-e1f6-4d5a-9a6c-647c5cbd2fdb",
        "cursor": {
          "ref": "49b4f181-fb33-4f82-b06c-ff8c5b3b9ccc",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "87ecd1d0-ca91-4767-b561-bb1e9e520986"
        },
        "item": {
          "id": "970df7a4-e1f6-4d5a-9a6c-647c5cbd2fdb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5f2837e4-36f8-44ef-89d4-8170618b5d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351bc49f-88e9-44dc-b3de-968bf2c449b9",
        "cursor": {
          "ref": "14a832c6-080a-4fa8-b7a7-d2ed0db7948c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "411bfddf-a415-4a3e-97e9-77055d5d9173"
        },
        "item": {
          "id": "351bc49f-88e9-44dc-b3de-968bf2c449b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2af24ad3-2312-454f-a3e7-fadc953e040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8fe38-30e5-4b12-bf7d-d3338372438c",
        "cursor": {
          "ref": "ba28898f-ecec-4845-ab4d-f25f6a4be09a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8fd5162a-e758-421f-bee1-5d79a4c7dc26"
        },
        "item": {
          "id": "bdc8fe38-30e5-4b12-bf7d-d3338372438c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0edf9561-8373-4782-8289-ec9cd98882a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b14a9f5-a679-4d63-8d6b-396fa608e290",
        "cursor": {
          "ref": "7a4ea0aa-cc4d-497d-b7c4-0fae5fff38e7",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c3e1a50f-b756-4238-9db6-c1a98b5a547e"
        },
        "item": {
          "id": "5b14a9f5-a679-4d63-8d6b-396fa608e290",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0f29c8ce-f000-43eb-85fd-5dec07c89f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601fa12b-1bd8-426d-bce9-e22d16eb34b6",
        "cursor": {
          "ref": "6d48091b-ecf3-44a8-82d7-477dfd4d7f15",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4e5804e0-3fd0-40c9-bbc3-76aff22ce30c"
        },
        "item": {
          "id": "601fa12b-1bd8-426d-bce9-e22d16eb34b6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b987d2bc-59c0-4b21-b7dc-5ffca026d481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808f4b97-cb76-40a4-b8c2-91fd086109da",
        "cursor": {
          "ref": "4291ce61-67a2-4af8-9764-59baa280bcaa",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9affaaf2-d754-4af7-888c-82d8f03a882e"
        },
        "item": {
          "id": "808f4b97-cb76-40a4-b8c2-91fd086109da",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f15cba85-b972-4662-bd97-53482a423039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9931bc-db9f-4c69-8983-9f941e398de1",
        "cursor": {
          "ref": "eb532150-35f2-49ca-ac26-8543f6a4744d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ecd61d13-83ec-42d6-8829-ba63a8ffd95e"
        },
        "item": {
          "id": "ef9931bc-db9f-4c69-8983-9f941e398de1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d9c73868-6116-435f-9ace-c1b462cb3dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94fd188-383b-41d0-999c-cfe6d075b4bc",
        "cursor": {
          "ref": "ec00532e-1cd8-432b-aff0-f5c79e4671ba",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4dde136c-45f1-4816-9f40-d626acc84711"
        },
        "item": {
          "id": "e94fd188-383b-41d0-999c-cfe6d075b4bc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b277208e-8d46-426d-90da-342c729f918e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2209744-28c3-43af-ab83-89f5385073d1",
        "cursor": {
          "ref": "f98325a0-62d8-4a7f-a860-346c1426fe98",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c08fcdaf-4bff-4eda-b2e9-bf17033adfc1"
        },
        "item": {
          "id": "a2209744-28c3-43af-ab83-89f5385073d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bd730a65-cc87-4db0-9e60-51cdb4c98614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368304fc-a579-4c1c-bdb5-8eacf07d30f7",
        "cursor": {
          "ref": "2b9e89b9-1868-4a8f-98b5-c329cb5e4d03",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "23241c7d-e57e-4b60-b54f-06272e6a971c"
        },
        "item": {
          "id": "368304fc-a579-4c1c-bdb5-8eacf07d30f7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "07e94462-94cb-496c-9d4e-e83fd490fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc0a8cb-d289-42ea-9b46-664f814463b1",
        "cursor": {
          "ref": "0227e982-15fb-4169-8042-d07c7668e00e",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3b1b968f-9bcb-439f-a158-26e2bbd18925"
        },
        "item": {
          "id": "5fc0a8cb-d289-42ea-9b46-664f814463b1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "26ef2c70-e833-428e-a9f4-8d6812f1a0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bca167c-4ab8-4648-8654-7a4f9c937b1d",
        "cursor": {
          "ref": "9598b0f6-5f20-4f20-b0b6-2315100d801a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c9b2d1bd-9e11-42bd-ace1-081945f71d4c"
        },
        "item": {
          "id": "8bca167c-4ab8-4648-8654-7a4f9c937b1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b05b7091-be89-4b6a-8138-c72548cd7e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c4bb48-71a7-49cf-b570-2e5b2febf4fc",
        "cursor": {
          "ref": "d65be985-18a6-439d-9e9f-8ba7f076344f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "83d10c59-1be3-4efa-8222-8f7173bfce80"
        },
        "item": {
          "id": "22c4bb48-71a7-49cf-b570-2e5b2febf4fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "245f9d48-2b90-43f6-a84c-bed070bd5988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab15e9-94e2-4cc8-af90-c15f29b20877",
        "cursor": {
          "ref": "0936982c-d792-4a02-a38a-c7c4cb7c73c9",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b720f8a5-08b4-4bc9-9da5-797fd12afc7e"
        },
        "item": {
          "id": "6fab15e9-94e2-4cc8-af90-c15f29b20877",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a25f5fde-9203-4518-afec-6113bb54ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543ff6c6-f17d-4f39-bd8b-b0f180294dbf",
        "cursor": {
          "ref": "aa70ad42-3781-4672-9083-262128a5acab",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4d638dcd-cdc7-4adb-adbd-34cd487137c1"
        },
        "item": {
          "id": "543ff6c6-f17d-4f39-bd8b-b0f180294dbf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e36d8b2f-8b2b-466e-9ac9-3a89a53d1f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae2c4f3-8fe8-4c68-8172-de1d3e075130",
        "cursor": {
          "ref": "ddae3fbd-8b0a-4fb7-9482-b3acf2f30b18",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "775abc45-415e-4bb2-a595-9fe848b7491c"
        },
        "item": {
          "id": "2ae2c4f3-8fe8-4c68-8172-de1d3e075130",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22161d84-5812-473f-bc9e-c8d2f5af47f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285c97ed-05b3-4314-bad3-c32d57cfc9aa",
        "cursor": {
          "ref": "4446729c-8998-4574-8dfb-e779fe94eded",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "76d409cd-b18e-47d2-913e-2745c8b2c9ad"
        },
        "item": {
          "id": "285c97ed-05b3-4314-bad3-c32d57cfc9aa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6372b58b-baf0-4d07-8fa0-2d7af09aa35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3275775d-effb-4c5d-aa12-42f9cfa86a36",
        "cursor": {
          "ref": "ccce595c-b171-4b1c-82db-e941489165d1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "621c3a0a-e69b-44b7-ad5a-ad3e1afb55ed"
        },
        "item": {
          "id": "3275775d-effb-4c5d-aa12-42f9cfa86a36",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f83f06fb-dae9-4c3c-b5ed-c52662e0475c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c7854a-98ae-4ad6-b321-40a30410ea6e",
        "cursor": {
          "ref": "f3e29817-632f-4392-8bd9-3600ed5c1b54",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0cac3301-962a-4401-bd12-b9468277aa7b"
        },
        "item": {
          "id": "d1c7854a-98ae-4ad6-b321-40a30410ea6e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d728d17e-54a2-4128-90fc-cad941695212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2b14bf-dbeb-4a54-b28c-cb2fa70d4e05",
        "cursor": {
          "ref": "f4fcb070-2e6d-4017-bdf2-cd54675fc116",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "edb1176f-aaf7-4542-a46f-5a53bf008978"
        },
        "item": {
          "id": "5f2b14bf-dbeb-4a54-b28c-cb2fa70d4e05",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ebe2d53c-e697-4f5b-9696-37f7ce3bbfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8c7d00-e1c3-45d0-9109-bba9a502bac8",
        "cursor": {
          "ref": "26a85bf3-6fbd-4fd8-8e30-b552226c59f7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0f6350e-b446-46b3-ab4e-601468823333"
        },
        "item": {
          "id": "0e8c7d00-e1c3-45d0-9109-bba9a502bac8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "804d2c9f-bef1-449c-8784-1c4dd8d20d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea35bd0-eca0-47ed-827a-46a503c5a975",
        "cursor": {
          "ref": "ea2629fc-dbcb-4484-a5e0-60ae879b96ff",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0fc580ef-fa0f-4356-a4c9-51d416c2a137"
        },
        "item": {
          "id": "bea35bd0-eca0-47ed-827a-46a503c5a975",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "26241f72-3465-4cf3-be7a-fe65d79c6630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86758b46-7356-4f1f-b0f3-6c0ce5405bd3",
        "cursor": {
          "ref": "574eb792-1dff-41ed-9fc3-1dda53e5a25c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e24b0422-025e-4c69-983b-d2ee8d69e4e4"
        },
        "item": {
          "id": "86758b46-7356-4f1f-b0f3-6c0ce5405bd3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a19f6cb3-91ee-49ac-93f5-30c0e3e962fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa4796d-8373-4a97-b01d-8b2fe125c706",
        "cursor": {
          "ref": "a1ecca79-7f51-4b0d-8b05-7516da436ebe",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ff96472a-bb7e-4197-8586-007d8d1c64c0"
        },
        "item": {
          "id": "afa4796d-8373-4a97-b01d-8b2fe125c706",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4624a266-5691-4e93-9dcf-77a901b24d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f91b61-5ef8-4fee-a540-426d82dda61b",
        "cursor": {
          "ref": "2d070e31-f36c-4115-a9d8-000353b68f9f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "dc05cfc1-7662-4507-99a9-9abb8338dfdd"
        },
        "item": {
          "id": "f9f91b61-5ef8-4fee-a540-426d82dda61b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1e79f871-50d9-49d4-9157-47952b6326e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050d942f-2e5c-4ef3-89f1-cfe3c4f59ba9",
        "cursor": {
          "ref": "4bf25b46-cbd1-452a-a692-53a9e02436e1",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "94346fe9-8a53-4ffc-aaf5-4cb3dfed7b8e"
        },
        "item": {
          "id": "050d942f-2e5c-4ef3-89f1-cfe3c4f59ba9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "74fe6e6d-9e0c-40ca-99cf-dfe4e27b0ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ef1246-8508-47d2-a4b3-b4a1a3c56b85",
        "cursor": {
          "ref": "e0557507-39bc-4e4a-a8ec-f7a433028fef",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "274b4692-d594-4178-acd0-88fc2387ec29"
        },
        "item": {
          "id": "a5ef1246-8508-47d2-a4b3-b4a1a3c56b85",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0b46efc-9408-44ab-9919-0a617f9f255d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d3ddaf-1592-496f-a6e9-e7070938cfd3",
        "cursor": {
          "ref": "b3c9cd0f-2284-41fa-b386-531348b35698",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ce28802f-329f-478c-b120-b665ff796cfd"
        },
        "item": {
          "id": "f3d3ddaf-1592-496f-a6e9-e7070938cfd3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b3e25477-625d-4859-a597-c498f0f74c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4fad89-2ed9-461d-ba02-470d04f39507",
        "cursor": {
          "ref": "37aefed8-0bbd-4e8e-ac1e-a95930add6f8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3a3ddca3-07a9-45a7-b4bc-ff2652385efe"
        },
        "item": {
          "id": "7b4fad89-2ed9-461d-ba02-470d04f39507",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "947623f1-2145-4d72-8acf-8df02f200f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3493bbf-35d1-4d7d-9aa4-20e96c442189",
        "cursor": {
          "ref": "2492805d-b7fa-465f-98c3-fa841618ffb7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "208108db-f197-4962-b4e6-c2129d8e05f0"
        },
        "item": {
          "id": "b3493bbf-35d1-4d7d-9aa4-20e96c442189",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0cc80e86-6d3d-47e5-97fa-139205c173aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ef9f9-752e-4da1-bab6-0bc7d05455ba",
        "cursor": {
          "ref": "9f39a58c-3802-4edf-847e-293a0b025c0d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5204916b-1b91-4d97-93d0-955d7731e6b5"
        },
        "item": {
          "id": "ed9ef9f9-752e-4da1-bab6-0bc7d05455ba",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "361e6a04-d47a-4134-93e5-5922379a9026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9765a39a-397b-43f1-8a20-2b9c6936e8a5",
        "cursor": {
          "ref": "63a5c6d7-1b5d-41ec-a9e3-d662ed24f16a",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "43c454ff-6c30-4a21-8664-824b0b99f174"
        },
        "item": {
          "id": "9765a39a-397b-43f1-8a20-2b9c6936e8a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0f41555a-47f2-41a0-8614-666d45957e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e492b-d2c9-44f7-b255-6ce86131147c",
        "cursor": {
          "ref": "94be8ae5-385e-41a8-9cf1-b127516c64ed",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "db96363c-3b2a-4cc9-ac7e-a61ab1fbc127"
        },
        "item": {
          "id": "401e492b-d2c9-44f7-b255-6ce86131147c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "58b187a7-2f4b-4cd1-968e-4ffcbeadcc93",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093ff8c-efa1-4a4d-a9af-d18c024b5694",
        "cursor": {
          "ref": "da608f9a-8334-46ba-9b78-40abef61509d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5b1b4125-d88d-412d-b454-b1cee64cdd23"
        },
        "item": {
          "id": "3093ff8c-efa1-4a4d-a9af-d18c024b5694",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bbffabf-181f-4413-9df2-de3881bc283a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "230e726d-5453-4c37-a397-f67fa231372a",
        "cursor": {
          "ref": "566c06d8-97b8-48e0-bbd0-ed10f840dfd3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a990a341-0fee-46d0-a05d-bc97b935e5c0"
        },
        "item": {
          "id": "230e726d-5453-4c37-a397-f67fa231372a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "232476f1-4a80-4a57-894e-13489cfcc2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb8e4a4-9f97-44a0-9cf0-b0831660efd2",
        "cursor": {
          "ref": "bfdd6fb8-fbfd-49b9-9c86-6deb523a5583",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "578b65e0-2bb1-4b4f-aff8-4834990c5f1c"
        },
        "item": {
          "id": "aeb8e4a4-9f97-44a0-9cf0-b0831660efd2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0925270e-d35d-4258-aeb1-d2b83b3073e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1080e781-5826-4a92-b71c-1cbe2adbf1c4",
        "cursor": {
          "ref": "ba2fb932-bdcf-48b6-9df8-5b687a78c443",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "35ddb712-4f69-4a9e-b3f8-0474855101f6"
        },
        "item": {
          "id": "1080e781-5826-4a92-b71c-1cbe2adbf1c4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c21f87c6-b0a2-4884-8b93-7451755c3ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ab4b70-2ef0-4b07-9a26-9d5b019de3b0",
        "cursor": {
          "ref": "fdbd4bab-4f5a-4774-bcc9-27a42ff41313",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1bf7fc2c-ecfe-469b-be44-345eddcd1723"
        },
        "item": {
          "id": "45ab4b70-2ef0-4b07-9a26-9d5b019de3b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8bd9d379-73d6-4ed1-b1b4-b4efc939d58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3221ec93-0ff2-4680-a025-7c90d31d01bc",
        "cursor": {
          "ref": "a841b3f8-c7e0-43c5-ba48-3f27c2c5d8c0",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c42f0177-c330-4abb-94a9-4ac698bbf8fe"
        },
        "item": {
          "id": "3221ec93-0ff2-4680-a025-7c90d31d01bc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d315185b-cbf5-4c3b-b035-c4097a3bd898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c29b690-70f7-4523-9236-995bd2546833",
        "cursor": {
          "ref": "de36e0b2-aea9-4737-b8c8-6d5aa7ffdd27",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "24b915ba-cf25-4d7e-a187-dcb08cad6e01"
        },
        "item": {
          "id": "2c29b690-70f7-4523-9236-995bd2546833",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1e6169cd-766b-4ae8-89c2-a972b2fa092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d24fbb-7f31-4a59-a111-157b02ba9677",
        "cursor": {
          "ref": "1907d5f1-4d80-4069-b6f3-3e948044376a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2a80c75b-67c9-4eb2-9451-2f17e13fbbfe"
        },
        "item": {
          "id": "c2d24fbb-7f31-4a59-a111-157b02ba9677",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3587c444-b0e1-4fbb-a21c-3830962590f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8041a5-abd4-4a06-a7f3-c9cf18efdf38",
        "cursor": {
          "ref": "2577cb63-c16d-4750-a40d-374fc8a1f025",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ec14c5bd-e38e-4fbe-85df-2342f5d0df11"
        },
        "item": {
          "id": "3b8041a5-abd4-4a06-a7f3-c9cf18efdf38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6a241feb-7f26-4a97-9977-b6c49c22bad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16439ad0-d48f-45b1-b31e-166a2f7f1ca8",
        "cursor": {
          "ref": "8ef59d9b-8cf2-4904-a21d-288bebbaf9a9",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "386a185d-a105-4876-af53-37a03eb22379"
        },
        "item": {
          "id": "16439ad0-d48f-45b1-b31e-166a2f7f1ca8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "efbde0d2-8f6b-4137-8547-5b2bf5e5bc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bc0b5a-2eee-4829-ac2c-879723816816",
        "cursor": {
          "ref": "00dce2e6-991c-4d82-b241-2768e9b48334",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e38509de-6a55-437e-bf04-8689b8200be3"
        },
        "item": {
          "id": "26bc0b5a-2eee-4829-ac2c-879723816816",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b01568fc-e49e-4c0c-951d-d9d51758d1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4148c290-26ce-4f63-866b-1f03ba4fdb84",
        "cursor": {
          "ref": "9e6115b2-4147-4f2d-bd27-6cb5e919adb7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "30dcce90-4c9f-417e-b3d9-d105f72e4c62"
        },
        "item": {
          "id": "4148c290-26ce-4f63-866b-1f03ba4fdb84",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3289f759-d027-48a1-84a8-4e77e75625ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bf3f1b-3032-49f6-aed5-7ef7ca6f4728",
        "cursor": {
          "ref": "848026e9-15cd-491d-b474-0bec2aa106be",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "34abe7bc-7c00-4b73-be6d-d1d12bcdd455"
        },
        "item": {
          "id": "81bf3f1b-3032-49f6-aed5-7ef7ca6f4728",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "35106622-3341-4fe0-a6af-d52f268885d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd519fc-179f-422f-9884-18fc388a0800",
        "cursor": {
          "ref": "4ac5f7d2-3d5e-4231-869f-7a8c6a476e07",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f94b7499-9fa6-42c6-a08e-3ffd25b6c4c2"
        },
        "item": {
          "id": "5cd519fc-179f-422f-9884-18fc388a0800",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e57aefa2-2d5c-41f3-be3f-476a8efd62ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5b7e7b-0852-4f33-80d6-73f1f57dabe9",
        "cursor": {
          "ref": "ad948234-abc4-4695-87e2-3e5a54e56420",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1f1422e6-0550-4319-b818-fd273ac111ff"
        },
        "item": {
          "id": "8a5b7e7b-0852-4f33-80d6-73f1f57dabe9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7029dbef-bba4-4459-a257-fd56f4769154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebced10e-388a-40e4-a150-29e3675be1d1",
        "cursor": {
          "ref": "4a7bff81-edbc-47c9-81af-b8bac80ded06",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e843c471-3ed0-4fd1-b750-af7197946009"
        },
        "item": {
          "id": "ebced10e-388a-40e4-a150-29e3675be1d1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a9a2af2d-04ed-4e3c-af15-dabe869ac0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652bca1b-46e5-47b7-97ea-3aef9b5d465a",
        "cursor": {
          "ref": "0fc52e70-fa80-46f9-8388-b70c9412bfef",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b238e509-ec97-46bd-ad1d-a1169355856e"
        },
        "item": {
          "id": "652bca1b-46e5-47b7-97ea-3aef9b5d465a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85b3087a-ae39-4fef-8a0b-5986263fcf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f540166-a78d-4805-a3f3-d4027b23344a",
        "cursor": {
          "ref": "4928aa38-c70c-4711-9aa4-a3f6a047477c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "93a6e9fa-f543-4cfb-9132-d34279ddcf12"
        },
        "item": {
          "id": "7f540166-a78d-4805-a3f3-d4027b23344a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "56e2882b-c5f3-4817-aa67-ae1833cb31c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e751bfb5-4600-4647-b2e8-76f5ea5e5ffe",
        "cursor": {
          "ref": "39d80803-875c-4bf3-9cde-ce097bd497e9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cceabfd1-d242-44ef-a25c-6ad0e1f9b1e8"
        },
        "item": {
          "id": "e751bfb5-4600-4647-b2e8-76f5ea5e5ffe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4b588d98-79f3-4e52-b3fd-8a9cf3919cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523a323f-3075-41f2-a66e-6d2367d3b62d",
        "cursor": {
          "ref": "0d2cb061-b2c4-43bf-94cd-21e76e4cda7c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c274e67-7aec-4cba-b69b-edb4bef0479e"
        },
        "item": {
          "id": "523a323f-3075-41f2-a66e-6d2367d3b62d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3ebf0650-cc97-4c85-8e31-8736bdfc6e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ee561f-e214-474d-8b17-1c2370d83f52",
        "cursor": {
          "ref": "84f095ae-63f3-459c-a0d5-d40823a1b147",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "023ce607-7387-4b03-bb8d-3a5fa83ccdec"
        },
        "item": {
          "id": "e3ee561f-e214-474d-8b17-1c2370d83f52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9c929330-fb95-47d2-a093-5d4dcfb1a90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f3d92-e54d-4f23-a8c5-391d31ccac44",
        "cursor": {
          "ref": "d228f6d4-3920-4d46-bae5-82437e2ad7b4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f8833a4b-f2b4-44aa-a117-dfbcfa730a8a"
        },
        "item": {
          "id": "c49f3d92-e54d-4f23-a8c5-391d31ccac44",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5fc90201-a9fc-4d42-87ee-5c3c139c692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb26080-99b7-48d3-8ede-62991b50067c",
        "cursor": {
          "ref": "bd40b092-6e96-4a54-ac7a-6972622fb3e4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cea34962-de88-4e5b-bff4-7fa0733eaafd"
        },
        "item": {
          "id": "fcb26080-99b7-48d3-8ede-62991b50067c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c54d3695-7574-438b-bb7b-5ae2842e0890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1c6ac0-a0ee-4954-a261-c3e3bceb86cf",
        "cursor": {
          "ref": "0df2e90a-bd3d-4430-85f5-e9e87288ea4f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "693b4501-76ad-4f37-9d60-41de0ee339d0"
        },
        "item": {
          "id": "0a1c6ac0-a0ee-4954-a261-c3e3bceb86cf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a7e3ec49-5f10-4813-882f-c7dd52a7bec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e60939b-0276-4acb-afea-b17c2a992bea",
        "cursor": {
          "ref": "2adcf327-883c-470e-84ec-d6706b903f3f",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1fdaf575-ec10-4756-ae18-df6869d767b9"
        },
        "item": {
          "id": "9e60939b-0276-4acb-afea-b17c2a992bea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c65bdf8-ca2a-4843-8dd6-79910bc48e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6c4a9d-d05a-4bd8-82cd-76f2fed68e26",
        "cursor": {
          "ref": "ce757ec5-1e3c-4d01-b2d6-c6499d292025",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb3f8054-4cf7-423e-bd58-4efb82e9324c"
        },
        "item": {
          "id": "1c6c4a9d-d05a-4bd8-82cd-76f2fed68e26",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "17a6ca00-1c62-44a3-8838-974cf53500ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65367375-72c9-4cb3-a3d1-9e1b58b6bc8e",
        "cursor": {
          "ref": "a96d499e-9349-44ea-8183-c7f8ddab899c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47876b83-5c86-42bc-b14e-17b365623c91"
        },
        "item": {
          "id": "65367375-72c9-4cb3-a3d1-9e1b58b6bc8e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3d3ff556-ae37-494b-b7e2-a1f4f25cc2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef5e56a-da27-4f91-9589-a256f0da1f31",
        "cursor": {
          "ref": "ff7e3008-65fe-4c12-86ee-05cb6a045ee2",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4f44941e-267d-4357-8520-45e044b923ef"
        },
        "item": {
          "id": "5ef5e56a-da27-4f91-9589-a256f0da1f31",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4092b0a4-3181-42ba-a2c6-35c1295e0b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25f8a83-82d6-462a-86dd-6882114dbcd4",
        "cursor": {
          "ref": "16e86b0e-7b97-4d0f-b0bc-f6074947800d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "afe2e2eb-84b4-49f2-bdfc-1fec634e25e2"
        },
        "item": {
          "id": "f25f8a83-82d6-462a-86dd-6882114dbcd4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "648189a5-79d5-4a2f-a52c-6f532cd92199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9736efa1-6363-41ff-a0eb-e105f80cdfaf",
        "cursor": {
          "ref": "a659fdd7-2090-472f-ba33-5af7d92ecb17",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6cdf476-7ca1-4dc5-bf31-3a2a58b8cf5f"
        },
        "item": {
          "id": "9736efa1-6363-41ff-a0eb-e105f80cdfaf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f60b1ac6-9eb3-43d8-99ca-4e78ac5cbca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed5ba4d-ca2d-4265-b8b7-ab7be00c4ad7",
        "cursor": {
          "ref": "dd77a355-c314-4401-b6f6-b52c2ce9e705",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f0d08946-7ea8-407d-a178-a1916e6de17c"
        },
        "item": {
          "id": "2ed5ba4d-ca2d-4265-b8b7-ab7be00c4ad7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1ef7e338-395d-4470-8f63-75d6c8ea2b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df2b62e-9019-4737-aca5-5ae28becbc80",
        "cursor": {
          "ref": "65933b26-b0bc-43bf-9dbb-8b0e5b3a6d46",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "156461c1-182b-464e-a59e-fa148f26b900"
        },
        "item": {
          "id": "1df2b62e-9019-4737-aca5-5ae28becbc80",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f56c054e-03d1-4632-b5af-e2ea8495610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45160b93-1fb9-45bd-929a-827daaf45a2f",
        "cursor": {
          "ref": "ac04d8c0-935c-48a4-8c93-169c373374f3",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e738a7b9-2777-40ac-b49c-7aa7a3758347"
        },
        "item": {
          "id": "45160b93-1fb9-45bd-929a-827daaf45a2f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "13e50eff-eac2-4793-818d-efcbdbd65bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7587846b-bea3-4dbf-ac7a-e553547113b1",
        "cursor": {
          "ref": "64c12966-43bf-44dd-8d18-be5eb31a73ec",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fa61a40a-3da5-489d-93a9-d7dcdca5d848"
        },
        "item": {
          "id": "7587846b-bea3-4dbf-ac7a-e553547113b1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f9002b45-3f6b-4938-b789-be237e257f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a3f133-b87f-46e4-88d1-94f1d371c417",
        "cursor": {
          "ref": "0ac8f42e-cf33-4f21-9d89-5305f1ffc85c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "37bd6f54-7b20-4a63-8737-cfc40bf21019"
        },
        "item": {
          "id": "f1a3f133-b87f-46e4-88d1-94f1d371c417",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b6ff745b-2301-4317-b500-8bdc1b72199f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d602cf-c863-46a7-bc2e-2a51c5675393",
        "cursor": {
          "ref": "546b0026-6211-4a96-9f17-7ea10d5f873c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "947f6215-e947-4080-901e-8dc02ec1d319"
        },
        "item": {
          "id": "b4d602cf-c863-46a7-bc2e-2a51c5675393",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8e375236-b8fe-40f8-a2c8-0e77e45e30a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3d4d02-7ea6-428c-b29f-994dcbcadfaa",
        "cursor": {
          "ref": "3860640a-5e49-4284-ba47-5484e6a6f6fa",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bb451bde-1c1c-486e-a052-e41ed25a971a"
        },
        "item": {
          "id": "8f3d4d02-7ea6-428c-b29f-994dcbcadfaa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "53aa4b2d-7511-46e2-a65a-0993bfd5af4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0047a2b0-4889-444d-b8e7-b28753b25bc4",
        "cursor": {
          "ref": "122edb84-70e4-4039-9174-2b8929ffa9b3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "881eb472-da5a-4d56-9c75-f6b8d35c1ef4"
        },
        "item": {
          "id": "0047a2b0-4889-444d-b8e7-b28753b25bc4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c8105cb5-25d7-4172-97f4-28ece4ed2add",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1556b3db-8c16-4974-826e-9a351464fde0",
        "cursor": {
          "ref": "559eedba-4544-415c-9f74-23e9f7816b94",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "80374356-4e5d-4d02-90dc-91f5f395230a"
        },
        "item": {
          "id": "1556b3db-8c16-4974-826e-9a351464fde0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "bafa696d-8dcd-40d5-a7ac-f511863afe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6245403-3c6f-490f-97cd-5a26a51505fa",
        "cursor": {
          "ref": "e4cdaa22-8ce7-45ca-a68f-0c0ca6b030a5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "21349ce2-ee5f-4d2d-bd15-2360b9d22e63"
        },
        "item": {
          "id": "f6245403-3c6f-490f-97cd-5a26a51505fa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2fe93d00-89ee-4f86-8a9d-a309e8b338ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42083058-4dd8-496f-8f28-7cd06355031a",
        "cursor": {
          "ref": "a9673062-97d6-4c6a-9447-f051f5d48449",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3e76b516-f188-4523-8bc9-7dc7b0cd6714"
        },
        "item": {
          "id": "42083058-4dd8-496f-8f28-7cd06355031a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a9f9e682-cc5b-4291-91bb-39b2516d381a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106ff5a3-a9bb-4338-a275-17732ec2f6ed",
        "cursor": {
          "ref": "27a2264a-a74b-4c82-95b0-2880ce8acadc",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "60cc9e9b-f1d4-4003-873a-c35ba26920ad"
        },
        "item": {
          "id": "106ff5a3-a9bb-4338-a275-17732ec2f6ed",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1cac47a6-f702-47f2-9a2d-547a0e4329cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45418c-6206-40d8-abec-ecec670e3a31",
        "cursor": {
          "ref": "b295a651-17ef-47d5-8aa8-065812f4d263",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2ec2289c-6935-43f4-a1ba-40511a3c3cdc"
        },
        "item": {
          "id": "7d45418c-6206-40d8-abec-ecec670e3a31",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d5e5f401-80de-4256-84db-ad4146ab06c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de9a275-a2f2-413e-9218-08973a6f3646",
        "cursor": {
          "ref": "eb721e41-66dd-4762-b4c1-6a3d3acfdf08",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c20ae6fa-05f1-44b8-b462-23a461e7fc0b"
        },
        "item": {
          "id": "9de9a275-a2f2-413e-9218-08973a6f3646",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d919c81f-af84-43a6-8c91-05ec59591052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a31dc0-7c37-4df3-b727-9af5927cd8c8",
        "cursor": {
          "ref": "1e6c431c-1284-466c-a9f6-e2c478e7f77f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1f969fbb-f295-4483-9d84-d18bab46a2ef"
        },
        "item": {
          "id": "20a31dc0-7c37-4df3-b727-9af5927cd8c8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "304ef335-6d7e-4943-af4a-e98ad2c6d2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8089a25-e2a1-456a-ba49-a14caae63d94",
        "cursor": {
          "ref": "6fb07931-5cb4-4903-9eb7-040d123fa985",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c2a31e8f-770c-4259-b178-7ae26a659bd8"
        },
        "item": {
          "id": "c8089a25-e2a1-456a-ba49-a14caae63d94",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ba996a35-0b62-4d18-851d-7a189126a27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99223c8-54f3-4b05-bd45-616c010c6983",
        "cursor": {
          "ref": "7e20ca84-300b-4a0e-8f9f-cc456bc876a9",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "528561af-538b-48cb-b2d8-b8dc6ecf239a"
        },
        "item": {
          "id": "b99223c8-54f3-4b05-bd45-616c010c6983",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e29ffba-bc7f-4390-85b7-cbb0ea083dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b26133-72e5-4083-9bca-33c80ebdfa81",
        "cursor": {
          "ref": "899d35ee-a627-455f-b319-791eccf2054b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ad6d3fc4-6252-4d0b-88af-339489e8afa7"
        },
        "item": {
          "id": "69b26133-72e5-4083-9bca-33c80ebdfa81",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b1aea254-98aa-4039-a57f-17d3dc8821cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33a08ef-1a0d-4e68-bcc8-26e05b3113f2",
        "cursor": {
          "ref": "fca93c3c-a202-444a-9047-69abc5192bce",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "14a7e354-a16a-44c7-8ada-693ef9dea49a"
        },
        "item": {
          "id": "b33a08ef-1a0d-4e68-bcc8-26e05b3113f2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9077b8f1-7326-46b9-82dc-5ba2b52dee5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05251be5-31f6-42e3-bf01-b8781fbc64b3",
        "cursor": {
          "ref": "4f731a6f-9806-4cb2-a093-47ae4892c7c5",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2fea4288-70aa-489a-a991-e8ca6c5a1015"
        },
        "item": {
          "id": "05251be5-31f6-42e3-bf01-b8781fbc64b3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "87e30a31-1dd4-445d-9aa0-fd851bfb1493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0f91f-c42b-4be6-9c32-88f8fb601ed3",
        "cursor": {
          "ref": "8c621dad-9975-406a-a507-480f36743aec",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "31360e50-a2e5-4a7c-96e2-32a7b5a0ff4d"
        },
        "item": {
          "id": "fde0f91f-c42b-4be6-9c32-88f8fb601ed3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d7b551f-6419-486a-b288-ce39c752cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac32c65f-bfb7-4505-bca3-bfbe7d66cd09",
        "cursor": {
          "ref": "6e9ee0ef-bc60-4ba8-b4a6-a76cc1be8dac",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "94667a52-7e3d-40cf-97de-bc15489da026"
        },
        "item": {
          "id": "ac32c65f-bfb7-4505-bca3-bfbe7d66cd09",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "faa1c0e6-460b-4e73-b192-0cfd0e2e0707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1d6ec5-c9d0-4243-817e-4289443e12fe",
        "cursor": {
          "ref": "f2a1d600-f2fe-4d1c-979c-753ed3f22877",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba062124-cab4-495c-9c17-ae5b8c003429"
        },
        "item": {
          "id": "6e1d6ec5-c9d0-4243-817e-4289443e12fe",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "92d4ebb3-fd85-4049-9f7a-61ca7e713e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0118f8-5c69-4b48-bdcf-9895d6d5e4c1",
        "cursor": {
          "ref": "738bc93f-7106-4663-a420-b8bfdf15b218",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a86fd14a-e46c-48d3-96d5-179607c17912"
        },
        "item": {
          "id": "ad0118f8-5c69-4b48-bdcf-9895d6d5e4c1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d855d4d9-7f8e-4c05-b541-b98eec4449dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a545366-3269-46ca-8a13-0566d3d4ff12",
        "cursor": {
          "ref": "f3c963d0-7e76-4138-88a3-7f2c6de8378c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec5b9483-97ac-4599-9912-d95806a4c9cb"
        },
        "item": {
          "id": "4a545366-3269-46ca-8a13-0566d3d4ff12",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "14f87b35-77f1-4b58-b620-f51ce45f6ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f02e7f-e650-4989-a958-a08514a40d60",
        "cursor": {
          "ref": "e9a64db7-4bc2-42d2-b4ca-de68e8a0a189",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d32a42a2-d149-4ff5-92a9-6aa2f138532d"
        },
        "item": {
          "id": "a1f02e7f-e650-4989-a958-a08514a40d60",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "00b85597-e80d-484f-851c-349f571b8793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240d796d-e8bd-4409-937d-205914b44ffc",
        "cursor": {
          "ref": "2c71caff-9071-48f6-a91f-8647f09ae67c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d6f506ed-dd6f-4984-afaa-d7ddd816c5d0"
        },
        "item": {
          "id": "240d796d-e8bd-4409-937d-205914b44ffc",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "04586f42-43e7-4285-934e-c4defef13270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627f9b7-337e-4d0e-a6c0-79148314b7ab",
        "cursor": {
          "ref": "9d75d03e-a5cc-4e98-8eea-bc6c71c47219",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bba45d85-5ffb-425c-95bb-9f8fc866eac2"
        },
        "item": {
          "id": "b627f9b7-337e-4d0e-a6c0-79148314b7ab",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "73bbb483-1484-4edd-bdfc-f1046a024b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac39ec7-f04c-4b16-af37-3808a8c406de",
        "cursor": {
          "ref": "45ff2643-460c-4045-8dfb-7f3ce730e859",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "122307cc-f2ba-4b41-bc05-8740be9dc91b"
        },
        "item": {
          "id": "1ac39ec7-f04c-4b16-af37-3808a8c406de",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4186587b-1fc8-41f5-b419-50d4c75b50f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78608e1-cb02-44ff-a1c1-96583e4ea856",
        "cursor": {
          "ref": "c764a132-4e9c-4dc7-90ba-963df5b79b17",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4cc44d99-a5ab-4209-9002-319dddef75bb"
        },
        "item": {
          "id": "a78608e1-cb02-44ff-a1c1-96583e4ea856",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2c0e8db-391a-45a1-ae65-e802d0643286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f3b1d4-e1d3-432a-9fc6-027912b0a1be",
        "cursor": {
          "ref": "cbd56cd9-514a-426b-aaef-b57374b07eb8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a132d754-a4ef-4997-8d08-432f83dad47c"
        },
        "item": {
          "id": "b9f3b1d4-e1d3-432a-9fc6-027912b0a1be",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "10847d52-8c5b-4fba-8fb8-d8b1ea5da64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59826624-acca-4b2d-916b-107e475e3df8",
        "cursor": {
          "ref": "3f7700e4-798f-4d58-96d7-5862db17b289",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b6d52494-74ab-4198-95bb-67dccf97c687"
        },
        "item": {
          "id": "59826624-acca-4b2d-916b-107e475e3df8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ead45856-a27e-434e-9e09-7e6353ce85bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91e6bd8-b5ef-45f4-9cbc-95e7c393cb12",
        "cursor": {
          "ref": "c6b7a8e1-56ae-4197-a992-775aee615fdb",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9d8bbd94-9c2f-47af-b27e-07fdb6a4b3ef"
        },
        "item": {
          "id": "e91e6bd8-b5ef-45f4-9cbc-95e7c393cb12",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "82ec2f20-85b3-406c-973d-081d01735053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08da9624-f7ef-4dc9-86c7-c465a5be696f",
        "cursor": {
          "ref": "d594de9a-3168-456c-b2a1-922abc267d65",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51f6e28f-9fce-4500-a989-b03b8b3b825a"
        },
        "item": {
          "id": "08da9624-f7ef-4dc9-86c7-c465a5be696f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "08b53ed4-5227-471f-b310-a0855ddddf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ff46f7-5f03-4bf9-bce9-f35ff6f9865d",
        "cursor": {
          "ref": "589d533d-e8a6-42ee-921a-59ba032a9b1c",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "34aed14a-346d-473d-a031-916cd278c17f"
        },
        "item": {
          "id": "c7ff46f7-5f03-4bf9-bce9-f35ff6f9865d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b97bdcea-c42d-4d28-9f54-b78d48c75307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac41be8-4c52-4449-b1c4-58ba34cd789b",
        "cursor": {
          "ref": "40d7dbb8-be1c-4de1-a211-0f08b3b06956",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c27c45ba-8a9a-47dc-b323-060866a83864"
        },
        "item": {
          "id": "aac41be8-4c52-4449-b1c4-58ba34cd789b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "604a611d-c93b-47b4-b8ba-af8a4084efc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980cdc32-9892-41e5-bd5a-b8ebc3e6b344",
        "cursor": {
          "ref": "150373bc-4ce0-4cb8-8ad9-a121d14bebbe",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "81ab05c9-cad5-4472-b035-449bec63c015"
        },
        "item": {
          "id": "980cdc32-9892-41e5-bd5a-b8ebc3e6b344",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2d19c310-ce49-4496-9e07-d130f844afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0b101-cd06-4749-9e49-ffde4363a168",
        "cursor": {
          "ref": "e46e3cef-7a3a-4e74-b773-4a44dffe3adf",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f50c0db5-76c0-4c5d-bd1f-e648961eff53"
        },
        "item": {
          "id": "5ac0b101-cd06-4749-9e49-ffde4363a168",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8c89c592-3805-4c8e-9ca6-e7cca59668cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35718aba-4e08-4dc3-99ea-86a4c075ce0c",
        "cursor": {
          "ref": "3bea6e02-bccb-4ffe-91e6-cb7938263758",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "787e325b-4cb0-4b6f-baf8-ebfa6808ba3f"
        },
        "item": {
          "id": "35718aba-4e08-4dc3-99ea-86a4c075ce0c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "18bf7dc4-2b8f-4891-a900-7d287fb19965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6029ae-c849-4702-ac54-20977ab62f4f",
        "cursor": {
          "ref": "74a8428a-2c3b-4baf-b960-98b311eb996d",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b053f49f-9d25-4bd8-9aea-c1465b0d6cb1"
        },
        "item": {
          "id": "8f6029ae-c849-4702-ac54-20977ab62f4f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a8cb284c-8340-44d2-9eba-982ad706867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c5be51-ebcd-4750-a278-217a78a365f5",
        "cursor": {
          "ref": "c2726b61-d8fc-4145-b7ca-8cb3ec5f16c6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "58cac847-7891-49c6-ba5e-826517ce80c7"
        },
        "item": {
          "id": "15c5be51-ebcd-4750-a278-217a78a365f5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "726d653a-2a56-4a06-8f30-701137306dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6dae5-b161-43f0-a4aa-3f8819723bf3",
        "cursor": {
          "ref": "bdd6d8ac-41df-43ad-b592-0a2a6064d137",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4ea72532-6e7f-48e9-8aae-b062f7b7f555"
        },
        "item": {
          "id": "72b6dae5-b161-43f0-a4aa-3f8819723bf3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "48365433-3811-438f-a14d-afd3918a38ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf765f57-aad4-4325-bc89-fe89ee2720b1",
        "cursor": {
          "ref": "ad4256f6-061f-4353-9aa4-10e4508eb7b5",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2c32ab2a-3f4b-4577-85a8-80af6cc9e88b"
        },
        "item": {
          "id": "cf765f57-aad4-4325-bc89-fe89ee2720b1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f575cc3e-9221-4fba-b784-8c863e3e0f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45edf003-8148-4d39-b7eb-ec9d37682924",
        "cursor": {
          "ref": "5f58a171-3e8b-4f6f-85c6-7c5bea6d56f4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4a461cf-885a-4ebe-b0f9-e40c5787c54c"
        },
        "item": {
          "id": "45edf003-8148-4d39-b7eb-ec9d37682924",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f75a731b-5984-45ac-84c2-acec4f194ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b09e3d0-6760-4408-ac58-74d50a39ea53",
        "cursor": {
          "ref": "88e7808b-1993-410e-ab0f-e62d2b66ea15",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b6c7a8a2-175b-468b-a2f2-48b880b0b164"
        },
        "item": {
          "id": "6b09e3d0-6760-4408-ac58-74d50a39ea53",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "22d88a76-86b4-4d62-91ca-aae40153a977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6487ecf5-e5bb-407e-94a5-b2c47b17b283",
        "cursor": {
          "ref": "efbd5c2a-ec8c-474e-b90d-25a26d8b34a6",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a5f97bf9-ddbf-4f7a-a20e-e0d2f3575e97"
        },
        "item": {
          "id": "6487ecf5-e5bb-407e-94a5-b2c47b17b283",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "96624fe3-7a0b-4b6f-8c2e-093eeff54fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02fd75-f8d0-4224-b3c7-3f4e098ef6a8",
        "cursor": {
          "ref": "041672bf-da65-4e66-9043-e8b351c69259",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "89b533e5-659c-4f3e-a766-51ecf389acc0"
        },
        "item": {
          "id": "2b02fd75-f8d0-4224-b3c7-3f4e098ef6a8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "833e5539-ccaa-42a1-85af-b33a1128a3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bf3c7d-c355-4ae2-876a-422b9455469f",
        "cursor": {
          "ref": "fe67b7d4-e678-4dd5-b22b-da1e4069d101",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4d681572-12be-48f4-adab-787e8f8fb16b"
        },
        "item": {
          "id": "75bf3c7d-c355-4ae2-876a-422b9455469f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3f678a3d-ba94-498f-9cdf-01eb8fac5435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c1ddd-4565-485e-af74-da484e61a536",
        "cursor": {
          "ref": "beea63a4-7fd9-4070-9dd0-8a12ed74a9eb",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6f703b01-3a37-4da4-b133-3b36e76bf813"
        },
        "item": {
          "id": "711c1ddd-4565-485e-af74-da484e61a536",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6088b6f0-8c8c-4677-895f-735602568d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f5a9f0-dd78-48f5-8785-1e41b2f7d9ed",
        "cursor": {
          "ref": "678b280d-87c6-4f33-92e6-637b1878ac99",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9b78ac1b-9263-44b1-bd34-1ee3dd079924"
        },
        "item": {
          "id": "10f5a9f0-dd78-48f5-8785-1e41b2f7d9ed",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bc0d2c33-644b-4918-a195-177bdc5bda26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ca0163-44be-48d1-a6c6-a3cb5a811d49",
        "cursor": {
          "ref": "08f6a32b-5b20-4477-ac93-1f392509267e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e30119e-ac11-49a6-b592-59f63ec5a525"
        },
        "item": {
          "id": "f7ca0163-44be-48d1-a6c6-a3cb5a811d49",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb68f91b-1008-4830-86b6-82dbfa28cdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986dbe6-d4c3-4165-9e01-40dfc4dbc422",
        "cursor": {
          "ref": "1dfc58e6-9fb1-42a5-bb06-33836fcee3e9",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b90e786b-5c5a-41c3-9992-05b338d7921f"
        },
        "item": {
          "id": "7986dbe6-d4c3-4165-9e01-40dfc4dbc422",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c4fa3706-e652-4135-87bf-d40efe31ac1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf7763e-a60e-48c2-bec0-4adfd189bb18",
        "cursor": {
          "ref": "3077da18-c71a-4d91-84eb-8b9d9de6bf46",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56215a1d-851d-41d0-9417-bcdcd0decb84"
        },
        "item": {
          "id": "dcf7763e-a60e-48c2-bec0-4adfd189bb18",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e9fda557-8cc9-4ef0-8653-6e5aef58d015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aab635a-13cf-4f7d-ba97-f0e0f7e2fd3e",
        "cursor": {
          "ref": "593b3928-e5f6-422b-b798-164677714a11",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3ac02b91-96b9-4bc7-9267-cbaebe47373a"
        },
        "item": {
          "id": "7aab635a-13cf-4f7d-ba97-f0e0f7e2fd3e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cb6316f1-6654-4a44-82b4-94363eaff729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0639c-3073-409e-a4e3-e4125779480d",
        "cursor": {
          "ref": "a998452a-0afc-412c-9855-c6dc4da1ce1f",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "95ccca6c-0f49-4ebd-9a77-3b2cd6766b11"
        },
        "item": {
          "id": "d5f0639c-3073-409e-a4e3-e4125779480d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "40682c96-7b0e-4712-8f2d-b56f64c08424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a71504-b57f-4baf-8890-5dd72a776136",
        "cursor": {
          "ref": "6cf1ee7a-d207-4e5c-9185-072951bd5bd0",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "97f24150-7e47-42ed-9ab2-2ecd333ee72d"
        },
        "item": {
          "id": "80a71504-b57f-4baf-8890-5dd72a776136",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0a8cd725-1da8-4308-a9f0-f0db27050cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5898c896-6878-44f3-a8e9-cf5d9eb96874",
        "cursor": {
          "ref": "761cb96b-7892-4538-a3e6-ec07b72c3315",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d6370622-35ef-4fdc-822f-832f1d187bde"
        },
        "item": {
          "id": "5898c896-6878-44f3-a8e9-cf5d9eb96874",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "93cb7deb-e0f1-4444-b13e-76fef94d6edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff33555a-3147-498e-b6c1-32270f1a245d",
        "cursor": {
          "ref": "625cfbbb-c1ac-4b2d-b192-d6e934c1162f",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de74aa61-ee4a-46ae-adcc-b74c9467c57a"
        },
        "item": {
          "id": "ff33555a-3147-498e-b6c1-32270f1a245d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7cbba206-a8ac-42e5-ba21-962e0ff4313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d373e4-9430-4a31-b4e9-284550554794",
        "cursor": {
          "ref": "d4faf626-bdf3-4caa-85bf-f101513cf920",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e4b4abee-3677-4888-827e-632ccc777d9e"
        },
        "item": {
          "id": "55d373e4-9430-4a31-b4e9-284550554794",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "839ebacb-0cc0-4f3c-9682-524327cd2721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4934091-d3e9-420a-98a6-5d2469028093",
        "cursor": {
          "ref": "32fa237c-20a3-4be4-bff5-5db947865218",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9f931b8a-96c9-48ef-91c9-f1f23061c511"
        },
        "item": {
          "id": "e4934091-d3e9-420a-98a6-5d2469028093",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e1fa9eed-5842-45b5-a8d1-3956eaad854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed986f39-e283-4985-989c-2181ee77c97e",
        "cursor": {
          "ref": "f13ed40a-0f1e-44fd-9b1f-d6af5d6154e4",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0aafe8ed-5459-4dd8-97e9-60ac78cbed5e"
        },
        "item": {
          "id": "ed986f39-e283-4985-989c-2181ee77c97e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "18d41c46-036a-4e36-821f-509e12345e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bd023e-c3da-4acc-9b17-1072a5df196e",
        "cursor": {
          "ref": "1efc6cec-7828-45f0-b302-223242504b05",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "25d94d12-cd85-4782-929a-9af72e6a0482"
        },
        "item": {
          "id": "24bd023e-c3da-4acc-9b17-1072a5df196e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1b3ff38a-f20a-4c5d-9145-0599ec2c62bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57444cc-2c2c-426a-9ccd-dec46394879a",
        "cursor": {
          "ref": "4ebfb5cf-8e15-4dac-9001-73068ad65e1b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "61931c1e-c931-40d6-929f-3fa1c5096018"
        },
        "item": {
          "id": "f57444cc-2c2c-426a-9ccd-dec46394879a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b91a0367-51aa-4c85-917b-9cff024981f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134de973-8ac9-4b4a-aa27-c43a22c339ba",
        "cursor": {
          "ref": "aae36967-fdb3-4fde-bfed-f45688339832",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8ad33cea-27e6-4009-a209-1b14643a5e44"
        },
        "item": {
          "id": "134de973-8ac9-4b4a-aa27-c43a22c339ba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f327d5ed-5a1a-4d52-aad5-41a8bfb96db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be128307-96ce-45bf-9442-004ca2988f49",
        "cursor": {
          "ref": "a6139d60-d90d-4b4d-806c-edfe37028b87",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4d067cd2-855a-4b9f-b3c6-04df355266e6"
        },
        "item": {
          "id": "be128307-96ce-45bf-9442-004ca2988f49",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "29747fbd-15e3-4097-bd84-3ff16e26565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5282ccc4-cb23-4d1f-849a-48ab19d076e1",
        "cursor": {
          "ref": "192cb8be-f28d-4db2-812f-195c77ff5886",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5abbe60d-c408-47e6-8f75-a896855069e9"
        },
        "item": {
          "id": "5282ccc4-cb23-4d1f-849a-48ab19d076e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0e228fdc-f839-4314-b77f-6f82f3668650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ca6df9-658e-449d-a161-79eb5beb27e3",
        "cursor": {
          "ref": "40d47d7d-d448-4b29-a075-b2682c342c35",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4713e0cc-ee2e-4084-999d-15d14a52c620"
        },
        "item": {
          "id": "d4ca6df9-658e-449d-a161-79eb5beb27e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "85252217-c4a2-44a9-b4dd-c127657052be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4440fce0-c100-4802-928d-586e173dee65",
        "cursor": {
          "ref": "df0fdb69-8d1f-4c47-a2a2-b158b4d37956",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8a750614-6327-488e-a992-3af85b79bf68"
        },
        "item": {
          "id": "4440fce0-c100-4802-928d-586e173dee65",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fb2c0b5c-cdc5-402a-9c62-1a10559e3045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6daa26-107c-49d1-b8cf-dc74663c05b6",
        "cursor": {
          "ref": "37eff248-0165-4acb-a6d2-bdf1b3191b50",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4e863cca-e0f9-4ac9-bd60-e03f33b7e2f1"
        },
        "item": {
          "id": "5a6daa26-107c-49d1-b8cf-dc74663c05b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13985051-5e8d-4a2f-b0e1-23051def78f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53007c3-03a1-462b-9ab4-b72494240468",
        "cursor": {
          "ref": "6b43274d-8bd2-4c1c-ad12-bd395bcce9d2",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "68d9f8c6-86a8-43f5-8917-d02e85240ac3"
        },
        "item": {
          "id": "f53007c3-03a1-462b-9ab4-b72494240468",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "584396bd-021e-49fd-9c93-4d233fcb9edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5590ff5-61af-492c-8c2a-1a33d464179e",
        "cursor": {
          "ref": "10d3fc8c-1da1-4399-968b-fd3f06d4e4b8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e75e94fe-dde5-449f-8578-f43fb4c06996"
        },
        "item": {
          "id": "a5590ff5-61af-492c-8c2a-1a33d464179e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "69241a87-446a-4913-b674-59c7d54e52eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a432c589-b80f-4ddb-9d58-ee938a3c066d",
        "cursor": {
          "ref": "b91764c5-2dab-44e7-a321-e3ed814d9ead",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ed1ef8cb-5778-460a-85c2-f6141e327e7a"
        },
        "item": {
          "id": "a432c589-b80f-4ddb-9d58-ee938a3c066d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78aa1dd4-00d6-459a-ae18-93ac3ac350e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34561ed9-0207-42d8-84a2-cacd7e3b35c3",
        "cursor": {
          "ref": "67c89583-1034-4185-b9b8-2523d3bc572a",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed1e79f7-6a09-494d-9fb9-d09093bf04e2"
        },
        "item": {
          "id": "34561ed9-0207-42d8-84a2-cacd7e3b35c3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "08e4ccc3-248e-4ece-b151-8690d8ea6087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44a4cae-c120-401f-a643-762f5539c692",
        "cursor": {
          "ref": "370081e5-4c36-4d40-a4d2-9952187f0985",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "37d58c0f-9328-4111-9b09-2dd2d8c18ac1"
        },
        "item": {
          "id": "c44a4cae-c120-401f-a643-762f5539c692",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "65b16d1d-fe40-4369-a9c3-46890780614a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22483d2-f441-46a3-a346-5bbb5cbfb09f",
        "cursor": {
          "ref": "8754eec4-c543-4026-ae2a-ef12cea467de",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d859cc3-5581-48af-a48c-fabe2b4e162c"
        },
        "item": {
          "id": "f22483d2-f441-46a3-a346-5bbb5cbfb09f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "41039205-56ad-4a35-a04f-f0af04654cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4375cee-b1bb-4cca-9ddf-b3e5282a5e97",
        "cursor": {
          "ref": "2005136a-8819-42a2-a5e4-7cb62c0c23ac",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f2e6c40f-7854-4dd5-b56d-0b80b66bb664"
        },
        "item": {
          "id": "d4375cee-b1bb-4cca-9ddf-b3e5282a5e97",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "708d76d1-4967-4953-bb54-a1f261c61ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b1169c-2de7-447e-94bd-0cd22308334c",
        "cursor": {
          "ref": "d9960377-bd8d-43d5-a2ef-1c44dd7f6bdf",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "291463e0-752f-42a4-b27a-c1c0fc18b4d4"
        },
        "item": {
          "id": "d9b1169c-2de7-447e-94bd-0cd22308334c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "febb5c8a-9e58-41b2-9d7c-722108c8b65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09085ac-f51f-4d3e-b087-f74b30bebbe1",
        "cursor": {
          "ref": "b68ec03f-0119-41ae-8e9b-e3e71eae2874",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97fd82f2-9381-4d28-a213-e7814f50c6c7"
        },
        "item": {
          "id": "e09085ac-f51f-4d3e-b087-f74b30bebbe1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c345e54c-3d03-485b-bc62-4b798caa7d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f7465f-7f99-4fd1-a9d0-ae9114e8cffa",
        "cursor": {
          "ref": "44f1a7b8-0de9-449b-89a5-007f4f3b1cad",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b63afce-90a1-4774-be2d-32099920085f"
        },
        "item": {
          "id": "71f7465f-7f99-4fd1-a9d0-ae9114e8cffa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e6d99050-7ab5-4836-a9b3-35b762264341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbe0c60-fa04-43b6-bb08-6b6f9c41bed2",
        "cursor": {
          "ref": "e777f6d5-25f9-4b4e-a33c-f6d6f5638844",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "216a9776-318c-41dd-8891-493a75338536"
        },
        "item": {
          "id": "2cbe0c60-fa04-43b6-bb08-6b6f9c41bed2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7336c215-a1b5-4275-a85f-e6ae428f3454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f0267e-a994-4a62-b6ad-28198f881c3e",
        "cursor": {
          "ref": "d0936397-f0b5-4b94-a18d-00cd4ba45ba5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5ad20594-cb55-47d4-ad76-25f04dc2a38d"
        },
        "item": {
          "id": "71f0267e-a994-4a62-b6ad-28198f881c3e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c4dc3c1c-b6f9-4c76-9aa5-4f85eb652921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08d3701-6899-48a1-b5a9-631030dba5fd",
        "cursor": {
          "ref": "3b09934d-2891-49ab-81aa-6abda5f82b26",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "76b60ac9-b9d3-4712-b8f5-157d6050fed4"
        },
        "item": {
          "id": "d08d3701-6899-48a1-b5a9-631030dba5fd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c0c32cbd-6aa7-4da4-8614-5a6c50e3a271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166b1da5-f22f-49cc-b41e-f16e6a179a8a",
        "cursor": {
          "ref": "aa55c73d-aaca-4626-a1ee-4ac9ce331d61",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "324d75a2-8bbf-480a-a179-785892b54150"
        },
        "item": {
          "id": "166b1da5-f22f-49cc-b41e-f16e6a179a8a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4814fcb8-c617-4359-945b-addb54fece74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaf3d19-a540-4794-a5ea-63d49ff73de5",
        "cursor": {
          "ref": "664f2090-b9f4-4bbc-9715-57c5d413c103",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "20003061-6c27-4c1f-92eb-cf3c1a17d6b8"
        },
        "item": {
          "id": "eaaf3d19-a540-4794-a5ea-63d49ff73de5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6419e819-0466-4304-979f-f5249f84c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c0657a-1450-4918-8c0f-ab1aa61955e2",
        "cursor": {
          "ref": "4b41f03a-e820-4196-a510-142499abb46a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9e736d5b-07e9-40d7-8c96-f2dd0dc59865"
        },
        "item": {
          "id": "b2c0657a-1450-4918-8c0f-ab1aa61955e2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ea876863-bbea-4924-91de-c44040ad1713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfca2442-6982-4174-83a8-8c015575ab1f",
        "cursor": {
          "ref": "4690f89f-fd08-4b6b-8b3b-313251dc915a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7b897f71-1d9c-4a06-a73f-5bf332bad1e0"
        },
        "item": {
          "id": "bfca2442-6982-4174-83a8-8c015575ab1f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "87c5efc5-ef55-4b3f-b2b1-51b93f878419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e25d78-852f-49a5-8db0-ad945453a6da",
        "cursor": {
          "ref": "137db57a-e679-44a6-ae64-fcb33deba58a",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "efb33ce7-6731-4b64-b50b-0b9b6917c0ee"
        },
        "item": {
          "id": "31e25d78-852f-49a5-8db0-ad945453a6da",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "addbe814-f5a6-42b1-b796-3fbe8c9c6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e470ab-bdd9-46a3-937f-bdc7e3836fa8",
        "cursor": {
          "ref": "a8a44352-8c73-4a5e-9e7d-e7a94252c8ad",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8dc83ae8-b1ee-43af-b3d8-afc3107fdd9c"
        },
        "item": {
          "id": "f1e470ab-bdd9-46a3-937f-bdc7e3836fa8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9a0fbecd-9ac1-4b5c-8fd8-4a6db5d80ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef0136-8db0-4389-b013-0f961a9b8251",
        "cursor": {
          "ref": "615f8a37-5934-44b7-bb56-bbed5349c002",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ec0171c6-e834-4b4f-b2be-1150adc18359"
        },
        "item": {
          "id": "7bef0136-8db0-4389-b013-0f961a9b8251",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "930b958d-3018-48e0-8e76-fa3290edd258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a18329-5eae-447f-8809-26a4e72533d6",
        "cursor": {
          "ref": "5202e406-66a5-4289-aab8-a1db6565bfee",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "32a9c566-6980-4709-a0d3-3b9c7cbcfe9d"
        },
        "item": {
          "id": "72a18329-5eae-447f-8809-26a4e72533d6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8781af4b-b905-4d15-84b1-cca155e18fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f7903-d853-4b6e-91ef-47fb4ce48c4c",
        "cursor": {
          "ref": "05834b47-2914-4bf0-a473-3c4756386f6b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "fb0e6b3a-7352-44a8-9d7d-5ae66c9b2a26"
        },
        "item": {
          "id": "cc0f7903-d853-4b6e-91ef-47fb4ce48c4c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4e0bb55d-47db-47d8-8a59-94e91f502bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f40f73-bd17-400a-813c-b7a836514908",
        "cursor": {
          "ref": "304037d1-8366-478c-be5c-b023fb602b8a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "18881a07-5b0e-4c2c-9ffc-e5e7d3aac500"
        },
        "item": {
          "id": "45f40f73-bd17-400a-813c-b7a836514908",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3eacf147-a28d-489d-8553-51c2afb2feae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7ea9a-0d95-4de9-8d07-e7c345ae115d",
        "cursor": {
          "ref": "3288fa3f-26a3-4c20-bc86-0aa1e7296fc5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a962fd7f-de04-45ea-bede-b009dd5c9517"
        },
        "item": {
          "id": "3ea7ea9a-0d95-4de9-8d07-e7c345ae115d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b783e749-d810-4d20-8176-74dabbfd94c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f081357-dc28-4fd2-980f-3e4e9bfee250",
        "cursor": {
          "ref": "be8ed952-1300-4515-acd4-41e32d1a5265",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ba7e0a5c-9610-456b-85cc-8f6aa8ce59b7"
        },
        "item": {
          "id": "1f081357-dc28-4fd2-980f-3e4e9bfee250",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ec3eadde-2c21-4c13-8df3-a4595c777b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b2e753-c3ef-4c95-b114-2409b18e3a9f",
        "cursor": {
          "ref": "43da02de-e896-409b-8e61-111220dabb02",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "555b70de-4498-42a5-b1fd-af6c1b09b815"
        },
        "item": {
          "id": "45b2e753-c3ef-4c95-b114-2409b18e3a9f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ee7703a0-3035-4827-a069-84f77a8b8b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef89a0-26e0-4e6b-97fe-5e913836e526",
        "cursor": {
          "ref": "123339fd-261f-4272-942f-42371d32af19",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ae772ee1-77df-4f1a-96fa-51a5ebb1790d"
        },
        "item": {
          "id": "c2ef89a0-26e0-4e6b-97fe-5e913836e526",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f9d0c992-b2c4-45fb-8452-76dcecf2b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2814268-7881-43d3-b154-d1b1e17e723f",
        "cursor": {
          "ref": "ebaab040-9513-4f00-9496-56a598b7c29c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "381e6cc0-e9b7-41ee-b436-8f1998fb0dec"
        },
        "item": {
          "id": "c2814268-7881-43d3-b154-d1b1e17e723f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d6dfd02b-5f8a-459d-bca5-05c7c8b24119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9e862d-cb2b-4c75-adcf-bf8912b93422",
        "cursor": {
          "ref": "f43196e3-b09a-4280-a484-808ea873d1b8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d6bde5f4-a3e4-4d59-acc3-4f4008b9e2cd"
        },
        "item": {
          "id": "cd9e862d-cb2b-4c75-adcf-bf8912b93422",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3aa551ff-b284-4b27-b3b2-b8f804762feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e14bd96-ddb0-4853-9704-5117b8dc7e6b",
        "cursor": {
          "ref": "a0569ff1-9579-4936-9276-1c27893f2e44",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5b6ffd00-76e5-45a3-a819-15d47558cc10"
        },
        "item": {
          "id": "4e14bd96-ddb0-4853-9704-5117b8dc7e6b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "bf17d564-a39f-4e88-b758-bda76e497548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b582ecfb-ffd2-4458-bb9b-a3dcdbd4d267",
        "cursor": {
          "ref": "51fe767c-e61a-4843-87dd-b83584d61e25",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d184af40-245d-4114-97f1-8d825d3b8d9c"
        },
        "item": {
          "id": "b582ecfb-ffd2-4458-bb9b-a3dcdbd4d267",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2815923b-3b7d-4019-90be-d0245023af5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e63425-e9c6-4d40-b152-b9c9864d6a4c",
        "cursor": {
          "ref": "e9a1a878-0742-484c-b9a3-87a0663194bf",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "ec585643-6349-429f-907d-31398c7974df"
        },
        "item": {
          "id": "79e63425-e9c6-4d40-b152-b9c9864d6a4c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0b534d76-a81b-4f7c-90c6-ba43fc9defb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bbc575-3d0c-459b-98c2-924245f25898",
        "cursor": {
          "ref": "56f43e6c-e771-4f1e-81b6-434a27ca38f3",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1b77d18c-bbd4-4a1b-8847-e87009b8b181"
        },
        "item": {
          "id": "56bbc575-3d0c-459b-98c2-924245f25898",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "731ce7cc-4455-4c4d-8efd-d7fca295de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d766534-88bf-418b-b311-97d148d48745",
        "cursor": {
          "ref": "aaf6a1f8-5e93-4a55-97e9-19e3952116e8",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0b047057-8c8e-48c8-baa0-2f5e9f18b8ac"
        },
        "item": {
          "id": "0d766534-88bf-418b-b311-97d148d48745",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b03f27bc-e14e-41b9-9470-adc4f470ec6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212280f6-6cd6-4455-98b1-0dea57125fa0",
        "cursor": {
          "ref": "f9ce4d03-291d-4776-b6fa-6fdef294cbdb",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f5afe1f5-ebe1-4434-b58c-18f21965e22d"
        },
        "item": {
          "id": "212280f6-6cd6-4455-98b1-0dea57125fa0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d11226d0-3ffc-4a94-8a85-9f0c4ce40bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334bf57-16a5-44bd-8616-6b85bb310306",
        "cursor": {
          "ref": "bab0a594-23a3-47df-ae07-35108ab491ac",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dde356ed-c0fa-41c6-922a-b52b689e7d57"
        },
        "item": {
          "id": "e334bf57-16a5-44bd-8616-6b85bb310306",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5be3a960-57c8-4184-ad03-565a2da34689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b707e00d-9bf6-424f-8538-cdc4c304a677",
        "cursor": {
          "ref": "93b5c914-4fbb-45a5-b569-34677213c04d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d039959e-ffed-4357-a529-86607c6595e2"
        },
        "item": {
          "id": "b707e00d-9bf6-424f-8538-cdc4c304a677",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "420d2f84-3286-4ed4-9efa-d88a7ec8d8d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f938d13e-d054-48bc-98ff-0a859815acff",
        "cursor": {
          "ref": "10f61b3b-b05f-4c67-8db8-04baccaee93e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f4c389a3-af23-463a-8bf4-9836177a9a36"
        },
        "item": {
          "id": "f938d13e-d054-48bc-98ff-0a859815acff",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8b4579eb-ef81-4a3a-a82d-ac6d7b715ad7",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e121d546-e29b-46da-85fb-96548fe9fef1",
        "cursor": {
          "ref": "1317382b-5489-4d3b-980e-1540d92bd12d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e0d8ba2b-5693-4aba-b2f3-cf00328e7969"
        },
        "item": {
          "id": "e121d546-e29b-46da-85fb-96548fe9fef1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "074e6886-e783-45f3-bdc3-521259b262b9",
          "status": "OK",
          "code": 200,
          "responseTime": 1765,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74731950-7342-475d-8aeb-a402ce3b013d",
        "cursor": {
          "ref": "7f4f39f0-af6f-46bb-9b4b-e650a6daca67",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "cbcf2a5e-0164-4154-97f1-789faa4c42ee"
        },
        "item": {
          "id": "74731950-7342-475d-8aeb-a402ce3b013d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7a66a1ca-514d-4340-82fb-f83afc8d2927",
          "status": "OK",
          "code": 200,
          "responseTime": 1640,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf44a16-29db-4d3c-9752-f34fed3be769",
        "cursor": {
          "ref": "63f4a18c-6a50-40e7-a641-bde265e6c213",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "14f9c299-937f-43e6-bc22-b8da6f5e2a12"
        },
        "item": {
          "id": "7cf44a16-29db-4d3c-9752-f34fed3be769",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "db475d80-d7f7-4d60-977f-ddc880ad90ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf44a16-29db-4d3c-9752-f34fed3be769",
        "cursor": {
          "ref": "63f4a18c-6a50-40e7-a641-bde265e6c213",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "14f9c299-937f-43e6-bc22-b8da6f5e2a12"
        },
        "item": {
          "id": "7cf44a16-29db-4d3c-9752-f34fed3be769",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "db475d80-d7f7-4d60-977f-ddc880ad90ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9d3af7-4079-4539-8e64-61346256d478",
        "cursor": {
          "ref": "c6b1d341-bf53-40af-b781-05f3b51da00a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d71eb99b-7382-4565-81a9-d7e31dcfb800"
        },
        "item": {
          "id": "4a9d3af7-4079-4539-8e64-61346256d478",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32270629-670d-4a31-9da4-fdc852483ccc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de2b7b3-181a-4f76-9c07-b0c2ad6d35cd",
        "cursor": {
          "ref": "ef7c089f-c5eb-44dd-95a0-60e94d774167",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "42386af8-b708-469c-b034-659943e416ba"
        },
        "item": {
          "id": "7de2b7b3-181a-4f76-9c07-b0c2ad6d35cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5f696a4a-86e3-47dc-b024-d48bcf81bfa2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}