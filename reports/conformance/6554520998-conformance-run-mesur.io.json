{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6be4dc0-532d-4cae-96a6-c156167f19b5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2bb07c7d-b23d-4a7c-ad8f-8ee642a05977",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3e3875b-f5a2-46ce-adda-30c457f49c10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4742a143-f9d0-45b9-a070-2e5e4411ac28"
                }
              }
            ]
          },
          {
            "id": "0d470dc2-d210-419b-92e4-e2ed537c585b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae94b875-4246-4c99-8e9c-330c3dc85cdd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "671d5c4b-a913-426e-b484-a74eb080b49c"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "83103f16-f5d1-42f2-bce0-b67187b8900a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1c5d289-4e7d-4f20-9d81-b014187f5812",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d60a433f-9b99-407a-80d2-0d3b5e98b0ce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e027791f-5f90-4df4-95b8-20dc96178d84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "324d1057-0772-4d0f-9578-4eb3ebf1e697"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c1de707-2179-4261-9aab-0324e48c34cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18695540-c62e-4b8e-ba4f-ad7c180423fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93d161da-12e6-452f-9ec5-a55083bcbbd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76cfc155-cd80-4850-96aa-763f3a231a77"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81c40cd1-450b-4651-b7d9-38b57d075d05",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d0154538-97f8-4810-a107-59a1a037ee3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20fd136c-77e0-46c5-9204-722d82adecd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee942543-6672-4c55-b998-85ed9a169739"
            }
          }
        ]
      },
      {
        "id": "f6aac96e-ce31-4b35-ba70-4931b65b1d25",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7c90cf7e-1b44-467b-917f-c7093c6f9ec2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "110ff7b4-7ff4-4635-b72c-f514914f7c65",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10092bd6-3cb0-4f58-a0b4-3b77eca3c107",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6d8fa-6e88-41f5-927b-c5390d1af7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cd10f27-c7fc-466a-be14-14fde093d5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53228a9-66cc-43bd-8fff-4e84ea8936a9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ad46c-2172-41ed-8af4-0ed950f4985a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79db8a3a-a1b5-4b6f-9b4b-cefe3b8af6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b803f09c-3a67-444c-a1f7-313ad946e9e6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1066cff2-4373-4834-bc7f-8b971758a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4615587-10f9-45d2-9b58-9824d668d261"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0aacc599-ba35-4dad-889b-2b91dedfca46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18698322-7b8d-4437-ba39-d048763b7ad6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7b0211-8692-4ef5-9b44-975273382bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb075eea-2ad9-4ab3-a8d7-7e7c6bac0a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192f73f4-22ab-4e7c-8487-fa6a7d9ea575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552ca8ce-870d-4e92-ab12-577cf65890b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd1a729d-9aa4-42b5-b265-ba8166ac276a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81767469-23d9-4f68-b8ee-083386eea0a6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75c5224b-63c5-4052-b170-01a1e7a8d3cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e21f7ae1-f77d-4464-b2c1-ef49545f718e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f6dc3f69-aa36-424a-a223-8fb383de09d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0149eab3-5f76-4380-9516-383884aff1c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29bcc42d-0ce2-4f03-af97-039c9338b55c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d1c5145-012d-487a-ab38-eae43ce4f7db"
            }
          }
        ]
      },
      {
        "id": "3e2cbc24-54ec-4b39-b84e-641905c86084",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de0a9c46-030c-427a-b93a-ce47097c734f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fe043de-7d23-4e4f-93ab-e88fcc65383c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b3e1eaa1-3b6a-4377-a40f-5de549b9de0f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f23cac0-06df-4917-9560-4402e926e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee7e630-4586-447d-a9d7-c7e3576e6e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9056099-7ada-43e2-9d48-247eaa264605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0cf811d-f8d1-437e-a0e9-218a9a052332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f993fa7a-3166-47cd-8828-c5963afc16d2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994d2a13-8d82-4bee-865e-9e2ab680ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9abc841b-f65a-4c41-aa0a-38f128fda288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b74122-3bc3-4ae2-a63b-6e06001ed6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07fda65-7962-4495-84a3-0f2ad9ebe211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de428b2b-35ec-490f-aeba-c878451b5b93",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19217b15-39ad-4d1b-aefc-1273a5af5a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6b3b9b-45de-48c0-91e6-8ba2e7695bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4d96e9-bef3-4cca-a564-1f805cf88661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b877d412-f201-4923-8610-ca070a5bcc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fde4af-740e-45a3-852a-d33e39ed7726",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf4c126-90bd-4dd2-9d0e-789490224bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df2f30d5-1326-43c8-a286-1d59ce8d508e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90c8834-6395-4a49-85b3-6e23010caa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b6cea8-fd10-4e7f-988d-209cb38b2720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64272567-07b9-428c-bec6-0cc68b201b0f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85f1ba4-4c31-4d41-af44-2e37a5465aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f6ff82-87f4-4daf-b203-7b2ad907e97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ad42f0-8e58-49d8-9103-aeb7469813d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "131a9432-036a-4b6a-bcd2-7348460eb9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86373669-222b-45ec-911b-c7c690e10aa7",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bba2b5c-1a96-49eb-b028-87394a3aa8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208d2c8e-e785-47d0-889c-501f240c5f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5213037-8ef4-4fcc-b622-8f8d31b3909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "841a1cac-fe3a-4125-a288-5c5f20c44478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1effcb0-5ee1-499c-bbc5-250db6917134",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823937f0-29bc-452c-8fb0-44225469ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517c6130-894c-49c0-8151-0617a64b2e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27674cce-cc9c-4aba-a2d8-f7b7727f875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52c85047-1d95-4fc3-a673-80a9c897722c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d822f3b-97b3-4135-8236-463b01a228a7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b894579-c275-442b-a617-e5ce67e708b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e7786d8-ead3-4529-a1d6-a763a71b7624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c50d39-9a2e-4383-a1cd-8c4744af935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2e1285-cb6e-4565-a897-e9c51b041856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264a976e-35d7-447f-afca-2c720b4de4d5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7505e6b-e3c9-444d-95b8-f74fe7784dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50419af9-6caa-4ba2-9c92-96ca0f0dce93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0871d576-1057-4329-b65a-5ab9c4a81cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe9d848f-bb9a-4100-a9d4-508e67db1c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39518c1a-ad34-482a-aba7-f611855553dd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00fd41f-34de-48c4-962a-108c8af219a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978c6c53-9328-4157-9331-cc0840f455bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6aa8da-a222-4f4e-a307-351c7de3c0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98223986-06ec-4f45-ac90-e87e93bee2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426ee154-d7e2-418e-b4b5-46cf28e896b4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e160f3-47e4-49eb-8386-3b1e4ab0f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eebfc5-9d60-4fab-a30b-86f7286e414a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e4b667-23b1-4b2a-8335-547ea1d9ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ef85e10-8c80-4125-bbcb-a133ca90b2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8b98de-2f47-4a48-8770-efcf83d2a41f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c91f82-c0c0-4a33-a2e6-5f9401e29089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "540b6685-f0bb-4424-ae1f-affdde88a44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a2ff64-27ad-4994-a60f-52b38a904ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48bf110-5091-47b3-a4b4-26ea185fde6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45634756-331d-49eb-af4a-74e0c2cc46e1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a904dbd3-2924-4120-ae20-457cb34406a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be81c22e-bc95-4fda-9a19-c0ad8f6e68f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b3a221-5f87-4bbf-8636-e070782583f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e4e2db-ca65-472d-81b9-02e259ac70c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb756bfc-ec47-4950-9440-02ede6c7b203",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6095adc-f36b-488a-9139-46f367e31bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab12b3ad-6b6f-4920-82b9-051c5a11e59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e0cbe7-09fe-4c9c-833b-e492f5bfa5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34da4ab6-ec98-4e0d-8769-534bc7eaa481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bada18a-e2ca-4a3c-9873-d47c3f641381",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a382bf23-9490-460c-bd1c-3c676d9e66ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61c8215-162a-49c0-ac4e-f3a53cc01f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f9dc38-8ad9-45bd-9c52-ad9ff381db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ad44368-4f8f-4d7b-8518-d5a0c394ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8ffc06-6537-4702-aad8-27a7c7f38f6c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca316df-e748-4619-9d27-eaea1f5f5b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc44cd16-16db-4a4a-a9ff-2107241f2e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a8dfb4-b993-41ff-ad7b-2b335d24d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d6f58e8-e911-4fd5-b80b-b005f344b32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568f0489-c786-4d33-a2b7-562a859e2a75",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cc22cd-6699-4547-9d45-9d9c814ccbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397fedc1-df1c-40dd-b57f-f3b53449a8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff6e760-795c-4459-9695-92b3a215fe42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11d84aa0-39dd-4cd1-a558-6f9530565780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc06e070-b1d1-45f2-9acf-e5b4caa7a58d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a37877-e828-46fa-b99b-8e52b857f76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91e055-b269-4dbb-b7b3-824838ab4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada87c0-b90d-44ab-a447-1aee002f805c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "886776ef-03e0-4703-8717-8bd7173002a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c2f72d-bbf3-460c-9a9f-5db8513c463d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d05f06-f66d-4e5b-be5d-6bf56e9cab83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f4aa71-5425-48de-b1cc-ec4d8ecd688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691120cf-023b-48c8-bf27-e45eb4b41403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "770e5edf-2346-450d-84d7-7bf7e5576032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b044429-2864-436a-9075-77679b736433",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc8f825-a700-4111-acc9-504cb0aafcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fa15d5-5b46-470e-ba0c-9570b6b88b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedffd7a-edd7-482c-abf2-ad3eedfbfea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7cf33b-a8fb-4974-ada4-9ee4c2b70eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caa0398-59ac-4da3-a234-136ee2f6a5e8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6a37a9-3ba5-49a6-9783-92d3d4401048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1a41ed-1807-41be-86f1-decec125783c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b870625c-a03e-4bc7-bb0d-e2959471c2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94d09e8-00b6-4b13-b8a4-3c7921850eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883bb33b-93ba-48d5-aad1-336f5c3f4f63",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11de8bd0-2d27-4593-a8c0-0843db230795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3109e034-b2b1-4ade-b213-8007052c8183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b67523-9c93-4151-a8ee-3ed813b1d507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc75c019-9f52-4a4f-9485-8139ad712e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af7b0cb-e5ee-4430-87b4-04c609afd257",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a6eb6e-ab65-46ce-bbac-d750ed99b8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "717d2110-631e-4d64-8600-6a534f0c03a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8591db33-6a1f-4fea-9644-377d343aea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c65696a-3cf1-46e3-8d05-1c44c10b9847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b991040-2394-461d-b57a-ba5d36f4eab8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abe1aab-415c-4dce-8fb8-a933dc4bfb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4ef5f0-079a-464d-9a56-64aafacf4b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fe622a-9fee-45c2-b8a4-e807a49b862f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9eea8d-f06d-4297-9397-5b5657c3cf34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7d76cb-4dd0-4ca8-b0f6-6844d0c7500b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd58289-64ce-4f71-bad4-50c0b70c3760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93556a77-f341-4453-abf3-87aa1f78c3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75759f5d-c73f-48e2-9f5b-7a0291f59f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33e425e-344b-4a53-8331-b2c4fd8c9d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcf588b-dde2-4747-bbb4-acb512e6ccf3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3258eb1e-6f84-4313-851c-8f86c370630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a02192a1-224f-4c5d-9673-c06bba81cebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921ca7c9-7d88-497a-ace7-10329c43e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e279d07-ce4f-4c12-bb9f-56597c64d3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c66e19-3846-416a-9b67-b43dd4fc9098",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ff8925-8120-4aa5-99ce-3da692de16a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7f09c1-44c1-4068-8d09-9b77c38d5412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87313c4e-9aaa-4b59-818e-c0226ff7a6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2951b7f7-771e-46bd-9b3b-057274c6ac29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3782cfe1-5a3b-4499-8c11-c467ab9c7ea3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4893a8-edbf-418c-b921-0343286a0fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b6e86f-c4f0-4446-bbf0-9f565a5b2ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8907d5-e843-4a4e-af06-5c1b6ebe9c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "287270eb-f204-4868-b08b-3a786287f225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bce6a06-8008-4e32-ba35-8f6aca3a5dc4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635481c2-6533-44a8-8b7f-09bb633e9515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae35220-a965-4e9e-a9bf-6371ca8e88e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4a243f-0f24-4780-bb83-18879781294a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5564b592-8d3b-4eb5-a7e0-aa656bd2e42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8091460-47ef-454f-9adb-8db232edfa9d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbd0341-f8ec-4d91-b601-156c924b921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2392b905-c52d-43fb-bb8a-3bc5342911fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb6be65-5ac2-4783-879f-73d0b150ff2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "510c74f8-46fd-493c-a285-de53359455bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e9b14-eda1-4225-aa85-b051139084d2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f69495-9955-4a32-a2e9-936e5b113f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9603b6-017d-48ee-915f-8dd11afb3b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2787f55-9caa-4ad4-a6e8-c641c0cfc6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3700b6d-be3b-4bc3-bb28-d46b8cb6f602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4811fefe-39bd-4464-a593-c7a2a0cfe116",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96b6021-2f6b-49ff-a8b6-2d2a6bfa2efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea63112-67cc-483e-a305-7e4ebc03e8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b711e6-e365-4199-90ab-f26f204e3102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "10a63bdb-2a44-416d-9a8a-4c44d8d05904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653ed839-fd75-417e-8b67-304bf84a9e1f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e177c47-7766-47c0-be7e-afb0e4628220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ce9756-00e0-4a26-a1e4-b4fa3fbb5e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58561add-fb98-42e9-9227-100f18ab3f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6336f5-8b2f-49d8-ae8e-737920a275bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653a0102-463b-4d86-8591-863b50dafea0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0cc8ca-81e0-4cad-8e69-d4ce658d91c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dcb76f-071d-47d3-8469-f4ef8f2ddb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c55606-92d3-44c5-9c4f-50aec10a5456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "490ad9a8-e1ab-49d4-bf15-f867ca14f9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dfcce3-4491-4ae9-a24d-50116e03dba4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768423a4-04c2-4c65-95de-d6d41fe60650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8babfbb0-298c-44b6-a0c7-5fcc907a1f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21dd7d2f-348e-4cc7-9e4d-974bf818c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3e38de-3b78-42e2-8c21-ef1d4617ce9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e898fd-87c7-4f26-a1ea-799c950bd179",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd34a68d-a161-49eb-9e02-74bdd973dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23c7e7b1-9b74-42e0-9c1b-c048410f789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e67e00-109b-4de6-859c-91a5506f4efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "231b25d0-0bf1-4162-882e-fff44e399912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c57ea57-83de-4701-9d62-7a361ad18c5a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5cec9d-799d-4858-ac38-049d0263b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7b7309-3728-4cc5-8548-157e86d33030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa89a14-721e-40b0-a8f7-3e74d27be1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26fd3e00-879c-4aad-9298-514cac295e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e691d886-7832-4cae-a28c-f158323d1866",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7866436-77ec-400f-9261-b2b031fada63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37247a27-a346-4c9f-8e18-bf2d80f3c843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3ff68d-2142-463b-9ab1-f59913896ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff981893-bc07-47e0-a72e-d99d89f3698a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88eab644-0e5f-40c2-b401-81c3745839e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda67a40-7ea5-47ca-9e80-9b4f51d12463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ab1e4b-1552-46fe-92fd-6e31335feceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0613088e-965a-494e-b965-3fdfde8dd2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "56aec6d0-7cd9-4f5a-babc-13a8159703ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd748f9-bbf2-4784-996f-bd534e53c85b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2d67d2-c244-48a9-a705-ff3a362520ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e1389e1-0bb7-4f3b-a34a-812b826c27e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621905c0-854e-43fd-a8eb-a7b81479d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9503f1d-7d40-4469-bf72-1d84f7fed304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14df04ce-7464-4980-91e5-2d29269dd1a2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4abf27-c3e4-4050-8849-a8cd58051a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78aa502-9647-466c-b903-d65d2e090f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e9b4b1-2847-4cb0-ab28-c8d93fa34704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "45e4eeea-29c3-415d-ba20-9e094a0a3bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee7be0-7822-4e29-9a13-0790b54aa294",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e9b27b-c369-45f9-b33f-9e2f4175949b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3990d383-1601-4519-b857-061595e9a0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd513770-0b4e-414b-91ea-d7cedc9539e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2883d70f-4a2e-49a6-bb5f-1f2b40e1fc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e2c809-0ee5-437f-8ef9-5027c15e2a7c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fda3d84-85a0-4965-b0c4-cb8b689f27e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59effa20-0ad3-4fcc-a884-f1263719b48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe461ce-769e-42e0-aae8-6b38011cf86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "10634afa-5b33-42e8-a3a3-a73996e7ef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047267c7-19df-4530-a885-fb63412b0274",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2319e22d-65b9-4c1b-ac2e-986f6aafb852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ff9d14-dab2-444b-8c04-4965b0baa84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37821ce-6ca7-4d97-8c8f-12d643d140df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ce32d5-d33f-4cf0-abe1-071308f42912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a38306a-8b58-425d-b14e-62cdd60d2b37",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5299b7-1caf-4fb2-945a-4939339bbb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc93430-4d7a-412b-9731-a72b6c3f9e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d237a2ca-233e-400e-939f-67e735b7b80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "175bc657-765b-45b8-bd4b-ac26c76b118e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45cb4e6-5a3f-4250-97f3-d66dd7e38e10",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768ea032-2b8e-4d19-a2f3-5fdf4a88f34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0384541e-c7c1-4d66-8931-ac044d32b112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85034f76-5a28-4197-8486-44cc8acc2cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d92727-3e36-491a-9a09-6b43b215fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaef49a1-31c4-4b63-ad57-355bab0053bf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c4b791-fa70-46b7-88d4-4463bc7fa73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696ee63d-00d1-4764-9757-edbd0c7c92a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc50cf83-761e-4db4-9d81-45c4e79da9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "300c2101-b100-4558-ad2a-c5b0ee03221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cae23b8-937c-4fba-8b64-6629c8ad213c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0880440a-6498-41d5-b90e-4c093e711df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f8747b-6b58-4de4-b6cf-61bd1502d9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669bc5a9-55d1-4041-b2d1-325b89a58ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71b17cb-0ccf-4fb6-9313-f9e30d2675d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babcfc44-bf45-4f11-96cd-e14af5cbe6c8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366c3b46-c695-4953-9df5-734e3ddb176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5117765-2a9d-43b0-bdd7-b7d23361794b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d248cd6-78ad-4343-8299-2bca8497f7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c33026-0062-4286-a1e8-394814cceecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e4e848-c86a-45bc-8f5b-5ccc52856783",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3546bcd0-3a31-416b-a600-fcc1ac23c367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77d6b1c3-cab8-40a6-880f-2eaa4f6b861d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ac63a7-331e-4cf6-90ca-ac4a2fbdca76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caa0f80d-8276-49f6-a12b-866b0ea04e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6949d0e-7c05-4514-823c-a741bd78f39e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3175091c-bc47-4933-b40b-f1be26037bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddeff7b-1f7e-4be0-a7e6-aea324d20e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7a1251-892e-427c-a091-8ced808940c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01537de-cc5d-4210-a6f9-28f9cfb0c13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823b8656-ba7d-42dd-8f29-a4b9b63ae83e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b20a49-51b4-402d-938c-949f65daf1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1bcff6a-871d-432d-a795-df9a16a7c4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70993235-6ccd-4b92-aa84-a2d6ce1dc498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7cfc17-c26f-4da5-a137-b2a8ec518ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3d8e42-c657-4136-97de-f0d683e9c811",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7211933f-01d1-4096-8132-bbe14294fba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda73ff1-f468-444a-b14e-78a4b2960f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b88679-5f1a-4b17-9782-72633261b501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ca6ab8-9f25-46c0-bc22-6326b20266c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c33ea62-3ce1-455c-884f-c109c6a694ca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c0cc0-8fa2-42fa-8034-ea23313cc204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32a5156-7e7d-4353-b805-cd0334566be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ddef8-7645-4b41-a55c-b71f85a63833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cfe323-01c4-41f1-9f0e-55362ce5231b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207ccef9-148c-4785-aac9-61ced425e289",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c38af4-f569-42d4-b420-92b6a0a4cc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d45a96d-21ff-415d-a948-5d3085569df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6773c0f-7eaa-4b90-81bb-55b551405d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b38dbfe-f6a3-40ef-9fe0-e1d044c854ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f64e44-9c3f-48cc-98dd-a564c8b23bd6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9130cea1-4e36-4483-b8f2-0e4b2b3a937b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef218b3-7f12-4d15-9a70-3d9bcb56abce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfca416c-f228-40b8-aecd-af890d5af9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4370c5-d919-421d-ae55-363336e1ac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af8538-86e7-4a42-9d80-167a27160cbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29ad735-141b-4126-aaec-e8b4ccfa6ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21644793-00e1-41ab-9286-863b566e5a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825be177-a7e8-4004-9e13-31bc8f51557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "562a9e17-1257-4c85-bfbf-67828d114ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159f4a23-1aaf-4121-805b-09233f051f39",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e15a65-0a11-487a-bd76-9ee8391d1615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c3a529-3360-4cc0-9fa0-ef4ade24d4b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53cf1f32-0f51-4d1b-84ca-812979984501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a30204-e4dc-491c-bfb8-8853ecf69ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50a7868-21a3-4d89-a3fd-2d81709e643d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e4a14-5b8d-45ee-8d25-05c96ab22352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8af2cd-50f9-4bad-9a4b-1709d91b35e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e4681a-72cf-46f5-b346-7687474fa8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7d6c80-16d7-4d99-9caa-950239805c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85328c9d-9e7a-4cc8-a2d8-edeeabffac0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535eff70-f364-44c6-b822-4afa8c756270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8aa9add-93e3-4510-ba20-b7062148183b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d83fdb-2628-4bdd-8c50-9ff214307f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6106bd-4d12-469a-959b-1b7db78d6019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7213912-3471-4116-893d-8ef19725facd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9477126-2a91-4db1-9838-ab5729cdc635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29e8cb0-e8fb-4f51-82e5-a227ca075f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f73bbb-4601-4ba0-8f7a-f1da6eb28bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7f588f-e28e-4ffb-96ae-8642c02b6dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf5df1-44fa-46af-baa5-4422c42a37db",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08400b07-0b3e-4f58-9b4a-df3ef37dd6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddb87a7-9187-4c7b-97e8-d40806f7b2e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d545674-59cb-4e2d-9091-18768b960d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9af40b-9dae-440e-a158-9c9dcd82cd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82043ff3-9239-40c3-a0d4-9ae499bf539d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb756bb-0b8f-435c-9214-91c6933c43ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b88a744-be09-4fee-844a-3517f1241e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f67d1c-5eda-4cca-891d-166720a18df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcc75bd-84d2-45c0-a804-77ee4665c58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff8bd9b-0bc5-4a6d-aa8e-e27633190074",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d24cd2-00a2-417f-8393-3d6fae464960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242f1f24-0dc7-459c-8af2-9db209034153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a71e5b-a907-45bc-8566-e214d89269fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b82083-a394-4295-86bf-e41fdb1712e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cbdc2c-6b3e-4c8f-9852-e6ffafd461d2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7b32d1-59de-4f21-a112-89355fcaaad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf9acc6-8398-4218-9b0c-f42978abcc76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3e01ac-e939-4699-84c9-afe46ba74ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35bcfc6-437a-48d1-8598-6a6459a66474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be157419-c0d5-4c67-8d7d-9e9915b45cb9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee11ebb-4341-483f-ad74-585a0782cb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166efcfe-b8c6-474c-9189-51b4976e5374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157570e6-6e6a-46fd-8b7a-86b51df38304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0707df-99ec-4025-86d6-000efe3b8c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55664348-8219-4d51-9105-78c981d7bf32",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c28c4d-5ae9-454d-b580-77b5775547ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef6668b-fb2d-432a-80b6-ab164fc3a95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b645b-419a-4cac-9cf2-7e1cc04b7976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8ac286-7d02-47cb-9486-96354606f60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b92890-7d73-48cc-91dd-f7a7894d3e84",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3866285-3fd3-43d2-b9e5-6faa758dcef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d249680-beb8-4a2c-b89b-58dff0b8dc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1047acde-e014-4fa6-82b4-24013e991bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c593247a-0829-425a-a6c5-a9f8726dd784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2b783d-9aee-4b65-bb5e-b1abae3a4e49",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba1b77b-009f-40d9-96cb-764de6daa4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f54fe5-1fba-4a78-b54c-e06db2841837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69bc8c4-b215-4580-a104-b9d660bfc173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf5b74d-a145-4c9e-8804-3d31d59b98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0acfdb9-c0f1-467a-b59f-3ef8650eab2c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1346f967-f933-4ab5-bcac-7c987b79180c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde8d01d-eeaa-4106-8629-e3f8da311d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6de3b6-df14-45d7-9906-83011210f1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2beb4e2f-9c59-4f1f-af0e-7aecff44a6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5445d8a0-cfb0-4449-92ad-882ab84a26c9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669962ef-aa22-4aae-99ba-69f0c05a4ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e070e2-9203-4386-ae49-d71acc157a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0715752-55ed-479a-ae22-d10b5de196f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "298c7847-effc-4fb1-b348-1e5a13c25fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d401f0d1-cc36-4f46-859b-61ce7e6855d2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7aa0c2a-0070-49d1-bfaa-8f0f00e7e4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "533743c6-d078-4d6f-bc34-ab877789ae0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3b4ff4-e03d-4679-8969-7444bfacdd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a40408-824e-4778-ab66-1003b160107c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc72481a-1e76-4152-8f5c-2ec9300a696c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ee4419-800c-48a0-a556-b45699fa62be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce42414e-16d3-476b-b094-34123e12715d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d79b5a-2dd1-4953-b581-eba66871db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef6c2bf-ff07-4ac4-8296-368191ac7b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbec0b5-1dda-4bd9-8d83-be6ee44a5605",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed70e317-665a-4410-b92a-bcbe7f70b93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b9a7b4-80ed-4173-95ba-78a1103c5f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8a6d19-13bc-4913-8c41-fc8f34e49a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd7f23f-fdb9-451e-b401-3ff2860cfe58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beee393f-9945-4d17-9c46-48b7e88d00fe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ef5202-e218-4d8c-81bb-2adb0a2dd6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac81e62e-2400-4c0b-967e-2d439e7d734f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcac183e-ebad-403e-9c00-c33cf315d5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce0a41e-b954-4b30-b134-1829a260349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eafd5e-6657-407b-8ea1-ca1f532ad50c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1501d39a-441e-4b1a-be14-157fcd8a039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4164c491-2574-41d2-99c8-d9ccffa81868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b0dd66-cb0e-4ac1-a9ea-90ba29659393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "180d6d34-3515-498a-a2c9-0a69827617fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049725a-67ef-4e9e-9469-54c927e97f1d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709de08e-1d56-4ff4-9aac-6e2290dac938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6254464-f5fa-45dd-8ca6-d060cac50069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fb09fd-a805-44b7-862d-41be3eae0d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "552ac76b-9037-44b8-b7a8-5f581a820083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348e7d45-6352-41ab-a6c9-50cfffc3dbfe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d9aba7-dc8a-4aee-a09f-19bb710f4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f2e7c4-9f2f-47e7-8f5c-fc2e46cce5e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db949a4a-b376-4d9d-8c0f-dc3a83ef8cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b14057e1-8830-4e82-828e-cea76e306427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22507f-877c-42e0-a64e-177df2eea495",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f56130c-b7e3-441d-89ae-6b1a5eda700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669eb0d8-02b7-48f6-8d44-624e0feb4691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4abc666-78cc-46d1-8197-36ecb4ad3e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29612034-8be0-492a-a5b5-bc3683aa1fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159177d0-485e-40ef-846f-023152f551bb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888acdd5-5245-4baa-a71e-979f341ce25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8d3a6a-0829-4d2c-81e1-70f299a3593e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dd1d55-a04a-4ca4-9136-6a4771908579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c767d5ed-c722-4275-a661-60fc614e3f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93b0e32-6031-428b-9ede-0a87dfa30343",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af94661a-aab9-471b-a953-19792138b433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770fa383-89b3-4e1a-a182-ae5d7f8e7d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995de43-a86b-41f7-b776-a18b1b6abcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b247ca-6f20-4c9e-958c-60b91b705f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861fdc08-75bb-4d2a-8d3b-b6f9be77517e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc43794-09f8-43b4-b0fe-bb411e2f9b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b47fd3f-7d86-4e5f-a6e0-540766a55326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe55d9c-2bca-454d-bf0e-b9083b4fb549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c709b951-5988-4db5-b9c7-5cd407e9f9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4301c6de-45fa-42b9-a9a6-f5e5c8b6461a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7f991d-f704-49e7-9597-f5089f755a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7307894b-3bc4-46ec-af61-df7262753291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669c275f-9f4f-42ef-a6c0-af891759f245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91cb072-14d4-4420-8f83-140eb761abf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1c6ac1-44f6-460f-8243-d07d373252ae",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c853a056-0bac-4fc9-b294-6962acf30838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348cd3f8-ee6b-44e0-a602-d0213b3ea039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89fc4ac-c765-40e5-bccf-cdd2f818a1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1783eccd-206f-4d3a-b0d7-ef60e31eb784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318d6601-4e1f-4a2e-8ab6-fe9ba593d8f2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "259dec3c-be22-472a-876b-ad7eca04c901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c731e6-3544-4447-a0b4-70ba0dc3cd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6388b73-bc26-4e65-bf3b-42d37854d2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7f99b8-4ecb-4b3e-97a3-f703399276ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976593d6-be13-4df9-9c0d-33a7034da54c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef43af1-73fb-4bf2-951b-42feeccf413a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9bbe95-8805-4c07-ac85-3b2f813678b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc48fcb-dcd4-4afe-91c6-7f99d607e66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85ffcf30-9ca4-40b0-92fa-4d9b273adc9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b9ae2f-afbd-470e-a8e8-27d13ee7b68e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efcb7a0-5ab2-427f-9cc5-663d4ab1e205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145b2787-bb0b-419c-9ee9-bffb5c7e7e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cbc2df-0808-438c-aaf6-0beda047d5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc732c28-65f7-4348-a285-b241fd8f623e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22b3455-f790-4441-80fe-e6883cbf9608",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc1465-b712-4557-ab4e-a769a635cc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a192a6-7f5d-426a-924d-a02239bb5d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e30fb80-940e-4502-a0ef-4a1fca88ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "10614b70-6aba-44c8-a5c1-6ee1c73bf515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23563e4e-711c-4979-b7b9-d6511e293975",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd1b421-d25b-4b3b-a757-9cc25d966d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538626fa-6b68-4f5d-a325-29b4c398ae88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1de37e-0708-4c5b-ab80-cc36e47f3604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b99e70ec-fa3d-48b2-8b25-b9aa02c5dd4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc064622-745b-4732-9fe7-a71745a15d64",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49642558-a45b-4609-ae7e-e18034039c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7c08ec-37bb-4a48-abae-905e114b5640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9882920-8f99-49c9-bdfd-addf61bc0803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2830fe4-d14f-4bc4-a4cb-ad634cee9382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672ed461-77dd-4225-a99b-f9e15b848ada",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cccc19-df2c-468d-9aa4-588f0f8083da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63b96d2-54f2-4215-a623-95f4af26b6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9bcdf2-ccdc-49d0-9c94-95a7e18f843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5cc526-cc50-4c6f-852b-cb3bcda8cfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f1b652-8583-4b65-8f84-ffce491b6798",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b4aa95-2895-4eb8-a5e9-111617cf48b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "144f1ab1-9b41-4c0d-980e-60e5bc190be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bd5c45-0451-4bcb-a8e0-cade9014d33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7361589-c108-4051-9bfc-39bacfff6d7a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f6436a04-fc8e-46af-a8df-0dd096ec38e4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26d9d973-152e-4b62-8bb8-7bfcb32acd22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f03dae-4772-4880-a92e-6378257ff6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44098574-aa68-4156-bc7d-d6acac42be00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ec2b49-1ab8-4b10-bd1f-42fa620964e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7335c3a1-1ec0-4fb2-b1f4-f121a0c40c99"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7de74cc5-9fcf-430d-adff-4d092c2e92a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62adeb56-edc8-4a01-ab1a-fe9005263e8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1d1d27e-1e8d-4980-97ae-b026eb5dde04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64fd710e-2dce-470d-85c7-537adf40f08b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61445767-3191-47f4-8daa-118558658cb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bfec4291-edfe-4516-9c18-e9c342debd71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7f921136-dce4-4d01-b42c-55b622adf47c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "088fd7e1-f5e3-455f-a85c-0f61ac9e97e2"
                }
              }
            ]
          },
          {
            "id": "8a26615c-c822-4721-b255-0a8d675338c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b00bdbff-f933-436b-b501-18f161717cd0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1887f865-26a8-4508-8dac-116c23636e80",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d776254c-5a47-4d31-b503-c61dbe09d508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "34df033a-a878-4d08-8699-69cceeacaff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60654ced-5087-4d72-8168-e74d9ad532b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3b4c1a-6c9b-4572-9dac-9c40c43df3f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf330b88-818c-4c33-b99f-7b1f46697129",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23be8ea7-fbec-4414-8b47-840816161e3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2a7a448-9691-4992-b13a-257270a2310c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33925a2b-dae4-464c-a453-25daa8a92599",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cea21668-e454-4217-b034-9d6c72f8f98a"
                    }
                  }
                ]
              },
              {
                "id": "3c027788-f9c7-4ae5-9c91-22b8e3acb6c7",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1f21ead-c691-4afc-b493-74771cf6ea4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "132b3e18-038f-486e-95fc-c5c91dce2f1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9eecf645-e5f5-4725-9493-de1b53231478",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8118f21c-1c78-4a4f-a69c-46c545639d83"
                    }
                  }
                ]
              },
              {
                "id": "285438c0-f648-40e3-90ac-ede55ff8869a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96ba5460-e0b8-4e22-abdd-42cc72c76673",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9b7a9e7-bbe7-4287-9098-c7dd673a443c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05bde877-6342-4b11-9297-cd6102f9f0fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39a136d9-515a-4bb3-a265-a53c71b7d8d2"
                    }
                  }
                ]
              },
              {
                "id": "394ba162-36d3-4c63-8c40-3a5a8b04515a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93d7e4b5-f368-4aed-af05-54f730f91624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54d0824b-5cf0-4f9c-8a8e-4e1c906c3aff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60d98fa1-398b-4965-b75c-f5f0cebea0aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1cdd5c9d-3b24-4967-9cbb-eb2ba04c1ae3"
                    }
                  }
                ]
              },
              {
                "id": "8f6a9e1d-155b-475c-b913-40bfd131131c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed31f469-b014-46fe-a9cd-6d04dbc8f502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48132a32-4c11-468c-9213-b1545b8f0a84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20501f9-7638-45d3-b29f-b9ff8ff551da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3143ff4a-04ce-4deb-a54e-7c81f35477f3"
                    }
                  }
                ]
              },
              {
                "id": "6d69c0b1-c4af-4c13-a05f-408a1e8bab12",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b8ba74d-d56a-43da-9569-2f6d5833954a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc3cbc21-af61-426a-bc8c-694de0416d41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "384dbbb8-db92-4dff-af20-e853c8acd9bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7851a29f-e771-4137-aacd-c2b511d83054"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7043ad01-6d6d-4885-b650-853d9dfeed67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b508646c-9308-4dab-bd3e-05f2428a159a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b5ec8075-e321-4382-b116-69201f4e926c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9e7dbc6-2b6b-4667-acad-50c05650307e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef88eda-9914-4e56-a6eb-a0215643e2c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e6b9c687-c331-4ede-8433-664c668e1591"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7c15a33-80cd-4e76-9fec-fcabc732771d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03b52568-314d-4615-a5eb-5a0e84002bf8"
            }
          }
        ]
      },
      {
        "id": "028d7b97-17d1-4809-9d6d-27472a617b9b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7aa56de4-7636-4dca-b308-e80f6bf449b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d6e4f7a-eb79-4642-a18b-71663527ab1d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd29b6e7-10eb-4bac-8a11-1a3a06b12d72",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7563ac-1fc9-4b81-8639-99f9765329d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74082073-ba1e-425f-b22d-858df8faeaa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bd0b1b-531e-4582-96ea-8b0a7a82d83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a115a6e9-5b0b-49ea-bcc7-eef5dbca7af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471f23a-d0d4-49ee-a2cf-c446d30d1949",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa65ae2-db79-4eef-96df-01bebc5c6758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf45bf5-2ceb-4795-8d65-7701f460dad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8a63d4-8c3a-4338-b954-88f3f466092e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bfa6d6-e369-4153-a65d-d5ebb0ec4545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efffcfd0-ada2-4ac5-b31c-892a3b4319ce",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d5e463-2a3d-447d-b2ef-4e484d2bc603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d480ad97-14a0-4e2d-8025-957102dd79bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4323f2ae-5cfd-4c0e-b74c-59a63a1a7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dc980a-476d-4760-9306-8e00a9d940b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da91159-0b78-4a1e-b724-df8cdedf31a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4d8770-c6a1-43a7-b0b9-7ff71dd0bcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e29a1ca-21db-46f9-a7c4-158f5dde429b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce073c0-2e4b-4698-817e-53d9eefe7747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96f0b879-7668-44ee-8d97-8fa5810e3d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c5a20b-9781-4978-b339-d172c4e2d062",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e04f98-288c-4f25-a515-88508817f696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9177742-99c7-4bb6-ab68-d7b58ed62b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e340c30-5045-4e49-bef7-d2758076f083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a073b6d-719c-4702-ab4a-7524b006b7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fea0c5-a699-4f80-a9f0-b2d096a41fb1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a110fcc9-410e-422b-abd7-c8c6cd8b69a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aecf872-376d-47e1-b393-fcdd9cee0c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e240a28-ba4d-4c7c-9623-c84d3bfc5a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71350bf9-35f5-42d0-a326-c60760e82db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e3d718-6d59-4a03-a4ea-178e681915fc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba305fa-bb3b-4b18-93e3-d40c0523e5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f8f3eb-6b84-4192-966a-18ab487c6c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9272cc-dc76-4b05-ad0a-fa8cc04b8bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "781ce0ef-16c8-41fe-bc3f-b39298cd7152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beaf134-427a-43f1-bee9-5f207cc22c39",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b2c133-7aa7-4d69-a703-1da63253365a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c650326-69e8-4eda-a2b7-801e36b0741b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1347bcb4-277a-46b6-afa6-3f3e918815fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8a8a99-d86f-4b3d-9372-d052283fb323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d2acfc-7940-4ba6-8b50-30c599252251",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19914543-5d84-4065-9826-e2a61c0c99b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a797aed-d04f-4e05-b5cc-24e5846e887a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fc3c13-c1e7-4e22-8882-7b2a07a79402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "750a5a79-ec58-4b2b-aeea-58c364e7b754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b681d227-8577-4606-ba3f-4eab2899dfd7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e100abd-a372-40e9-a47f-38fce37d4c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8a91da-da72-44a6-8bc5-9ce541c09eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d4164e-f0a1-4a41-a619-ffcf90c3b395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa095a6-a164-4fa3-861e-085be08e6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f712e4f6-62ad-4798-a766-c6af3a27d22f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9868ad94-101e-4674-9b90-8a87c205b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516c25b2-3162-4af3-bd58-632fe62aa621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db52b96d-3601-4f43-9cfd-01751506b7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ee17d44c-ed52-4e7d-95ed-e3cf387f6d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262dded0-9974-415c-b6fa-e5f59d2b6f2d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10014496-9f51-4c72-af3e-d763605a1ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3216aa13-ed88-478a-94a0-7e8d5caee750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ce865-2634-4036-a0bc-fb31d005b070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e670047-97e0-4b55-82e6-3140c8a6f632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59be2a0f-3cd8-4845-ba50-add32fe04343",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff93e98-0e3d-44cd-bd38-ae79cb222bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475d7511-2020-419b-9a3d-8ff92275ebc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb0ac01-c5a5-47a2-85bc-7020426cc537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c843995-6c9a-4c3e-9c13-0428f7ca1015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3453341-470c-4baa-87b5-95ef51667695",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25da313b-eed6-494b-8ca1-a2883346e74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3ecdb8-57a5-4e4a-b342-ce7f4a4b93fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512935c8-5e28-4c4f-b482-42f5485b4852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd1b4dd-94ef-467f-9636-363c9165cd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9a6be1-d04f-4e4f-95ba-d663fea5c9ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4d5b43-085f-45f4-b588-9f31fdfc4ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128d7689-fb9e-43fb-acae-634a08d192ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b805263f-d193-42bf-9a4b-4615411b87a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5625f02-336d-45c4-90d9-928dc9060c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d987db64-fdf0-49bd-9750-c5a13c836366",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601d9247-0dd4-453a-8bb7-0ee66a0bf176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648ccf38-b24a-4eb0-a4cf-aa593c770040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8196a1-5339-40af-9f56-2a8313035c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff3b03f0-f2bc-42bb-a9fa-1e24d1e5378b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76de6d67-8be3-4ab8-93e7-cae040846ede",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d1b2e4-7c4d-440d-8eff-6d406d1705b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7637e293-9214-4414-8d4c-6ca820143909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8325ac-af14-4b10-900c-44ceb998ed89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a291e921-0066-41b8-8c03-058195390c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e981d43-556c-421d-a6ff-87801ae134f6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a6240-7c17-4f60-be53-cb5a6a43f764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c71c4f5-eb82-4007-991a-a85df7e82a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd09433a-bd7e-43d4-bc9d-ce0dfa18db90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "658ee75d-2732-4c12-b35c-d17989360185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9965ce1f-929f-4aad-9685-4bb1ff9053a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66e5972-be5a-4a39-8b18-dab9f10f85a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66407cd4-ea9a-4db7-97f3-6667edb8607d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781d0372-7e25-4bf0-8268-843b7a5bde0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8daec5a-cad2-49dc-a4b6-5a3e333ccf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf63525-2144-4c87-bb39-61953a6fd896",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076d9173-50d7-4b1e-9210-79788d6275b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a681e30-188f-4814-9db4-9286043b3161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029a7488-e0ea-45d5-9113-0298edd60aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b58ed3d9-4de6-41ce-9925-1d1d29773ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bdf50d-f7d6-4f8f-a065-dc938d8b8088",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0abc03c-296a-4367-8814-d5f38cd36115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244d5bb6-f4ab-48f9-8a16-813e19b85f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e39fe8-7677-4d44-9311-7e9e12ab9ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12fdb86-a244-420e-808c-bd3d02824fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c579bf-57ca-4148-888d-10ffa595c123",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b990a9d0-5a06-4729-b1d2-84124f0611af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54981331-f2f9-4437-abe7-c329e068a058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc67f51b-2264-4a7e-be4e-6ed235373b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93fbaa2-07ab-4dca-815f-839e94df23be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd67224-9ecd-4a6b-8f9f-7d1b6cff8447",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84914a4-8cf6-4f52-995d-92b031299b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba14f0-6753-4ddf-8aa7-3b282e314fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b22f40-c244-41c3-aa2d-05a6eeb7cc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f410368f-aaa6-4c37-bb4a-004613458358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b03793-14f6-40ad-a351-213541a31ff8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4756ebb-172f-4329-a00b-2cc301ec2f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85866ec-da6b-4fac-b06e-303156479687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f770110-bcb6-4da1-81e3-37e0609fdd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078f405f-0897-4bfd-9245-5722ab21bb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4442ec-840e-4b63-85f4-7810eec1e5ef",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822f438f-4739-4b64-8283-f5a06d9c0baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e82793-4dbe-4c11-b067-b8f1a81ca90a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea09be4b-7021-4bec-b466-0bff95995624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4342af52-6d23-4e94-badf-a2ed2afb30bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30b4a90-5f34-4dc2-ad53-b27162504d1f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbd0f8c-bed7-46d5-921b-6c28e32ef63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610996c8-9ccf-4f44-9c60-87dfb29db4c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e881f-c90e-4592-a8f4-b8ffd56cdaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "026e1db7-734d-4391-8338-7afa051ca96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58297349-c6ed-4374-9f65-d8fcddeb4f9e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e9f699-d9b3-445b-b1ae-698896c6e3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9df59a-b5d5-435e-955f-ed093d717fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a6587c-cf48-442b-b81a-375150a16ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d95db9-cece-4541-a936-f83f9dcafaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a217f7-4c10-4e27-92c5-55bafdb63ff0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168d053c-a48f-48ae-ace3-2ded945f0af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b777d4a2-d984-4041-b605-e12fc9b4d96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b11f1-0c82-4796-9d87-7512ca126ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b5e0f7-8925-4f7c-bea0-47e4ffdd5f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc8a933-afe3-4ad0-8291-682fddfe7012",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89936fbf-b063-4785-9b38-82f170669856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb352016-1d8b-4795-b326-2f93fa5dab57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e62ca7a-d261-4f8b-8607-d64652f50e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5248196-0a88-4c32-8f14-aac33c651086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d112a72-96f8-497d-9f20-773c3ede0611",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13678c0-83ba-4baf-8816-620e51f1c44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc54c96a-f50c-4e33-a91d-7d7616504556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a66af22-0122-402c-ac26-35f20c2bdc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "294516ca-f265-4ef2-89ab-91fb9a91cf32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884cc03c-38c0-4dd2-ac42-ecd92db6c338",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "343ecd31-821a-495a-97ee-8505915b40b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17270c46-b746-4159-99fc-6e6aa8da1cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac2b8b3-3b61-4db8-8c48-24648522f2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75e27a15-7c62-4d05-9fbe-eff9d0b2bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4de5d0-8b5f-462a-97ea-ed2e752eb748",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344f8d85-a66e-4fd2-8c47-7050fb9e2e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf3650b-86a2-4115-a38e-5812656f8c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9186243-576c-4024-847c-1d3a359b8c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f0e6f0-f137-4f96-8f7a-f3e814bafc36"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d345097-1a65-4508-b937-3998a63c51ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "172c4311-d219-41ba-89b8-1836b7e90c84",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bffc032-9a15-4a54-b853-887edd20a24f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1356e9e-592b-4bdd-ae6a-325064dd4736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1d0998-2cdf-45c5-824f-07d3e7497b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ed6c840-9a82-46aa-9701-2db1b762a424"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72459e65-635c-473d-87d6-8dc8b0251c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9149a267-1459-4f12-9635-f71416e9c105"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "898d79c1-9aac-423e-be86-72a64cdd55d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0550d896-8957-4f36-8d03-8453f349810d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7e1cb1c-cbc0-4a0c-94a2-e46306ec38c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "18fd3306-22ce-42d2-8410-32ce183c452f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a3696d0-4710-4ba0-b321-c2d58da3d88e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af1dd18f-7708-4b0d-9690-e1007714f074"
            }
          }
        ]
      },
      {
        "id": "1d22ad68-5d30-4aa7-b2a3-9c43d23cb0ed",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6c1fa0e4-a37a-42df-ae06-d26392cc1be8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0ad2feb-40fd-43a0-85b4-06938b2ffc05",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10d440dd-119c-4dc0-8b68-45c19b67622a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b755cc16-a01a-492a-af2e-ce23f1f65082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e92003-a089-4a23-8acf-0155db782a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de654ee-21e9-433a-90c6-e07d8af249cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0caf814c-d1b2-49f5-94f7-aaed1290e536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7363df53-823e-4d53-ab6d-6e2186e32794",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddc4d87-12ea-4165-832f-c05bbf7d8a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b302d57-3660-40af-928a-69bf105826fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfcb456-ad2d-40e0-ab8a-6299ac86743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "919fe6d7-1773-46ac-9a96-44f3c87dc08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69964935-4773-4d62-a3cf-114955eb0e5e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a0291e-e0a1-4cd7-8098-af7bf3006c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc0b842-2e25-418a-8793-88dd27a8dec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6b1df9-f0cc-407b-ab1f-f1505699e070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd90995-fcb9-428b-9de8-5da85b6fb1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e177be-235d-4b19-a976-61c56980bd0c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc7eaed-ab49-40e6-9622-85b4e946868c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18643bd8-4af9-4971-8b71-3e5967e617d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e263f605-0269-458f-8564-f3ae22d2be92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db3e8b42-e877-4d6f-9aee-952729933f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18284dcf-f5f3-4e53-9cdb-158f160d221e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2868bf-64a9-4815-8105-1212d3630d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16331679-42ff-47c3-b8f2-b5483f63faf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cbf16e-6d55-43be-9026-248d81c9e699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75e84a6-df23-40e1-9534-ae2df47d724f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb318bf7-1b52-4049-a7a1-3885dffe427b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a269d9b3-8449-4302-b993-ca22c67ec6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab1b4f9-bb2a-4c34-8291-5591e32c7ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b3c6fc-da22-406f-aecd-139a7643b7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcce2f01-2ec8-42ff-b655-a353352a0fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1efc8e9-60cc-4291-9f87-b9e784c2589d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67892fd8-7c5a-4b5b-9bf1-4cdc9d8956d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050eb2ca-a711-427d-b660-b3c1b8e39ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc31844c-f31b-45d4-bd3d-ab16ee8ed52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "71911fc5-20ad-444a-acce-445d5d789f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340086f8-1da7-4ff9-ace8-a2418974b9c5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb7905a-2144-4adb-9319-b64aa7a6ef8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04abc26-e7ee-47fe-9de3-9e37bc73c0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f09f84-7b91-47ef-9e21-4eeeedcaff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d639959-d1eb-4beb-9355-cb17e78ca723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a721ec5c-8563-4af1-881a-f7d98d298c80",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28005c6-3168-40fe-9530-dbb8356b694e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06296e79-4a45-4cab-a055-7d26d44431c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dd94ea-12f7-40cc-b486-b8b97b930f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a8cce8-22d7-4445-bf6f-899ecf576dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5675aaa7-fb1b-4df9-94ed-a7257d6f674e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9d02e0-714f-4923-895e-5f330204fe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e5b06a-01c1-45ac-804b-3d51cb310a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5741efd6-5246-4c50-b849-b4484b072eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f63c5524-9183-4ec1-a087-ba055a61ff46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61440e63-71c8-41e4-a2a3-625cca8dfcbf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d0728-8de7-440e-93d7-fce8b6196991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f870cb0-9290-44a1-a693-36822443942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae355171-b016-4ef5-88c1-146775d8bef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "896cfa9b-c3db-498a-899b-40c4f9cb2cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddb0125-e598-432e-a5d3-e19009de534f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c2e7da-7bf0-4e72-a7c2-175928d8d931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecf7f24-34e4-4577-90de-60a34e110db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc16043-b870-4355-8d5e-13486612607a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "535a9450-9b18-4a9b-99d4-7aac2287f6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a901b22b-8301-4200-8628-003c4c308856",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a500608-cd9e-411a-bb90-3940d7f7f1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5657ba2-d232-41c2-ac8c-f51dc3fa90b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a96557-eeeb-4386-ac9b-b72d08caa3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b5bc20-0726-4750-8e8a-a6409cb3d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa95ccca-af63-4fd0-a92d-65e51b654ed2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b7e1c9-6fb1-4b8f-9a36-d6a07c0c2a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e249dad3-5fd3-4fa5-b21f-88eff45eb07d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269606fd-f100-4974-bfbd-aeaa0e956794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d128282f-ee44-454d-9c55-fc347b207f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea0149c-3fe5-4fd8-bfa1-13381f884f55",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f106daac-714d-407b-82ab-1510ba85531d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce401e50-7f6b-4e93-961c-0bd12535ebfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaf1ff4-c216-4d97-8613-629227c808e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1efbb9db-6c31-4a83-938a-b5258797d2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2550c7f6-9424-4fcc-941c-027d61112ed6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c95ffe1-1e1a-47f0-8040-625d14de886c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d08b1a7-b094-4099-96d2-f4d1eb8b68e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4747ddf0-c828-4a28-a2b3-05835214d411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e38834fa-dad2-47d9-bb9b-8365ca067fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1098ed-35c8-4f8e-bec1-dd34b965be08",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ed8a11-2964-4b0a-8eef-2b47462e5efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f13b48-08c8-4199-ac87-fcd0c9954534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9348ae42-0282-459b-9570-90e8a4827446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "761279e2-5d7c-45b0-9818-e4088e8c7261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f17a13f-8522-402b-bf0f-cf272e626408",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908f38a3-383d-424a-9741-cfaffbfbbf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97895b3b-db76-42b0-a77f-d3932c5c4a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32ee4ae-5c3d-4a67-ab15-63faa92a2209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec6248f-97ca-4329-9910-8a8a6afb4839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17c3580-8b4b-4810-9fe2-1a0fb838847f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc45de1c-90cc-48db-8647-b524ac3a0ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d80474-91a1-4e46-911c-5b62a4d12ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8e2bf4-a571-41ce-a0c4-981e52b9e426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b115c91-bcfc-420f-9a83-955aff07eb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63187fd4-155a-4d02-b609-49279b53e59a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9df91c-bd3f-400b-882b-ff2b390041c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0419ddd7-a5a3-43c0-a2f7-1f79a968cdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d23f8b0-b2cf-44a5-8447-b1fb36479d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7e26b4-3af7-40be-841b-65df789cdb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac890d1-b22a-4a38-84f1-890ac1784630",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e19663-9594-48da-9726-51be186dc4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0571317b-4255-4ccd-a61c-bb507dc34930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bad875-ea49-464b-b7c5-6a628f579466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa772b38-1be6-45fe-8075-b41bd629d572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f171dc-225d-474a-bfe2-465e0503f02a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7c234f-d5c2-4146-97b5-5b9d847c0aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d7460f-643b-4687-a22b-e1ec2e67aedf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713ac73-ff7f-4005-bf31-c85117a42a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3477c908-0958-465f-a435-a0247da0ee9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39be9c1d-3ce9-4cfd-bb64-0ec7cd892916",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4101c4b-83e8-44ce-a2f8-f251fe0d5569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c186b5-c24d-4311-b2b8-a399e52c4b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff9c6af-fa77-41fb-a9f8-dc89f228c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf9a29e-904b-47f0-aed8-b7ac2bce45ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c903bda9-3cf9-4082-8aa3-f75e71b28518",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32623637-242e-43c6-a19c-1df76e8c8b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db0093a-174e-4c71-b732-ad3095b034f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c91f5e-3051-460a-8150-afd58dc95c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0acdd986-df6c-459a-9fa5-bf8b5a8a0f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1968c86b-3343-4f30-b55b-455840ca23c4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee724d81-ca9f-47c2-b25c-80c692f76b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7163a4ef-4dba-494f-a130-63dd2b2dbc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf59fcc-5131-4096-9df8-5d87922de6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f845db-fea9-49be-8595-23881483581e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a5a923-5a0c-4ca2-9929-68b34f6e5cee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef015fc-9f4e-48df-80bd-60cd54c2b771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50018ba7-e03d-4686-9a33-630d986aeb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707275a0-15d7-45cf-9153-a791b95c0f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68bcd64a-7fd6-4cb8-bcd9-bc41cd74b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d1eeec-1b0c-4d24-972e-9e492a99dc72",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f31cd2-4f31-4d25-9681-c159e15af874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a86549fc-f1a3-47c5-bdd9-5de5c30a8827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5fd407-6163-4952-9db4-210edd405673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbb1972-3696-4064-8624-4a85c11a6c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48a4c68-1644-43cb-ba99-ecf4bd0c1025",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd01eed5-7ca0-4158-ad24-7d1de3d17eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a96de6-48b6-4b83-a134-52d7a3668106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc13f83a-4bdd-4cff-8edc-18b9264df675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b76c1e9-97bc-4286-8db1-255fc3cd6742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c86cffb-6856-40f5-93c0-7593919ceb54",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d127ec4-1f81-4a07-adc9-401166e2afcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58471bac-5584-4459-a050-a7d669dbeae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f05d7d-5fb2-41e3-9170-869eb4980d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9508b8e2-6e05-47c5-b018-299af8ae4c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a167d210-4687-4ac3-86bf-acfecf335e87",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5099de2d-054e-4e20-9f8d-9c8707a54e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a9cee0-d854-41b3-8c9a-5257eb66fe75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e0a4c-7ce0-444c-b798-1907a91975f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05adc048-c3ec-46cf-8939-f4a92719067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acaa102-6392-458e-81fd-ba1fc7a73339",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d125cf5a-4ade-4f70-843f-544d0e369fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029f04a8-90eb-43ca-9054-edbad97f272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65a9ea2-c310-422a-bd02-0354e5529864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87d132d-acfd-482a-9b54-b27a1ad198f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99419d5-5bbb-4d3a-ba91-5804e91fe427",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73213f49-ced4-4402-ae65-ffa9ccd12675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87003c3d-b998-4529-8ebd-d8130cb7e507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d5b87c-58e3-4296-afe3-edef5f3f8662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04f1e505-31b8-4f09-b1f0-07e2ce281342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7dae7b-3821-49f4-a7af-eb54aa83904b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d86b6f-5a58-4ad1-beec-d1f39c649425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1888f92f-91ae-4908-b782-dfea1e45d15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ef64e4-c217-4f62-ae0b-9c2a49275036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4847bd96-3408-4b1d-80df-2f442dbfff8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1cd69f-8ac2-44c2-bd7f-58f1162d848f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00581d35-5f49-45d3-885d-7c9fa7454e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325cfe79-34f4-461c-b443-d68f4321b039"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5582ecb8-9162-41dc-bb4e-1ec6ca7de6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aff4bbb-83a7-4852-aedd-4bd580ab41bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06861e97-1539-4b81-b2ad-e70e8e0e877a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aba4c84-b18a-4773-8b68-f894094168b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b362c4e-9cbb-4847-838b-647093555145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c540f5-e3da-4466-bbda-6411a69a9f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf916b9-c41e-4919-878b-bd38189b027c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fbc9be-df64-4356-9fcd-9443bddebbf0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a53a3c-0513-4335-abb9-bddbe6951fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d80ca7f-4409-48d0-8789-d234fa3387d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287e9cb4-911d-47fb-906d-27f52e5d086e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "308ed2e6-8f1b-48e3-9c07-0da8acc78192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56d8dd9-8184-48b8-9c4d-bf8e2b77ec86",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7801b5f1-dc29-4b79-a25f-42dbe82248e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e419607a-9fdd-440c-9787-ba2b3acca752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d7acf3-cbb7-4bc1-9670-de46035bca1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223dffd5-e3d6-4871-aa95-3128356d5de2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0cbbbcc-466a-4df7-b58f-17e9daaa19f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "001298a8-0447-49c5-a299-637cd74f09b4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6982a08f-4da8-4e44-b6ad-69387d59d8f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "932de0ad-3fd0-41bf-8a41-668d370cbbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f2b7fb-7ace-4dfa-9058-808765b624f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "931fd6a8-a08d-4325-a89b-d3f76f46aee2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d43beaff-31c0-4903-b1f4-104e75cb7404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2dc05341-c570-487b-9c1a-328eb7ec0264"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e63ee01c-21e7-4c60-8b11-1109f3f89f5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16886efb-38b9-410b-a873-186cbf6a896f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed1c0382-9a0e-4796-9c20-a9fdd4b18e91",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2a95b0ec-d80a-4606-9b01-68f48922a890"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba74d58e-2db3-419c-ae78-f904a12b3d53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e193e56-76b8-4e8c-924c-c0cb6a09fbe7"
            }
          }
        ]
      },
      {
        "id": "c4daf72b-0d05-4742-a5a5-8bf9751896bb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0da0b881-6c6c-445f-b49b-9af8ec052922",
            "name": "Negative Testing",
            "item": [
              {
                "id": "019b42f9-f347-4a65-bb59-c44cb4e3e08c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa61f58f-10f5-48ce-8c32-edcd31f26381",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71985245-1160-4a1b-8ef8-b54e64254035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cf5d27-89e9-4774-8fde-08a7926e151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5045fbf8-9c61-45e5-ac3e-d556ba2f9804",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cd2c08-d90e-455d-9963-b20c553dfced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb01dfe4-2dff-4a6e-8b0b-77799c8cd7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fba2a7a-576e-47d4-a504-c13cb1364e33",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d93a04-36ae-40f2-8366-ad789152c25c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5de4fc1-6b2d-4f73-962d-2c66db8508c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badffe22-a39f-42d8-868c-60a1224e4536",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f134e9-5089-48a0-9c5d-fbf54ab7b3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6bccdd-3378-4b78-9618-fb0bffc5ec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5e4006-c211-496d-b3a8-b9766e5cbc59",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed49a866-868d-4a40-90d3-732d1547b596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856ff7bd-1fe0-47a0-98fc-80a7793c5a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7011d1d-a9ba-4b0a-8254-425df6c1ac85",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc24211-4ee4-4043-a7d8-7f7c9a6ca78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250d8342-1752-4bda-a267-c6da9dddc616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37cad54-c490-4c2a-b494-1cb0c5050d13",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172163cb-f9f0-4d27-b1e4-5cb9065156a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968d5fc2-5bbd-45bd-8499-236224029786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353450f4-428c-4d65-ab67-f4c249c8c1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b4da264-403e-4a90-a9f5-534af5b0b797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5cf7c4-1a1a-4589-a5c8-9083b7e76a07",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0016ebb4-674e-4e55-91bc-799b630b0c7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad472b4-0ced-43e8-b243-31b9a7a38525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b279e-8137-4704-b9f1-4f43f67f4c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ef2772-e470-4e6d-b5ff-132e8f21a4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234ad635-dc5d-4b8f-8a2f-db7d4f2bc6e5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed57e06-ff7c-4a45-a689-652ee3eab353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0857dc28-7274-49c3-a9da-915e49b492d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e81667-ca83-4969-832e-70b64cf87af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6167ce1-e360-495d-97f1-47301a54dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b60ed6-6d9a-4eb4-9b5f-757248b6dc0d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43945721-c118-4757-a77a-f70a2dac191d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30224f79-359c-4af0-bc35-8bc2480d1603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21413f5b-0164-4b25-a10e-b05eda9e4af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d0f462e-7f27-4c48-8367-6bb3963776a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c351e8-41b3-40ec-925b-83e534e529cc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c993a-2e18-449f-9d18-2bfd77e62892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cff3f5-8483-4b18-8a78-87ae8555ad3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d71ec30-9c67-41ae-8ef9-e4a4e3e7dfee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85acf34-b1d9-4062-85d6-15dcf2c53c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d5ec66-9860-41b4-bcbf-e3b14e1f9501",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a8efbf-62af-48f7-9dab-73091b1c9d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ffbf1e-5bcf-4220-acc8-8b58fb45fa97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f75742-35a5-49a3-9c9c-96d35c24254b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2788556-b7db-4fef-9663-3fc449bdac7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc7786a-1ae3-4069-9193-6ed0d5806f91",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08858c67-d8b2-419c-b495-ada932551ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52db2b1-4ab4-45c9-a353-8d9ea2a6380e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211a0af8-4f8d-4f0b-a193-06818a5bc85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e8a3dc-5345-4f92-b079-bcadd6120b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183f4dda-c534-49f7-bce1-47f9f2046a58",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5181a5a5-90cf-4178-b40f-c21a9be66aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11deb12-bb29-45c0-bcc8-794ed87936f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d195d0-0d61-4c14-b886-80affbef3801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f6258f-be7b-49e2-90ea-a49346dcd21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc1b10e-e1b0-4bc9-b228-fb4376a6f00c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f670eb-997f-49c7-b46f-d310adfd99aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566367dd-7076-416c-9114-963332c6c0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "babe944a-882d-4416-99d7-4924448cf232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534cd990-0d11-4258-9f55-c76b29a85c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e6fc3b-cebb-4197-ad0e-67d6bac4eed7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ced445-70e3-44cd-9c8b-25a98fe2873c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3393852d-778d-4eb8-9c49-60834eb611e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a99870-f569-49aa-aa45-3fcd856c7ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aabe5c0-7e37-45df-982c-6baa549253a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f5ffaf-5ce8-43cb-bfbe-6ff05d0c30c9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483de108-80d4-4d5a-882f-579030cc2daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7038472-0f68-4574-bcf9-3d3cd7fcaa26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afe0d16-42ef-44c2-adf3-f766960988b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb272ad-b66e-45d7-a937-835ef351e9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b7907c-f8c6-406b-88c4-879cc22001f9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ed67d9-4e36-4a64-bc5e-5e2cadf5b9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c9be05-cc6e-4c42-b3e2-959e1c1757a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f628735-5c27-4cae-b0a2-6b2b9984e44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e8a07a-ba71-4b55-9059-3fc1e0e2ae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cd3777-ede0-4910-bf49-a084c43c4c7a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b6ba0c-e4a2-44e2-b299-72d4b4d5f87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef90c2d-f9d3-477a-a226-167501288c60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d921f8ea-9299-4054-89a5-a5d73d0f8f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1a5119-145b-48fc-b04b-40a24655c429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc736a-54e6-4b4c-b129-36a8f8b9ebac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15fc3317-66a4-43e0-b346-d966447ff061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b925257a-c026-4475-ab8c-86dfb628834d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d127c07e-c579-48c8-bef6-0ee2daa7be47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a260d76-b186-4d4e-861a-dc42e17c2a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055cf1fe-0994-4f9d-8ab8-eeda51b45625",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6694e89-7413-417f-b410-0c0c3fcfcd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716adf74-f834-4633-a858-c7abad2c0343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23db178-d376-44e1-a55f-38034a60d404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3214cde3-54e6-41fe-ae58-91451ae975b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cd8a11-c424-4dbe-8367-b22eff4dc411",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5c4e9e-583d-4645-aade-1a3d4efb4872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b66660-bfe4-4d27-adfb-b1d5c72b89f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "025d337e-966a-471d-93e8-4fb310363078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9292be2f-1f99-4895-8595-f0ffe357f544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8f9702-6c43-45ac-a5a6-f51d6ae577d2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ff4571-f8fd-471c-9c00-d58c6da5ba61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f1fc90-10f7-4cfa-9d90-3e145c8f1ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1c6b8b-d772-40be-b465-abb58f7819ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c36525-528f-4888-ac80-841bc490ce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab61b7e-b5ad-4c6d-a2a1-0b2dc0731636",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fd7ba1-f80d-4d16-aca6-185de21155a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba628c77-57e3-49bf-9a81-a361105f3b44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07368b89-d0b2-4c4d-af15-a870fec8bb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4df570d-5ba0-472c-8f20-d7f825283262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772b7da2-927c-4db2-8d77-c58cc88d08ac",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3903731e-417e-4d2e-ac45-d30390f8be06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d8c173-8396-4bfb-be4b-d827f75beb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87ec99f-cf9c-490f-be52-075fc2b74f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821021b4-c2f1-4691-9281-d45f0a83400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee494d8-b2a6-48bc-b40d-8f481b988a60",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27198b02-e2d6-4dcd-8083-526ff4577087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef35f6ee-9751-4f97-bbcf-84e64415a490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac69d1f-e726-48ec-88c3-262dd66c4c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09a5ea5-2366-4f0f-82f9-f8a9b0d7fb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ffd68e-2e18-498d-96d3-205498840fbd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76339587-0616-407d-bb61-87afe75b6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0007355c-5e13-4543-9e91-e8221cf4860f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5574a55-83a8-4b11-9eee-6b9452080906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "853f0cda-554a-4a57-9812-2a5cb648a5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c82fca-fefc-4e61-b8c0-0d3a0b560c45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371f8ac6-b4b0-487a-8b45-80390c61948c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ac05c1-7915-4738-95bd-d5143ee06b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e9237c-f240-44d2-bc6a-0245da37345c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea5ee42-03dc-47e1-92e0-cf894c899b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5ab56d-ec75-4453-834d-02cac1983026",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbec7028-39c9-4cba-aeb1-ad2c432158bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b497533-40ca-4e57-b495-ea4b83709c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc15ba16-8c12-461d-9781-6523ec1ed2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6451a50e-b0ea-40e1-abb0-4ebafd665543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085d789c-fcca-4c2d-a336-ec374993e588",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b602d89-3c48-45b0-ac51-ca4cb29864cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf09b44-9100-40f3-a469-a1bce6bbb50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb1103b-bf08-4f3a-8342-a9c4be61f294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f586d1-975f-46ed-babf-78e42579f34a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbc1751-677e-4341-ae50-4627bc5cdc83",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c4140-994e-40ab-b3dc-9adc1f3a398a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e7364fc-f0aa-42c0-91d5-fc48a480be77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91790e29-c616-4423-9231-c6a5bf18cc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492b569f-38a0-4428-97ca-2f248355d138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a44d653-302b-48d0-b1c2-6270843bf76c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6de0d3-4951-4841-8102-b99ab79cb52e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5b96a5-b2c5-45a9-bcec-7f9ef9b5c55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb060aa5-e959-4726-b11f-d61db42dedeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e022ba13-ed84-4e4e-ae2b-83734d17df61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4455d423-a908-40d2-8d2b-ec5580d0db46",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19b4905-1b27-4489-ba58-2625f943678c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8382066-72f1-4fa8-a710-33cd4c5c6e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee0d517-f489-47c4-a640-0ce0ba3c6851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22d69eb-62a1-41b8-a218-8de64a25087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd31bfa7-9ddc-4a0b-bbe3-a3279203f71e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b7bf7a-3efb-49c0-aa39-0597fe1f303d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc0c175d-bc4b-40ca-bb41-1ee8ff48d1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80283e2c-30e8-45b1-acb2-0d251c5c5d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75af3c6-5e1b-4fcb-b3fa-1f2af6a3a075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12838fdf-cc49-4c94-b4de-beee8ef4d34f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb0047-66ed-420b-97a2-cea957d80445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e318d9-fc8c-4210-a77a-d504916173b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59786987-69d0-47ae-9e12-5f8781bdf7c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e52e9e-6c26-4dba-a860-480d2849701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b9b35-ee99-448a-a57f-211fc7ef1644",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57005f2b-1b18-43c4-aece-8e6a1e88a971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aca62db-d4ce-4aa3-a002-34a452f2c705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "145f27cc-0d3e-4416-88f5-049fffda596e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e750471f-9b3d-49d1-a878-5bc85f0d686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358f8330-5f8c-4e8e-8c75-57a1099f544c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e900b561-1425-406c-ae71-8cfae29d18e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04418c7c-1e81-466e-8e85-69a016a54648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a25118-36f5-4a1c-bd78-fbfbcc4d1f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eeb9cc-62ec-4388-874f-5b2f0430ea80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3675dd3a-ab98-424c-b64b-96c1090b3d81",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009dc5b-cfe5-4fbe-87ee-797780e4fca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d5b0a2-373c-4fa9-bfc1-6ce071a036df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bd847c-f0b9-46b2-8d2e-50aaa5550497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e54aca9-71a5-44cf-8c99-fbb56d80b06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1cc857-6879-4042-b79d-ce478a33fb78",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc34f1a4-29e8-44fb-a85e-12633418a63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203040bb-8679-460f-8f4b-686abe2fbf1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dd818e-02dd-4916-9fac-c6fab9577c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9ea2b7-6d3a-4705-8ad6-4c0ece6dc3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd25707-a625-42ab-a762-43eb687da3e7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6c525f-2b58-4062-927b-1fa90f5ac383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7806de7-5add-42f0-ae8d-0dbc47aa9b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c393ce7-5586-451e-9122-0eb2c5641262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1886520d-e5d6-4b05-b2ad-6f18bbe383b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d710f3-9765-43f8-858b-9834e90cf75f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e1d40c-669e-46a2-a8a9-6beffe5aae5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732161f7-be20-4485-8801-da9e0a5c5133"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7c6345-dd75-40c3-b1dc-0c3c36ee7bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3296dfc-fe27-4812-8bd0-43f2ee9a2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623204f4-7d4f-4655-b185-82a2a341704b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b850447e-1088-4c9b-b624-5559aeb9415a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385f5f6c-734c-48d2-9cd7-d114b059c69a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d97a3-e5c2-4522-abc6-78b7c7d0518e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b47c0c5-b3f9-4d98-b34a-15601d14db55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b9023b-36f1-4e65-bebd-2da15478e3a3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb04e93-2593-472e-bf54-31835f649495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63a8452-4f3c-4dee-8ecd-9a5bba52ead5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c18ebf7-eeef-4e67-823f-09241345d6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56561e7f-38cf-4846-9408-3724a8f4787c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815cfc6c-d14a-41c9-9a18-d778ca1f9610",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cec548-4969-464b-aa85-bc8bdb64c3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a24fd9-065c-4ea3-a821-a1b3a343ff03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4452c57-756f-4e2f-9101-22002007b9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9934c06b-e8b0-4531-9662-fef0ef080792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47396479-1a0e-416d-be61-24b6f3dfeb95",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660f688e-1a88-4f82-8fdd-9451bbd3ca42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897d82a8-bc07-4912-b258-7bac6ba86900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed738e0-df2d-4a62-83f9-855e292db9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efdae28-db3a-40c2-8e57-2ea68ef8ca16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56972acd-cccb-4e24-82be-0e441f6e7f1a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fd1e14-69d1-4176-8bc1-ab232b88594c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2a8090-cb8a-484d-a3f0-eed5a67d6a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a5ae31-3f3f-49f6-b3a1-a209727e8da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1162a57f-3822-4cd0-95a5-8d41d1adefc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973111da-8e68-4e41-a419-bb6ded4b9501",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c66499-7fdd-46b0-8ade-c5fc135f8692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a12924f-6edd-4436-8186-f9fd1edbb021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2cb981-25e3-4645-b254-ac839fe8ab5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65210a06-7413-4dd3-b4e5-95f858968e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65554c3-7876-4fbb-ad61-339c5df18c6d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf31fc-0d88-42fe-b3bc-0b27825939b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af751072-26ce-4085-b398-c85435da3e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9502a0f-d239-4a17-82a0-ed6746c07709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01106c4-caa4-4508-91bd-85438fec8fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446accf-7c88-432f-8864-1754dd53624d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4963e1-b07f-46c4-8b33-0b4dde62b2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a3f46f-96ae-4fe4-9c3f-48353c0df228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9f8cec-88c2-42a9-8d0b-835b5282913b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac0ab81-26f3-439d-9161-32c893276573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceccaa1b-392e-4984-81bf-ee8f5ce05058",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354b968b-5cfd-4960-ae3e-ef82385f2ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384491bb-a8dc-42d0-9ff0-aad03d7e15b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a85a2a2-49c7-4e67-8bf4-1d179f994227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2ed8ba-a78d-4477-9389-d084049479e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85fcaea-73ab-4351-9276-19eaa7eb8b8e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6301c3-eb05-4ed4-9ab6-d89d4c38255e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c5f16d7-7fe7-431f-b151-c84231fb4c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3dba3f9-1686-40c2-83cd-2d42a94ba1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1dcae1-4544-4dbe-aed4-c1c5b7743d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6dd2e2-6af5-487a-abac-644f2c8f81ca",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2334fc9-4576-4ec7-a74a-53655c555f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed03d58d-3e44-4aaf-bd1d-57be2ae69ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63abda0-ece5-4555-9d9b-de314ea77fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef92cbc-cebe-41d1-932c-c316e6671118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf7eb8a-f2f3-4841-8deb-948c9c950864",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccbafd13-9eb8-4385-81e6-accd2d05225e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4438e64d-2189-48af-8795-0debc396b5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f76237-28ec-4d44-8bd2-76b944f51867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf5be72-7e12-45e2-81f3-e5a79673f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c82299-6285-4d8f-92fa-ad8cf58666d3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbbd49d-97a8-4b2e-a48f-8b299f5271d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ac7112-80e6-4aba-9c3c-7620b77a1d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c8ab7d-1c9f-449b-9025-7199eb9e60f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb22ad7d-591b-4642-9ab9-8c90bb34a8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96aef451-7b97-4332-8649-3e8c87600678",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ac9fd8-024a-4a39-9327-d8a9a5d6c431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1566f21e-129f-4fa5-934a-bb56829c0799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ef0d4d-abef-47c2-8f55-a4162e577d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10beb379-0f26-4b84-99c1-c298fbd9937b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f980d31e-95ad-407e-87bb-503cfbef653f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a6bc34-eaf7-4a09-bbc6-80ca1e48d831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223b9f20-fc93-4d13-b50f-e532e8a226ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cd6fbf-35a7-4838-83b3-959765b99c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841db98d-3539-4744-9f81-08f514d8fc76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be317ca6-c425-4ffd-82cd-5803f5f688c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592dd160-38e6-4eb0-9c58-e0f055088b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96f1eef-7eea-468d-b8d9-83fb71450637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848d3bb5-e25a-4a66-bed8-2b1fb8ab0c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bfc12f-5dad-463a-96b9-d19ae4a5e36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511375ae-ffb5-494d-8a3e-f6352f843acb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da276cb3-1343-4080-8bef-53c22cfc613d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23182a15-ac9b-4c7b-9d23-5b1d500897ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb50cec2-5e8e-47be-b1ff-635ced8c4161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1519decb-4bfb-4389-8bc5-3dc235449e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b230a45b-ecd4-4f42-9c4f-d012b053f4f5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f83a750-1acc-404d-bf9d-ecbe29aac7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3f9f00-ec3b-4e5a-9bc4-4c9ec1acd4a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12ffde-4087-4ccc-ae03-92102fe17b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6fc659e-3211-490b-b692-36d7bafec3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2065f24-2172-4186-9d48-0cdde4f77824",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1fcbc8-fc6f-409e-a3b5-6a7400a8f15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90455f8-4307-4ff7-8ff1-0afee563b88f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c9618d-7db2-4c34-9b1e-358228c4f79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60650daa-3006-4c43-9325-3c88584576d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662cb163-ff35-47fc-8618-cc80942a4a6b",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087a9888-2c42-4902-abd6-5926e857a4e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24464a29-3691-4a31-b6f2-d4c60ee575a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53216db-4e79-495a-8e51-20782386a81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3777c69-8b12-4d12-ab8b-e359adf8afe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79da537b-43f0-4034-be73-61b9820b355c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf94c33-eb70-4eb8-bd6e-925780552a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40adc1a-0543-4bb2-b141-5a8c84684204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2091a875-1079-4d21-a06d-7cbb19529c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f62995d-90b4-461b-885f-1d2cd68a49ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c68bf9-519b-4b76-9f51-ce14804ac73e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e80fb1f-99ff-46c5-ac6c-c43a488644b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f419844-bc05-4f85-99af-1b9d6abf89e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7365c4be-f15f-454a-8993-aab2d10a3697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cda666c-5d62-4824-b323-8707a2a5312f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf7d9b9-d29d-4fc5-ac17-839df8037e51",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f0341-9a3f-4d8a-8faf-67953382f080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aff5a97-dc4d-46d2-8005-917c31b55d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a00dbef-9f56-4467-a657-54bead64f7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70b0b80-b3c7-4f19-a307-07fe73261740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3db5e8-c62b-4b6a-b7de-5450407ecebf",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8589e6f0-efd7-4b31-a377-34d3af8ad2be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08465bea-c2bf-4b51-a35c-45e09f015d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7bce05-b604-400b-bded-414b4f2f6b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98fd21e0-7982-487c-ab8c-e7b2bf059bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71c257c-c5af-4697-a0b6-1b1b69ca9669",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340cfafd-af7a-493b-8a0c-874a2f38b261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cfde26b-97ba-4b6c-b9a7-e22306db0ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa26ef6e-0033-46a3-9076-6848797c989e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6105f638-1e8b-48fe-84f8-548a5dd0f14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a5a962-c81b-4dbe-9d86-c10e0fcb7a82",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e3b95e-6692-4114-b344-f49137d15748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "386c3ada-442b-4176-b9cf-1c1e11e1fad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a67d6c-4b02-4478-8c5e-8b5c02ca7630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d6c5f9-b9dd-43ac-901a-33c30c6aa672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ca16e6-2aa0-4297-8591-453a2d07e2c1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202e1c26-bfe6-442c-98f3-a00d7934b5a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d984e46a-9744-4b97-9645-843245aa6f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74df7ca-62fc-4f35-86a6-0f98612af9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7ecf88-377d-48f7-8024-0f703be8d392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44389e5-ff69-4089-9b71-628a19b61b38",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9122f6c4-df37-4839-b09f-0552ccbf611a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e4bac5a-db04-4a31-912b-deb66ce0aa58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e29977c-0917-4f38-bbe6-6b1661687702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d91e23-3386-4580-9e73-c7e94ca0359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e882a14-e44c-44a5-ac0a-5205509dbc8b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3e4de0-80f8-40cb-b7c9-7eef9f3797a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50a2dce0-7a83-498f-b58a-5282323a15db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa2e584-c34f-4cb2-86a5-8c7f2cfa8cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50a945dc-1dc9-4dfb-8322-898168043e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e161449-7f3c-460e-bb3e-42ce58a3fd91",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189b5782-a726-4d9a-a468-af2a16c7849c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcad9c81-6ed1-4efb-a604-e8d0eba29084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e0e50-1969-411a-863c-4c8053605809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4ef740-31fc-43e5-84e2-739cb8f6286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0186a629-5a8b-49df-8d5c-d0467904d48f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdbfb36-0c29-4cc4-93fc-9138ed8e06d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e22e26-90b4-40a9-bf9f-36fff789b6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164db18d-5c15-4a55-a492-16a9f7b9c3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871e2325-799d-45e5-8521-3f54634b6676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0b373e-3664-47b2-aa13-16b96026c380",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4cfe5f-5189-49d5-9baa-b35cda85ad84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26aa7dac-d71d-4928-bfb6-000fa808a227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7493c907-26bc-49b0-93e8-0363e8ba5602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d83d4d-2ae8-43b4-99bb-92f37f663d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa7180-c7f3-4b18-a004-8aed7d76b958",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ce00a-5d35-46ef-a193-70211230c6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d5b4eb7-1e10-4002-9955-a66d49149ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b56456-5aa4-42bf-88e7-d7c94421a965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc8bbe3-8b3f-4988-b574-6264980fa242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dcff27-1d5f-4c9f-a5af-defb370f48e7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08fbbb7-237d-474e-96ba-11e9305f7888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a3c94e-96be-4b6a-8516-11e38969e5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecde861-a96f-4805-aa35-98835072ff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5acd2d2c-57d1-4642-8dd6-cb3953db7e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0f82f7-0209-4807-919a-12b5c7c39675",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a12225f-c473-4c49-b952-1bb911f63111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6088d343-07d1-4545-addb-6729f57c9768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535b076a-a765-477e-a584-216665cb142a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a2e894-d264-40d7-9a22-5ce2a745dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8935d73a-8ba0-43fb-bae0-87a017e0a964",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594f05a1-9eb4-4797-b69b-756558485652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461eb348-b2a0-41bf-a322-5d24bec277ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b468226-fd6d-4117-8f61-65a795009ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b353166-061c-4175-9e72-2dc5fe052cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c202577-ee81-41d9-93b0-826f797739a3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd029613-0168-43ae-80ab-d54125eb865b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b57250-4fcb-4025-beac-8d77ecae2edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f785685f-6afb-45f1-8c58-429136c7460d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2285ce19-da1b-446a-bb70-f33ff337d4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc14661-a0fe-4d0e-91d3-3c8f5ffc5704",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d494a95f-178d-4310-9ce1-55a6789ab148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ad9cf9-2090-4e0e-9065-4b824862e0c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e55971c-20f8-492b-979f-39d626dbf928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2216457-c34d-4cdf-84e3-c6f4e018e714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eff883b-3cdf-46e0-a0cf-ce06889e8999",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caf7d5e-253d-45f6-9efd-f9c71d008cfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8d5851-0ee3-4e69-8202-e85bb6c8c86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afaf0a77-a6eb-40da-820d-3192cacccbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087497bb-416a-461a-840c-ce871118beb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ff336f-c011-48a8-bb99-7a19e60b1da1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4472691f-20be-40dd-a364-e01494e9347c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edd3a903-ef87-4cd6-981d-6c0644c296c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f9b1d9-b0a2-4b6b-9576-d1434d1a24ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd78d901-4b7d-4543-846d-ff38850af975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef0d967-65b8-4f96-8b09-36f30dddbefd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6286c2-347d-430d-91af-8e165c28807e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0970a3b3-181f-4a48-85c1-c66002ed23b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8f1e04-de46-4bba-8b6e-5b1f75b51c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "833cef27-135f-4517-bd9f-da53cbac5ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e29e177-8ea1-4279-9c78-337d386cf410",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3a32fd-a6f0-49dc-8976-c3ff0cc7653c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7fb859-791c-4c78-afa6-6dd383696464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd31a6c-e1ab-4b2c-9a6f-a0e3c98ac37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0166a301-be93-4fbd-81fb-f09d4fc6f034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c152738-9379-4ed2-893c-1739aab8ddb1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d31be50-aacc-45e1-bcac-5c56b545f11a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564c349d-636d-4927-b8be-f933bcc6597a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c79d8d-ca09-4e27-8f9d-425117bfaebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c698e48-1d2f-4116-b072-d26ca455d20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5bbd7c-2c81-48ce-82ff-1e622f75fa28",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e895c1-f08a-4fae-b3f9-61de8b3e5ff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b0bb736-4d62-4fb2-8f4f-da30b1a7545a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7741c071-ad8d-4294-b4d1-46f999e922a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31519562-aea9-4076-8144-bc1b7fd16862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5e2243-d66e-48d5-a17e-0dfe0b9e6a93",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf4324-b539-4da7-9035-728313c6ef77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ebd014-23be-4875-aea8-3d2e15183f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a860ad2a-4edb-42e8-9d2a-a13bafeffecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293beff0-ac95-41d9-bf2c-9d2bf1de7f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52464de9-b0c2-48ad-a33f-3447902745c4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e11830f-37f4-4dc8-94f9-3c27c4164ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6b5cba-0542-4b31-9571-1cfacf110544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9b6656-20f5-4953-823f-aff16bdee2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c970bbe7-42f0-403f-a704-f6bfcbd7069f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895bb890-9aa4-4230-ab0c-c0fab907837c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bd5d05-0b7b-4b5c-a19b-5ccb47b5bdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54fdb03e-fa93-4c27-a80f-1b915ca74b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f836a0-156b-4ced-b10e-cdb11c1f200c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51ef5954-f024-40a7-b008-591abdbe81e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7dbd38-0138-4890-98ac-45343682086f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676a1902-0c96-4fb5-834a-c54060efa54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26300bc6-9365-4088-997b-b5e865351b24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af531fc-2ba4-485d-9237-9548e0aa5854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3611969e-a7f9-4125-bd9d-823f88f500fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60ff1a2-d8b0-4826-9e48-0b414ba335f4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495fd88f-d797-4e7a-ba78-95b905d3aae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18998ea-5eb6-45ee-ada2-38bed6ef57b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7373624d-3197-41dc-b332-a483b0380d25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37662ae6-293f-40ba-b4d6-8343ce27be41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b187f-8475-49d4-9271-806f5a5a0180",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581e28fe-f376-4a3e-98fd-9ac6e0c9e909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dee54fc-4fe3-42f5-b45f-00cfe6fdfaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3261c395-b68f-469c-83f0-ab43c5624043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af31e256-eb5a-4116-b3c0-3baa3d5493f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5d92ab-5920-4a3c-beb7-e0d929ade04c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b822d6b-1f4b-4e6b-bbbc-f76dd3dad0fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8d6643-2be0-451f-b164-4a2932b81dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97ae45b-8d6d-44c0-9e04-b8bae33f2449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0c0733-1658-43e8-b184-a48874de37e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918f7941-1fa0-4dca-a9a2-0aca39a55742",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56ad13b-7807-4963-a64d-65c0477ed6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e2a913-ef29-4803-aa56-230abbf145b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91628fd8-8221-4f37-b133-9db3c8c327f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1761e69-fb6c-400e-ac01-33c00414ae37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbd5dbd-4363-4bc7-a17a-4e8b4a3cc3f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ba752e-52a9-48fa-9aa6-de9ec863b20e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c671d8a-ab82-49e7-8959-5b7d2ff35352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f104e53-6b91-4680-be99-88c16ae61b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486b0fed-37a5-4ecf-a44d-be0da4e88eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65aed904-9846-49a2-8f1d-fce6f6088e7e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644da6dd-939d-42ae-bba1-990774acbccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09bd4afa-5c90-43f0-ade6-6c53288b6ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d99bad-defa-4b1d-ab06-bb6667c4ba81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607b871a-9285-4fb1-84c1-6d6590380cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afbed7f-081a-4e60-9183-7e380224beb3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00d6188-d332-4e14-8899-9302f6a69571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c70366-42a2-4f74-a9d4-ea3c32750462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2cc902-6a74-4708-94bc-0a58479f38b0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac0041b-6da3-4ed7-8005-22b0b272844a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6b8575-8a73-42cb-b333-bc8168904fa6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680bd129-caec-4760-b346-7483b8fa49b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adfd72c9-c3b8-43e6-a2c3-d8c388a955d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059b6d81-4395-43f9-aacd-631fc07f0233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b714806-e18c-4c44-b079-61ec838dd0fd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0874351d-5766-4efa-8b4f-954ae65d2ab0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fe8b88a-fd81-4f6e-a02c-fec170f8637d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "091c6f8a-5ecd-44db-ad7b-090a23c6e6d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2b56c14-2e5d-4316-b628-51de9ee53477"
                    }
                  }
                ]
              },
              {
                "id": "4504d4ad-ca7a-439d-89f7-a1615b81db3f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d122d2f1-e8c7-487b-bb2b-87e67d6ec776",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70db8f7-3ac2-4031-b2e9-5f29ad3493c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7ca89694-242d-4f23-b4cd-e53f94a1b033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca1389-c417-4dee-bc54-4cd08ee8af86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aba14bf-88fd-42f6-b44c-815167b3bc76"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b12e68e-ef55-4b5f-9d35-0c8c47f86538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7143c509-9cac-435b-af0f-9db5216c82c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5028bf56-fb1c-476d-9b64-15bce702e520",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c0ecc07-799e-41ac-91bf-ecd396f2180d"
                    }
                  }
                ]
              },
              {
                "id": "11eb3aa6-4cf6-4294-a127-51dfbdda55b0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "13ebaa9b-5efd-4dee-a32a-a85394d3e41f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa84adf-056e-462a-9c36-414855fba642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "51f2a520-09a3-41b8-b111-bb68f67ea5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b83f8cd-9638-492d-91cd-1cc48f7e1264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6362b75-5bdd-41f1-8638-8603e4c4b682"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d9b6d74-47f3-4401-a906-72cb42ad47e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "35323d06-7f2e-4d76-a592-14438a17d26f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34fb1f02-3488-4c19-84cb-f019ae53cf4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a3ef801-05bc-43d4-a93e-d6d30a8115ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d83e8b61-fd19-4d1d-aea3-60f9c3bbf64d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f128c71a-09ca-420c-a083-0cd159f60b31"
                    }
                  }
                ]
              },
              {
                "id": "9247fd6a-680f-41b5-a1c5-82d53cb370fc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f55197e-c97f-41c0-9705-c20dc0397b05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c08eddc-e416-44c9-9b95-bc688ef36cce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "510e46b8-d6fd-4bf7-ad08-54e493307832",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a14a3de7-b98b-4455-b35c-647b41558eee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0caed734-04a2-4249-b6fb-28f7404901a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f4c22636-5358-4ca6-bf89-a72548f23c45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fca10575-eba2-4a79-99e0-599e2f2b9fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c70c1cee-f865-43e9-b8aa-c137aa3239d8"
            }
          }
        ]
      },
      {
        "id": "3f4f3c05-8e01-4e3a-bd55-b3889cb80419",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "689f5490-c3e9-4cc6-89aa-ed6f1aed58a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d23a970d-4f18-4cbb-98f3-113127e767ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b758e8-a965-4520-b41a-ef2baaac74aa",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95613637-3219-4aef-bd23-026644fb627e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ac197a95-cc06-487f-9e5c-dff57ac01fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a33ecc-2cc4-4d80-b467-bf3f1c9d72ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d098de3c-ad26-4b9b-95d0-6feb465cc68a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "383ad370-89bc-469d-b5fb-b957495d7e05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d007c1a-ebdb-4a84-a463-259282e6b89d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73528c5a-0415-497a-bcd7-a1cc184bf6e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bf1a66b-7017-4ce4-9c8a-1b878568f37b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b6ab6b6-bbe4-484a-ab8c-fbfa4ff05bdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "232e0219-50c3-4964-bd9a-f6366b51c2a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3371ac5c-e760-470d-b580-8220a5283119",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40ffafd4-7eb7-4c35-933d-366c0eed5847"
            }
          }
        ]
      },
      {
        "id": "3c6ba290-82eb-47f4-ae16-107fe87c98c7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6968a501-2d66-4839-b7ca-8b0152de74fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5651eb51-34e9-49f2-acba-0ad8061b2571",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8952e3ef-39ec-441e-b44c-3ad13a2c4fa5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4dd74e-9382-4de1-a4ef-00c1578c63ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e238cbe-a065-4a97-9d1f-fd9a913ce874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0412e282-1e03-48f5-9c80-dad25659227f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0aecaf0-c846-434e-8c3d-937e15fa55e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f07de57-241d-4cdd-ac33-d1d4f3543b9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79ec445-3be3-45fd-bff7-116ef319c8c4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bead1f1f-160e-4657-a01a-dd6763aeafbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dafd963d-79c5-4549-8e94-673ec13662eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29a2abc9-4eb5-455d-864c-25360978e57c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be8c5141-5745-4643-bd57-61a5fc6fdd34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58a0ef05-913d-48ec-ad43-37a2338294e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c4fbf97-d3f5-40f6-9c34-9edad46bc01a"
            }
          }
        ]
      },
      {
        "id": "c3b70b3a-f325-4c3d-b8cc-ed202f6e00b2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "59e4321e-89f9-4429-906f-fb40ca067327",
            "name": "Negative Testing",
            "item": [
              {
                "id": "388fef0b-10d0-4dd8-9307-e676685e6dbf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cfe5906-68df-46c2-bfbf-232908904912",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c6c1702-7389-4aed-b5cb-2eddc7887a44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ef7db81-a7b0-419f-8e4b-73d3c371f071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdf37c9-395d-4028-b37f-2e89d80fd4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25089e01-69b7-4841-b7fd-fd2d335db5ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8629fee-4569-418b-9451-8ca08b1b00a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "783c5c25-6af3-45a4-a581-27d4fff93161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4e4ff4c-26c7-44cf-9078-71c890384fd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddff3715-085f-444b-a784-e800db097285"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fe22372-97d0-4f51-b357-7dbbef06545f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9d5c64a-0bff-49ad-b798-cd2d9c02fdfa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d9fde8e-f2d2-4dc7-a10b-f7f41eca1ff5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76d01218-42b1-4d86-bffc-492d8375c52d"
            }
          }
        ]
      },
      {
        "id": "2a031c5d-1c39-4ebf-bef2-39d9c1e97ff0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "559de724-c334-4dc2-9de2-2ffc5a405f86",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b52f58e2-361b-4642-88e7-e3cc25bd2e73",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af65e1cd-6463-413b-8261-c53550ffc5c1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef7b740a-4335-4db9-a8e5-719a59b9a88b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce1b09e7-adc9-4157-b965-71ebf29806b9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.298245614035084,
      "responseMin": 8,
      "responseMax": 267,
      "responseSd": 20.617455483311755,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697589230664,
      "completed": 1697589246286
    },
    "executions": [
      {
        "id": "2bb07c7d-b23d-4a7c-ad8f-8ee642a05977",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eabba7ab-9bea-42ac-b324-8d35856741de",
          "httpRequestId": "38384754-a2e6-42d9-8ca4-38f2454a119b"
        },
        "item": {
          "id": "2bb07c7d-b23d-4a7c-ad8f-8ee642a05977",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ad2ef9bf-81d5-490d-9127-9efdcfc099b0",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "0d470dc2-d210-419b-92e4-e2ed537c585b",
        "cursor": {
          "ref": "4af78ef7-f250-446b-af8a-32595c758bee",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f9bf1539-3080-4c83-807f-1196f83b8f58"
        },
        "item": {
          "id": "0d470dc2-d210-419b-92e4-e2ed537c585b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2098c81b-28f3-45d6-bf6d-b4a66df80c02",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "d60a433f-9b99-407a-80d2-0d3b5e98b0ce",
        "cursor": {
          "ref": "cfa174b3-9c53-4d73-8052-d7ef984b03bd",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6c975431-6f85-4e3e-8f31-a2f0e71a5213"
        },
        "item": {
          "id": "d60a433f-9b99-407a-80d2-0d3b5e98b0ce",
          "name": "did_json"
        },
        "response": {
          "id": "31587211-f712-4726-b8de-99e0341b1464",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10092bd6-3cb0-4f58-a0b4-3b77eca3c107",
        "cursor": {
          "ref": "180ceb20-7c3e-4bc7-bbcc-eed9fed1f8e4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "35072f67-f181-40e4-9d6c-e2f2daaff6ee"
        },
        "item": {
          "id": "10092bd6-3cb0-4f58-a0b4-3b77eca3c107",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d334b98-8bc9-4618-a5f9-4ea405774151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10092bd6-3cb0-4f58-a0b4-3b77eca3c107",
        "cursor": {
          "ref": "180ceb20-7c3e-4bc7-bbcc-eed9fed1f8e4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "35072f67-f181-40e4-9d6c-e2f2daaff6ee"
        },
        "item": {
          "id": "10092bd6-3cb0-4f58-a0b4-3b77eca3c107",
          "name": "did:invalid"
        },
        "response": {
          "id": "8d334b98-8bc9-4618-a5f9-4ea405774151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53228a9-66cc-43bd-8fff-4e84ea8936a9",
        "cursor": {
          "ref": "1c7d4289-da8d-4b3c-bca6-8aa18ab79946",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c21bcca-c930-42be-8663-c2593bad6eb0"
        },
        "item": {
          "id": "f53228a9-66cc-43bd-8fff-4e84ea8936a9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9466eebc-5ff6-4669-9ab8-0445f5a43de2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b803f09c-3a67-444c-a1f7-313ad946e9e6",
        "cursor": {
          "ref": "2348d04c-6bf9-4207-a414-bb5a555fb2e1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d880dbeb-9f67-4c6e-b7df-c5191267b6f4"
        },
        "item": {
          "id": "b803f09c-3a67-444c-a1f7-313ad946e9e6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "aa6966db-4972-46a9-9947-85baea068f0b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18698322-7b8d-4437-ba39-d048763b7ad6",
        "cursor": {
          "ref": "a8a848e0-8fad-46df-875c-a857c249b4e0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8f082cc7-1889-481e-afc8-563edaf97161"
        },
        "item": {
          "id": "18698322-7b8d-4437-ba39-d048763b7ad6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "24ee2f93-b760-4e58-8291-f3b9b2c1b821",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81767469-23d9-4f68-b8ee-083386eea0a6",
        "cursor": {
          "ref": "4d65aaea-9d7f-4a29-a38f-c39af3c65bba",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f199a93-849a-4ddd-8276-5c83f9bc6b70"
        },
        "item": {
          "id": "81767469-23d9-4f68-b8ee-083386eea0a6",
          "name": "identifiers"
        },
        "response": {
          "id": "3672518d-5381-4872-9cd6-b557e5726cf7",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e1eaa1-3b6a-4377-a40f-5de549b9de0f",
        "cursor": {
          "ref": "4e6cf2a1-70ba-43ed-8784-9794d9ffd615",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3b8b11b3-4012-49a8-88d9-48cb481d2e3f"
        },
        "item": {
          "id": "b3e1eaa1-3b6a-4377-a40f-5de549b9de0f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1f9c518c-0b72-4633-9b84-393f259efeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f993fa7a-3166-47cd-8828-c5963afc16d2",
        "cursor": {
          "ref": "2b4840cc-e2fb-4a63-9bcd-fa0211ca1e4c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "48565026-9a9a-495b-924b-f6a2782d4350"
        },
        "item": {
          "id": "f993fa7a-3166-47cd-8828-c5963afc16d2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bd1c8b54-5626-4c11-af6e-2a0e47855c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de428b2b-35ec-490f-aeba-c878451b5b93",
        "cursor": {
          "ref": "eb725a8d-6846-402a-81c0-1a31583b5a0b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ed720cee-0973-4833-b9f3-0b2d6b8fbf5a"
        },
        "item": {
          "id": "de428b2b-35ec-490f-aeba-c878451b5b93",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "39fcbdef-3699-4f54-be06-081829211008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fde4af-740e-45a3-852a-d33e39ed7726",
        "cursor": {
          "ref": "7bc28b55-1e9a-4fe7-8422-dca122f5fc1e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "44c74515-966f-4177-b103-2e34675e82ee"
        },
        "item": {
          "id": "39fde4af-740e-45a3-852a-d33e39ed7726",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8fcc03c5-87c0-48b9-b786-3b4272283ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64272567-07b9-428c-bec6-0cc68b201b0f",
        "cursor": {
          "ref": "fad98473-844e-404b-8116-4bf9ea24aaf7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ef3f971-8db9-4e93-8629-a7325d0f08b4"
        },
        "item": {
          "id": "64272567-07b9-428c-bec6-0cc68b201b0f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "994a9c61-dca5-461e-a85e-c882cbb571e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86373669-222b-45ec-911b-c7c690e10aa7",
        "cursor": {
          "ref": "6e70affb-c7b1-418a-aef6-d733cf922371",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ee6f407a-79d5-48c4-915a-97bcbf5c8f4b"
        },
        "item": {
          "id": "86373669-222b-45ec-911b-c7c690e10aa7",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe80db0f-7988-4a86-b142-5e6290625c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1effcb0-5ee1-499c-bbc5-250db6917134",
        "cursor": {
          "ref": "d1d48b64-6fdd-40ff-9a6b-87a327955d18",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b92bf20b-bc11-4260-828d-1c4e5e048ed3"
        },
        "item": {
          "id": "c1effcb0-5ee1-499c-bbc5-250db6917134",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e0e56349-67fc-4251-850f-cb5f774a46cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d822f3b-97b3-4135-8236-463b01a228a7",
        "cursor": {
          "ref": "e49d9ff6-f42f-4d59-9952-c442ca013899",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9616ac5-9a89-4c75-8232-8673917e1a1a"
        },
        "item": {
          "id": "6d822f3b-97b3-4135-8236-463b01a228a7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cf775ce3-7b0e-42a2-8e0c-6fcdb092c470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264a976e-35d7-447f-afca-2c720b4de4d5",
        "cursor": {
          "ref": "4ae7a265-841f-498e-9095-5fdeedede746",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d582d353-f8ed-46b6-92e6-0fee38bab2b3"
        },
        "item": {
          "id": "264a976e-35d7-447f-afca-2c720b4de4d5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "40bc9fbc-8f10-4a13-9c55-f39d59afadf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39518c1a-ad34-482a-aba7-f611855553dd",
        "cursor": {
          "ref": "ac8bcdc5-fab3-42a7-b640-207fce995271",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f77a5aed-7dd0-4014-9773-5735d645e86b"
        },
        "item": {
          "id": "39518c1a-ad34-482a-aba7-f611855553dd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "29c8c3be-ee24-48aa-b339-970ff68bd230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426ee154-d7e2-418e-b4b5-46cf28e896b4",
        "cursor": {
          "ref": "4f467d05-b9ae-4aaf-8227-72c55d2b6c63",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "95a0adcc-16b9-4173-bd38-c12bf413e9c5"
        },
        "item": {
          "id": "426ee154-d7e2-418e-b4b5-46cf28e896b4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "21f21c95-ea34-458c-a394-9cc71271de5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8b98de-2f47-4a48-8770-efcf83d2a41f",
        "cursor": {
          "ref": "dc609b71-4b9a-46ff-9797-612090610881",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "158ba179-94f2-491f-8516-9c8ce46a130d"
        },
        "item": {
          "id": "0c8b98de-2f47-4a48-8770-efcf83d2a41f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "050409ca-3d05-410c-ac9a-4d546152aaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45634756-331d-49eb-af4a-74e0c2cc46e1",
        "cursor": {
          "ref": "41357072-0739-47b9-9111-f65759f76787",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6bd9a23f-e00f-41b7-9088-0282f5fd47bc"
        },
        "item": {
          "id": "45634756-331d-49eb-af4a-74e0c2cc46e1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "94be2c32-3eb7-422c-aa1f-97709d9c6f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb756bfc-ec47-4950-9440-02ede6c7b203",
        "cursor": {
          "ref": "a536bf50-f96e-4970-828b-29dfce9040f6",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8b0dc016-6ddf-4efd-9514-4a483bfb7303"
        },
        "item": {
          "id": "cb756bfc-ec47-4950-9440-02ede6c7b203",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "25d772eb-f04e-46e3-aab7-7ced77fd81fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bada18a-e2ca-4a3c-9873-d47c3f641381",
        "cursor": {
          "ref": "921662c1-4d9e-49c9-91d9-486849db066c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fe0a9d58-e17f-4945-a5e2-d5aeaf219181"
        },
        "item": {
          "id": "5bada18a-e2ca-4a3c-9873-d47c3f641381",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c6f85381-5c4b-42b1-a9d9-eb679c521b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8ffc06-6537-4702-aad8-27a7c7f38f6c",
        "cursor": {
          "ref": "7379cc42-b6bb-43c1-83ed-cc05849a4582",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5b5280b5-1b64-4d03-a527-24dbc6761964"
        },
        "item": {
          "id": "0d8ffc06-6537-4702-aad8-27a7c7f38f6c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d04a5ae8-e3b9-4614-81ee-d9d2a914447c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568f0489-c786-4d33-a2b7-562a859e2a75",
        "cursor": {
          "ref": "9606fedf-4771-4b70-892d-facce128b8b0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b4965b43-69aa-452c-80a7-7f5f446d2593"
        },
        "item": {
          "id": "568f0489-c786-4d33-a2b7-562a859e2a75",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "84571a97-9388-40bc-a786-22b3142b02e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc06e070-b1d1-45f2-9acf-e5b4caa7a58d",
        "cursor": {
          "ref": "ef3d1ce4-c9ce-452d-a271-70ebff490459",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f665af93-e62f-4cb5-9478-f7cb4ab89c71"
        },
        "item": {
          "id": "dc06e070-b1d1-45f2-9acf-e5b4caa7a58d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "782450fd-5311-44e1-9c65-82a26c3e825b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c2f72d-bbf3-460c-9a9f-5db8513c463d",
        "cursor": {
          "ref": "d00329d7-c118-4f3b-850c-f67ee30ec7db",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c825f29b-1c0c-4081-8228-9a9a2f1f2245"
        },
        "item": {
          "id": "e4c2f72d-bbf3-460c-9a9f-5db8513c463d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "cc86c6cd-5402-4858-a61e-e48fa8779d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b044429-2864-436a-9075-77679b736433",
        "cursor": {
          "ref": "57c5d953-8254-4673-a489-40ef6961e954",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3df96faf-3471-4bf7-b959-3223281b331f"
        },
        "item": {
          "id": "6b044429-2864-436a-9075-77679b736433",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dee1761a-4483-4472-8229-7fa91ae25a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caa0398-59ac-4da3-a234-136ee2f6a5e8",
        "cursor": {
          "ref": "ad0a0d0e-f3c7-4769-a338-4a89ceae8a37",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "66d09633-8bae-4ba8-aa35-d9826624afc9"
        },
        "item": {
          "id": "9caa0398-59ac-4da3-a234-136ee2f6a5e8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6d31b130-4a8c-4a71-8c52-6b2cd43dc1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883bb33b-93ba-48d5-aad1-336f5c3f4f63",
        "cursor": {
          "ref": "b6d4a24f-e311-466a-8522-0f125e249781",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "278a8917-ead1-4ba9-a22b-8fd24bbd60a8"
        },
        "item": {
          "id": "883bb33b-93ba-48d5-aad1-336f5c3f4f63",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb444cb2-0749-41bd-a83f-2f5a8660064a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af7b0cb-e5ee-4430-87b4-04c609afd257",
        "cursor": {
          "ref": "a3938ca6-f78f-4896-a19c-2a1fb614b890",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b6b9ea36-e491-4a53-b8a9-fa09c08c8bce"
        },
        "item": {
          "id": "4af7b0cb-e5ee-4430-87b4-04c609afd257",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "106e8acd-5774-46a0-a37f-56200ff46c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b991040-2394-461d-b57a-ba5d36f4eab8",
        "cursor": {
          "ref": "4c16d98c-4e8c-4212-ae89-e1580591622d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6d3f8243-a69f-4537-adc7-bcd89dedcef2"
        },
        "item": {
          "id": "0b991040-2394-461d-b57a-ba5d36f4eab8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3deecbc1-cb17-4d17-a83b-a413693fc016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7d76cb-4dd0-4ca8-b0f6-6844d0c7500b",
        "cursor": {
          "ref": "b7c354bd-dcaa-45e3-ac86-2dc76398b763",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "04331723-6216-4dee-b44d-9382d332a6e6"
        },
        "item": {
          "id": "8d7d76cb-4dd0-4ca8-b0f6-6844d0c7500b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "186e03db-7c5e-4260-8877-c821006f67a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcf588b-dde2-4747-bbb4-acb512e6ccf3",
        "cursor": {
          "ref": "21fa3630-f22f-4bcb-9464-881e52d93363",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "59ce2430-b4b2-4895-9733-53f54340dae7"
        },
        "item": {
          "id": "dfcf588b-dde2-4747-bbb4-acb512e6ccf3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "353bcbf1-32d3-4be3-a02e-cf6c6fc2c05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c66e19-3846-416a-9b67-b43dd4fc9098",
        "cursor": {
          "ref": "66ee091c-a456-4f31-b122-b95b8733b90d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f0266ac5-afce-421f-8669-b650079b35b0"
        },
        "item": {
          "id": "40c66e19-3846-416a-9b67-b43dd4fc9098",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "632d6fcd-c8aa-43ed-a160-33765d1abb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3782cfe1-5a3b-4499-8c11-c467ab9c7ea3",
        "cursor": {
          "ref": "b175e444-502e-4e85-a8b0-cea3e94b33d3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0450ee31-ee8c-453e-9455-38d0d161152c"
        },
        "item": {
          "id": "3782cfe1-5a3b-4499-8c11-c467ab9c7ea3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d90119af-5950-4238-bdff-4c6e4ba30fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bce6a06-8008-4e32-ba35-8f6aca3a5dc4",
        "cursor": {
          "ref": "d350453a-9cb0-4119-9272-a13083dea044",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a33bbb0f-e0a9-4c42-8746-f79536a0f687"
        },
        "item": {
          "id": "6bce6a06-8008-4e32-ba35-8f6aca3a5dc4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "95406f44-496b-4b3e-af56-a342afb96f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8091460-47ef-454f-9adb-8db232edfa9d",
        "cursor": {
          "ref": "ccf44ab9-8fed-4ff5-97e7-6185b0a5baf0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "91f646e6-4157-4295-be1c-c75a8dd22da4"
        },
        "item": {
          "id": "b8091460-47ef-454f-9adb-8db232edfa9d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "68a14108-e400-47e6-b22c-52f4de7c3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e9b14-eda1-4225-aa85-b051139084d2",
        "cursor": {
          "ref": "20eefdba-fa22-4129-bc10-9b96fe70030a",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "470f01eb-7dbd-421b-b5ed-ae6af208de93"
        },
        "item": {
          "id": "9d8e9b14-eda1-4225-aa85-b051139084d2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1ca2d4e8-6afa-41ba-acdd-5e133b7692c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4811fefe-39bd-4464-a593-c7a2a0cfe116",
        "cursor": {
          "ref": "1614c2e7-5782-418a-9012-eff28cc6a6a5",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "092ef857-b7b9-4898-ab75-c7c9fc078d48"
        },
        "item": {
          "id": "4811fefe-39bd-4464-a593-c7a2a0cfe116",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e7aafb7e-afb4-450d-a5e3-6f1233606067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653ed839-fd75-417e-8b67-304bf84a9e1f",
        "cursor": {
          "ref": "df96ffc6-046f-4c3d-b24e-eacd4c1c3f3a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "af40a36a-f7b9-4797-8f2d-98ccc86b08ac"
        },
        "item": {
          "id": "653ed839-fd75-417e-8b67-304bf84a9e1f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e7577e21-bf62-4bb9-9876-4e1b7ef942ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653a0102-463b-4d86-8591-863b50dafea0",
        "cursor": {
          "ref": "96d827e0-70c8-44d9-bf5a-4c373d821215",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "528a7f6e-47b9-4642-80bb-ace8a6f244a9"
        },
        "item": {
          "id": "653a0102-463b-4d86-8591-863b50dafea0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3be35c95-d3f0-41d2-9bd7-a04b459dccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dfcce3-4491-4ae9-a24d-50116e03dba4",
        "cursor": {
          "ref": "5d5997b9-e818-4d5f-8848-43761ed14a3c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "81146e4f-4ec0-41e2-9d1b-43611ad06cdf"
        },
        "item": {
          "id": "a6dfcce3-4491-4ae9-a24d-50116e03dba4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "83f6e2dc-9eb7-4c0c-8948-c5b60d0b3e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e898fd-87c7-4f26-a1ea-799c950bd179",
        "cursor": {
          "ref": "c0f6343b-c369-4825-967b-80a171a89880",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9e4c69b4-1aad-4abd-a0e1-0b1426a637d2"
        },
        "item": {
          "id": "57e898fd-87c7-4f26-a1ea-799c950bd179",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6157b474-1722-4cc6-9518-4e908a4aff61",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c57ea57-83de-4701-9d62-7a361ad18c5a",
        "cursor": {
          "ref": "d5897af5-4afb-4adb-ac41-42246b9b4e81",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9c29da84-f0c5-4445-b517-42e9bd52e406"
        },
        "item": {
          "id": "5c57ea57-83de-4701-9d62-7a361ad18c5a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f4d1a6ac-09e2-4fab-8505-4cfbe28177ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e691d886-7832-4cae-a28c-f158323d1866",
        "cursor": {
          "ref": "2db22736-9b56-4a13-91b2-6cdc92f7954e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "582924d0-8fef-4ee3-ade1-3e751ca8d2a3"
        },
        "item": {
          "id": "e691d886-7832-4cae-a28c-f158323d1866",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bff01c8f-de8b-49ad-b7b7-6ef5d2e05956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88eab644-0e5f-40c2-b401-81c3745839e2",
        "cursor": {
          "ref": "d21f1d77-fae8-47c6-91c9-324c67f39ba2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d10bc9ac-a029-4fbe-abb3-51a38365511b"
        },
        "item": {
          "id": "88eab644-0e5f-40c2-b401-81c3745839e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c4076fba-c6d3-4493-8f3e-fce531f50bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd748f9-bbf2-4784-996f-bd534e53c85b",
        "cursor": {
          "ref": "e48f06bf-f7eb-4017-86dc-53a72c3a3482",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "55a52d84-1c63-4f94-a41b-66f81e79d007"
        },
        "item": {
          "id": "6cd748f9-bbf2-4784-996f-bd534e53c85b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a5248471-810b-4d8c-af71-0496af6d556a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14df04ce-7464-4980-91e5-2d29269dd1a2",
        "cursor": {
          "ref": "3d0269b5-c7e1-4179-ad74-767fac70c057",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0106cecb-39dd-4f78-8b9e-384d87134340"
        },
        "item": {
          "id": "14df04ce-7464-4980-91e5-2d29269dd1a2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8912b49b-6d64-46b1-8ecd-a03a3909c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee7be0-7822-4e29-9a13-0790b54aa294",
        "cursor": {
          "ref": "d5c65796-090b-4df9-b00e-6af7acd09c0b",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "15343afd-36e6-4d26-b562-be0907db2a7e"
        },
        "item": {
          "id": "75ee7be0-7822-4e29-9a13-0790b54aa294",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "147eda8a-09b1-4d55-9f2f-6c4fbabb6afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e2c809-0ee5-437f-8ef9-5027c15e2a7c",
        "cursor": {
          "ref": "92ab6915-3c78-4e14-99bd-eaeb56d4a645",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a21aa080-d411-4cf7-98ba-92a186317643"
        },
        "item": {
          "id": "24e2c809-0ee5-437f-8ef9-5027c15e2a7c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eca3484e-68b8-4c21-b69e-567835d6a069",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 26,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047267c7-19df-4530-a885-fb63412b0274",
        "cursor": {
          "ref": "a21b9e32-1543-46a4-a385-338cfcb6732c",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1630b560-449c-41c1-a8e2-2a864fbebaab"
        },
        "item": {
          "id": "047267c7-19df-4530-a885-fb63412b0274",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e6e0966b-1faf-4f3b-93ef-a7d9291298ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a38306a-8b58-425d-b14e-62cdd60d2b37",
        "cursor": {
          "ref": "3aa1b3dc-ed22-4967-b179-2ad7ebb4ae47",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "974b6032-7f97-4870-9881-5a69688860d6"
        },
        "item": {
          "id": "3a38306a-8b58-425d-b14e-62cdd60d2b37",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aeab9b13-6931-4048-a311-7574c3587f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45cb4e6-5a3f-4250-97f3-d66dd7e38e10",
        "cursor": {
          "ref": "a1489e16-9f18-4141-8faf-20709c5a0583",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6b3a09e1-99fe-41dd-adf7-20d9a94b4606"
        },
        "item": {
          "id": "a45cb4e6-5a3f-4250-97f3-d66dd7e38e10",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0310475d-99d8-4197-8961-2b131915a32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaef49a1-31c4-4b63-ad57-355bab0053bf",
        "cursor": {
          "ref": "eb9340e9-64f2-4e89-a19e-a816b4712a33",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1b4adf75-bc65-4cf9-ba2b-0cffdec40673"
        },
        "item": {
          "id": "eaef49a1-31c4-4b63-ad57-355bab0053bf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0ad2837e-a939-4908-9eb2-72442d926fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cae23b8-937c-4fba-8b64-6629c8ad213c",
        "cursor": {
          "ref": "319939e2-a6bf-4471-a6cf-265b0faefe39",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "359063ae-f1ca-4c34-bbe4-5c580e792227"
        },
        "item": {
          "id": "6cae23b8-937c-4fba-8b64-6629c8ad213c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "aa124ffb-010d-4096-972e-e41d89fec337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babcfc44-bf45-4f11-96cd-e14af5cbe6c8",
        "cursor": {
          "ref": "4cc945bd-d6d1-4371-9793-bfbf6ade6571",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7b291026-5ca9-44fe-b002-eb69c53454f4"
        },
        "item": {
          "id": "babcfc44-bf45-4f11-96cd-e14af5cbe6c8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "56023ebe-651a-42fa-9dbc-054c0b688929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e4e848-c86a-45bc-8f5b-5ccc52856783",
        "cursor": {
          "ref": "51d12232-acb5-4311-993f-8953cacb386d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d5a05a4b-5cd2-4127-9f67-c9ab396fb4de"
        },
        "item": {
          "id": "68e4e848-c86a-45bc-8f5b-5ccc52856783",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2a5e796e-c8c5-4f25-b346-409dd8276dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6949d0e-7c05-4514-823c-a741bd78f39e",
        "cursor": {
          "ref": "81f7377d-ba9c-431f-9e00-fc82b7bbe415",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "26f58c44-9282-49a6-8d32-bbc3bdf9aeb1"
        },
        "item": {
          "id": "d6949d0e-7c05-4514-823c-a741bd78f39e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cae0f4df-0a94-4a2a-a2b9-c257baf5b714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823b8656-ba7d-42dd-8f29-a4b9b63ae83e",
        "cursor": {
          "ref": "d59ab847-747a-446d-a6f6-0ca21363a4c0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "799cce0a-61f5-4410-80fd-72a19fe0f7b6"
        },
        "item": {
          "id": "823b8656-ba7d-42dd-8f29-a4b9b63ae83e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4037c27c-db6f-426f-9308-1c0bd7a546b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3d8e42-c657-4136-97de-f0d683e9c811",
        "cursor": {
          "ref": "3adcc8a4-b8c2-4e0b-baee-a691baf3f26a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fbc845f3-98c5-470d-ba76-6c00acd75f47"
        },
        "item": {
          "id": "4d3d8e42-c657-4136-97de-f0d683e9c811",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "959f6024-10ff-46bc-b241-fb78c40bb55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c33ea62-3ce1-455c-884f-c109c6a694ca",
        "cursor": {
          "ref": "30e159ac-8db7-47a3-8e51-a788e4e4fc1c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a7655030-d666-477a-90ea-98d25ab6e602"
        },
        "item": {
          "id": "6c33ea62-3ce1-455c-884f-c109c6a694ca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f41e1dc7-aa1d-4003-a6ae-2d0bb7f0a0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207ccef9-148c-4785-aac9-61ced425e289",
        "cursor": {
          "ref": "bc7558d1-641e-4708-9228-56e641199869",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "58145535-07cf-4090-8113-2768e0bf50a1"
        },
        "item": {
          "id": "207ccef9-148c-4785-aac9-61ced425e289",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "eb5853af-ac3f-48b4-8204-e0fb1275ac53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f64e44-9c3f-48cc-98dd-a564c8b23bd6",
        "cursor": {
          "ref": "d085e16f-a85a-49dd-8db7-cf85c3b56585",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "330b9257-9f5b-4279-be23-13feda2b3f2f"
        },
        "item": {
          "id": "55f64e44-9c3f-48cc-98dd-a564c8b23bd6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "aa0b248d-3059-4a31-9419-b0852e4b7a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af8538-86e7-4a42-9d80-167a27160cbf",
        "cursor": {
          "ref": "a9cc5ee4-e2d8-41ff-b104-d4244c100f3a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4803d0d9-d494-4f42-a8a6-3b12395a7b88"
        },
        "item": {
          "id": "d5af8538-86e7-4a42-9d80-167a27160cbf",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "57777a17-7ea6-4f53-b12e-93523a66bc44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159f4a23-1aaf-4121-805b-09233f051f39",
        "cursor": {
          "ref": "f323d065-3bca-4c3c-9db6-e1aa791204aa",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0e5b36c7-ee0c-4cef-980e-1d949c0e1446"
        },
        "item": {
          "id": "159f4a23-1aaf-4121-805b-09233f051f39",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "06fefbd8-5dac-46e3-b50c-ff7b002f744b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50a7868-21a3-4d89-a3fd-2d81709e643d",
        "cursor": {
          "ref": "bf350d0f-a8d5-4715-8b85-5722283eb2de",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ea2b799-5557-47d4-9bfd-7d7c50d8696e"
        },
        "item": {
          "id": "e50a7868-21a3-4d89-a3fd-2d81709e643d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "09f5da2a-d25d-4de9-9036-3872667c1078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85328c9d-9e7a-4cc8-a2d8-edeeabffac0a",
        "cursor": {
          "ref": "fa70aa47-81a4-4f73-8f4d-3ff3ce9bcf79",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c95f028a-3275-40dc-87d5-54a6c520a2b0"
        },
        "item": {
          "id": "85328c9d-9e7a-4cc8-a2d8-edeeabffac0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "69b38d98-4a6b-49c8-8143-1c2e6786d042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7213912-3471-4116-893d-8ef19725facd",
        "cursor": {
          "ref": "5c75969e-305f-41b8-92e8-477f3640b108",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df3118ec-09f6-49e1-bd93-36c915b86630"
        },
        "item": {
          "id": "c7213912-3471-4116-893d-8ef19725facd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c0aabd27-719d-47ac-b304-97dfc6d79570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf5df1-44fa-46af-baa5-4422c42a37db",
        "cursor": {
          "ref": "2b1b3b51-7397-4ddf-9b30-8e860ad8efc1",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "dda9e280-b099-43ee-8b74-14884b3469c9"
        },
        "item": {
          "id": "cacf5df1-44fa-46af-baa5-4422c42a37db",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "663daf64-6e11-46fb-9171-b68f67b9b8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82043ff3-9239-40c3-a0d4-9ae499bf539d",
        "cursor": {
          "ref": "439707c2-ea17-45e2-bc78-b894a773eee7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cd80f175-e32f-4834-97d7-939ca7e5e5f8"
        },
        "item": {
          "id": "82043ff3-9239-40c3-a0d4-9ae499bf539d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1d3df791-68d9-450d-9b61-83754fb304d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff8bd9b-0bc5-4a6d-aa8e-e27633190074",
        "cursor": {
          "ref": "2e9abd8c-1634-4061-a615-b75aa4db61c5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "79c2b5a0-62a2-4249-af55-c7ff20b82c93"
        },
        "item": {
          "id": "6ff8bd9b-0bc5-4a6d-aa8e-e27633190074",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "80de79ef-0838-4b60-a825-f41030aeead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cbdc2c-6b3e-4c8f-9852-e6ffafd461d2",
        "cursor": {
          "ref": "a77c90cf-3a0d-42aa-ac27-e3644a8a0171",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "38e8d33f-432b-4994-9f09-fc3b0f3a37d4"
        },
        "item": {
          "id": "e0cbdc2c-6b3e-4c8f-9852-e6ffafd461d2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d70c912-52d9-49de-b7f7-9ab950c1951a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be157419-c0d5-4c67-8d7d-9e9915b45cb9",
        "cursor": {
          "ref": "14b82e98-54d4-4cb8-a53c-9528cb6b9fbd",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d21a6698-737a-496d-9201-79b4a9e7d034"
        },
        "item": {
          "id": "be157419-c0d5-4c67-8d7d-9e9915b45cb9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8cae2274-8d84-4313-b27d-ff4d9b62bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55664348-8219-4d51-9105-78c981d7bf32",
        "cursor": {
          "ref": "955d4f4d-d9ee-4451-8245-6bdc8f871a2f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "777efced-e240-4a74-aa5b-904e3d999af1"
        },
        "item": {
          "id": "55664348-8219-4d51-9105-78c981d7bf32",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "27090911-d158-4d55-94c9-5d8ac36320ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b92890-7d73-48cc-91dd-f7a7894d3e84",
        "cursor": {
          "ref": "1cba171d-76d9-4733-8b2e-9df99cd648db",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "202ba3bc-da53-4fcb-b1fb-cdf29700000f"
        },
        "item": {
          "id": "b7b92890-7d73-48cc-91dd-f7a7894d3e84",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e4a04ec-3467-4074-8316-739cc326a33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2b783d-9aee-4b65-bb5e-b1abae3a4e49",
        "cursor": {
          "ref": "758bcc9d-8026-4e54-a7dc-af1bb97305c4",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b62ab403-7135-4b1a-bb6a-4970e120129d"
        },
        "item": {
          "id": "3b2b783d-9aee-4b65-bb5e-b1abae3a4e49",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "264ea96c-9531-432b-a74a-6e10cc7d99d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0acfdb9-c0f1-467a-b59f-3ef8650eab2c",
        "cursor": {
          "ref": "a5801b72-07f0-41c2-8e52-4f220796306a",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "93eaf35d-95c5-4095-9135-136bce0c4100"
        },
        "item": {
          "id": "a0acfdb9-c0f1-467a-b59f-3ef8650eab2c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9312c5a2-b62e-4682-8382-968709a1b1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5445d8a0-cfb0-4449-92ad-882ab84a26c9",
        "cursor": {
          "ref": "d059544c-ac5e-4a1d-9e42-2df44607dc39",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "52007e07-444c-4cde-ab51-8bb30974605d"
        },
        "item": {
          "id": "5445d8a0-cfb0-4449-92ad-882ab84a26c9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "3bc94a3c-ce3b-46b9-968f-74881f79e78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d401f0d1-cc36-4f46-859b-61ce7e6855d2",
        "cursor": {
          "ref": "fd13fb13-6522-42b1-926f-a13ffa7ba578",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6d774823-c932-4d1e-9f8a-1a6a04aa1ccd"
        },
        "item": {
          "id": "d401f0d1-cc36-4f46-859b-61ce7e6855d2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cb353cb1-4619-4a7d-a903-e313313e5d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc72481a-1e76-4152-8f5c-2ec9300a696c",
        "cursor": {
          "ref": "d028ca20-accd-4599-a16e-237b89a0b6a7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0b405195-8629-4f8f-ae1e-0185d8bcdf23"
        },
        "item": {
          "id": "dc72481a-1e76-4152-8f5c-2ec9300a696c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "316c0f41-6068-466a-a1da-9da0c427c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbec0b5-1dda-4bd9-8d83-be6ee44a5605",
        "cursor": {
          "ref": "28042fe7-373c-43bc-8118-1dad63b8e3e9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "21d29962-0ed5-45de-994b-6b7c92f51f60"
        },
        "item": {
          "id": "5cbec0b5-1dda-4bd9-8d83-be6ee44a5605",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cab840b6-7b7a-4f66-8b31-beb95a24fdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beee393f-9945-4d17-9c46-48b7e88d00fe",
        "cursor": {
          "ref": "7863df2e-1ccd-49a6-a4c9-02ae2b7444b8",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "38304cc8-ac16-4770-9fb6-5d4a2fc406b1"
        },
        "item": {
          "id": "beee393f-9945-4d17-9c46-48b7e88d00fe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "158d359c-857a-49a6-b42a-47f84a016672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eafd5e-6657-407b-8ea1-ca1f532ad50c",
        "cursor": {
          "ref": "38eff316-a7fb-49e5-8dc3-dc10997e6334",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10be9cd9-2aae-45c1-9934-7dc0d0c63d27"
        },
        "item": {
          "id": "b5eafd5e-6657-407b-8ea1-ca1f532ad50c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "644fcc54-45ce-4743-ab84-5417c29fc754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049725a-67ef-4e9e-9469-54c927e97f1d",
        "cursor": {
          "ref": "cd96838e-d3c3-484a-baf6-91f1fdbe05c3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3a803ce3-7ea8-4800-a446-ba196db96d41"
        },
        "item": {
          "id": "f049725a-67ef-4e9e-9469-54c927e97f1d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b0dff0bc-d43c-4309-b544-9bc4d6134257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348e7d45-6352-41ab-a6c9-50cfffc3dbfe",
        "cursor": {
          "ref": "7177fae0-5fb5-4bc6-8821-160f47ccf8fa",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "fc6f991c-15cb-41c3-ae5f-c101589c0ff9"
        },
        "item": {
          "id": "348e7d45-6352-41ab-a6c9-50cfffc3dbfe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "833a49e7-20ab-48ae-997f-dcb07d9c92c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22507f-877c-42e0-a64e-177df2eea495",
        "cursor": {
          "ref": "2ab46989-e9c2-458a-a8fd-6c34f7dc28d8",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3933d993-a8ec-4956-9558-de68b602be5d"
        },
        "item": {
          "id": "ec22507f-877c-42e0-a64e-177df2eea495",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "053f96f1-5277-4cd8-a421-c3f19027586b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159177d0-485e-40ef-846f-023152f551bb",
        "cursor": {
          "ref": "50e8208b-a827-4485-a327-4ab5b82885a5",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ee6c1e67-bec8-4379-914c-4288d0bcc066"
        },
        "item": {
          "id": "159177d0-485e-40ef-846f-023152f551bb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b982a73c-90f6-48d5-81de-5f04a8dde86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93b0e32-6031-428b-9ede-0a87dfa30343",
        "cursor": {
          "ref": "937499b5-955b-4ed6-a485-9f70550f83b3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "48b5847c-f729-4702-9dba-9311d4c734b7"
        },
        "item": {
          "id": "d93b0e32-6031-428b-9ede-0a87dfa30343",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "03b942f5-9582-40fb-9bd3-429ea84d7a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861fdc08-75bb-4d2a-8d3b-b6f9be77517e",
        "cursor": {
          "ref": "a03464f0-3e12-467f-888b-5200cd730937",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5cd3bf40-225e-44e6-936c-cbdc090875ba"
        },
        "item": {
          "id": "861fdc08-75bb-4d2a-8d3b-b6f9be77517e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6998a6a2-f8c5-4669-af07-b26868c2bc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4301c6de-45fa-42b9-a9a6-f5e5c8b6461a",
        "cursor": {
          "ref": "3e2811ea-cb45-4587-a1fe-4dfead0ec016",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b3da18cf-dcd3-41b4-8719-d48b9d93ecdd"
        },
        "item": {
          "id": "4301c6de-45fa-42b9-a9a6-f5e5c8b6461a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d3a4119e-4237-445e-84a3-942ebe1eca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1c6ac1-44f6-460f-8243-d07d373252ae",
        "cursor": {
          "ref": "c8a00da6-c0bc-4b1f-b85a-fcdeff37abcf",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "53693cb5-0832-4e6d-8ba4-f5d6585bc5e9"
        },
        "item": {
          "id": "7b1c6ac1-44f6-460f-8243-d07d373252ae",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4f95735f-d899-44f5-84bb-0fa5613b1112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318d6601-4e1f-4a2e-8ab6-fe9ba593d8f2",
        "cursor": {
          "ref": "523376a6-27bf-4665-a1dc-93863a094691",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b15540d0-b126-4c7f-866a-5fbf42b93b27"
        },
        "item": {
          "id": "318d6601-4e1f-4a2e-8ab6-fe9ba593d8f2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8e3d72ef-6d12-423a-b70e-9cf1be8e258d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976593d6-be13-4df9-9c0d-33a7034da54c",
        "cursor": {
          "ref": "5a346755-b671-4241-b009-7bf68a96ed56",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1ae0bbfc-fd59-40a4-897b-7fd094218c70"
        },
        "item": {
          "id": "976593d6-be13-4df9-9c0d-33a7034da54c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3c6a9ce9-a24e-42c4-a16e-a8caddab4f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b9ae2f-afbd-470e-a8e8-27d13ee7b68e",
        "cursor": {
          "ref": "edcb96ed-d197-42f8-98a5-ee409ba38ab4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "83f6b776-9ca2-45f0-9821-19229900a6f8"
        },
        "item": {
          "id": "89b9ae2f-afbd-470e-a8e8-27d13ee7b68e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e8a94d16-67e2-4beb-9d7b-2f458a05e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22b3455-f790-4441-80fe-e6883cbf9608",
        "cursor": {
          "ref": "79793d57-89a6-4e86-b036-b565603da283",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b92182d2-cb6b-4c2a-904c-9260295c3976"
        },
        "item": {
          "id": "a22b3455-f790-4441-80fe-e6883cbf9608",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3e7617ae-b26b-4192-bfdc-77730f68ca10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23563e4e-711c-4979-b7b9-d6511e293975",
        "cursor": {
          "ref": "2b18b059-f47f-4453-a405-15edbd82e394",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f005d518-3282-4cca-83d5-775bbbd6648d"
        },
        "item": {
          "id": "23563e4e-711c-4979-b7b9-d6511e293975",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "49fa0264-2529-4e15-96f0-0537b33fe7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc064622-745b-4732-9fe7-a71745a15d64",
        "cursor": {
          "ref": "3286ced7-dd42-413c-8a13-299a4a62353b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ab1d32fd-39c8-41d3-8b72-850707046e8c"
        },
        "item": {
          "id": "dc064622-745b-4732-9fe7-a71745a15d64",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b046801c-7ae8-448d-9a43-c769d809651f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672ed461-77dd-4225-a99b-f9e15b848ada",
        "cursor": {
          "ref": "050c2289-c2a0-40db-96c2-e5fca0131a26",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f50d5d5a-4b75-4c71-b155-32d066fc8d95"
        },
        "item": {
          "id": "672ed461-77dd-4225-a99b-f9e15b848ada",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb89805c-7313-4d2e-addd-fd753483f51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f1b652-8583-4b65-8f84-ffce491b6798",
        "cursor": {
          "ref": "09ba3fa7-6b27-48c7-969e-330f59405b22",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7b2447be-cac8-4ccc-8b1c-ef0ee4a7e730"
        },
        "item": {
          "id": "b7f1b652-8583-4b65-8f84-ffce491b6798",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "228445a9-f055-4145-861d-17bf81f1ab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d9d973-152e-4b62-8bb8-7bfcb32acd22",
        "cursor": {
          "ref": "cc08c173-beeb-4d12-ae49-b12456587550",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "54f5755a-bb4c-4879-9ea2-a8e758a1e7fd"
        },
        "item": {
          "id": "26d9d973-152e-4b62-8bb8-7bfcb32acd22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ca3d566d-b6d5-44e0-ab4e-baa98744ae28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1887f865-26a8-4508-8dac-116c23636e80",
        "cursor": {
          "ref": "c068d106-eee4-481a-bf90-95af5db2eac0",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d02f59b0-552d-4dd3-9efd-60ffa473009c"
        },
        "item": {
          "id": "1887f865-26a8-4508-8dac-116c23636e80",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a980ea9f-a3fd-4eac-a508-164990fecd7b",
          "status": "Created",
          "code": 201,
          "responseTime": 38,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf330b88-818c-4c33-b99f-7b1f46697129",
        "cursor": {
          "ref": "5291c522-dc05-45fe-938f-29116bb9753c",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d63f1a9f-4b5a-4c03-bcb2-142c75a244bc"
        },
        "item": {
          "id": "bf330b88-818c-4c33-b99f-7b1f46697129",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0d7dff4a-f5f0-46f0-99a2-b93fb8e1b527",
          "status": "Created",
          "code": 201,
          "responseTime": 202,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c027788-f9c7-4ae5-9c91-22b8e3acb6c7",
        "cursor": {
          "ref": "e74e46c0-ac40-4cde-b919-c6f4775b5d60",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a2806bf3-040b-4fa5-9ea6-d41b6b74c175"
        },
        "item": {
          "id": "3c027788-f9c7-4ae5-9c91-22b8e3acb6c7",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "03134d60-21cb-4c2b-abf0-02fb226f63ca",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "285438c0-f648-40e3-90ac-ede55ff8869a",
        "cursor": {
          "ref": "5e3d2955-5788-4c59-80ee-70a6a3799fe7",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6f53f7bb-5f51-432e-8b10-436b8a60983c"
        },
        "item": {
          "id": "285438c0-f648-40e3-90ac-ede55ff8869a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bdd6f794-6552-452e-ab0b-be769ba120e6",
          "status": "Created",
          "code": 201,
          "responseTime": 35,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "394ba162-36d3-4c63-8c40-3a5a8b04515a",
        "cursor": {
          "ref": "f353ce9b-ae2a-4482-891f-b8681542baef",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "49b8cf54-78e6-4c49-9c53-f3e97ea0f856"
        },
        "item": {
          "id": "394ba162-36d3-4c63-8c40-3a5a8b04515a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9fbc21f6-2c23-4cfe-8bcf-924812390451",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6a9e1d-155b-475c-b913-40bfd131131c",
        "cursor": {
          "ref": "9e6701c5-b107-4f90-bd68-7142bc981d84",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "79f97a7f-b1da-4e47-a022-9fd98c22e2df"
        },
        "item": {
          "id": "8f6a9e1d-155b-475c-b913-40bfd131131c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86037732-630d-441a-9fc2-3d503dc0695b",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d69c0b1-c4af-4c13-a05f-408a1e8bab12",
        "cursor": {
          "ref": "f3b6fb2c-f3b2-4515-90e9-80cadbb680bb",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6651cfd1-15a2-4373-bab8-b3f0047590f8"
        },
        "item": {
          "id": "6d69c0b1-c4af-4c13-a05f-408a1e8bab12",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3f5ba681-2313-450c-941a-beefd95a80f8",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd29b6e7-10eb-4bac-8a11-1a3a06b12d72",
        "cursor": {
          "ref": "f401c302-5836-4a7d-9dc7-2cbd54825d32",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "48c562b3-50a8-4767-9386-ea7f6c072287"
        },
        "item": {
          "id": "fd29b6e7-10eb-4bac-8a11-1a3a06b12d72",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "13f1d17c-f2aa-465b-be03-b9b97a6b80de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471f23a-d0d4-49ee-a2cf-c446d30d1949",
        "cursor": {
          "ref": "4ae56ea2-1b78-47b7-a6b7-d6984edef44a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fbfffdf7-700e-4bc3-95f1-45e673c783a3"
        },
        "item": {
          "id": "d471f23a-d0d4-49ee-a2cf-c446d30d1949",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cbf1745b-cd82-475b-98cf-97a030acad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efffcfd0-ada2-4ac5-b31c-892a3b4319ce",
        "cursor": {
          "ref": "46e0f6c4-5852-43d7-befc-a19e744dd72e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d3a85c7a-cc76-44b2-96f3-871defc858eb"
        },
        "item": {
          "id": "efffcfd0-ada2-4ac5-b31c-892a3b4319ce",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb70b64d-3b9b-43f7-ab2c-ed7b63c264a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da91159-0b78-4a1e-b724-df8cdedf31a4",
        "cursor": {
          "ref": "19dcf1d4-a96e-40b4-aa7e-3a84e771ff97",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c499e33-f7d5-4ba1-9016-9fad6fc4fba3"
        },
        "item": {
          "id": "8da91159-0b78-4a1e-b724-df8cdedf31a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "adf8097c-cd3f-47db-be7b-7a9a4b063cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c5a20b-9781-4978-b339-d172c4e2d062",
        "cursor": {
          "ref": "8605fe52-dcf7-40d9-972e-e8147d96f185",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "62d74410-cb6d-4e40-8718-24aebf9dd322"
        },
        "item": {
          "id": "a0c5a20b-9781-4978-b339-d172c4e2d062",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7773801e-6553-45e3-af70-fefe72d41f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fea0c5-a699-4f80-a9f0-b2d096a41fb1",
        "cursor": {
          "ref": "70c9b757-3da4-4445-99c6-c1866982b3eb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1a5c742b-308f-4a02-9f30-2f4d3e512110"
        },
        "item": {
          "id": "99fea0c5-a699-4f80-a9f0-b2d096a41fb1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "18f5e7cb-1438-4773-85b4-813f63cbf226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e3d718-6d59-4a03-a4ea-178e681915fc",
        "cursor": {
          "ref": "3963cc20-029b-4f2f-8653-06ac6911a31c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d95a5013-fc70-4257-badf-417f68c6a640"
        },
        "item": {
          "id": "a4e3d718-6d59-4a03-a4ea-178e681915fc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "384a3f2f-6484-4a2c-8c54-a41fd611a1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beaf134-427a-43f1-bee9-5f207cc22c39",
        "cursor": {
          "ref": "c7f9d380-55c5-4627-8fb0-00099148c851",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2980d1ca-b041-4bd2-a6fb-67ac5429ad66"
        },
        "item": {
          "id": "7beaf134-427a-43f1-bee9-5f207cc22c39",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e25f4ff4-3f61-44a2-bfe3-e46da6a67005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d2acfc-7940-4ba6-8b50-30c599252251",
        "cursor": {
          "ref": "6394a437-60a2-47bf-98c5-c8c8fa347628",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "75a71d17-789e-49c2-ae78-c3bb5c4c31d9"
        },
        "item": {
          "id": "b2d2acfc-7940-4ba6-8b50-30c599252251",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b8a53ee5-acfc-4919-960a-411586948add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b681d227-8577-4606-ba3f-4eab2899dfd7",
        "cursor": {
          "ref": "b1896f69-e078-4196-9a63-54f9b15d2837",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ad0f9587-9997-49ec-a205-4517e7722958"
        },
        "item": {
          "id": "b681d227-8577-4606-ba3f-4eab2899dfd7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "364956d4-f36a-470f-be4c-c90fea6bd6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f712e4f6-62ad-4798-a766-c6af3a27d22f",
        "cursor": {
          "ref": "cd948792-15b8-4576-a58c-54b9f313be7b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9e40202d-9dc9-4d53-ac66-6d26c95c18c7"
        },
        "item": {
          "id": "f712e4f6-62ad-4798-a766-c6af3a27d22f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f0ce65b-61a4-491e-9769-cb51e51b0be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262dded0-9974-415c-b6fa-e5f59d2b6f2d",
        "cursor": {
          "ref": "05bfe0b8-8176-4a08-b631-b334c8be5ba5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7073bd7c-d566-4181-83f7-9394943100bb"
        },
        "item": {
          "id": "262dded0-9974-415c-b6fa-e5f59d2b6f2d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fc579772-2482-4511-ac39-67d88da890a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59be2a0f-3cd8-4845-ba50-add32fe04343",
        "cursor": {
          "ref": "8b02adab-0511-498e-a4ff-d8c70792120a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a1822170-55ae-4893-8f03-b76fa6bde136"
        },
        "item": {
          "id": "59be2a0f-3cd8-4845-ba50-add32fe04343",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c90f311b-5dd4-4679-8da9-4b96470a9b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3453341-470c-4baa-87b5-95ef51667695",
        "cursor": {
          "ref": "21a15824-9868-4990-a51f-b45f2a9ba5e3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "88e0909b-944a-4858-a754-b43b7b4a2831"
        },
        "item": {
          "id": "b3453341-470c-4baa-87b5-95ef51667695",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2d53dc58-58c6-4b27-89e3-919c9f394956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9a6be1-d04f-4e4f-95ba-d663fea5c9ee",
        "cursor": {
          "ref": "b31e21e0-b99a-43e8-a98d-9da2ec34aac5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c3266e9d-896e-4564-b354-c0d963cb78e4"
        },
        "item": {
          "id": "1e9a6be1-d04f-4e4f-95ba-d663fea5c9ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3111fcbe-0e4c-45c8-838f-4eee1fbd20a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d987db64-fdf0-49bd-9750-c5a13c836366",
        "cursor": {
          "ref": "52cf766f-04ab-4920-a253-04ca74be02f9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9f155f13-feb9-4b0a-ade5-442fd246b3a4"
        },
        "item": {
          "id": "d987db64-fdf0-49bd-9750-c5a13c836366",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a4c247a-0f7e-4cb1-9e12-03fc9864b562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76de6d67-8be3-4ab8-93e7-cae040846ede",
        "cursor": {
          "ref": "cf1c229f-5a89-4b12-947e-fae90b40105d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "19e74ca4-34de-4301-9c35-0dcd6effc8cc"
        },
        "item": {
          "id": "76de6d67-8be3-4ab8-93e7-cae040846ede",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b79dfb32-573a-47bd-a84a-6fc530540ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e981d43-556c-421d-a6ff-87801ae134f6",
        "cursor": {
          "ref": "dd56a6db-5a96-4e6e-adfd-f5874e340bc4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f143ebec-ce2b-4cb2-bef6-3aac2edc85ec"
        },
        "item": {
          "id": "8e981d43-556c-421d-a6ff-87801ae134f6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e1f968b5-3c8a-4058-b42a-f51208f02945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9965ce1f-929f-4aad-9685-4bb1ff9053a1",
        "cursor": {
          "ref": "85ad9a2b-8540-4fcc-b056-21607a3f2bf5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ac4356f7-7513-4b2f-b79a-118207d53ce6"
        },
        "item": {
          "id": "9965ce1f-929f-4aad-9685-4bb1ff9053a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "365c6584-9384-4a6c-9954-ee4c619f166d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf63525-2144-4c87-bb39-61953a6fd896",
        "cursor": {
          "ref": "5db7427c-2173-4a39-98c5-42de52be92db",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5608e0c8-d1e1-4a0a-b979-d483cb27a22e"
        },
        "item": {
          "id": "bdf63525-2144-4c87-bb39-61953a6fd896",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "66a7cdc8-f63e-4c3a-8f25-e55a3e231188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bdf50d-f7d6-4f8f-a065-dc938d8b8088",
        "cursor": {
          "ref": "2f84cdd9-5dff-4318-ae8c-4cf9d06dba94",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a1778450-420d-4029-acd4-a0db92bdda5e"
        },
        "item": {
          "id": "c5bdf50d-f7d6-4f8f-a065-dc938d8b8088",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4bc6f017-baf4-4778-a551-7fc68e4260da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c579bf-57ca-4148-888d-10ffa595c123",
        "cursor": {
          "ref": "85d0ae82-3c9d-41b9-8d1c-337aa9eaeae1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9712d50d-ba9a-4720-8547-0b2bcf9b78b0"
        },
        "item": {
          "id": "35c579bf-57ca-4148-888d-10ffa595c123",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "05b922d1-f9e3-400d-ac80-366446d2c8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd67224-9ecd-4a6b-8f9f-7d1b6cff8447",
        "cursor": {
          "ref": "eb77c1f6-ff9e-4929-a595-abf589ec8750",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0c508e7-676b-4d74-8553-f1492b32a6c5"
        },
        "item": {
          "id": "bbd67224-9ecd-4a6b-8f9f-7d1b6cff8447",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "82ec602b-9cd2-427e-88da-4a488fec2856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b03793-14f6-40ad-a351-213541a31ff8",
        "cursor": {
          "ref": "aec71ce3-f91f-4464-bbe9-9f3ddc29c519",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "375a39af-743f-454e-b45b-58a4e29b234e"
        },
        "item": {
          "id": "75b03793-14f6-40ad-a351-213541a31ff8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "85bb033e-f3fb-4ea2-8855-e2ea7f515f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4442ec-840e-4b63-85f4-7810eec1e5ef",
        "cursor": {
          "ref": "47debdc4-4770-4693-8d0c-6166a23ceea0",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6dc6dcf3-5d63-472b-b513-7f5b22b8e153"
        },
        "item": {
          "id": "ee4442ec-840e-4b63-85f4-7810eec1e5ef",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b603eca8-bdc6-4d48-826e-9be0931ae511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30b4a90-5f34-4dc2-ad53-b27162504d1f",
        "cursor": {
          "ref": "100911f1-c06e-41e4-9b53-2ac9f7e9016d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "879dc155-e861-499a-bd75-1d93d7b852e1"
        },
        "item": {
          "id": "a30b4a90-5f34-4dc2-ad53-b27162504d1f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7edbcfaa-176f-4e6d-89c4-e0fa50b44378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58297349-c6ed-4374-9f65-d8fcddeb4f9e",
        "cursor": {
          "ref": "5e61b297-4213-414e-83d4-c3b89b61faf0",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2e27db02-fa73-41c0-8ce0-f070ebf77b00"
        },
        "item": {
          "id": "58297349-c6ed-4374-9f65-d8fcddeb4f9e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f6edfc53-9a16-4935-8faa-565a7d80f0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a217f7-4c10-4e27-92c5-55bafdb63ff0",
        "cursor": {
          "ref": "305848ae-09c4-46e6-bced-82d0a1484a98",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "11890c35-12d2-42b8-81fc-2043e0667733"
        },
        "item": {
          "id": "31a217f7-4c10-4e27-92c5-55bafdb63ff0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69ee7702-a146-443e-b861-3daa241954c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc8a933-afe3-4ad0-8291-682fddfe7012",
        "cursor": {
          "ref": "1ca3b537-c671-41de-929d-e0c27f396950",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c093fa4-d55a-4c59-8f2a-2bdde99ed297"
        },
        "item": {
          "id": "6cc8a933-afe3-4ad0-8291-682fddfe7012",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "862aa24b-bdb2-4637-ba4e-ab079727b829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d112a72-96f8-497d-9f20-773c3ede0611",
        "cursor": {
          "ref": "d10b38e9-b461-480a-b2a5-8d35b0805ed7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ec50aafc-83bb-4fd9-bbcc-d39f1cd7774e"
        },
        "item": {
          "id": "1d112a72-96f8-497d-9f20-773c3ede0611",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5578f083-e78e-4686-840a-ac664fa9a593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884cc03c-38c0-4dd2-ac42-ecd92db6c338",
        "cursor": {
          "ref": "fdb73876-eb56-4223-81c4-05e18967ad6e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10b6473c-4683-481f-8fa0-49a9d332a313"
        },
        "item": {
          "id": "884cc03c-38c0-4dd2-ac42-ecd92db6c338",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "824090b9-75f5-48b9-aeb1-6c07ba22f651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4de5d0-8b5f-462a-97ea-ed2e752eb748",
        "cursor": {
          "ref": "a08a613b-0b0c-4912-b57f-8129177c9c5c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6e7ac601-c5d1-414d-a4f8-ae5b9929a0f6"
        },
        "item": {
          "id": "ae4de5d0-8b5f-462a-97ea-ed2e752eb748",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "813da8f5-bbaf-4086-ae6d-ee8ea5c50274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c4311-d219-41ba-89b8-1836b7e90c84",
        "cursor": {
          "ref": "b67039ac-f8ec-4e7b-a93c-e9f877848910",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6138469d-3815-4245-9348-e478fdf36c98"
        },
        "item": {
          "id": "172c4311-d219-41ba-89b8-1836b7e90c84",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2577dc76-4df8-460c-9f76-ca7687f0c6a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d440dd-119c-4dc0-8b68-45c19b67622a",
        "cursor": {
          "ref": "bab9d804-910c-4066-9460-32172fb09e66",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "edd94c82-11f4-4ff3-aaa1-d70b8f4e2d4c"
        },
        "item": {
          "id": "10d440dd-119c-4dc0-8b68-45c19b67622a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60335a75-f5cb-4b1d-a4bd-8a6195a0703e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7363df53-823e-4d53-ab6d-6e2186e32794",
        "cursor": {
          "ref": "73cce76e-283f-4933-8125-ece5b27848c7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e4658600-769a-439b-ad33-6ce11a21dc8a"
        },
        "item": {
          "id": "7363df53-823e-4d53-ab6d-6e2186e32794",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e52691dc-f5c7-42ff-bfee-320a160442da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69964935-4773-4d62-a3cf-114955eb0e5e",
        "cursor": {
          "ref": "fa0dce4e-c51e-4b20-83ae-30b7bd01213f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9d37f14e-44d9-42e5-ae3e-2b50d0f14a5c"
        },
        "item": {
          "id": "69964935-4773-4d62-a3cf-114955eb0e5e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cf0bdf33-5d94-497d-a269-495d2f91a18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e177be-235d-4b19-a976-61c56980bd0c",
        "cursor": {
          "ref": "033c165d-1216-4fd8-a245-d27dbe24aaff",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0d359243-c7ad-48d6-9807-0386b9fe5b18"
        },
        "item": {
          "id": "04e177be-235d-4b19-a976-61c56980bd0c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d2b065f8-9ea6-4a02-9496-67d30c0ed577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18284dcf-f5f3-4e53-9cdb-158f160d221e",
        "cursor": {
          "ref": "447097db-86a9-4ee2-9389-3338e97cfcb2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9d73f814-ffe0-48af-b0d3-757c4e9b7200"
        },
        "item": {
          "id": "18284dcf-f5f3-4e53-9cdb-158f160d221e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "92d20644-17e6-4d01-999a-5bada57f51e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb318bf7-1b52-4049-a7a1-3885dffe427b",
        "cursor": {
          "ref": "3616f595-a41a-4699-b5e3-245c6bccef49",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1c6f0298-567e-4e77-b6c6-6b9dff3e817a"
        },
        "item": {
          "id": "fb318bf7-1b52-4049-a7a1-3885dffe427b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e118b0e-967d-4e06-8e61-39c263fd2cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1efc8e9-60cc-4291-9f87-b9e784c2589d",
        "cursor": {
          "ref": "77cc3de7-3ca4-4bed-b1e1-ace6689655a5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f2c371de-f162-42e1-a708-a877b15f58c5"
        },
        "item": {
          "id": "a1efc8e9-60cc-4291-9f87-b9e784c2589d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff7cd7a0-2e78-45dc-9bc0-e0b520715189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340086f8-1da7-4ff9-ace8-a2418974b9c5",
        "cursor": {
          "ref": "83d5071f-1a78-4f5d-ad40-5ea5beff72a6",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fd7a38da-f18e-42e8-9a17-175eedb02e28"
        },
        "item": {
          "id": "340086f8-1da7-4ff9-ace8-a2418974b9c5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e46ea64e-e60c-4a24-af8e-eff13757399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a721ec5c-8563-4af1-881a-f7d98d298c80",
        "cursor": {
          "ref": "ce7f8577-270e-4402-ab2e-61fef54a9ade",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "169bab6c-2c2c-4c4c-b7b3-c2d24059d155"
        },
        "item": {
          "id": "a721ec5c-8563-4af1-881a-f7d98d298c80",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1cfc9007-1eb4-4121-938c-c42f6a82a16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5675aaa7-fb1b-4df9-94ed-a7257d6f674e",
        "cursor": {
          "ref": "1c313bcc-5387-4a81-a8b6-7621adf4743e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "537707a1-f440-4ccb-9664-ad87321d9819"
        },
        "item": {
          "id": "5675aaa7-fb1b-4df9-94ed-a7257d6f674e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3ddd898f-7db3-4b24-b9bb-3be619c836ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61440e63-71c8-41e4-a2a3-625cca8dfcbf",
        "cursor": {
          "ref": "213549b4-9460-4377-8713-3a30d84bf31b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9f02a59-4cf1-415c-b999-41f31f4d59e2"
        },
        "item": {
          "id": "61440e63-71c8-41e4-a2a3-625cca8dfcbf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3999f19c-286d-49fe-b3ef-b2dcaa3af530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddb0125-e598-432e-a5d3-e19009de534f",
        "cursor": {
          "ref": "a04aab81-4f50-4ba4-a746-3e1150e6346d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f72423f9-a85b-48af-9029-c8ac0417d852"
        },
        "item": {
          "id": "3ddb0125-e598-432e-a5d3-e19009de534f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dd318421-7d01-48c4-8db3-0a26e44e5d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a901b22b-8301-4200-8628-003c4c308856",
        "cursor": {
          "ref": "ab6db7bb-0e04-4e4a-8df4-6dd55c8aabf5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad279a30-efb6-4ca0-b1a2-6341270ce163"
        },
        "item": {
          "id": "a901b22b-8301-4200-8628-003c4c308856",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5743c854-8f96-42f8-aff0-e60b4388172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa95ccca-af63-4fd0-a92d-65e51b654ed2",
        "cursor": {
          "ref": "f3ebc644-69ed-4aef-ab27-fd487428a13c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5798ab3a-dd1a-4b84-bfca-bd632ddaabd2"
        },
        "item": {
          "id": "aa95ccca-af63-4fd0-a92d-65e51b654ed2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d40dbaf3-605e-43eb-bba0-54f6baf4da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea0149c-3fe5-4fd8-bfa1-13381f884f55",
        "cursor": {
          "ref": "fed1fd69-2f25-4517-b4fe-02ae99aba3a8",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e5fb34ea-f216-4e06-8e13-c9b0896e892d"
        },
        "item": {
          "id": "8ea0149c-3fe5-4fd8-bfa1-13381f884f55",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5071ee26-d200-4598-91ef-95a49ef81a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2550c7f6-9424-4fcc-941c-027d61112ed6",
        "cursor": {
          "ref": "aea4f823-9883-40e8-90f6-06f27aa6baa8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "398e8e81-a3ee-48d7-bb7a-ec03d4479add"
        },
        "item": {
          "id": "2550c7f6-9424-4fcc-941c-027d61112ed6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9f8ffe10-643b-4dda-8929-4db0ec41bbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1098ed-35c8-4f8e-bec1-dd34b965be08",
        "cursor": {
          "ref": "c9cbd864-5322-442a-9919-ef321d7cdd31",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "109528c2-f05a-4922-9c9c-e7b55403e826"
        },
        "item": {
          "id": "9c1098ed-35c8-4f8e-bec1-dd34b965be08",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f9e1b61c-d295-4026-86d2-5817c4cf6dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f17a13f-8522-402b-bf0f-cf272e626408",
        "cursor": {
          "ref": "3815420d-1814-4347-8830-a117ae72176e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "52c8e956-aba8-42e2-ba3e-13d60f855a25"
        },
        "item": {
          "id": "2f17a13f-8522-402b-bf0f-cf272e626408",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "277ef5fc-a35a-4bba-a2f3-291f3a0a685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17c3580-8b4b-4810-9fe2-1a0fb838847f",
        "cursor": {
          "ref": "70936639-b892-4a8d-8dce-e6044aa3e36d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5285295c-fedf-4edb-9590-f3736bce5d60"
        },
        "item": {
          "id": "f17c3580-8b4b-4810-9fe2-1a0fb838847f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8af031b-7af9-4e1f-bfdb-0b88a5deae7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63187fd4-155a-4d02-b609-49279b53e59a",
        "cursor": {
          "ref": "6314c0b7-7300-405f-a1f6-6b2d900a814c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5d7ff000-33c1-4d5a-8d75-790d8ad49327"
        },
        "item": {
          "id": "63187fd4-155a-4d02-b609-49279b53e59a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6a42b8ec-71ca-4fa1-9ad4-4f8cf08438e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac890d1-b22a-4a38-84f1-890ac1784630",
        "cursor": {
          "ref": "e84fe031-83ba-4de0-8aa1-5d42900c36bd",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "83026de3-7143-4268-acc8-0644a89ec1f0"
        },
        "item": {
          "id": "1ac890d1-b22a-4a38-84f1-890ac1784630",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1db764f5-296e-4121-9b77-bf8d857fe836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f171dc-225d-474a-bfe2-465e0503f02a",
        "cursor": {
          "ref": "efdc40a0-f11d-4530-853b-8bb08f4c09ec",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e8078cf1-bb72-40c7-8fd4-162b7e7d68c3"
        },
        "item": {
          "id": "84f171dc-225d-474a-bfe2-465e0503f02a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8f263fdb-b4e4-4f14-8d79-f0f0a638e3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39be9c1d-3ce9-4cfd-bb64-0ec7cd892916",
        "cursor": {
          "ref": "629f0b33-557a-45aa-abc3-1a08d79ff893",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e97cc6d8-afd8-4fc3-aca5-21765e7074b0"
        },
        "item": {
          "id": "39be9c1d-3ce9-4cfd-bb64-0ec7cd892916",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8058befd-7fa1-46a7-86bf-597d845ab498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c903bda9-3cf9-4082-8aa3-f75e71b28518",
        "cursor": {
          "ref": "11dc8ab3-2337-4a46-a7bc-438573db3b3a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3dbf516e-1219-4dcd-acff-b39ff1acdb8e"
        },
        "item": {
          "id": "c903bda9-3cf9-4082-8aa3-f75e71b28518",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "174d6147-9360-4d25-b989-592a536473b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1968c86b-3343-4f30-b55b-455840ca23c4",
        "cursor": {
          "ref": "fc20dc7a-39cb-4e93-a69c-1dbaf788af89",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9c304768-364a-45c4-a0f7-9b02961354b8"
        },
        "item": {
          "id": "1968c86b-3343-4f30-b55b-455840ca23c4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "533a2cc9-76e8-4078-8ee7-63c1f0a36dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a5a923-5a0c-4ca2-9929-68b34f6e5cee",
        "cursor": {
          "ref": "f1e77566-c56e-46bf-850b-f9c88a2089bb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "865fbb55-fce7-4d31-a455-1aca5fbb3805"
        },
        "item": {
          "id": "81a5a923-5a0c-4ca2-9929-68b34f6e5cee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0207944e-17af-44d7-b494-9235004753fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d1eeec-1b0c-4d24-972e-9e492a99dc72",
        "cursor": {
          "ref": "e9ff7273-a08e-41a4-acfd-fc0a9ae1d699",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f212c480-9afb-43b0-bd76-3296b774acbe"
        },
        "item": {
          "id": "36d1eeec-1b0c-4d24-972e-9e492a99dc72",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d38b2b3d-f9c6-428c-abb9-22a0a5fd494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48a4c68-1644-43cb-ba99-ecf4bd0c1025",
        "cursor": {
          "ref": "e71ca4d8-4398-44c0-bf93-ac309ff68dce",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "96deb7d3-561c-49cd-8cc0-c4807d64e921"
        },
        "item": {
          "id": "c48a4c68-1644-43cb-ba99-ecf4bd0c1025",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0b00c950-f0d7-46d3-81c4-bf5a091c11e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c86cffb-6856-40f5-93c0-7593919ceb54",
        "cursor": {
          "ref": "e3232a12-37b6-4866-bc1c-ac6556aebbfe",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c395bbf4-8fb0-4336-ae9e-6243fc3fb87b"
        },
        "item": {
          "id": "7c86cffb-6856-40f5-93c0-7593919ceb54",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "07898894-e014-4fe8-8e11-47e6de31232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a167d210-4687-4ac3-86bf-acfecf335e87",
        "cursor": {
          "ref": "91bdc5f9-8137-4618-a199-525d81919496",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3dfb8e51-9a8c-4c0d-a231-3d1109e0f522"
        },
        "item": {
          "id": "a167d210-4687-4ac3-86bf-acfecf335e87",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "809b8d90-29e9-4de9-a1ec-d360e803a5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acaa102-6392-458e-81fd-ba1fc7a73339",
        "cursor": {
          "ref": "12f78522-e7f4-4cbc-8b79-981eb151d265",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "abf53cfe-923b-4ee0-a76a-9d9d5f7fc5e8"
        },
        "item": {
          "id": "6acaa102-6392-458e-81fd-ba1fc7a73339",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f65345fe-eaaf-41f9-a081-f7f84a64c337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99419d5-5bbb-4d3a-ba91-5804e91fe427",
        "cursor": {
          "ref": "e02528fa-6395-4b56-930a-653281232a94",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "453fcd63-6a06-4f61-a361-5c472e6436f5"
        },
        "item": {
          "id": "b99419d5-5bbb-4d3a-ba91-5804e91fe427",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b252743c-1bd1-40d9-89a6-c687707eeb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7dae7b-3821-49f4-a7af-eb54aa83904b",
        "cursor": {
          "ref": "58705448-47b4-4a48-a4d6-078b10d3240b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "10aeca6f-152e-40e0-ad88-bd0b4cd7f816"
        },
        "item": {
          "id": "eb7dae7b-3821-49f4-a7af-eb54aa83904b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c042fb32-c998-4d31-8f9d-8bda3793a51d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1cd69f-8ac2-44c2-bd7f-58f1162d848f",
        "cursor": {
          "ref": "2e1b1246-2859-49ad-a77b-5c2d4333cc5a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "77c7a8ca-b022-421f-b321-9456bebe43fc"
        },
        "item": {
          "id": "3d1cd69f-8ac2-44c2-bd7f-58f1162d848f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e8f73493-9539-4c9a-a98c-09e4d0ce2172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06861e97-1539-4b81-b2ad-e70e8e0e877a",
        "cursor": {
          "ref": "8d34bf0a-bbbe-4473-9962-b2ce059d7f02",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8ae92c4d-93c0-4b9f-8019-acdf0ec4b6b6"
        },
        "item": {
          "id": "06861e97-1539-4b81-b2ad-e70e8e0e877a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "22bbe00c-a420-444d-b713-8967c016fc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fbc9be-df64-4356-9fcd-9443bddebbf0",
        "cursor": {
          "ref": "efd4c1db-864d-4161-b6a3-f0fd56ed84b5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d7600e58-820b-4b3b-9722-abedad1c7990"
        },
        "item": {
          "id": "91fbc9be-df64-4356-9fcd-9443bddebbf0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4b152ca0-03a0-4c04-9fc1-6e62346f2d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56d8dd9-8184-48b8-9c4d-bf8e2b77ec86",
        "cursor": {
          "ref": "aa0fcfcc-1940-4262-9827-46b849839550",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0890fabc-54cb-43c4-a926-5ab84822b1e2"
        },
        "item": {
          "id": "c56d8dd9-8184-48b8-9c4d-bf8e2b77ec86",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f038918c-c430-429e-a7ac-79e5e288dde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001298a8-0447-49c5-a299-637cd74f09b4",
        "cursor": {
          "ref": "dc6b23f4-eb37-4b15-bab1-9d6c06bcb14d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "75147fb8-cd6f-430e-aeb4-dcdc9fa59c1e"
        },
        "item": {
          "id": "001298a8-0447-49c5-a299-637cd74f09b4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ba24d852-7646-4633-806d-4b1181886ae7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa61f58f-10f5-48ce-8c32-edcd31f26381",
        "cursor": {
          "ref": "8e0e008b-dad7-4481-8272-3c7c69fac116",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e466c54-469e-46b4-8ef3-ebdd1eaf7799"
        },
        "item": {
          "id": "aa61f58f-10f5-48ce-8c32-edcd31f26381",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ca4aa3e-8436-489c-a325-ff5efb50fd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5045fbf8-9c61-45e5-ac3e-d556ba2f9804",
        "cursor": {
          "ref": "f2db9948-f129-4512-92e2-46cef075bacc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "716137f8-5680-46a4-a0b9-c3c2e47882ff"
        },
        "item": {
          "id": "5045fbf8-9c61-45e5-ac3e-d556ba2f9804",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "db817bc8-36da-4069-bfe2-250489b86e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fba2a7a-576e-47d4-a504-c13cb1364e33",
        "cursor": {
          "ref": "2bebfc11-1953-42e6-8033-3e039f6030eb",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b5897994-f165-4c5e-8c62-d9f179b28b32"
        },
        "item": {
          "id": "8fba2a7a-576e-47d4-a504-c13cb1364e33",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "82d3daec-8d0e-4a67-8578-b2dd0809c2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badffe22-a39f-42d8-868c-60a1224e4536",
        "cursor": {
          "ref": "7bbfab73-2f64-4478-b5c2-363722df58a9",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5fbd7ad3-a02d-41b3-9fd9-af41e1355067"
        },
        "item": {
          "id": "badffe22-a39f-42d8-868c-60a1224e4536",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46e26bab-b3e7-42c3-a7f7-45812ce97d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5e4006-c211-496d-b3a8-b9766e5cbc59",
        "cursor": {
          "ref": "9fbb82e3-4955-4134-82d4-102e5fa12004",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ef528eff-c8dd-42ef-bc96-a3e0bd96eb3d"
        },
        "item": {
          "id": "6b5e4006-c211-496d-b3a8-b9766e5cbc59",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a67719ec-ae3a-4ae2-9367-e829c53a2bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7011d1d-a9ba-4b0a-8254-425df6c1ac85",
        "cursor": {
          "ref": "ed286090-cb87-4004-8297-90bcac793cd1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e6862336-4388-41e9-96b3-6ab7772c6bb7"
        },
        "item": {
          "id": "d7011d1d-a9ba-4b0a-8254-425df6c1ac85",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b0609eec-3f7a-4488-af67-582f1a284172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37cad54-c490-4c2a-b494-1cb0c5050d13",
        "cursor": {
          "ref": "6b41c61d-629f-4af1-bf0c-4a5dd842ded3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "13d3c675-b93d-43a4-8c21-d315a5e5cf98"
        },
        "item": {
          "id": "d37cad54-c490-4c2a-b494-1cb0c5050d13",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0938950f-f627-409b-ba62-ff71b9b800d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5cf7c4-1a1a-4589-a5c8-9083b7e76a07",
        "cursor": {
          "ref": "f8d09d6b-c434-414f-8e75-4534eb76fee6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "64fba601-ba80-4968-a3e8-58e3200464b2"
        },
        "item": {
          "id": "4d5cf7c4-1a1a-4589-a5c8-9083b7e76a07",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8a35459c-fc1b-4531-ac2c-048887c253fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234ad635-dc5d-4b8f-8a2f-db7d4f2bc6e5",
        "cursor": {
          "ref": "9bb21148-577a-436c-b8d5-6f9311034baf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a9e066c-7a7f-49a8-9308-f030357db27d"
        },
        "item": {
          "id": "234ad635-dc5d-4b8f-8a2f-db7d4f2bc6e5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56be147f-efdd-4e84-9caf-2d877d5202dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b60ed6-6d9a-4eb4-9b5f-757248b6dc0d",
        "cursor": {
          "ref": "06b657f0-85a8-44b6-8df5-45a3e71991ea",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f5c08b68-a226-43a6-a34d-8af162f88610"
        },
        "item": {
          "id": "61b60ed6-6d9a-4eb4-9b5f-757248b6dc0d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3475b3e2-f0e7-47c1-96cd-094486e02de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c351e8-41b3-40ec-925b-83e534e529cc",
        "cursor": {
          "ref": "236d3423-7418-4e2d-9bcd-de8acf655283",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f49e4117-d35a-4bb5-8b87-a1436b3e6db5"
        },
        "item": {
          "id": "f1c351e8-41b3-40ec-925b-83e534e529cc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e0db2634-fe60-4e85-b6a6-b7654ac27403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d5ec66-9860-41b4-bcbf-e3b14e1f9501",
        "cursor": {
          "ref": "bae55cfb-e49f-4edb-aa36-cab566084794",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cd7c077a-7c24-4d5b-bbc4-843b9ddd2f99"
        },
        "item": {
          "id": "59d5ec66-9860-41b4-bcbf-e3b14e1f9501",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3bd0ec86-d942-4c9a-9bf8-9023f6ad2898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc7786a-1ae3-4069-9193-6ed0d5806f91",
        "cursor": {
          "ref": "85276da2-4749-41d6-b92e-3e39fa96e57b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ed0b4033-de60-4b21-b889-867e730ed79c"
        },
        "item": {
          "id": "6bc7786a-1ae3-4069-9193-6ed0d5806f91",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "253b1917-9791-4df9-a0a3-4258af6d2efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183f4dda-c534-49f7-bce1-47f9f2046a58",
        "cursor": {
          "ref": "9e6e37f4-7088-4fde-85be-737069751e75",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5e0cca0f-08a1-4b10-98f6-5591095d1fd8"
        },
        "item": {
          "id": "183f4dda-c534-49f7-bce1-47f9f2046a58",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "600ffbae-2ac5-455e-b4e3-1c7b8af2fd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc1b10e-e1b0-4bc9-b228-fb4376a6f00c",
        "cursor": {
          "ref": "4c9e3c92-8281-4a93-ba71-dcbfb5fb748f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d629c5a4-177e-4d77-a96c-dfed572049e4"
        },
        "item": {
          "id": "9dc1b10e-e1b0-4bc9-b228-fb4376a6f00c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "321dc780-60aa-44e6-99b4-e1a91577517c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e6fc3b-cebb-4197-ad0e-67d6bac4eed7",
        "cursor": {
          "ref": "2b47fe06-0bb0-4e0f-bfda-252806a7796a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b60319de-ab7a-44ab-acaa-3afdef379fe2"
        },
        "item": {
          "id": "39e6fc3b-cebb-4197-ad0e-67d6bac4eed7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8f5f6138-2156-4acb-b14a-576fe2050cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f5ffaf-5ce8-43cb-bfbe-6ff05d0c30c9",
        "cursor": {
          "ref": "0a697150-35ca-468d-be1f-d456bac772ff",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba95b664-8993-44f0-9e26-b092550a0742"
        },
        "item": {
          "id": "c8f5ffaf-5ce8-43cb-bfbe-6ff05d0c30c9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "500355ff-0734-4d3d-bd5c-3306f96c85a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b7907c-f8c6-406b-88c4-879cc22001f9",
        "cursor": {
          "ref": "604c46a0-47f1-45b0-b1ae-88cec4de0ed2",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "10bf3eb2-d600-479f-a6d0-223965ab5a88"
        },
        "item": {
          "id": "e6b7907c-f8c6-406b-88c4-879cc22001f9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "71a156ea-1f18-40f0-8ffb-837978ecbdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd3777-ede0-4910-bf49-a084c43c4c7a",
        "cursor": {
          "ref": "7e45f6b7-3fd5-43af-8aaa-74c1c7257c6f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b8e39fb4-51de-4391-bfa2-8204b2fb960f"
        },
        "item": {
          "id": "e8cd3777-ede0-4910-bf49-a084c43c4c7a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "13531913-6fa3-468c-a247-18711a46504b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc736a-54e6-4b4c-b129-36a8f8b9ebac",
        "cursor": {
          "ref": "5634f189-495d-43dc-9473-0351b84d59fd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdd9018b-5558-4d2c-b891-30687503db3c"
        },
        "item": {
          "id": "24fc736a-54e6-4b4c-b129-36a8f8b9ebac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b7b40483-21ea-4d49-9549-a1f89b7d2db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055cf1fe-0994-4f9d-8ab8-eeda51b45625",
        "cursor": {
          "ref": "86a35fb6-4c81-4bdd-9aa0-6f0fdba0fe54",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "898ed854-6c5a-4946-b913-d1526bdb0c3d"
        },
        "item": {
          "id": "055cf1fe-0994-4f9d-8ab8-eeda51b45625",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2f922d1f-bb4c-491f-a2c1-9e33073221f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cd8a11-c424-4dbe-8367-b22eff4dc411",
        "cursor": {
          "ref": "e6a39cdd-f683-4172-b265-f39a38b2eb07",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "80184189-9fe3-4168-ab04-cc6bd62418b0"
        },
        "item": {
          "id": "89cd8a11-c424-4dbe-8367-b22eff4dc411",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "97b95697-a238-49e7-8aa8-047dc0ed3aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8f9702-6c43-45ac-a5a6-f51d6ae577d2",
        "cursor": {
          "ref": "47da8835-e146-4085-ac2d-0b242aa04369",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "878c0815-c6f3-4589-bde8-a541e37be87b"
        },
        "item": {
          "id": "5f8f9702-6c43-45ac-a5a6-f51d6ae577d2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a2cd2458-0e6c-41dc-a2e1-a6267835cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab61b7e-b5ad-4c6d-a2a1-0b2dc0731636",
        "cursor": {
          "ref": "943ec068-4b03-4659-8aa3-327a7a3f5eda",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "aeade893-2b34-4066-84ed-5532be16e4cc"
        },
        "item": {
          "id": "2ab61b7e-b5ad-4c6d-a2a1-0b2dc0731636",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1c10c283-f495-4a44-869a-d725767fa868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772b7da2-927c-4db2-8d77-c58cc88d08ac",
        "cursor": {
          "ref": "841629ba-78f2-4bdf-ad90-4a9eaf47526f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "51e05343-2c69-4706-a515-0bb24d63b724"
        },
        "item": {
          "id": "772b7da2-927c-4db2-8d77-c58cc88d08ac",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "82dbe175-b3b9-4af5-bbb5-bcb614513dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee494d8-b2a6-48bc-b40d-8f481b988a60",
        "cursor": {
          "ref": "a248e973-d606-44f2-bd8c-cbba60dee331",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8bd9703b-c4c7-4e51-82cd-41cc1fd36344"
        },
        "item": {
          "id": "6ee494d8-b2a6-48bc-b40d-8f481b988a60",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bfc4573e-cefe-43ea-9f79-bc1728c84d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ffd68e-2e18-498d-96d3-205498840fbd",
        "cursor": {
          "ref": "72b1efa1-82f8-4c5c-8d59-5ab020a3c374",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "77876096-715a-41f6-93f6-07de12b33d6f"
        },
        "item": {
          "id": "f1ffd68e-2e18-498d-96d3-205498840fbd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "10e04df8-ecec-40b6-9d4a-793b69036a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c82fca-fefc-4e61-b8c0-0d3a0b560c45",
        "cursor": {
          "ref": "47c82a2e-c1de-47ed-b482-e603bb8552bb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d253ff6e-cec9-4647-8ee4-885ea19187d7"
        },
        "item": {
          "id": "b3c82fca-fefc-4e61-b8c0-0d3a0b560c45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6f87ec11-5321-4b66-bdc5-33d72269c01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5ab56d-ec75-4453-834d-02cac1983026",
        "cursor": {
          "ref": "238c1fe0-ca0b-473f-8f4d-411bbaea1b2f",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "28eb4422-5868-4d22-985e-78cd3c289754"
        },
        "item": {
          "id": "ae5ab56d-ec75-4453-834d-02cac1983026",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc1b7925-7835-4f95-b021-5504b4209129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085d789c-fcca-4c2d-a336-ec374993e588",
        "cursor": {
          "ref": "dc80f3d5-7cfd-4b36-87ca-d3eb84023c35",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "786f0959-5a15-43a0-802c-113e8a194a91"
        },
        "item": {
          "id": "085d789c-fcca-4c2d-a336-ec374993e588",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "12984fb4-3a71-4c57-9361-71b6dcee3df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbc1751-677e-4341-ae50-4627bc5cdc83",
        "cursor": {
          "ref": "70da1e75-4384-4f94-9451-ec34925f12e3",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6143b7c9-d67c-49e6-b062-27b6eda14ccf"
        },
        "item": {
          "id": "bbbc1751-677e-4341-ae50-4627bc5cdc83",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "20486baa-36af-4651-a082-c51adc8fec3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a44d653-302b-48d0-b1c2-6270843bf76c",
        "cursor": {
          "ref": "214d6401-c438-42e2-911a-405f05e265ff",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7bcb102a-33e8-4882-af51-e083dacba221"
        },
        "item": {
          "id": "3a44d653-302b-48d0-b1c2-6270843bf76c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "858af04f-65f3-4cfb-afdc-04b6ffdef5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4455d423-a908-40d2-8d2b-ec5580d0db46",
        "cursor": {
          "ref": "8caf5a41-47fc-4c3c-95f1-908ca8746808",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "01834a64-a524-4275-bf51-30f52adf0055"
        },
        "item": {
          "id": "4455d423-a908-40d2-8d2b-ec5580d0db46",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2601b14d-0f02-42e3-8bb6-9b2873975267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd31bfa7-9ddc-4a0b-bbe3-a3279203f71e",
        "cursor": {
          "ref": "f85473c5-fa5f-46f5-a92f-01b079a4552e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0c61192b-ae65-440a-9c43-807a069f7b3d"
        },
        "item": {
          "id": "fd31bfa7-9ddc-4a0b-bbe3-a3279203f71e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c2183a7e-b2c0-4e9e-966a-d89112a5408b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12838fdf-cc49-4c94-b4de-beee8ef4d34f",
        "cursor": {
          "ref": "8c828f87-4766-420f-b1f3-5f5bb1477c1a",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4a5d09a4-4a7c-4d83-b26f-1eea984ddb4a"
        },
        "item": {
          "id": "12838fdf-cc49-4c94-b4de-beee8ef4d34f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "caf6b46c-a405-4768-b4d9-b9b4312b8310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b9b35-ee99-448a-a57f-211fc7ef1644",
        "cursor": {
          "ref": "f41bacc2-ae74-4967-b901-5919fbb25608",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bcba7b14-54c2-4127-b8ea-6a795a97946e"
        },
        "item": {
          "id": "7c1b9b35-ee99-448a-a57f-211fc7ef1644",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4db8fd9b-eaf6-4d5b-83d6-07cee41bcd58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f8330-5f8c-4e8e-8c75-57a1099f544c",
        "cursor": {
          "ref": "e3e330fb-2aa1-40cf-bbe2-f6b9e0b384be",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9c375c80-b4ab-4d59-a368-2bfdfbd6d3a6"
        },
        "item": {
          "id": "358f8330-5f8c-4e8e-8c75-57a1099f544c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b764aa57-320e-4f7e-9cf4-f0c8cc3a246c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3675dd3a-ab98-424c-b64b-96c1090b3d81",
        "cursor": {
          "ref": "0ea1b41b-7925-4d97-a387-5900dcedb11a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "af526543-e1a8-4daf-af20-f028b1b2f1ec"
        },
        "item": {
          "id": "3675dd3a-ab98-424c-b64b-96c1090b3d81",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "533b2b9f-3a06-49fe-87cf-adcd46c2c72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1cc857-6879-4042-b79d-ce478a33fb78",
        "cursor": {
          "ref": "1efd2c83-1a5e-4ee1-9c0e-af5f8d7fa35a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fb93d5f8-5219-4eb1-b324-bf8d270d4f37"
        },
        "item": {
          "id": "9b1cc857-6879-4042-b79d-ce478a33fb78",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "553c37d4-c269-48d9-9518-041750b75e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd25707-a625-42ab-a762-43eb687da3e7",
        "cursor": {
          "ref": "364090a3-d1ce-40cf-ae7a-b77ba9b5d8cf",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6504f28f-e373-4a37-b3d1-f73da858bfe5"
        },
        "item": {
          "id": "1dd25707-a625-42ab-a762-43eb687da3e7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2cbf1822-c647-4cab-a3c5-83c83dd443f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d710f3-9765-43f8-858b-9834e90cf75f",
        "cursor": {
          "ref": "f84051d0-4f06-4bd3-88a0-543cda039cd0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4adf9bd1-7be6-4b17-b62e-6b66ee0be92e"
        },
        "item": {
          "id": "b2d710f3-9765-43f8-858b-9834e90cf75f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c969f588-7999-4b6c-a5d8-bfaf7e618b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623204f4-7d4f-4655-b185-82a2a341704b",
        "cursor": {
          "ref": "6c1d38a0-fd30-437a-bbc4-0988077e499d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cfcd6dce-faec-4a0e-a608-b755c5d78be1"
        },
        "item": {
          "id": "623204f4-7d4f-4655-b185-82a2a341704b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7d3766b1-570e-4711-a184-79409044ac88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b9023b-36f1-4e65-bebd-2da15478e3a3",
        "cursor": {
          "ref": "e9b75667-0939-45d5-9479-cb191badad79",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "881d789d-2b96-4225-b595-bf330baedfbf"
        },
        "item": {
          "id": "50b9023b-36f1-4e65-bebd-2da15478e3a3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3a2a006f-8633-475b-887b-0332f6a4ef18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815cfc6c-d14a-41c9-9a18-d778ca1f9610",
        "cursor": {
          "ref": "b5f851d7-aaf9-4ab3-a885-102b34ac531f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "dbddccf6-a012-477b-886d-3c9855ca5102"
        },
        "item": {
          "id": "815cfc6c-d14a-41c9-9a18-d778ca1f9610",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3144b6fe-a3de-476b-b3c6-5271d1aabcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47396479-1a0e-416d-be61-24b6f3dfeb95",
        "cursor": {
          "ref": "9683b6e0-226a-4502-971d-1a0f009901d9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dc1eabef-5c37-429b-8b02-06d83f6b915c"
        },
        "item": {
          "id": "47396479-1a0e-416d-be61-24b6f3dfeb95",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9971ac26-a30c-4899-899c-cd73118a026a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56972acd-cccb-4e24-82be-0e441f6e7f1a",
        "cursor": {
          "ref": "90d411e9-12d0-430d-b1e3-e3c3940cd532",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "069d7e09-28ec-4bd9-a5fa-5b0a93dfdf42"
        },
        "item": {
          "id": "56972acd-cccb-4e24-82be-0e441f6e7f1a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6dbf5ab8-c323-4d45-b140-cb384b5d11f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973111da-8e68-4e41-a419-bb6ded4b9501",
        "cursor": {
          "ref": "fea27a2e-3428-4fa2-af23-8ffc03537dbe",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "acaa4c39-dc1e-49cb-b004-4d05a4eed302"
        },
        "item": {
          "id": "973111da-8e68-4e41-a419-bb6ded4b9501",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de643f36-31d2-4e09-989d-278f885139b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65554c3-7876-4fbb-ad61-339c5df18c6d",
        "cursor": {
          "ref": "326f50f6-1133-498f-965a-23ecc37cab02",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b36338ab-a4aa-4074-89b6-b1f32375d68d"
        },
        "item": {
          "id": "f65554c3-7876-4fbb-ad61-339c5df18c6d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e123e59-45ae-4dbc-95ac-b6f0b89ade5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446accf-7c88-432f-8864-1754dd53624d",
        "cursor": {
          "ref": "8d9368cb-de31-4fac-a689-b20e8fe7140d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "25e0ac6b-8d3f-4e88-951b-fafe5e67edd6"
        },
        "item": {
          "id": "7446accf-7c88-432f-8864-1754dd53624d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2605460e-4907-487e-b665-c53124f910bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceccaa1b-392e-4984-81bf-ee8f5ce05058",
        "cursor": {
          "ref": "4361c927-e4bd-4623-9dfc-34ae9ea46532",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ba9da5f0-ae59-4c3c-8e26-255952434f39"
        },
        "item": {
          "id": "ceccaa1b-392e-4984-81bf-ee8f5ce05058",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6483c20b-c366-47d0-b4c9-3ba9d4944a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85fcaea-73ab-4351-9276-19eaa7eb8b8e",
        "cursor": {
          "ref": "008ab38d-6f6e-4331-b651-d30944f2c745",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d89ae913-f138-4a0d-92c9-0731f927f110"
        },
        "item": {
          "id": "b85fcaea-73ab-4351-9276-19eaa7eb8b8e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c2010683-8663-4b39-89ee-e2b53c10e359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6dd2e2-6af5-487a-abac-644f2c8f81ca",
        "cursor": {
          "ref": "fd35c0a7-6e61-467d-beeb-a9d43ab274be",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4c25633a-3001-456c-a02b-c1d63e2ebf9f"
        },
        "item": {
          "id": "cf6dd2e2-6af5-487a-abac-644f2c8f81ca",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4a81c58a-a254-4ddc-be8c-31a9d2cc9202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf7eb8a-f2f3-4841-8deb-948c9c950864",
        "cursor": {
          "ref": "95560e88-6e30-41fd-b911-37b67433d5ae",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d9ed909-f799-4078-86bc-91a1fc6d1e38"
        },
        "item": {
          "id": "ecf7eb8a-f2f3-4841-8deb-948c9c950864",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "22bfa266-d8c5-4a6d-a05a-2dc78193cd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c82299-6285-4d8f-92fa-ad8cf58666d3",
        "cursor": {
          "ref": "e41a71ca-34e6-4561-a04a-bba9659281f5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7b7c21a1-5ae2-4d00-823e-7e3b5a45e42d"
        },
        "item": {
          "id": "97c82299-6285-4d8f-92fa-ad8cf58666d3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cbf5eea1-3a68-4586-80ee-506cd8fb2aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96aef451-7b97-4332-8649-3e8c87600678",
        "cursor": {
          "ref": "76f5debe-3d29-4186-96ee-ebb723145012",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c3588919-820e-4aa0-b1d4-6310236422a1"
        },
        "item": {
          "id": "96aef451-7b97-4332-8649-3e8c87600678",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "99c2c542-fc83-4532-a9d8-876e765c04f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f980d31e-95ad-407e-87bb-503cfbef653f",
        "cursor": {
          "ref": "3bc7901d-2d6f-44ff-8ac9-932b14d0b41d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f220e4c-2c11-4c5f-8e1a-64b200bbcb67"
        },
        "item": {
          "id": "f980d31e-95ad-407e-87bb-503cfbef653f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d7b211d0-1221-4c71-9a01-9a7a61a756b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be317ca6-c425-4ffd-82cd-5803f5f688c8",
        "cursor": {
          "ref": "4adcbd26-cb28-4107-bc3c-d7d81975ca67",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "734c8232-c6a3-46ea-a716-9e7c33d436b0"
        },
        "item": {
          "id": "be317ca6-c425-4ffd-82cd-5803f5f688c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c1ee843-c74a-4613-a59d-c99d2c767755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511375ae-ffb5-494d-8a3e-f6352f843acb",
        "cursor": {
          "ref": "dd11f38e-bbb7-4f83-b159-d33fa06eb4ee",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad7f8a43-7fe4-4619-b20f-dfe3d7c56ac1"
        },
        "item": {
          "id": "511375ae-ffb5-494d-8a3e-f6352f843acb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4bfa71a2-74d4-47ad-b0d1-7c5f127a5af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b230a45b-ecd4-4f42-9c4f-d012b053f4f5",
        "cursor": {
          "ref": "f5de6e91-5a73-492c-9c71-906e5d4dc3ec",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "bd76a3d5-27e4-4ca8-afcc-a75aa366554f"
        },
        "item": {
          "id": "b230a45b-ecd4-4f42-9c4f-d012b053f4f5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8da69af9-f890-45e3-a919-b4162726a3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2065f24-2172-4186-9d48-0cdde4f77824",
        "cursor": {
          "ref": "15620db5-c5d7-4969-a0af-bb5492afd4d7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "063bc822-0c2f-4f2e-9447-46d180b20e5d"
        },
        "item": {
          "id": "b2065f24-2172-4186-9d48-0cdde4f77824",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4bc47574-d8f6-47ed-8de2-62f7f548d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662cb163-ff35-47fc-8618-cc80942a4a6b",
        "cursor": {
          "ref": "87ee7bd3-67de-429b-93a9-953c55d7da55",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f19677d4-7a17-4bfe-8988-7db48579782d"
        },
        "item": {
          "id": "662cb163-ff35-47fc-8618-cc80942a4a6b",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cf00a834-fde6-44f7-a788-fb75e7c0e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79da537b-43f0-4034-be73-61b9820b355c",
        "cursor": {
          "ref": "afc782c2-1d7a-429b-bb5f-85b6e51ce0af",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "80b85271-8e6b-46f4-aedf-8c64e888ea42"
        },
        "item": {
          "id": "79da537b-43f0-4034-be73-61b9820b355c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a61898a-60e2-42ad-988b-301ff2252bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c68bf9-519b-4b76-9f51-ce14804ac73e",
        "cursor": {
          "ref": "1257bd25-88bb-4dc1-bd82-4a957cbbc11a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ff694705-7d2e-4922-9f52-bb86513ff4ae"
        },
        "item": {
          "id": "50c68bf9-519b-4b76-9f51-ce14804ac73e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4f6dffaa-4d2c-4e79-8e59-1f02289ab913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf7d9b9-d29d-4fc5-ac17-839df8037e51",
        "cursor": {
          "ref": "8cb0593f-2d54-4a1e-a6eb-8cd14e01558d",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8d9662cf-72e0-478b-9383-c2afa75c661b"
        },
        "item": {
          "id": "ddf7d9b9-d29d-4fc5-ac17-839df8037e51",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0686483-59cd-440b-9323-49f08b553a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3db5e8-c62b-4b6a-b7de-5450407ecebf",
        "cursor": {
          "ref": "612c38b7-242d-4728-884c-d2a3fbcbd44f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c1877a85-24fb-48f2-8768-8e022f331dff"
        },
        "item": {
          "id": "8b3db5e8-c62b-4b6a-b7de-5450407ecebf",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "531184bd-94e4-4f56-9b1d-3a96386cd813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71c257c-c5af-4697-a0b6-1b1b69ca9669",
        "cursor": {
          "ref": "90bd637a-d4af-4665-9920-d32ccab93d76",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f8a7fece-c316-4a85-b326-abdfd5ffc796"
        },
        "item": {
          "id": "a71c257c-c5af-4697-a0b6-1b1b69ca9669",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "afb6b556-610e-43b4-a7df-b026fc3a6db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a5a962-c81b-4dbe-9d86-c10e0fcb7a82",
        "cursor": {
          "ref": "f8d7db6e-eab3-4c82-a1a6-a5b3de34eaa7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0f6f4317-0a83-493f-897b-1d7f202d536f"
        },
        "item": {
          "id": "c7a5a962-c81b-4dbe-9d86-c10e0fcb7a82",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1d7729c6-7637-42fe-a016-62a71b579184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ca16e6-2aa0-4297-8591-453a2d07e2c1",
        "cursor": {
          "ref": "de435194-8dc6-4ff2-9cc4-8c321ed98b6e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2746a7af-df1c-4c2e-a766-8a4020d5710c"
        },
        "item": {
          "id": "24ca16e6-2aa0-4297-8591-453a2d07e2c1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b0e63e5d-0a73-4874-999c-2a489d0854b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44389e5-ff69-4089-9b71-628a19b61b38",
        "cursor": {
          "ref": "5eb9f1ff-1bcb-424a-a7a7-b7771d6077fa",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "973dda48-a8ab-4b35-a687-1013b7672cba"
        },
        "item": {
          "id": "c44389e5-ff69-4089-9b71-628a19b61b38",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "84d83233-d0f8-4f0d-9d0c-16cb87a5a807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e882a14-e44c-44a5-ac0a-5205509dbc8b",
        "cursor": {
          "ref": "e25a26ff-5195-4530-b9b9-394d9f89b92d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "82a44b7b-da4e-474f-964a-f38cc1760544"
        },
        "item": {
          "id": "9e882a14-e44c-44a5-ac0a-5205509dbc8b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "88013648-f842-45a5-a35d-6b900b4d549c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e161449-7f3c-460e-bb3e-42ce58a3fd91",
        "cursor": {
          "ref": "9c84b454-79b1-4b57-8c07-769e5fb6f3c9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bcc3a0a5-3cf2-4889-a320-c861853e7893"
        },
        "item": {
          "id": "8e161449-7f3c-460e-bb3e-42ce58a3fd91",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9782a8f2-1b32-4883-8465-3ef884873658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0186a629-5a8b-49df-8d5c-d0467904d48f",
        "cursor": {
          "ref": "8f40fd97-836c-475d-ae7c-7b65602a0e45",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0d0a95c7-9114-46d6-a5c4-3c5f9d135f47"
        },
        "item": {
          "id": "0186a629-5a8b-49df-8d5c-d0467904d48f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17ffe3f1-e55e-433c-9389-5445e906f7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0b373e-3664-47b2-aa13-16b96026c380",
        "cursor": {
          "ref": "d748ce52-fbbe-4d95-a355-ec7f726f0118",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a7a22b3d-93e5-4f56-b50c-458b4632d347"
        },
        "item": {
          "id": "ea0b373e-3664-47b2-aa13-16b96026c380",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8aedeb0f-6122-42bd-bc97-c8cba0b948d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa7180-c7f3-4b18-a004-8aed7d76b958",
        "cursor": {
          "ref": "f37d744c-1032-4dbb-b1fd-c26fb6e61dcb",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "df46f5db-bb62-4579-8717-ac3bf80b572e"
        },
        "item": {
          "id": "affa7180-c7f3-4b18-a004-8aed7d76b958",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3da17222-0093-4bee-8a2d-ebaa7c4612e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dcff27-1d5f-4c9f-a5af-defb370f48e7",
        "cursor": {
          "ref": "7cd59e2d-c512-40ff-83b0-1f8a9bdac2d9",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1b4a3c39-079f-4a05-b265-3a5e35f8db02"
        },
        "item": {
          "id": "29dcff27-1d5f-4c9f-a5af-defb370f48e7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8c2dad62-f4fa-40fb-9f26-db40b6b4adb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0f82f7-0209-4807-919a-12b5c7c39675",
        "cursor": {
          "ref": "f2520de3-1553-4ab1-a05f-d1c49ec354f8",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d101be03-e2ae-41ed-a14b-cb96e0e9c921"
        },
        "item": {
          "id": "9e0f82f7-0209-4807-919a-12b5c7c39675",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "247edea3-eb9d-4663-97ab-400b819c1310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8935d73a-8ba0-43fb-bae0-87a017e0a964",
        "cursor": {
          "ref": "0afe8871-85ce-4c34-a022-642403fc408b",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "80b6967f-a893-4b59-bd13-cb0e2f6a677c"
        },
        "item": {
          "id": "8935d73a-8ba0-43fb-bae0-87a017e0a964",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b6426053-1f33-4ce7-b13c-ca1212d37af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c202577-ee81-41d9-93b0-826f797739a3",
        "cursor": {
          "ref": "cd68de9b-efa0-440c-b442-c8d8203be042",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "9e2fa881-a6d2-4c18-a153-9f9926d8c2d6"
        },
        "item": {
          "id": "9c202577-ee81-41d9-93b0-826f797739a3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6b739d3d-7de6-4a91-b981-89ba7e338b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc14661-a0fe-4d0e-91d3-3c8f5ffc5704",
        "cursor": {
          "ref": "0faf41fe-f58c-4356-b6e9-8a0051a35038",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "807766a8-3094-452c-9edd-f9bfa0da19e4"
        },
        "item": {
          "id": "5cc14661-a0fe-4d0e-91d3-3c8f5ffc5704",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "af4b9b51-3ccc-4daf-805c-61586d44ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff883b-3cdf-46e0-a0cf-ce06889e8999",
        "cursor": {
          "ref": "d3173148-1476-48cb-8e74-e428ab4b437c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cfd19b7d-8911-4db4-9a23-16c442c61425"
        },
        "item": {
          "id": "1eff883b-3cdf-46e0-a0cf-ce06889e8999",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5d899332-7782-437b-85ca-ef99f991f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ff336f-c011-48a8-bb99-7a19e60b1da1",
        "cursor": {
          "ref": "b3b33e29-ca80-4831-959f-bbd700e1238c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bf43a765-5f01-4e93-a254-567ebf09994b"
        },
        "item": {
          "id": "07ff336f-c011-48a8-bb99-7a19e60b1da1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3d22dedf-ebc7-4458-b471-7a9670420d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef0d967-65b8-4f96-8b09-36f30dddbefd",
        "cursor": {
          "ref": "f3682069-bc21-4c1b-aaf1-58d2719d41a6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0db022d2-559d-454c-bc49-54af34308d2d"
        },
        "item": {
          "id": "5ef0d967-65b8-4f96-8b09-36f30dddbefd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "13054a59-23b7-4eed-9300-b4e719cab6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29e177-8ea1-4279-9c78-337d386cf410",
        "cursor": {
          "ref": "47ab7839-5db1-4231-a69f-1ffdb8599e8a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "70667556-096c-425c-9b3a-483efbaedf19"
        },
        "item": {
          "id": "0e29e177-8ea1-4279-9c78-337d386cf410",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ca1c9878-4728-4408-b4b7-6c6944ebe1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c152738-9379-4ed2-893c-1739aab8ddb1",
        "cursor": {
          "ref": "65f9a725-bd66-4928-a3af-d99e2069323d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "55fbc38f-72af-40db-98c6-9f02e8da951c"
        },
        "item": {
          "id": "5c152738-9379-4ed2-893c-1739aab8ddb1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "787ac70b-e81c-4be9-9825-7c9ff1b5bd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5bbd7c-2c81-48ce-82ff-1e622f75fa28",
        "cursor": {
          "ref": "a0ef472a-715a-4de0-9a9b-a7c1f5232cc2",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "119295e6-aa00-4c17-b865-366299f3546c"
        },
        "item": {
          "id": "ff5bbd7c-2c81-48ce-82ff-1e622f75fa28",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e026f8f4-6cf0-4055-b53b-61a6e7f75694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5e2243-d66e-48d5-a17e-0dfe0b9e6a93",
        "cursor": {
          "ref": "fde3263b-28a7-426d-a1a6-4a461d4de63f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "345d2c71-2850-4dec-a4f7-34fde522e10b"
        },
        "item": {
          "id": "5c5e2243-d66e-48d5-a17e-0dfe0b9e6a93",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9938f42-e180-4c14-8580-edc3853bd6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52464de9-b0c2-48ad-a33f-3447902745c4",
        "cursor": {
          "ref": "29b27728-7db8-4f05-b5c0-74e9bbc1f52b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e9fad143-74b1-496e-8a74-d0febb9320db"
        },
        "item": {
          "id": "52464de9-b0c2-48ad-a33f-3447902745c4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d7ce28cd-bd9a-460d-89f0-423b8d9cb0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895bb890-9aa4-4230-ab0c-c0fab907837c",
        "cursor": {
          "ref": "7f3e1dda-29c8-4856-b5a7-687ac89df105",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ef61c7a7-8913-457e-8dc0-0b3614ca96e6"
        },
        "item": {
          "id": "895bb890-9aa4-4230-ab0c-c0fab907837c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7ffccab5-38c0-43c7-99e2-d7a126270cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7dbd38-0138-4890-98ac-45343682086f",
        "cursor": {
          "ref": "f9d8fdbf-fb92-42a9-8266-bf66417dcc0d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6bee1d87-7274-4626-91fa-7ff10e2fd485"
        },
        "item": {
          "id": "af7dbd38-0138-4890-98ac-45343682086f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50252c93-2435-4320-b25f-68f8175d7d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60ff1a2-d8b0-4826-9e48-0b414ba335f4",
        "cursor": {
          "ref": "ab39f9dd-b3ac-40ad-b3bd-6d86a0ffadd6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "0c93491b-a10c-4c8a-8d74-e2ef21526d26"
        },
        "item": {
          "id": "f60ff1a2-d8b0-4826-9e48-0b414ba335f4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0428d2c-1c1e-44f2-a96e-6c2b59843b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b187f-8475-49d4-9271-806f5a5a0180",
        "cursor": {
          "ref": "a6dc72ec-8217-439b-9a04-7a2da4930c9e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e3527919-a77f-408b-8871-b5a06308eebc"
        },
        "item": {
          "id": "498b187f-8475-49d4-9271-806f5a5a0180",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "047fbaeb-8705-4bed-aec6-54995f84c491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5d92ab-5920-4a3c-beb7-e0d929ade04c",
        "cursor": {
          "ref": "2c99d818-7d91-4077-ae2d-c27aeb4090cc",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6cca6a5a-7e99-4066-a2c7-450d9cf000e3"
        },
        "item": {
          "id": "8f5d92ab-5920-4a3c-beb7-e0d929ade04c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f1207fe-b115-4fd8-a859-dfa7f96c137f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918f7941-1fa0-4dca-a9a2-0aca39a55742",
        "cursor": {
          "ref": "c0025b42-16b1-4112-b4e0-174767383f0e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "7881e68e-476c-45fc-a8fe-3b4f9d615606"
        },
        "item": {
          "id": "918f7941-1fa0-4dca-a9a2-0aca39a55742",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "73b1beb4-dae3-4ecf-9300-23da86e4a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbd5dbd-4363-4bc7-a17a-4e8b4a3cc3f2",
        "cursor": {
          "ref": "28c4d77d-33d4-401e-814e-d64d2bdb27f0",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "53b652d2-95b0-411f-92ad-a1d47c0ebb3d"
        },
        "item": {
          "id": "8dbd5dbd-4363-4bc7-a17a-4e8b4a3cc3f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7364eff4-52cb-48c5-93d3-db227e63801d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65aed904-9846-49a2-8f1d-fce6f6088e7e",
        "cursor": {
          "ref": "11ba1840-ce52-4fee-8a4e-d83d5b366f26",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "990a2727-1ae3-4c8a-86b2-4a9c217c7f26"
        },
        "item": {
          "id": "65aed904-9846-49a2-8f1d-fce6f6088e7e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f86b1f10-2c68-4a78-b551-3fef340a9d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afbed7f-081a-4e60-9183-7e380224beb3",
        "cursor": {
          "ref": "c21cf38b-062c-489b-82c5-ab9d33ad51a5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c5070ee4-2dc6-4e5d-b33b-44e5a438cd5d"
        },
        "item": {
          "id": "8afbed7f-081a-4e60-9183-7e380224beb3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8fd7ff50-e5d9-44c1-bb57-764319bb32b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6b8575-8a73-42cb-b333-bc8168904fa6",
        "cursor": {
          "ref": "9d3dcf04-ac2d-4c79-9b9f-14bac23c49e4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "443d6a02-604b-4542-8d5d-9e78dfed0d5a"
        },
        "item": {
          "id": "5c6b8575-8a73-42cb-b333-bc8168904fa6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2d1753c4-bcf0-440b-bc45-54c51c662d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d122d2f1-e8c7-487b-bb2b-87e67d6ec776",
        "cursor": {
          "ref": "20cbed79-9c04-4293-a38a-57d2023be0a1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1fca5cc7-e8be-4dc2-9393-3f538e41c87b"
        },
        "item": {
          "id": "d122d2f1-e8c7-487b-bb2b-87e67d6ec776",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c98b0d07-9701-40cb-9205-752ddd5660e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ebaa9b-5efd-4dee-a32a-a85394d3e41f",
        "cursor": {
          "ref": "a768feda-32da-48cb-940f-b76b67821977",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "76c790b7-f3bf-4cd8-8dfd-074b4eef6950"
        },
        "item": {
          "id": "13ebaa9b-5efd-4dee-a32a-a85394d3e41f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "81f89ea7-8e96-41ff-9127-0df36cc5035b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "35323d06-7f2e-4d76-a592-14438a17d26f",
        "cursor": {
          "ref": "eede0748-1ee2-418c-8fc9-41e92959836b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5dc890e8-95aa-4fed-8cbb-7c496f548e8d"
        },
        "item": {
          "id": "35323d06-7f2e-4d76-a592-14438a17d26f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b7b084c3-3199-46a1-9390-5bab19a47002",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247fd6a-680f-41b5-a1c5-82d53cb370fc",
        "cursor": {
          "ref": "b7de38d6-6b38-45d1-8513-6ca482f49668",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "0f5938e4-16c4-433a-9579-ec367d67b47a"
        },
        "item": {
          "id": "9247fd6a-680f-41b5-a1c5-82d53cb370fc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1fd33610-12d3-4c28-a60c-696cd2949aa7",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b758e8-a965-4520-b41a-ef2baaac74aa",
        "cursor": {
          "ref": "90b69293-444f-4596-8bf2-76a7615712ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a85521e2-91a2-46a8-8896-1274161c4623"
        },
        "item": {
          "id": "52b758e8-a965-4520-b41a-ef2baaac74aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "455a0328-eb26-4c60-9cc0-ee1a204d5672",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b758e8-a965-4520-b41a-ef2baaac74aa",
        "cursor": {
          "ref": "90b69293-444f-4596-8bf2-76a7615712ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a85521e2-91a2-46a8-8896-1274161c4623"
        },
        "item": {
          "id": "52b758e8-a965-4520-b41a-ef2baaac74aa",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "455a0328-eb26-4c60-9cc0-ee1a204d5672",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952e3ef-39ec-441e-b44c-3ad13a2c4fa5",
        "cursor": {
          "ref": "77089fbe-9096-4c21-b5d6-3612591dc5a1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "875d8d64-e49a-44ce-9d90-17894af96c48"
        },
        "item": {
          "id": "8952e3ef-39ec-441e-b44c-3ad13a2c4fa5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "21f3271a-9d60-4d61-805d-933c23b2511c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfe5906-68df-46c2-bfbf-232908904912",
        "cursor": {
          "ref": "ebb4aee6-5657-42d7-b144-09823d9a655e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "dc84ad75-593c-4cca-abff-f868ec35971f"
        },
        "item": {
          "id": "8cfe5906-68df-46c2-bfbf-232908904912",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ea36feaa-9ceb-4a48-9d46-f2cf10a01826",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}