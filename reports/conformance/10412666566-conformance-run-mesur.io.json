{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5687bb40-0450-4347-b65f-d71903d71110",
        "name": "Clear Cache",
        "item": [
          {
            "id": "512f39c0-5296-4dcc-8536-51d55c9079be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f810a0fb-bc07-4474-ad38-d41bedd2fc32",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6e5cde1e-edd0-4611-9cbe-e20ecdd30390"
                }
              }
            ]
          },
          {
            "id": "ddc3f08d-c216-4ce3-9302-1af278df362d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec996c25-2ca7-4753-97c8-4db8e8dfeeae",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11628aa6-915a-4db9-bb7d-74bd3413460f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "62cd297c-fa75-4ba1-a996-5eb71c653426",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0a25022a-4fbf-48ea-803e-2c3814465023",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fca3b3e9-4076-433f-8d4b-778bc322be53",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a3704d9-169c-42e0-933f-e52c1fffe77d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d1776a1-34d8-442b-8a5c-149383156f05"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f57e2fa-ebf7-4afb-86b9-28d16b89f165",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48abce4d-5256-424c-88eb-4e1406beefd6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "031ede7e-8501-4120-b985-51b84ef06f95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e83236f9-731e-42f6-83d2-6535d80830a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ed8bda5-5989-4ff0-872e-249f046b9af3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2211fef5-afdb-448d-9054-c1fd3bd9b4e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3430275-93eb-45c1-8522-ef41b98ab6fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5aedda39-2123-45bf-a3be-f21f8f30aed7"
            }
          }
        ]
      },
      {
        "id": "e2580d59-a9fd-41ea-b987-182be22964c7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d8bb8fe1-10cc-48af-8529-8790eb2ebda5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98a9a886-eb88-4f7a-a2e1-2349340bb069",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "375a4bf3-b996-4725-b1a0-1a0cb03a873c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27909dd4-3b4d-4c36-95bd-b8199dc5dcde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f556696-fdb6-4244-97a6-42268f967f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c553df-06c2-4207-8ac9-944485b85b32",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417cd2ba-771a-44d2-8555-4aa002961ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "609ba3b7-f23c-40ea-ba3b-d89847168196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fed18c5-4522-491f-98d8-11a929ee4b09",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be382b39-dc48-4183-9640-128024b6591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ea27b3e-9ca3-4cb8-9605-f55789da7f30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c4fcf35-ae73-4a33-8b0b-e01eb2696bc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d693e942-71aa-4e18-80e3-2fb6a695944a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cff5db-d736-469e-a7c5-ca67824664d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb4f2586-39a2-4741-ae5a-14d5847eda75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b70d4c6-88ef-4c1b-8b5a-a60074352510",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdcc7b9-f91a-4545-b915-ba6db0b5302d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a34a8b2-c89f-4b80-8a22-436363005453",
            "name": "Positive Testing",
            "item": [
              {
                "id": "46ae2b2e-946d-4905-a81e-c928b3a998c7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3224bf65-8b0d-4afb-bcd4-18df1e11d19e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a677cd30-9b91-41a9-b2b0-1c1b15e85e7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a037c306-3380-4a43-8a0b-22b924441226",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ee6e101a-45d9-4324-9196-020e3f8e5ffc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22ef4c0d-7747-4d27-baea-269678223ae5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d89c8480-c7be-41f6-8283-b45124d74e67"
            }
          }
        ]
      },
      {
        "id": "ef8e202f-2115-445f-8a27-eb21b356e2d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53517333-982d-479a-b7bb-3e2497692374",
            "name": "Negative Testing",
            "item": [
              {
                "id": "170fe7a6-4c09-47f3-a854-0bd5a2c48cf2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6ecf4c49-6d87-44d4-9ab0-5709ca88e7e9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56937d8e-3ff1-4bb2-8689-f2e159673ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e3495f-faa1-4159-9d3a-200f13156f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d332df-4dbf-4b73-83dd-bf79d48f97a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5e7631a-38a3-491e-88f7-060334283cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1905e2-ef58-4b99-9ed3-78aa5b41f897",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb418da-6e33-496d-bff5-c9130684c828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816f5020-3422-4b68-bc28-418834d6f418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2003b8-e2f0-4354-bb0a-5adba10ecfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccbe16a4-7fb1-426d-9e41-4808df32de2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd981e0d-848d-46cf-9e8a-630e766ef7ee",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614af273-5717-46a6-9aa5-2e3f1081fc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0ed96e-ca4a-4edb-917f-cfc4502a841a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e965b2de-8bd6-43cc-b95e-826f5f428dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeb146b7-fa46-49b7-8801-3659e0c01f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bd1028-1177-4425-8d6e-cc2f3a89e1a6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f7d7f2-df8c-45ac-839c-6bac57d83a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "591f23b4-66eb-493a-bbd6-2bf8be8859be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff685a2-b915-4fcb-b887-c2638139b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8a7078-9e72-4742-a5f3-61ec975a05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27787288-772e-4aae-b7fd-9ab0c7a61fdf",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e8ea37-131a-49dc-9be4-149a4e44f55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d19346-c99a-46a0-bf16-083c3d7323c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e74c942-b79c-4f86-850e-8c4415e4f427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e80c7c-fc5a-4bbb-a41e-785930adc6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c8ea67-17e8-47c4-b83f-36e9b6fb0c9f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92511c5-6bf8-4e24-8a49-d16460841d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc84d713-83a7-46b0-8af0-0d20f43d4b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ec747a-a47d-4387-a5d4-7480a33dd7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6964508b-718d-48de-8882-ebee3c2a5648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c2f04d-3e3f-486f-af87-60f926ce2d55",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ffbfa-bf0d-4ae0-96a3-0359cf2a089b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45951c31-21dd-49b6-9e05-2162b2ded781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1804abf4-09c3-47fc-8bbc-5afec6c9729c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "792f3505-7164-4e0e-9630-ccb49fcdcb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2fab3-02e6-4bb4-9a33-1da031ad2785",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696675df-ff75-4688-90f0-7e8f3a1ad749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611f1fcd-4b9d-4bd2-92c3-34bfd8e4e6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79226075-6b6b-4512-9691-6f54e1e176bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12b3083a-cabf-4c07-983e-175a1aafee4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbbe0dd-b383-436c-b5f8-feed863f07a8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b27db86-f85b-4651-9219-4fb7229c7465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240b9432-b135-46e5-b722-168c365d0a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4ee663-4a81-4506-9607-9a7786672d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1af6eb-343d-4dfe-af1f-e625bb9cf187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e86c40-a69e-4382-8788-86e11623264f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b84107f-edda-4c4d-8a9a-92f4a66237ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efa1bd3-618a-4e63-811c-ba1f24ca2462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3093c-198b-418f-889f-4961243adedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef6d9b13-2891-4a5c-8bc5-ad65bc2a177f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886449b3-cea5-41a2-87ff-ed8da17f7f5b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc7ea7a-c46d-4902-8b3e-c1a144b36618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ee6ebf-53a4-4adb-ad28-6597d2f21797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f09799-90d7-42e3-9f71-3b2232de680d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b30f2576-e9eb-4ad7-a159-937a9f5d48c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b7cdf-fb3a-4a47-b2a9-592f480b03bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c203274d-2772-4b06-a5e7-d7c573548aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac52f3ff-f2d5-49fc-a051-857f75929a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fff1cd-d8eb-4b10-a014-5fa735ddf974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80135d4-3b5e-48e2-8cc7-3ba95e9361a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636368dc-139a-4cc9-8a60-522c92743aa3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfc64b4-3dad-4649-a760-b4c8434423a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0f9f55-bc8c-4b71-a8ce-408504022254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce09d77-d461-4800-a881-4baf87660a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a565381e-9e65-49db-907b-1d9c2bf1acbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7740d8ee-b4d8-4d57-a75a-490376805011",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c5bdbc-92f2-401c-9ab0-eacbc1fff6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbc34d5-6a8c-4efc-815d-c27ce0ff58a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13581ec6-da19-4cf6-ad34-a23b47e793dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c8c175e-fd0c-4ab9-94d2-8589820f2262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b39c83a-3b88-48a3-b156-59707ad72fa6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb646b7f-9d97-4053-910e-4fce16bb4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a752408-7d9c-41b4-893b-7940ececfacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759ee36f-2a7c-46cd-8a98-fb674d4cd0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08948383-0ef5-480f-bac1-844e6db322f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2a9f4a-411d-4cd3-a803-8550052c07ae",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263f03af-da8c-4911-87e3-ff60bbd03bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb85e3e-f11a-439e-aae7-d47000eb04d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ed52a0-38c7-4aea-9574-d552353a2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "312799ca-c0cf-4470-b775-4da2385c8018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0df20b2-2497-4eca-b537-10b8e96b8b70",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534eac37-9cf4-4819-9ff4-a02acc0be06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b74f33e-0a9f-4455-9c7a-5ca625821789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b61788-81d2-4d6a-8d11-d37f5c795a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "383fdc34-feab-4a68-b183-20228d47cbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae117d5-7f0c-4906-9388-a648f6fd4d6f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5449d12-5684-4269-bb87-726d15209804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75b4213-21aa-4590-bab7-cc5d6fa46604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b017ab5-6b40-400b-978a-4caac8dce949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc292ef2-b2d2-4d34-82f9-f1ceb8cc23f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05594989-0c02-43a5-9a11-088ecac9b1f2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd8186-bbbd-4472-b645-4b7826117ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4addd3-ee36-4ccf-8dde-5091501ed883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7800d03-b19d-4186-aa36-c9b0b5f6891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bcc0cd-ea86-4d73-81b7-eb93d1bea167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72985bab-99b3-44b9-84f6-164a7e41b521",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989b9c1a-4fa6-4df8-8cbd-26263155ead2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7622c5d3-408a-4320-9031-3021ec38aef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4addf37-fc77-4bd4-ab11-dfdd1c0a63a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5112ba4f-5919-4990-bd93-56ce529bfd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfb8e65-1068-4cb0-9af5-464c7c7c89c1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e702b469-5a83-4ef3-a393-879c046ecae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ec6b73-7205-4943-9f7b-ac7bd8994f7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ec83af-60d4-47c9-9ab0-eb5e07c91201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58dbbd57-4ecd-41f9-b665-1d411f718896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834d330-d7fd-41bb-b1b4-c96c081a1a46",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c345ff5-2211-4ca4-a0fd-1fbcefbe036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b0bf9a-fc2c-4afc-9fbc-0070b781a475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db163e6f-4369-4143-88eb-538d510bee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3adb7631-4dd7-4794-8a7a-32219747bacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7221bae5-924d-48a7-b567-5af35d82daed",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c4f14a-2b4c-48f4-b9fc-32098f268c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31805193-1e38-451d-9f26-b4bcbbac828a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff928b17-dd2c-4387-852a-5217023e1c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "008fb20d-4b1c-4107-8b35-6654f6bd355a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038afd5f-8a0b-4c58-b8d3-c417ce4a7a9e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9460889e-555c-4b37-bc99-05ff9a4192c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e856971-470f-4782-a301-0df96f18c77d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8661f3-f010-4fdd-a0ad-5174277a5c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad33b02-c436-4280-ab81-624b773f59a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1382967f-d21d-4f88-a5e6-078e1c07cd1a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f5f628-8113-484f-810e-6cec40681906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61da6c42-237f-445d-b62a-99de21337719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2253aacf-7f9b-4a5c-a11e-80f2dd0efd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdd03c8-d571-4b21-b722-79f86810de5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d28833-fca8-4c1a-a8c8-50322a730772",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4f2eee-a2b8-4c8c-a2f7-601300582aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4b1998-1d28-404a-8a37-bcec265d6d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c8bb9-cf64-4760-840e-fa7abafd81aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c42f8c2c-88f2-4536-a7e6-658fb53e2965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca657c01-b645-4796-bd7e-d071de8be392",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2344f786-b9e3-4246-8851-e26bfe2d3c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ae199f-f80c-4b56-b63c-befb09218e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe198ad5-c9e9-44ff-9586-60b4f43fed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a22e4b-70b5-44f9-8990-1cb49184acf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf3a9d9-f2c8-4759-ad15-d955391ff399",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b8898-98cc-42cc-a63e-9ffc99c97ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8826983-73d8-4827-ae0c-b5fee349415b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a88188-0e5b-412b-9255-41d0d2422c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa9d0da-6f2f-4bec-bc8a-cd77a743ae92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662d3eb4-8507-4e7a-9337-8ed6c3945e6e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2430588b-b8ad-426e-b45e-da761bb4df48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae70f58b-4e23-42ee-b0a9-49e0d68de54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af5a9e2-a50d-4911-a251-1d1007448ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9010a0c-0cd9-49d7-98bb-22d06caa80f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251066d2-9441-4db3-804c-6b27d36d1058",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bc74a5-cb07-4cb8-ad15-4af26c49bd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7772bb11-032d-4178-a327-5beb68aaf7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0d7518-a210-493f-86b9-8788dd1ef2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cca3f64-7ca3-47ea-9f6f-1a060449d6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6953c1f-0da8-4cd3-9702-faaf20128ab8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a660ca8-83cf-4513-855d-cd9afc85f1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf0f2a0-fca5-4e15-aba7-53255a1f0110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5944fe31-061d-4e01-9d2e-8c8537c3d5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af56826-6530-4219-bbe6-ecd05deae461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3e8d43-919e-436b-ae72-6af056c5514f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e674e32a-28a2-4381-9059-02a3c84e3a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b036af1-f30a-4cb4-8054-03271b1186fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c77d002-1f81-425b-a760-f8f9451bd867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "184b9b53-4d87-4736-b9f2-8ff96ac18815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aa9513-5409-4782-b636-3bc42396be3f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5aaff9-973e-458a-8742-a5d29ec9cc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096bf82e-620b-46df-9aee-7f7f5c9a62b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed40ee3e-3257-4aa9-9166-53063b3e654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56dbfcff-8161-459f-90bc-c463b96b6c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ba1a32-4bb9-4e2d-9a4e-6d45a3ddee31",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bc3f22-ee1f-45a0-84bd-fe6bf7ae8b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fe7a3d-904a-498e-bc2f-6d72f8dd9bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a4bbce-87d9-4a01-8997-992ead9c16f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ab8640c-2579-4053-b225-19ffbd352c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab79b7d6-73f9-47fc-8c02-d2fa1d7be242",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcdce17-d957-45d1-9bc5-57617b0b30a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392f9912-7cf2-45f2-9bed-e45fde61168c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc943e85-0fe6-42aa-9edb-eb15fd8a4484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e93d3c09-b201-468e-9706-d016b40ee804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8296f56-05ed-4872-903d-7dda928164a9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58462199-5b5f-420b-9880-97d7f3ec8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a180074-43b6-42a9-927f-cb79a532b61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5b4163-d9f2-4ed8-bf2f-08bb0bfde558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37171142-ee9a-4f88-8841-74b4c6c5e610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c693ad8-1195-45ce-b3ab-21b23f71ea7c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c8a8e2-e77a-4f63-bfff-124006c401af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6008330e-8bda-4cdf-9d7f-ca4398a6b8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2995a193-daff-4a7f-b810-4606a91341db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87df2f95-e0ae-4710-9fb6-aef8b8f15c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25305903-a6d3-4a88-9132-800d1f5f3f3e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b17c8e4-95ee-4ba8-af45-d1bdc23785ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e95b067-1776-4421-a84c-3fe2ee531d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae474e7-a4e7-4e70-92c7-e46f41e4b759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "415cfaa0-4bbb-40aa-a972-44b4577f0670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f7a45-b6b2-4709-8d8c-d4508218fbb3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840581ad-2345-41b6-986b-e2b277be6978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761e0774-7c5a-47a2-9064-3dad5e838c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f78dcb3-a8bf-4384-b82b-5a6de13be05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "506611f0-70f6-4152-aaf1-fbf334fa6e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f881d2-a3d7-4754-9ef8-5233f31fbe96",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8652dc-d34c-4e87-946e-8a9431d26ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d62405-6359-4ef0-84ab-717e21ceb841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e75ac95-7056-47f1-8e7f-16c962d4439a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8822b7a0-db90-4174-8dca-eb2ef49de9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3aa95d-267e-4c9d-b50b-004da3126356",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e6e75-e5d4-4652-9060-acdf16f28a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074777c6-a54d-4c57-8b4c-c36c3a4a8288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1304a3c-de71-4146-a6db-0ffc765f5275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d061d1db-1cf6-4ae5-8c08-2ca68ac7a490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d629120-3489-4a1f-a687-307acb8ff839",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce04de80-6efa-49db-a2b6-1ef931f845a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a5931c-19f5-4676-bd41-cb1823d57865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bc04de-82ad-49d3-b85d-5e5a98a3b15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2f835948-b106-4dec-be6b-d14dd2b0ae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e748db73-fa9d-4480-9e8b-46f89d9086bb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6378f4-1ecd-4eb4-bfe7-212dc5c0e364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17345a06-bf0b-4ab3-95df-bea7184050ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e253ff82-3052-4aa8-83e5-09ca251efc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a0415c-9169-445e-ba79-5ad1bf40cdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7307cf42-cdc2-4d20-9311-cc00bb4e9485",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a1471f-3b2e-496a-95d5-87677a457b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98beeaf-0ee1-4f94-990f-3c30e4f000cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30943887-0c39-4aa7-a7b3-b2918ad77937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "389c9b74-bc62-4e05-9665-b195a0a82502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012c6a0a-feea-4065-bdde-d1d3ede1a6a8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d808b8b-797d-46c6-8fde-6323d8da73cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592e1989-d034-446a-a6a4-a768aa8b1454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00537dd5-e69e-4667-87d1-9aa90c3e424e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64787b9b-83f0-46cc-8a48-0a885be87c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dc2fbd-e6ff-42e0-a200-f4b125ac01a0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa1b623-eead-4ce4-8885-63e1bee6583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "632b47ad-d2cc-483b-b749-5c36674a1e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1ebee8-11a2-4a6f-9f10-f1d6ef9c0690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3190366-c99c-4804-b690-f15a02017432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ef022f-fec8-41fc-838c-454ec3e61b55",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57156eba-d5f8-483e-802f-0ce4d2438235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1308e782-f49f-4025-85d8-f449c9a5754a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff9aee-9d6a-4dc8-ad60-60ebe4d1c288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d716f21-4213-4317-b7fa-d12c3a096121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15dc6b8-fdcc-4e24-b309-84566fe3ab35",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc65226-3313-4f83-a2b9-14d0ce5818fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203f32d3-5ec4-446b-9eb7-a709c0780973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3443a6-8901-41e1-ba83-6afff6b35a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ce209e-86f3-4ade-86d6-bf3ea0fe7cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7893b664-c0e2-4502-bac4-fdc71e66ff3b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100622cb-5c69-4e75-aa8f-92a357bf3b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677da31e-a9b1-4612-900d-ab667ada52f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0989b6-178b-46e9-bbba-578c057e6e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f99a893e-0c27-4ca9-a8ed-fdcd6ddc11d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae5b4b-9538-44a9-8f2f-8b133b860588",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601d05c1-db26-4f27-b001-f670a4fd7cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b47ddd-8f7d-497b-9cc5-8173035e4483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c5adcf-d2f2-4fe6-ad62-e337d1b42798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "242aac68-8660-42a7-b635-ff93594f330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bed66f1-07d0-41e3-bc8f-44c4c6cfb3fc",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252e29af-57bc-4b7b-92b9-79fc883af63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68ec0e1-2a17-492a-932d-9d6e924d138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c0ec5d-6b10-4185-8402-9147c8f60ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e4180c-777c-4cf1-80a7-24dd322aaa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb20b8cd-40ad-46d1-9f09-cec50bc2b17d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02162008-7bef-410a-bc7f-eee48faad2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dff3681-0a34-4f5c-a77b-1c71ec1740c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d043fad-45e9-48d8-9bd0-35e189ed47d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "697af2a1-b987-4606-9e39-f188c3da6c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7175dd38-2914-45c5-8324-5ee7b4fb6ea0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc4823b-97d2-4912-b483-f80ddd813cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c44149c-c4a3-49f1-a6e2-783de80e22c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a7197e-f6d6-42a4-abcc-df1be7db9269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "893fed98-779f-46d5-ba9b-4258b43b548d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae2c1d1-ff3a-4444-b9a6-979a33b1b3df",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f6eff5-3b45-43f1-8d8f-4f9b878144b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279fe181-d8fa-4f01-b242-bca74bd47d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7a13d5-3799-46b9-8963-309f14e147cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da777e5f-3e96-4fa4-9119-f738dee24297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25b777c-bcee-467a-b482-ab72282b713d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2611b8aa-d451-43bd-b4f9-3b373ce95b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66b5398-e9e2-4587-9d0c-94f9f0ea7035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5490d91f-bef3-4379-9c17-7bc9f0634757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "921f24f4-b1a0-4669-b9dc-1e979f6169e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716075ca-19d5-42e8-87e6-4e0d37c8e7aa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713d220b-d710-42ef-b65c-50bcae7a7479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c6e139-b4ef-4ece-8120-7689e210045e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c5e903-905e-449b-a57b-af70ab5dc5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "47007534-04ac-4187-a78f-e02378df6e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c665d412-a528-4bba-9df1-e078ab3af2a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98958df-66f0-4fb0-9efb-7d1e6ddfdda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d876dc9-9e16-424d-8fcc-70322a8ead16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de79a8da-6864-4906-9972-2b91465f716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "463ed5cf-c73d-45cf-a4c3-19db39d9a358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9574a661-da12-4256-900c-3d47c296b21e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0a20cd-f662-49dd-ad14-a1bc773a8abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636beef5-225b-453b-ad1a-01bb0ecd4898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d796244d-e242-401f-9161-da40556165c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f10ab4e-a410-4c36-b2ca-213d29b8be01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc44019-353d-44c9-9acb-07023200fe28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36897bc-1ec3-4584-a6d9-0afd506676d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb1687e-35f4-4570-ae75-20116d85bd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a540d03-c818-4052-8106-9b1be3f9d85a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1241e06-9312-4cd6-b67e-628fea3b1538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdce47f4-f6e0-488a-8fe2-322f081dc057",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba85bd-7429-4def-8582-c340c51c1d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1514684-fecd-4cdc-b123-2d40961d0503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3250bb6c-3a3a-4219-a795-8e5a3112984c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e78c9157-ea30-4d1e-98da-222cf6eb19d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b5b6f4-e997-4f37-a90b-06f5e602ae17",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c5c30f-1915-419f-beb2-caeb99d42468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945ffced-d0ca-4402-b98d-dd68e0ef9ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25fd969-254c-49bf-8773-d3c9dc3f46d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4040a1df-9e35-4784-92f6-8497f24eaff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130f24ce-6760-4309-b788-89c938953a4a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27baafbb-63db-47c2-a95c-98c29a5abc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102741e3-3552-4c94-ab20-c0fd9a23690d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a6061f-72aa-48cb-b3a9-4e0b598cd4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1266521-1a8f-44b0-a6f8-48440bb42b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fb2da7-12be-43b4-a990-0cbf38b71e5f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9faa22-f13a-4c7e-acb7-36b1f33a07f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c839fedb-9171-4669-878b-cb4258455fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5ef5c2-03d1-4f44-984d-0e78af9690eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc9f3a0-79c0-4c18-9e07-1c5708dc68b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d975ae3c-00c2-4f16-8d1a-378044c54eac",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8dd443-1520-4649-97fb-adaf46dba177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b396fac-5f67-400b-a9b4-b38eefd01dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e99e52a-c6a3-4b06-9880-b111cf7ad630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db93133-4d24-4799-913b-de628e8d5d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d33bdaa-0198-4747-aaf4-645c3f4386b9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c62e335-f7e8-4fcb-b36e-668904d8c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1193e9-88af-4033-8bb7-dd0e360eb524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dec01d7-f840-4d90-b6d8-062df9deb17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d7ba1b-8b39-4b02-aa9b-1355fb2f9a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad94300d-8c5d-4ba9-a4e4-7fc2cfd97952",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8df1525-d6e7-4f27-aa52-3b5933e297a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3569626b-31de-44cd-b90f-4f1cd55574e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0382f663-29a5-44f3-a7b8-865c07fb72c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c8defe7-b09f-452d-b720-d99d80e1706e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febfbe45-fa18-4ee8-80ec-a29a990041d9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e90e99-b6e1-4604-9a03-c7cfdbf694de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcbdac3-f3ad-4127-8fff-e351ae133969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be5a284-890f-414e-a4c8-4b0137c02e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae27111-cf46-4e49-ae70-b3d6760e619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b57a866-70e8-4d1b-b841-e22c62ec3798",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c551d0d-c66e-4688-bb72-2402a08bd1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f78dd13-3fb3-4122-9fcf-35dfaf50c32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75daa9a1-4ee4-4be9-b67b-3ec069641ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32b7a49a-4ca4-44ae-aa2c-737816629264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc8edcb-ef11-4c7c-9089-86598a41c0c1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b27cea-f438-45cf-8564-d21fcc400f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c2e5cf-2bb1-45d6-aef4-51e6dd6202fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a947d9-e660-4c7a-8565-0f8c716cad7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "610de569-f297-42ca-8a70-59cec4f47536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5f38e-5ee5-4aad-951e-76f62cae78b1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed9b983-38f0-4b47-8771-784fde225a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff982346-62a6-4f59-9ba0-a69bb56bb8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b15cb01-0bd2-44f7-b12d-da1b58562224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f577204e-822b-45d5-acf8-97a8d5b75cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd9e19-d23e-48e7-ac94-c21e1571ee10",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a2bfc2-002f-4607-9767-8995c9de8438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef369c68-cb96-4aec-b0e6-a3f2c939bf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274d4c99-fa34-4871-9799-c16785dfaa12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c4977c-5179-4be2-9883-5a6f526d2eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05287a2c-e0d8-4c19-8f00-1809ef6dfcda",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8400a36-3cc3-4081-8ed9-8901766095d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c5139d-b130-4f14-ba0f-78659a13baf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7dcad7-a317-466e-a2f9-70bd5db4cde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7d1fe7-2fec-478d-8aac-c5a6ac9481ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57367cf8-5d3a-45b9-85a0-453c4de45e88",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453c566a-ecbe-4f12-9eb3-3ea7e081e382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1d8a5f-bcc0-4810-87a1-860dcbc787a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bb311d-79b0-4f15-8386-a5196c4178e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0453ffab-de09-4678-8487-0481396f4c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9d1802-64c5-481f-8bec-5036d1798523",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3821d2-1b05-4da3-b686-8db8cf84acf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f137892-0083-463a-bcee-8fc562669675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31ce8ae-9554-4e88-8f4c-4528e0098235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74dd91f3-ac9c-4049-bc1a-b70a50b0bf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54901141-85a3-4b82-bdf3-1db02949ab46",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d244a08c-976f-4aff-8368-ea7af4403b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8829c39c-443c-42bb-97aa-38415e41837f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536a474c-5a75-429c-b2b6-bce55c6c2793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "206be60b-df1c-4827-bf91-3122e7d4d40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4c328b-168f-4996-b5fd-ed8c4775f570",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1560be-c4f0-440d-a4cc-e54fe66db884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2ec2c9-91cb-4a38-84af-b4e8bafbcda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e763b76-c3db-49f7-a4f7-61bf533a179d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5b9bba-e549-466e-8b8c-50c6e525ad54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0765d2-bc52-4baf-8e6b-7e9983d127ea",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d889cc-7e09-4519-baba-72cccc391508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b97d69-8a1b-4271-8d15-81e89177b86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaadde6-12b9-415d-8a29-3941dbf4e2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14dc182b-4fba-4221-912a-8506f12a3c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a3303b-4289-4335-91d9-ba0db7c13627",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab51fd5-3f5a-4fda-bb03-25709abde5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a686a2d-2b25-4a07-94ae-71c0ed4a23ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c98d3f-7730-4159-a55d-75899e2e637f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf6ebd65-c1b2-48f4-b779-11c4152d588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c3e456-836e-4f04-811d-9330765d6406",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b07dc4-863f-421d-be25-31249a03a839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb2436f-6661-422b-87e1-2144fcaf4dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd7104d-24bc-4334-9d34-1a47118e479a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "facbacc3-f043-492b-9c5c-fe4046c03ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4ba947-837f-4da4-888c-8390685372ee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6f1474-9952-49a6-8a0d-e9b8ad03564f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac400af-80e1-4981-861e-2e6cc5573d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8baa98-041a-42fc-850e-a4cefbde235f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "850d3c5d-e8f7-426f-9dbc-f4ff17810586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c357f6a4-822a-4990-a671-c7a15b6cbd5d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65689462-2eb7-4d5a-9bef-29a68e4e51ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb415eff-6839-4c5f-a7fa-c08f669c638d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543d5f48-f921-454e-8bd6-549733f43a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28145bef-dbc3-429f-a14d-35221692309a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc8a8d1-ad50-422b-a803-fa0bb3c3075d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4fe902-ea53-44d8-aab7-666fba306d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98104af0-2f8f-487c-9cbe-0f17f1f7f138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a3d5c4b-513d-4f7e-a982-58fe27df8c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4061887-cfb2-442f-afa5-4e0111a0105b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764cb668-60e1-425e-ba65-225e9bab953a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e35fe6-3846-4ad7-9fee-de86db0a1e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cdad22-771f-4f7b-ad16-0cdee6beb0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e362c0d-2054-454b-9645-98dc25d0794b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70d76da-8986-456e-872b-446c609edc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7d1491-4f5c-4988-8e83-0670222a5a1b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d01ce0-c948-4ac1-a156-8834269edabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2c47a6-4f8d-44e1-b24a-9eb4955bb6cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685dcc0b-a0d2-4de5-b31d-d572db6367bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e060b4b4-12f9-438c-b4d7-f22ee86b20c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628b0850-6c88-413b-99f4-da1626eedb6c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d0ea8e-a9c5-44ed-b543-0d60db6ec808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32af11f-2a08-42c2-92a7-27de83012832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acadf442-2828-4a4c-9ae7-347ab2c043ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f42e82e2-4c8d-4d9b-8664-a95375acd7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea09fe1-b9ca-48fe-a09b-fc7979ca406e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e825c439-b6fb-440d-8199-3df7c34940fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca0cbae-8616-4990-8576-6ef8b5552420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d13490-a760-47ab-b226-46f230a79c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddeac80-1771-474f-a24e-ab0278c52693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc59b73-48bc-4513-accc-7b8f77f3bf1d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c410a9-e8dc-4595-a4f4-2ee2831b11a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff7e3c9-ace7-485a-b253-057341e112f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b2f7ff-f095-4177-ae84-cce75b75d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2244f26-8d42-4a79-ad6b-2c4ef6b51051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7da8c8-f741-448f-8edb-90945296a6c7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb180f6-e60e-4af7-94d4-69ba89e0293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3de6b14e-502b-4b0f-83c1-43f92b90bc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a949475-8c0f-4252-ad2b-0dbac78918cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b0ee78-ea33-4437-9ee7-2e849e6ff49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0602caa-4a72-4f76-a04b-3dabe9bcf14b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67356ea8-72b2-4e42-94b9-f4619ef08299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba68cb59-17b8-4673-8c9e-b02a848bc54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46220303-d01f-4f50-8bf5-b7747980dd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c079a49-fe6f-4c76-9fa5-edd638e37b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce29ac74-f30c-4bd0-a806-ed582141baef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1614fc7a-e4d8-4904-8862-7c3330651ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b16f13-dfcb-4dc5-b667-1e8668360c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19b320e-bf38-41d8-b2cb-531c240a3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a6316e-233b-42d3-8509-506c4792522d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbac13de-4b73-47c5-a5fe-02e0852d7c2d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3550420b-eb19-4166-bda3-fa92891cf84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5d6eb-8420-4d19-a2fc-5393b0c2739d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8c45e-498b-46a9-85f0-f8de3f625c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b101646c-f128-4a55-b28e-f3c78e85d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8254d0-2ef3-4ad9-bb85-62c1d225c1f8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22e92b-b1dd-40b6-8e91-a8a1abc48674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c5b9453e-2b0d-4b3f-be0f-173c3d2921c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a63359c-7462-467f-b683-8afabc0587f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d334ee68-28be-4283-a08a-b53efc9b7cbf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6a9e3b5-1f47-4aac-800b-cf3f3587a10f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef4312ff-5169-4051-8aa3-fd2378a957f9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a26085-2ba1-4c4f-94d0-4ac8166d5f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87411a0d-7bdb-47e1-b3a6-5d71e7e826d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3081c35-a90d-4a39-ac32-9d7373d4dcbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a999d24-987f-492d-860f-5b351529c90f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf5e8fd6-f20e-4d54-b488-111802a5f8b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5986e57-f09a-4643-ab69-95bc321f5f89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3044fcd-b02d-4fa4-9d1c-18daf1947ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd016c5d-a7cc-454e-a6fa-3e77df913678"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5dfb4eb-5817-435f-94be-8b039de9f5f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98526056-b967-492f-a0ec-9cdec8b3c728"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "727b884a-ad6b-4355-80d1-3a782a680704",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f982c105-8d11-4304-bef9-eea43ff81129"
                }
              }
            ]
          },
          {
            "id": "a03c0943-b153-4cd6-89dd-0b34b382c9ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "436d53bb-62bd-4165-89b5-715f55e297ed",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "f0b57b39-67fa-4862-9dad-93909047e9ae",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7a3f21-23f5-4fdc-a082-46df08731be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0539d4dc-cb21-4673-941f-b265479c9465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318cec1a-9d5e-4a3e-8f69-578dc62e4600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4313cf10-1da4-4cd7-ab07-b642374d821e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3ef2a6a-c921-4ff0-a979-0137ea0d51b7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e864817-1e3f-4e4a-b7a2-5c6a25a2e755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "874257ee-96a1-456b-8b86-603fabdd81ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35302596-0296-487f-ae9f-0ac56717df94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e5de27e-1816-4d64-9722-f0df9ee2e72e"
                    }
                  }
                ]
              },
              {
                "id": "73510fe2-e7d7-415f-aee7-8a63f22329f2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb1213e8-9611-4515-9209-ce2522783ef7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "315fa6a3-dfcd-4d28-82eb-c6e583ca8670"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56668077-c12c-4b30-993b-45961e107d72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8f3cae40-683b-4b09-97e8-22acd556b338"
                    }
                  }
                ]
              },
              {
                "id": "46b79a0b-f5d2-4bc0-9935-08c0a3a931d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e615dc28-7559-4d02-a6ba-0ea92a729c35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c79562a0-c13a-4040-b2ca-9ffb444d83a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5af5e9b-f458-4aff-89a2-840fd94f37bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86ab6dc8-a837-494d-b56f-97107eae1a12"
                    }
                  }
                ]
              },
              {
                "id": "d3cdcf7d-702a-40e6-ac51-d1132ad5ebbb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57a0308c-9913-4af0-9f32-f84114039d83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a43633d-d1f1-4e3a-973c-2b6cf279c603"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9d761b2-4e05-4918-bd7a-7d4aef983f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "27b24fcc-5467-42a0-ae4f-ad5d6e8952a8"
                    }
                  }
                ]
              },
              {
                "id": "d0459c83-b654-475a-909b-2d08a87ee7ac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a05124f2-93a9-4023-be06-9be09d13c36a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fab3d83-e144-4619-bfee-7ecc75b5bfe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f754dd7-cceb-4442-87a7-c8a97c10bfc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9a9f1f22-808d-4b31-8a6d-7e64835a007d"
                    }
                  }
                ]
              },
              {
                "id": "d3a7d2d2-c404-4ba2-9f13-5282a48550b2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7504d620-f4f3-45ae-90a7-4b821eae9b17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bd387c9-f633-4829-8a06-d216b57167ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5caa5964-e27c-45e1-9aae-271bebbce998",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8daa6d71-15a8-468a-8f62-1ff52a765e22"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b28f2348-617e-45a8-8251-00d265f0d927",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cd53647-674c-4110-b713-6850a92663d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d13f190-48aa-46c7-becf-97dc50931f3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6b5cf9e4-d609-4885-862e-b920f62d48ab"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41808ce5-811a-4e19-afdb-4774eda64530",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "374836e8-70cc-459d-a164-78bacce91db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ea2fce-0a06-4fcf-80eb-4afd3b9ed804",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76045cbd-c997-4b9a-9ab6-646e93a18856"
            }
          }
        ]
      },
      {
        "id": "bb0e46e0-c3e2-4351-9157-b9e2fa1c7ea9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "53b3dbbc-f2c4-4230-bbfc-ae220ba2935f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe81fad7-3796-4539-b6e4-388cba952ef4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f152a061-8553-4fb5-aaf7-dbfa40b6bea7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada59dca-397b-4ef6-9376-5c9ac2ef790a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d005cb06-314c-413c-b55a-f8a2006b7534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cb6ad1-b7dd-4e63-8495-0e3bc1524866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a5c080-ccb4-4351-a56d-52e93ff94cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbe037f-bc65-482d-bf24-59de473a45e3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07166ee0-af28-48c2-ba75-781a67e56d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f955e526-7aac-43a3-8b4d-babe4dcf2c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0a0f12-7dab-477d-8061-b3fef6ee2fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f968a54a-3b8e-431a-a7bd-4c541b4a6f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64b0905-97d0-4717-a6f6-737fe517b857",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31605ee3-0149-467b-80ff-3bcf31f7b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09b2b64-11ec-45bb-8fe7-36deb95c2b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5624155-1c74-43f7-9f8e-afc031f689b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e63654b-bd12-4c39-babc-68dd2f27adb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51485ee4-92ed-4fa6-9c9d-a46b853cb6b4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582361f7-4a2a-4045-80e6-6cbee539efc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c919583f-4dd2-400c-945a-de649bcc866c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e5decb-c580-4da9-bf3d-99307f7f6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb79a90c-48c0-4432-a50f-ba312021d987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77699475-2316-4042-a8e4-156aa25462ec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3e5f15-4626-4cd8-9f48-d3e3731e37ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1354c3-0a8e-4dd5-b56a-e168e9f0bd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ec5da7-3a01-423a-8f6b-61246171f3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c0c9f8-8ffa-44ee-bcf2-c99a457926f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d674290-a171-4c5a-b655-2dc37d041d25",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dcdab9-5033-4169-b331-50b2fe148caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3269c43-e918-496d-a79f-5d78a4b975c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420ef062-e9e9-494a-bf00-06b9ff80c60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdcace9-4d0b-431c-baa4-35100e0d94d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a6ad36-8571-49e6-a266-fb7419373613",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf90f5e5-2b33-4a8d-ad54-f7c931a61980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3b0283-4334-4c37-9368-65edcd4e2887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023fddac-1e73-4878-841b-537956d5d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5633f1-8449-4b61-8420-6a6e4a88ede5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f236d20-9980-4ddb-a48a-fcfcda9a6cbc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fcc8bb-5b34-4606-9adc-6d5dbcfe447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784581c3-9423-4262-a0b7-395d38ecfc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf82e84-e9d4-42f4-9ef6-ad6926557074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2cb740-0179-4afa-a6a0-6eccedc3925d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b22b264-05c6-45e0-9b12-3a6a2e61491a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd97a89-dbcd-4b0b-b3c2-303ee2045c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ad62b0-88b0-49ad-9353-f15cd9261329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa10cdbb-fc7b-4772-90c0-0feea48756e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3fe817-3f7f-48e3-843d-4b95bef76bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed173f1-bcc6-404b-8d44-995331c13d6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ac807-9ff2-4559-9714-631cfb0a1b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2850045d-59e5-4972-bb5c-0b00155cd218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8132e72-4e59-49fe-87ba-eb88510cfd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee86314b-abf7-42d2-ab96-3cc9f314a9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deae99a5-9914-4ccb-87e1-ad9fb537aee4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e20504e-a0f3-4807-ad40-4c0561bf46e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4cde1c-2c4a-47eb-9573-b466c838c3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d53190-a097-4a53-ab5d-82b0c6cc0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12f8b591-18ca-47c0-b639-be8464320937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc100e-eae6-4435-92bc-ba364bc0de5a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a33204-ec72-4508-8790-2b19697251a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68da2169-5ebf-4bfb-8337-27d3e7f4db7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b28b881-2d10-4fe5-8159-4ff635c913f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51c76b23-962c-45b5-9fd5-00933714ef6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca732adb-8b03-4057-ae24-57a3a0492b6a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c146a8f2-2b28-460a-bd8b-77d989363a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0e989a-5fed-4564-a168-c4092b5d6d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335df5cb-4d49-492e-bbee-539ed675548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c71c5b33-b8cc-41af-813e-c6915d6e4d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2284d8e-28ea-40eb-9e1d-ee682cfe5fbc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34d5f58-b932-42ed-ac59-210030b0457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330fe828-c97f-4e9d-a9b0-dead4118c2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a23d11-47b9-494e-97ce-311c30a6a257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0065e382-2eab-4bbe-a950-9742137519c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e007f906-9a95-4930-aaee-e5dd14c86688",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b92b6f-8f0d-48d5-bce9-a8cc3e8df727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef5a09a-5c78-4127-9c1e-d17b6ecee511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37416efd-dcad-47e6-ad08-2c8e907a9ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "98cafbd5-46c2-4a54-b814-68cc6b809662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55003e8b-a296-4215-b4e0-6f17e25bb94e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0c4ec0-e9e0-4c63-8c02-aa8a7ca6a0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dd4196-c3dc-45d4-8ba8-d7d29296acc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806a9894-eaf3-4c55-b8b7-124749eb90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "75b9af9a-b590-4404-a2c3-17544981f69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b5c690-f8c9-463f-9c23-2378884875d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52563225-a33a-42e9-bc0a-258a6a51c0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad638e54-bbea-463f-85f5-0a9992eebccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ccc39-ba07-4e37-9686-15abe579b433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "35661274-a91d-48f7-87ac-576a76090c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdffdf14-d967-4d3e-a5f7-9376bd935b88",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebefb04-12df-48ac-9cf5-2fc7c15532e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb67a3b-e71c-45c6-a1d7-562e7f4dc0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c809f4f6-34a4-40fe-b2d6-de8fd6f91e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "912fc88f-a8a8-4b95-aa30-0f284c923106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be662ba-4db0-4458-ab6a-ae1e0e694775",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9e03ee-5698-48eb-a602-760b6858fdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b5ac3c-d6c2-44ce-a7e7-ddec34ba424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec460dce-6ad3-4f09-ae48-42d11ab0f786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133f13f0-0d7b-4f4e-a827-b73c17b84b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0fa7bf-59e0-4dc9-af58-1a5b042cb927",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3889ea07-c7c1-4f84-b0aa-cfb3b9a3fbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba39f54c-c636-45b3-8f0d-c8e54750a1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e632af0-e9b4-4e8c-bc91-03ca04321d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "213db8e3-96fe-4dd3-ba0f-a08123ba70a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d3e9a8-7a46-46b2-ac8f-5401abdfe0ab",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e794dee-6542-4c3e-b713-8c9233ca207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4228340d-4da8-4244-a3ef-18762e1f8dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef00cc70-4d91-4480-a4a8-04755b50f78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc32fb8-a719-4db4-9bf2-8c9bc5667e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e412ba57-7335-4ef2-a538-e173248c71c7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d03d44-5b41-4ed1-85ff-cd688cf097ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c971347-a730-4786-9ffe-0a329a097f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdebcfc-8d68-4cc8-b568-8705f0dfc451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29a55a1f-cf8e-4967-b6e4-382a7dca8aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894094ce-e964-4cfc-b185-5a697b52cd1b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abf2f36-a5b7-46ed-bc04-9249aff7af37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92973348-2d1e-4442-b13c-5d390674b855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61263c71-f198-4d25-bd4b-8e786f6faef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "709deaee-29e8-47e3-aed9-52f5712c8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2523d1a4-09a0-4e46-ac91-ce9c427f2182",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad44dbbf-b299-4a13-984c-e51ce3ca2b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3f31b2-d89f-4013-8f14-63f3b7ce11d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3e5cf7-4bd8-4b77-a0e9-5c2de8552249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4b180f-c7d8-4279-9b7b-f4ee29a78dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea2ab8d-6528-4fc8-80a5-6aea80e66b31",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c285032e-bde6-4e95-a72e-e2da23dc8300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f84a4f-6aab-4a12-8ee0-ad0d172a726c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675f8ae6-794c-4beb-af73-b40b7d47e592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9abc6070-331f-4ed5-afee-eabdf0ef7af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f46045-14d7-49e8-8332-6cffba04e067",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52af3369-5570-48cf-8f26-0cdf76fe8098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a43c2cd-aa3e-4b4c-b11c-d925e2f6841a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6469f3f3-54f3-4ab2-b3d2-164757227e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7735ee5a-ae01-4386-a7b8-835f2c01c66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3891594-86f4-412a-927c-10501b4cc0ca",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14590799-5c8e-4138-bb0a-cce9e18fa044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85637708-16a5-48fd-b249-acb6e93c1889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d33a3e5-f632-475b-97b7-143d4173620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d8aa13-dd53-42ae-b87b-7cb465148db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057e0531-22e8-47d6-8fb2-59e763e21cfe",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9679708a-183e-4593-a579-b523fea71bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2e4063-45d6-46cb-9f56-4ab9b73332c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55209eeb-aed2-4f47-9346-dfa346bffa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab56d4c2-8a53-4a73-9279-012f9178a023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf2810d-bd3b-4072-9e7e-a9f15a1337ab",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a717fd-9ea4-4c7d-9930-7f16cc3552d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608205f9-ab9d-4cf8-a21b-dcef75fec21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce10886-1b23-434f-ba19-d955292f3711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98760b9-24ad-47fe-a20b-b7f1ff60b6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7380ae81-b466-4117-8d6d-73ed4066ab57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6018d0a-9399-47f4-b5fc-80ac2310cd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfad94b-df6b-46bc-b0ed-9dc6cf6d5c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b69d8e4-95eb-43bf-b5b5-32280d9efa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32429fa9-196c-4590-890e-c7beca96c1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb5983-32f6-4042-b2a2-eeb68cc6f567",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5743f4e5-5144-4051-bd63-c0431453fa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d9d734-94c6-4742-b522-14b673aeef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b347cd-6a72-4d59-a72b-2abd44248c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc48384-f998-465d-9cd5-0dc8ea9ed7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40453bc3-e697-4629-922c-4cb9d55b08b5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413f6ea6-5c09-49c2-9b11-223a4fab0be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4334aa0-66de-40aa-bfd5-d341a49695db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30b0abc-4ef1-4790-8007-47f5ea2db5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37c7f8d1-bb18-4b65-a258-136e3bd9bac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8c9f3f-2e5a-42ad-95d4-ba12646d646d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aa94cb-5a4e-4967-a707-9e361cafbca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f1065-7944-497c-8834-bdc4db7f0f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9afe558-0bff-4f82-bcc3-3411d18b98c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc7b384-e21a-443b-91dc-cf1e1ddb96a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582ccc31-cda9-43aa-be27-1ee121d4a092",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5270b87d-0f59-41b0-92ab-286ab555b952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053b14b6-e33b-46f2-8dca-74ca8beeaeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ac535f-ffb4-4200-a622-b1f44b49ee76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "296abda9-03d5-476a-a2c4-65ff7a988d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4201a0a7-f5f9-42ac-8879-7692920f80a4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07037b1-6f3b-4296-a0ba-09b1305d9328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a13f41c-bea6-4b75-925e-16fea2c63159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8ff900-f3e6-4bb8-abe8-61beeb325042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2379e379-eafa-4d03-b2c6-4de28f47fd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09862c03-45b2-459d-82d8-470cd2289514",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1941fb1f-d8ed-49b2-90b2-5b58baa0e028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baddb257-953b-4bad-a7ff-4eefaadae0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1cd5d1f-2e40-48b9-9fca-dc3786e480c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92206a82-86b9-4e8a-8ec8-27101f9a3960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11599dd-ba38-4c80-b332-04dbc4f8b01a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478fc639-923a-4e6d-a782-b36f3cb78d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234bb16b-97c7-4afb-8cfc-221b79f313fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4689c2-9d9f-463f-8ef6-627867c59739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe5ec3d-dd12-4c0f-9169-56f25a04a7c8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0904f0b-4fae-4269-83e0-c4b0f1aee04a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b554cc7b-589b-478f-a7b6-9cdb2346a583",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad475f1-696a-4387-bc2c-e23e809a2870",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c958df3a-0108-40f6-9cfa-3d8117e1f34c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330ed944-9bcd-42be-b06c-31c171b09d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcf0e682-7467-4e91-b4fe-188284d37f8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4c73632-992d-42b7-8007-588a43d1b0f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eb99f3a-2152-4166-953a-ab459f1f931b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f172a8f-06a4-4c8e-bada-428bf901a43c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88f957b6-18ff-407b-900f-fe7b16079338"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8234e5d1-a6b5-4154-81fe-23b1d31a83ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5b56086-4168-458d-bd83-e1fcd9df13ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00134f27-171e-403f-98ad-6b10324c1a54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7242243a-d826-423e-b352-dd864f3a114f"
            }
          }
        ]
      },
      {
        "id": "d74deeb6-1b31-4a26-bfb1-abe5a9e30571",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "09b32e94-dc49-4b26-9815-121f2207a1ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8eb629d-7433-42fa-a274-f6d802f9dea9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78e59bc9-f0d3-4de5-b1b5-6c7f563748c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7505fc6-ef28-4d6b-8d85-97c9b3e212c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e3a7e9-6147-42bc-8bcd-fd88bf36f4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3445496-1b71-44c4-8bca-b723f58d28c3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f875ec-bfb6-4d6f-9fb2-a7b7be67261a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30fad53-a66c-413b-9208-03176fe67711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6718ecc8-9fad-44f5-b70a-2002c5d83bd9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de24e2-5a3c-43a4-b3d2-d229c3718960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2230e7cd-270e-4056-837e-841b5675da0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbcbd5c-3d82-4a08-b924-6a609a812a52",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bb38b4-684b-4e9b-8bdf-44c42a837ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b696204-e151-46c5-9b46-5308f5878367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d0ce3a-96e0-4225-aceb-8e185b679570",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfc1f52-db2c-4d64-9f15-abc30d73ee70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6c7baa-a1a1-435e-91d8-fe6109741353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117c56e3-3398-4b6b-bc37-8deda6f10d68",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76accf08-ebec-4719-9c5e-4419c64e8dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23dabef-4977-479d-b60d-3e3e025e5295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054979f3-6ade-493d-a433-df6e4458d7ed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8420b-0cea-4dfb-af41-a9197d045c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25c57a4-3cdf-4a34-9bd1-79694134612e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add78528-a9aa-471e-a47c-e49b0d8077c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7563e80-5ff6-41d6-87ae-a35a348f7cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c86394-8b1e-49cb-b6d1-1f60cd97ac42",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974bc50a-a8eb-423d-9cbb-41e802cff943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396a60c1-0012-4838-9c2d-ab75b4309136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecf969e-0e93-4cf7-91e8-6b0a4985df06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d98366-3140-4d97-8dcb-cdc4e9cd5342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1507a6ac-e7ef-4cef-bed7-c8a79f5eafe4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecddea17-c6f6-4db1-9dae-72d6bc9522b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74d30c76-c37f-4585-943a-f353d237aec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882ce1e0-f5eb-4158-b8cf-de45fdee0ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506634ab-3d67-45b4-ad42-7c8b6caf7814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da9d038-356e-4e24-a816-a02800453bc2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a868712-f290-4093-8a97-42b700e9c9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3e47498-1cf3-4960-843e-0ca67398bbbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6d79bd-b3bd-48ca-b2a4-18101b026a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dc4cdd-1222-4a22-9092-636341e51da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3452971-5642-4a08-95c4-4ee25e2c0bb5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ef41d1-a1f3-4165-8ca5-06ac6cf17829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd5d01e-461c-40ab-8885-975436d327c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee488ad-1156-4109-a6bc-57e03ea84ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22a5a32-bb99-4997-a3a0-65dd6fe671a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16b6187-7e8d-4f80-a99a-16c759c3f2a8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a00de8-845b-4c64-8a79-430c0e57237f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8839fdd2-6dc0-4aa8-aad6-e9b72208fd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee605c1a-370a-4fd6-bd95-965d6d91bcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85cd873-871d-4b48-94f2-96a9d1b9c62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b324a6-ba13-4246-8546-a54bac6fbc7d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef52f77-d9bc-443a-b940-c3c657b1547a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b831f6d3-9c25-43b4-ba0d-a1a091b1311e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1128c29-917a-4a0a-bc05-1c85f961760c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad83f34-5c31-4c26-b91b-75883daae457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92de91ee-108c-4dc6-aac8-3cc1d1323d35",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f4edf4-08f5-4ea3-9452-932d67e2da50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2983ef-7ee5-4f07-b795-eae313eb939f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5cf94b-2462-454f-99bb-0aad86f454d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bb16e3-84cf-4f11-bc9c-83cf5c14027a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c593597d-162f-4617-9905-625ba12a4d28",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0f941c-f3bd-4349-9476-df9e111bdef3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d879b1-ea84-408c-a38d-197a5e6b7053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b592124e-3ea0-4bd1-bc1d-5e040ec201bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a89d8a04-6831-4ff1-895f-bef28952c98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84953aa-e261-4f1c-9070-ffc12d840e35",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a520a2e5-4e29-4179-90fd-8e94b92a22cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b356ac-0cd0-4c5f-a5ec-fc015705cf2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62982bf3-d4c8-4913-bbb0-dda8da7bc76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca06e76-63d1-488d-b62b-bba87a266dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db10c601-1718-46e6-827d-9ad4152b4c05",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b70f8d2-7721-4cf5-8472-a31eb3630fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f1957-cd2c-40f3-bae0-c3978e9b24e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89da0d0-ce0c-481c-af6b-3f9902206597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3b9a18-32bb-43c7-bd31-7f1a8fe30c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ce6dbf-1f00-4fa4-a54f-570579c2b52b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29df8a00-9b39-48a8-b0c6-05f67a72d701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861f3077-de18-4627-ba6c-536af7c645fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c602e301-3441-4457-9689-372e5a3e9b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5631d5b6-6159-4101-b43d-095271fc1b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0221bb-76ec-4106-979f-a90890b7bd42",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdccf62-bda1-476f-9d02-e3b6c3a4dbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c6d8c7-c924-495c-85fa-a44cebcd8406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f821c5-df5f-4275-a020-3cba564a6a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b440ec5c-f63a-477b-a356-4209cf32083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ca50a6-1c51-4d8d-a284-50473637a7b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52553916-d73a-4d3c-8a1f-fc90e1d76673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1449d35e-e7d7-48fa-9666-df792a29954d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b8def3-0d52-4157-af04-f1bb8469009b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff62417-806f-41b2-974a-1cdfe7f62bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da815312-282c-4a01-8204-d814ec83efef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4996e6a7-5326-469a-ab05-43653b92a9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd2ce81-24e9-4629-8b07-a0c41cc5a5d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83865f-89af-4c96-9e85-30d71423337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8bf6ab-16f2-4629-a92c-cbbbd72b8ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703746cd-7fa2-48df-ad0d-61559db3ba66",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc32e30-7c08-4fb3-aa2c-a9c7e5152761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac844fa-79ae-4662-b7d1-c3318909f236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0168a8-f241-412a-b429-1ac5d0fcaead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76722744-8225-4f28-b3ad-40271ccef277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ffd32f-f719-4e72-a8ef-b6833d391c37",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4986ae9c-98fc-4f56-8bc2-37123aab0769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c354a1-1e8a-486e-8d98-6948537486d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaeb57b-4491-4298-8a7b-ef990b734985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab825f94-e247-45ec-b1b3-8cb1148d8a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e9d628-2ca1-4bf4-ba3f-c88622a3049b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2c4a82-862d-46e6-a216-5398ce1a0c79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca37e16b-e02b-4757-b67f-ad024cd87ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01c24ec-8366-4708-b447-ca461aeed8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120cdaba-649b-4a66-b615-a5732ad4725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26db6686-5d1f-4e03-b60e-03ed02bd337b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9989527d-0316-434a-ae88-2c3b3b3c4ddb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465e9bed-90b4-4858-b950-fa9d6646707d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eeb0ad-181a-45fa-9b5c-02fee5fae1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71446f42-19ea-4fee-911d-0a688c5be63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0718d47a-f803-4eb6-9dbd-f740ad40b69b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc63688b-d21f-43db-9bf2-75dfa55f5e17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ee91a2-c298-496d-a105-a92c1b197fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f21d66-0a52-4556-9241-cf7c3a1644e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46059332-3852-488d-8dc2-21ad9de2f437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c1a397-087f-495c-a8fa-022dfd39c2c1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371ce6b2-e295-40db-94fa-9727a2d27515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfdc36ea-1111-4c51-b7c9-9e110bd6c0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a20a27-4451-49ac-b2d4-f8c4c4eb58ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60812408-eec6-4ad4-ba1d-109207e29c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7e9932-b045-42aa-a88b-2843ab105ca2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea177e5e-43f0-4844-adea-4c32a358b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b209c246-6dd1-470f-b65f-560871e6a17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f2dfaf-e14f-4691-9e91-c01eeea8099c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600ebb67-5fa7-48c3-9475-3ee6302ef23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b6e756-eacc-4de4-a2fe-bcb1aae28be5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980c1af5-fe50-4a1e-8b7e-e40ee693fd47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cd415a-f726-4da0-8144-44bc5f30db93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf49ae3-3917-422c-b701-9a01d9f529ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664da904-319b-40b5-b0db-251ac6916419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a440e987-436f-4c80-b3c7-69faef1e2f31",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dec020-503d-4c7d-97d5-71c6ab835746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f161fd1-10db-4b59-973d-ebccf34a0665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f25c3bb-09f0-4ef2-a8e6-45af32b66ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32fd5199-8063-454f-89e7-8780f9360fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a292c1e-8809-408c-82f9-127b7918a6bc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f21a214-cc64-47c1-b3f6-6788d096080d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d42fcb-a68c-42ff-9793-9f956bb0053d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de523b36-782f-49bb-96ba-b75d271dc204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f932bc-0c57-437a-8bd3-a69b987f7f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6046c969-4944-4833-9a7e-5f090b1cd87d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e6e64e-4b6b-4f74-a852-29117d1be475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3155fd3e-c1ce-4238-91d6-1e678ae64ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257dcdae-26b5-4290-a075-a4f09dd69c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89efec1f-a364-4e70-96c1-525e8ba7d917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4cbf81-817e-4609-bfad-abda332d1743",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece404c7-82d0-4310-80dd-f9f10c02ba76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c3e072-f76e-4626-850a-b41873094d36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd0b2ba-93d9-40c6-87b3-244db88dc497",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f7185-83fd-4a89-9b9c-1d4c146c1bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a2ab48-88c5-4896-a02f-11d33bd53016",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404d4382-0bb3-4086-9118-1e19a69ddeb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdd3aa1b-b63c-4ee2-a8a5-ca28660e1632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1913fb8e-df41-428b-9f00-2db5ebe84e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6328f47a-18f3-45e2-9c32-5a155c3232c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceb0adb-0882-4f36-bb0a-28e96745d60a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af57ddc-0c93-4e2e-a531-246881e8e85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1023ca3d-8e47-42b5-aa14-cdc746bdf188"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c9c135-8e11-4aaf-8328-f843b728bce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587110ca-7002-4486-ab87-90d078fbea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3a3f87-8108-4fae-8ef6-5e2810d21231",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb89ad6-deef-4c60-b699-5897392a7cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea862191-1f58-41e1-aced-edfb69eeec45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575436ff-d4d1-4b54-8a7b-eb7a2a7aba7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82322e32-f6b4-4e5b-b7bf-442bb592b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb5899f-cb46-49d2-aa3e-6a8f2bdb4dcb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5920b5-a3e7-482a-bd45-1a416d0825a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829f62b8-42ad-4796-ab1a-8cfe4da6a9bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a09df-8fc3-405f-84be-6e811a29550c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b584125-3e6b-47bf-9b6c-96fe561396c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d256cb8-81db-4304-9762-fbbe4c43d501",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64411186-64f2-4c86-b9e1-746df158cb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfb527a-54a9-46d6-9408-3d337a19a3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ba15f-b5d3-4060-a709-ff2f3a54fc46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51c5d92-0de2-4b8f-b707-552f96c82ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4094186-f9ce-4bc3-a4cf-101e4dc5d662",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973ad3fe-4097-4b31-bc34-d37a546b72ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92254ab-7f4e-4eeb-98a6-1f32030ed8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cbb306-b34f-4f27-8f5c-20e5fb46983e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005f014d-7b08-47aa-97e9-26f3ce4aa47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15ea1b0-56ea-481e-a984-5ad107767f0e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1a85f1-4cf9-481b-9f21-56207f4e9d12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1826a3da-7707-46c5-9bc0-1180dda9389a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d5d0f4-237b-4e69-b9c6-d92c03eeef73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50460bf7-cf97-43dc-918d-8fad558b87b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd8168c-0a96-4bf2-a5f1-40fe70675baf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d35bbac-516b-4055-a75e-cf3003befcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275d1eca-ffa1-4e74-82d1-54565664ea08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17881d16-f203-4106-975c-4737a85a1c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a977cab-1e44-493a-b9cc-ed9161f23c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5d0fd6-c16e-4bfd-93c3-6923b0e02b5c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db9a7fd-d901-4e65-b625-fdbd93f9e5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc2641e-e862-430f-839c-b9294ec592f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c41d89b-734e-4527-8bdb-ce09545dab6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b9e886-d780-4d6e-86ca-dbdcc90aa1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4c4f7-0b45-431d-ba3e-9fab2c88d21a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ca77da-7b10-44a8-a7cc-7be391446402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e9c29a-571c-4310-916d-d5b0999a0e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a96f18-edb5-48ce-b73f-dfdf8f0a5b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe842003-deb2-4c5f-8861-c3e71619bb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c492f0-6787-425b-9f77-553d00844ea4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88b26c2-1073-4ef3-b93e-7a4dd5282a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721637a8-ccfd-4cd7-bdc3-0724b7adf3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc4b223-6575-474b-8d78-1c5c6da37527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83f4a33-84db-488f-99c4-637b0017e999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b346cc07-97b9-4620-9cc8-a4656d519671",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d62591-d333-450b-95d8-de9d8bd2a0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace4ab59-60de-4117-ad06-f5d78e8eca90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f127334-4303-493c-9d85-6e5c6c444e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97aad42-81a5-45cb-970f-fe66ac68f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81936e1a-d6a0-4c76-a045-6724349c57ee",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54974e5a-3675-4fb3-a747-4b79c7fbf5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5ce6df-451c-45d6-93c1-be7addacfcf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa2255a-f563-46e5-ac1d-8a911c3796e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d250c16-972d-4d5c-8897-4846eac06c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6724eb-680e-4d7a-be73-22814b7e0016",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8374ce-0cab-4926-bc00-1030fcf176b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6cfd26d-98ca-40cd-96e2-a6fbb8decf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955f39dd-ffc8-4df7-ad6d-258a31186a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9629c2-eaed-44d8-af67-5d874a00408d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c01368-68e1-4123-a290-502349b415b1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28c4c00-918d-43e9-aae2-73027c671d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08be1d66-23c1-487d-8b1c-96de859bf739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09043b09-2028-45fa-bd0a-b90af64a0e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b9a672-1a55-4dd6-8116-628b18ddd865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e44de8-6edb-4e0b-a973-ea8a22e55dfa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcbcd04-cb4f-4a36-97ed-e5993a6fca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76372d4-a064-4cae-aec7-45693a83c524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2012b8b2-717b-47ec-bf8c-c95aa0d4aeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6040ffd-4275-457a-a277-fc47eaafabed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a16d8b4-2bfa-4858-9a56-62fe742947b1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63deb61b-941d-4c4a-9d52-ac25ef2b40d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f2dc6f-6937-400e-bc02-e306557a3bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924c2f22-4fdc-4b86-92f5-34a0d8433975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ef5506-68b2-4006-b63d-bb05841e071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3adf578-6550-483a-9dc7-e8395cc969b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a213ced-a0da-432e-ac24-6c1da19d4b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be871adf-b7f1-4dfc-8dd0-840bb4e58db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12f00e0-d9d6-4428-ab48-48cb93c1c34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef56b99-400c-4625-b7cd-2f1fd60c2801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5592ea73-e29d-498e-af31-ca589862baa5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc7ed58-a69c-4786-9d42-966180fd3152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d754af-8da3-4478-9eac-4240b4632054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781693f-4cd9-4201-a07a-911ea5467a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937e4e41-44a5-448c-a49a-39032a854cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79f8e79-a329-470d-9cf5-4ecf45bf0762",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e0f4cf-0722-40d7-a93b-438611a5a7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6657eb27-7d24-4733-b6ac-b8b53db7a6cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096a6597-973d-4934-8c9f-05365cbeb927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc339a8-1405-4f37-9ca0-c0832d6f9e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a85ffa2-85cf-42a2-b5c1-09a1071e6092",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92478d7e-a78d-4f90-9b44-6945f4ef5142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77defaa4-ba5f-4fef-8ba4-e1774cec31c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdc95dc-5a16-4175-8763-06964fa02827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f82cb4-e5f5-4d83-895b-7ad8bea03e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ebeed9-d50c-4610-b80b-0953d0df1deb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d74d0b-7f2e-4617-9c12-7acc6efc7a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1e4bee-1f38-4fa2-87e8-73741024a187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c5d99c-49c3-44f8-9c36-b7ba54ccfaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3020e53d-36c2-4e12-a0be-9d9abd667ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cc35fe-bd56-48d3-98b9-32e3f727edd1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef193042-6488-4642-ba06-6aa299c7be3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd6f51c-0e58-457a-84b9-a7ac339cb543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ef493-10a4-4c42-b74c-9f4f043be3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef596f27-4e44-4b0f-bac0-ea00ed88b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d47bd6-6ab9-4ba2-af61-e926a2614c3f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87761d31-ed44-4d71-b21a-9a9010764dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf5d39f-1cc7-4ffb-9bd5-de4346d02dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dac8bdd-7be4-4a7d-ae8f-2029b25aaffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed5601b-2f1c-4021-990b-142a7f342342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644bdac2-08fb-4024-9ec8-924e3c248d95",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dddb558-586c-4726-9b49-72fccef10486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91627e9d-76fc-465f-95c3-f76807bad1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8288ed8b-581a-4535-a13f-a786c6ef1d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a9b0e7-e06e-403d-bdb3-29705e6a07aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cf1157-d6df-4c40-8e79-aed37612ec96",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e08342b-d92b-4100-91e0-40eab028dca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe16c45-74d3-4c91-8a5f-37c8775196ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f85cc-a999-40c5-869f-35cb80427f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b894aa68-fe7f-4406-8590-f2b871880bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5a747-9c7e-46b7-a3a4-17320af1e6a9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086090e6-4e81-4857-8913-3d110fe46d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ca719-ff0f-475c-856a-71901885a2cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10c479d-9fc3-474a-a4e1-9869b0395ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2972ea3a-406a-4534-9021-f92081c8e7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b65934f-58a7-4fee-8d93-029488d6900c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2ca868-1cb2-49e4-bad8-40d0b4f30c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb06ac3-7ea3-4444-a6c9-4ea147b26382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59dc4b48-a07e-41fb-affc-5aede62ac255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333763df-e174-409f-b5ef-4893a055d9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fe852c-588c-4e52-bc3d-39ecde6208d4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6a6ed7-bcae-4316-a054-ba263014f27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d4f7203-ae76-4284-8eb3-df4c83bab632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad56f53-904a-4c01-8958-5da5c4a6d8ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7820600c-93b1-44a7-953f-2a5ef40bd519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433c524c-21e5-4298-9fd9-a9119f341a67",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae3659b-467b-4c1b-9a50-0156c8037883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f049e977-87ef-46fa-8d7d-d53a8578c00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "540add23-605b-4c67-8448-053fa7732b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ba773e-0f0f-4682-b3ea-0b4bd473c10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c86e8e9-14d0-4d81-9459-11da612625bf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7d28a0-36fc-4394-a30e-37e6f8dbfd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9da09a-526a-4e3b-8c2a-63ea688f2fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d2c2e5-1f0a-4655-a3b7-e087c741fd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bcd650-2385-40db-befa-6a9829f25248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893f862a-dd4b-4a13-b88a-e641edc75d7a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f82706-5e45-4764-b06d-98c4b0267c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6997a6b-3bf3-4249-8c46-370b12e91675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b86ede-522c-464b-b029-04e61fb87b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c9f87c-b2b8-41a9-b30b-4c6000cf3a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d216e06-85b8-4ebe-a1c7-fc3587fd0c41",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477f1fd4-2060-4aa7-8377-a2edacad311a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f687a7-8fda-4248-9596-031c78c4a1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22677ef3-53fe-4102-83a6-22b91b80944e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11a76a5-c630-4bb5-91e3-55cf768f8f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b233637-cb07-4b85-b8d8-74c8a887608b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91750f6-ef09-460e-b597-de091ab14512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20ed506f-124c-419b-b89a-041b9c433604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5092df5d-bb81-4585-8897-f83ce84e6f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030600fd-a41a-42fd-99bc-bb9eb0e729da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5f2a7b-ace3-4689-9c74-b8863fefad27",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfc8975-c86a-4a70-8988-50c5898e8b92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0937d1eb-b7e5-4481-aeff-6ed9a4a7ae5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2976f99-cafd-4a23-8643-c9c15bd92477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508b8d24-f980-4876-b60f-446b8d69339b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9f4c2b-d941-4ad9-92de-3b9480eea614",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119350e5-d51d-4be5-9158-1bf8be5beb6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92587782-6c86-4c46-9d92-cca6cd3381f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a828b2f3-fe3e-4cf8-a32b-3e620e7ec75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6230821b-7136-4233-b015-206d640bedbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a8cbb6-39b6-4422-82d1-32d6878e7f38",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c88e6a-437b-40f6-8e72-9ad749b91562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d8d7731-cce2-4f5b-9eac-b3b630c16488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00062e4-bb88-4125-8d5b-aac9e6c02992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fb0d40-9955-4e0e-a746-d78597bb5129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdefa6d6-75db-475e-86fc-f21f8f1c9af3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f66dd6-207e-4e28-bacb-7ae2f9346ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b37ae8d8-c392-4f5b-aa09-c3560db50bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7a95e7-7094-4208-8283-e477cd5f3ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1835ed-4cb6-4ff4-8fd1-eb4e2ece1b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d9983b-fbf7-4c86-80d1-8620e620bdca",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de77a04-4020-45b5-9cca-bb4ea136788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cade9d8-0d72-48d0-bed6-577bfa0805f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78966974-5a23-4d47-a86f-f812a70c32e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24747d71-998f-4313-bd9c-6d3660fee7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bca442-cecf-4ccc-bd88-8265a29309a6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ab9993-60f0-4e87-aa5f-ffa348c70b2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e9ca2e-7f8c-439c-8806-febaf4ac5904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee243b3-d051-4b50-a263-3a6622bd7672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7d69af-ec51-4355-80b0-a1e4c2d8cda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2f0011-c3ac-460d-8acb-5ab4714bd0a2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01d2223-b5a3-4862-bf47-f5dec4c05a1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1f9a56-2e5f-4970-82cc-14216acaaf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a5f23b-759d-4dbc-bedc-eb07e8b19ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "759195c5-cb81-4ef8-b9d9-f9154dbbabd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e52623-e36a-4862-bf11-143cae013c28",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194a1345-a999-40f2-8bde-541c3080a031",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dd2a6dd-5e4d-49cb-9f01-5993de7783e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0206694a-ce90-4331-a7bd-66455a227ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d51887e-5cb2-4ae1-82a6-8304523bc8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb58a93-a089-4997-9344-b3053a299253",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874bb27f-6c1a-47ac-9f56-8b04ce6affb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa6aaf8-5337-4bf9-961a-cab0a50ff3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4d66f7-6410-4ba7-a425-8ad7d67265ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9fb3e9b-fb4a-41dd-b0bf-99a276ecbb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3545f202-9db1-4fce-ac69-0654f136b44f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bed31be-9a57-4a10-8fb5-40cbabbeed88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6a2ae36-b3ab-41f6-9b76-8edc916f3ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c71fb2c-af51-43db-8b4b-d8dbb0ade5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7915179a-3b35-4bf9-8556-c4a32c89bca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77aac0e-5f90-4132-8272-5118c920a443",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb7988-40ab-49fc-9609-14c25a943bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8d99673-d06d-42a3-b218-9bb4a7d608fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90055995-4341-4419-baba-e1eb108b899b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ec2679-1360-4d89-9bb1-ec01564ace7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed0986c-27b6-4868-84be-9be049fb96cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be270b7-26a1-4736-b870-81c21838a336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e474a7a0-f06b-4d82-b5ed-7f1a84976ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a4577d-278d-4c48-bb36-2bd8be6a7b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12831d7-8fac-4472-8b06-8668c5ec17d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a9165f-11cd-4dc7-9ba2-fde556e036b5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f921f895-c871-482b-9a0d-675a53254051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1678e8ba-ddd6-441a-8d8d-adecd0ed84c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe232a11-d2c6-4798-80dd-1800395431b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d601cc0d-ed7e-4af1-8637-dc4e40ff21aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3641864b-8019-4ee8-b504-ee0462ccca93",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b4c725-df94-403e-8c93-427bcbb0f72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da3a42d6-0108-4711-9434-f47fdeaf7194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d9e3d-db08-4b56-ae40-0c5dad118068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aba52fe-7ef7-48dd-b6ee-a7c0d93ad5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab35b375-1405-4af7-9988-904cde075d9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e6990f-fae5-44da-8901-5a9188bfc740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f326298e-8937-4c29-801e-f90d86157555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caebf71-3230-4665-abcc-cca4b0e8cef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd250b0e-62d1-4977-af45-b53daa5ec47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a36bd3c-1880-4852-8a5c-467858700eb4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2efe49-5702-4ff6-b2ee-c4ed7a57b952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b422b1c3-311c-4470-9852-49c12ff370d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7e032a-8df1-4f3f-ad26-5cdadae272a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ba232d-fc3f-4d87-b74e-99d6e64afa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2bef8d-8bc2-4f2e-87bd-e4240d2b0e1a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3f4ae7-dd44-4443-8b7a-f86b4bc9375d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d243a6-d499-4612-8dbc-6c6b1c857269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c91a66f-8a25-45d0-8e78-37faaa42610e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c112d38f-8a47-4c04-aef9-b0f7a84cb2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c1cbf1-8915-4d3e-bbc3-f841508a4793",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc75367b-d267-48ce-9de5-e8847a8b7978",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce11c1f1-70c6-4067-a094-a3a5e082a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8accc9a8-4175-42d3-ae1b-d3e552a9013a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5855e7f-c9af-4acd-bd00-aa83b6b1b375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e3ec08-bbc1-4468-aed1-4d1bf9cd93c7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f3be57-37d2-4d35-ba93-d83b4985f43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad2fd619-3879-453a-b9c7-8600b569734d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591fc31c-5a60-4e96-8015-fdb871e3ec22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9861d93-53f8-42ba-ae03-f2311d587dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05df23dc-c01f-481a-9043-01b9f179e139",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18941c1-85ae-4737-9ead-060be814a149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64c5b7d7-4370-4dbd-8d7f-9b2681e756f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c719334e-de13-4360-aae6-6704b206d945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b80092-92d2-4153-ac37-476da77deaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79022b28-8549-4746-ab9a-b12a9208c2a8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3dcc60b-8ac3-42d1-a43e-c4db0ae93294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37eaedd-21e7-4b29-a2ab-ba68e1a4a62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f4f672-accf-4078-8c18-cfa4d357b424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7c9e53-56dc-4019-bae3-7076b41b61ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5733fb-1eac-4d7c-8cf3-a335967c41fa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e7eb68-6599-42a2-bdc7-e1e71a1144fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95914444-f7c6-4518-92de-37b724666f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10f5dcb-8aa5-437a-993e-8199a644ab66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6e077e-2ceb-4419-a6fe-975e950c2e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5116bf19-a8ca-46a0-9423-d7d536278106",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8482fe29-96d3-4b03-abb7-29ae8a2605b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e154c9d-9c70-4a73-bd5e-a0f579bd8357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea14f73-ad39-4699-9118-65425742ead9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd715f6-9dd0-4d81-a7d6-d7b5e0e87e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056aa24a-28ac-4e24-8f83-a31494c63895",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc07ada-64d1-473a-b852-a3e4d6330408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3337bff-c73b-49d2-b245-0f7ff58ed9db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f7b6aa-8b2b-428a-bb77-1f5afbfa9975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b254366-cf13-45a2-a73b-36981c3b16ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc633cc-d8d4-42c4-a141-62341a810ec6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef00f8a3-f34c-426e-a660-792d93b34403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c34bcd4-15d1-44aa-8627-1e901e6e0877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c879c28-b71b-4422-92c1-8ff760c056f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b288ec8e-a6e7-4cde-951b-4cf55c04d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5314c4-c9d4-4498-9ebe-a90988e8f99a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178153f9-9bfd-419c-bd2a-7d3a90d234fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06bc6830-9474-4553-97fc-7d46de64be8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8032325d-b256-47f0-8693-d4cb21cb0500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ac0433-3e5f-4d9f-9f4d-040a94fcbbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2e615-df0b-4478-b6e8-e1baaf010f63",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9e8584-2d41-4a59-ab1f-0d1506d62cd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a460fe-948a-448f-a9a4-8d428c9b0054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b007dd5e-3e31-4ee7-8933-3fc38381ad25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a07bf41-fdc8-4667-aa05-66c40aaf519d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12463d4b-3df9-4e10-8e01-0d9718be7216",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab24750-a4c5-4557-8f32-8abeb732652a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce28421-ee0c-4b21-9d25-2a459d1841f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9dc47f-c5b5-4658-8fe0-8f3d751f005f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99bc5200-b0ba-484f-bf96-1942da05baa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c201d7-b780-43af-8fc8-529eb4c8f343",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742760d2-c9ef-4a40-ba5c-ccb7a29464ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf33d4be-2f54-4a5a-bca4-1eaec4450995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d418f69-8463-419d-a1b4-1a69ca28ee25",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b9ac7a-b46b-4118-bc88-c9a7520720db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab338df-a269-4616-977d-fb12d955a6ff",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73101158-3e88-45d5-84ad-d4cdbdf4c9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffdb8e16-3beb-41be-a976-dd874245834d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc7846a-3560-43b5-a0f3-2f6939ed3992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903e8307-e4d7-4cce-92b4-81881482e46e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aeab866f-3693-426c-a0e3-49ede0785c04",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a851a2-a4cd-451a-96ad-f6ceac62e73f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d010b894-0d73-4e72-94e1-b6cd1fad702a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86f7a601-7880-4fc2-bf9b-86993eb428c8"
                    }
                  }
                ]
              },
              {
                "id": "e8c82dd5-910c-4b84-b950-1e537d920473",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef4f4ca5-063b-4801-9df0-c95cf7855684",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a20d68f-5139-4050-b367-b8225b70443d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68d89230-b0b3-4c69-bcd8-6a82f045abc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ec2682-71a4-489b-b5d4-d3a14e6429bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "713cc03d-dd94-49b2-8211-635fe95c24fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f711dba6-df6b-4a49-ad09-c7ea63f53046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54d77a47-ed2b-4c6e-ab08-98bf419223ae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4060278-a05a-445b-86c4-c6f2e8d3c923",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ffecfee-a90b-4428-a182-7bfaf8c54d90"
                    }
                  }
                ]
              },
              {
                "id": "360bf636-8ec6-416a-b688-da0c29df0302",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1493ffca-8e2c-477d-bbb3-80aaf8c116e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b1d3c-e6e3-44bf-a202-996e4a0b8391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8e099c15-f223-456d-a218-78919283365f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3d5984-ec58-43f5-99b5-e92358033305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1495bf-9953-46f9-8716-890d5d59256c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a977b066-6308-4fb6-bef5-749c61f0fe97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "121051d3-6364-44e5-bc42-228f8a926725",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03dd23c6-1dd1-4f1e-8339-d43816eb8bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a13143da-3338-446a-8ed1-88b88c222cb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5570ce2c-9192-44ac-9dea-ebf94dbdbc93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33739cb9-972d-4045-95f6-335f2c315d6c"
                    }
                  }
                ]
              },
              {
                "id": "db862a7a-7377-43df-8956-de8c4e6fb47c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc35cf61-f31a-4ed8-b1b5-c06cb91dd8ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec9aae4a-3a1b-403e-80ed-f2fd099d2e97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3311f58-0df6-4626-b9cf-895ea6b299a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795bdc9b-1dad-4813-b666-41dad3dd25c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "664b8060-9fae-4366-ae93-2053610940d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d2307059-7523-45b8-9ecb-ea6aa520bd5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4391ac96-6ff0-4b52-8e20-67806172efa0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e3b554e-c114-42e9-a3fd-56e697486423"
            }
          }
        ]
      },
      {
        "id": "2f565f36-01ea-4444-b76c-32f0d8956516",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8564dd7c-1836-4e4f-8e98-87fd0623f77b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1628d31a-20ae-4c04-b6db-f0d37bc36de4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16413f44-7a3a-4189-8b67-37fa37370d0a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93369f9-af65-475c-a70c-792929c38b28",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7cfb8ccf-6ab8-491a-b092-b41bd7ab418c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3a856-0310-4ec3-901c-46575b684f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f8a60f4-3a0c-4545-a4ea-b34db1745641"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd82dd7d-f671-4149-8536-680f88b77916",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccc3f497-6017-4a76-874f-51715adc7864"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aa0c31a-6bb6-40b2-9f95-b7c3e071d830",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc3e5148-c6e5-454f-8404-5eb786f70f6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5380fc46-c943-4df3-a6a6-658e2c04be5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d763931d-adb8-4a61-828a-94b51fc3da61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1aab92c8-c39f-46af-af3a-4943fdd214bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71eafc85-7ca6-49fe-ac99-1456ac1ab51d"
            }
          }
        ]
      },
      {
        "id": "de9be7a5-005e-46d3-a24b-017556ceaada",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3cff93cc-4f2b-46e7-a198-bcc744ce86b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fee742af-76db-45a8-8c7a-b6f6e85f0784",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "093a9243-0b3b-414e-91c7-804625fc4f22",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0de52-eb8c-4e08-ad69-6a0eaf32d80b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a53f93b-1122-4e98-a2e1-055d03feba04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ee708f-3708-4679-a6db-829ccc72dc38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8f6458e-7344-41ca-8a53-96ed1ba82c47"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ead80ec-9785-461d-a7e7-138db56b95be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "156e8e66-4a53-404c-837c-9a2406bbac20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4c3155c-8ffd-4807-a54f-5dc3e4ea832b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "285f925a-e25c-49ad-ad73-25485bf8eb92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05e5c935-5d92-4fb6-bcf4-66bc53739d81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70553f92-7507-4e05-a31d-623d0e9e6d71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c76797e1-4e48-42ac-8bad-7e2ba0b4260c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "accd1b91-952d-4bbe-ac04-f3adcd02f448"
            }
          }
        ]
      },
      {
        "id": "371c4411-353e-440f-9239-0dd24f258dac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1b2fc26c-a8ae-4700-8045-b966d4bf1eed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "793582cd-982b-49dd-add7-0bc04b01793e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe52b01e-bdba-4d7c-b49b-7c7c759036b4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b19af0-3bdf-466d-bfc2-f3aa0be1e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3f68d4b-5570-4109-88d6-be7fac1b0060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b9ee57-a301-4810-ac1e-2a1fea72c424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "57f32382-d9e1-4604-81dc-d7e342de3282"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30730ece-42ea-4edc-b770-57d43bdb37d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cd030f5-8255-4a39-bfad-9f677b5cbeb0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ba7df95-05a9-451f-82bc-df57475e9b6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "978920a1-9f10-4c55-86c1-751abaa0a579"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2aeca79-bbd0-4689-8226-3a15f6ea79b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f4d1a493-7351-4e97-ba08-afa86a9c1dd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3824e5d5-e240-47f0-8609-fa48ccd7a998",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13e4277d-45ca-42fd-b938-9d3ff924474a"
            }
          }
        ]
      },
      {
        "id": "2c968b2b-471f-4bc3-96a0-80869cd7c273",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "369d559d-22dd-4dda-8f67-d860b3d8ec7e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e1695b6-4191-4756-b8e2-f60f5065815c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "4d192d96-d842-4508-802c-685390f30a91",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "133d1c37-a0de-4823-bde0-9965f855d632",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d05d819-0a03-4500-b9f2-71e42da66d58",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.47619047619045,
      "responseMin": 5,
      "responseMax": 323,
      "responseSd": 25.60667518556357,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723768820148,
      "completed": 1723768846185
    },
    "executions": [
      {
        "id": "512f39c0-5296-4dcc-8536-51d55c9079be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9107ed90-f298-4313-b9ae-b0ac5c37283f",
          "httpRequestId": "496c9e3a-bccc-40ff-aaf7-acb79e302b72"
        },
        "item": {
          "id": "512f39c0-5296-4dcc-8536-51d55c9079be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3625070e-2ff8-4d34-b115-2334c6e35db2",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "ddc3f08d-c216-4ce3-9302-1af278df362d",
        "cursor": {
          "ref": "bbc27a0c-3c18-4adc-8adb-8025adbf856e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "def52c55-30b7-475f-bb90-17468bba264c"
        },
        "item": {
          "id": "ddc3f08d-c216-4ce3-9302-1af278df362d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c91fb828-3b19-4d7c-9d2e-8a75285d79f9",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "fca3b3e9-4076-433f-8d4b-778bc322be53",
        "cursor": {
          "ref": "5716a629-09bd-4f0a-8266-52007d6f2923",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "86ef7dde-42f0-4613-949e-4130e35f816d"
        },
        "item": {
          "id": "fca3b3e9-4076-433f-8d4b-778bc322be53",
          "name": "did_json"
        },
        "response": {
          "id": "d86cb884-84a1-41da-9bf2-14037c418ec8",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375a4bf3-b996-4725-b1a0-1a0cb03a873c",
        "cursor": {
          "ref": "56a97293-ed00-4f2d-9785-3c05fbb76df8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bf163c3e-dd4b-4012-99d3-9ecae638a190"
        },
        "item": {
          "id": "375a4bf3-b996-4725-b1a0-1a0cb03a873c",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e0730a8-d963-42b1-accf-0048b321c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375a4bf3-b996-4725-b1a0-1a0cb03a873c",
        "cursor": {
          "ref": "56a97293-ed00-4f2d-9785-3c05fbb76df8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bf163c3e-dd4b-4012-99d3-9ecae638a190"
        },
        "item": {
          "id": "375a4bf3-b996-4725-b1a0-1a0cb03a873c",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e0730a8-d963-42b1-accf-0048b321c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c553df-06c2-4207-8ac9-944485b85b32",
        "cursor": {
          "ref": "48f490ed-bbe9-4b57-8bfb-a958e236143d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aa8303b3-1159-4caa-9e68-b2a88173b03f"
        },
        "item": {
          "id": "73c553df-06c2-4207-8ac9-944485b85b32",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8975138d-841f-4943-ad56-ccf9eeb3d72c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 119,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fed18c5-4522-491f-98d8-11a929ee4b09",
        "cursor": {
          "ref": "4e24fe0d-bf57-4b7d-b217-53e42f34e94c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "94d645aa-be85-4c84-963d-9b81624f996a"
        },
        "item": {
          "id": "8fed18c5-4522-491f-98d8-11a929ee4b09",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1dca1eee-f46b-435d-9adb-a99ce33dfa62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d693e942-71aa-4e18-80e3-2fb6a695944a",
        "cursor": {
          "ref": "f3408e6d-55c0-4a32-88a4-e4caf966d8ca",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "341c6568-178b-4287-a933-459f2ce7eff0"
        },
        "item": {
          "id": "d693e942-71aa-4e18-80e3-2fb6a695944a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0c0d0bfb-ead3-4790-a8b4-e2b4a3ea3c31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae2b2e-946d-4905-a81e-c928b3a998c7",
        "cursor": {
          "ref": "380ae49a-2cf9-4344-99c0-cdb9cc52629a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6517244b-9862-4373-860e-d944e3d41b9e"
        },
        "item": {
          "id": "46ae2b2e-946d-4905-a81e-c928b3a998c7",
          "name": "identifiers"
        },
        "response": {
          "id": "a1e3ac6f-7a72-4d97-92e0-9a62ce7ea0bb",
          "status": "OK",
          "code": 200,
          "responseTime": 275,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecf4c49-6d87-44d4-9ab0-5709ca88e7e9",
        "cursor": {
          "ref": "cbd7ee13-498d-43b5-9dfc-76c37c2a4558",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b053e89b-26e5-45a4-b9d9-a5bf57edec5c"
        },
        "item": {
          "id": "6ecf4c49-6d87-44d4-9ab0-5709ca88e7e9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85c84a8e-6839-49b3-8029-9c74354358ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1905e2-ef58-4b99-9ed3-78aa5b41f897",
        "cursor": {
          "ref": "d912676b-931b-48c5-a630-439288db8e76",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6c2998f9-a721-4ff4-b985-f6439eee1b37"
        },
        "item": {
          "id": "5d1905e2-ef58-4b99-9ed3-78aa5b41f897",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5ef01999-2081-46b7-8aab-9223aeaf9939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd981e0d-848d-46cf-9e8a-630e766ef7ee",
        "cursor": {
          "ref": "7cf64e8f-6776-4820-812d-99888df9f0e7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e4e0a3d5-341c-453c-b1dd-d2037f2073af"
        },
        "item": {
          "id": "cd981e0d-848d-46cf-9e8a-630e766ef7ee",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e9bcc447-d610-487c-8840-454a02f550fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bd1028-1177-4425-8d6e-cc2f3a89e1a6",
        "cursor": {
          "ref": "4e0ddbb3-c270-4c81-b36a-878779443c5f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bfa10645-455b-4e9e-996f-bcc4151731b4"
        },
        "item": {
          "id": "21bd1028-1177-4425-8d6e-cc2f3a89e1a6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d1b68716-81c8-4e3c-a9fa-a459f7e9e3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27787288-772e-4aae-b7fd-9ab0c7a61fdf",
        "cursor": {
          "ref": "10f58506-dd12-4f0d-95be-8d7d3424eedf",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1b69197a-5a55-4198-a5cc-f6dbe9582a20"
        },
        "item": {
          "id": "27787288-772e-4aae-b7fd-9ab0c7a61fdf",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c73e3e39-0873-4ad4-9fd0-6292010d85fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8ea67-17e8-47c4-b83f-36e9b6fb0c9f",
        "cursor": {
          "ref": "53172c70-be2f-44c2-a5aa-983f5770c267",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0ac6aa55-3fac-4b43-b270-5eec51120442"
        },
        "item": {
          "id": "d8c8ea67-17e8-47c4-b83f-36e9b6fb0c9f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "27b1945b-e165-426e-8318-b263247671ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c2f04d-3e3f-486f-af87-60f926ce2d55",
        "cursor": {
          "ref": "d2dfab1f-ae8f-47c6-ae48-b85b0c94fddc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ddbe5ff1-6195-4594-9544-42b525c390de"
        },
        "item": {
          "id": "c0c2f04d-3e3f-486f-af87-60f926ce2d55",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8e5d789d-8464-4c0f-981e-310b9ebbc269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2fab3-02e6-4bb4-9a33-1da031ad2785",
        "cursor": {
          "ref": "8d443e5e-6018-4e45-9247-f872534470ae",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "da0ec8e1-9323-4756-bab5-b830d0ce0b9b"
        },
        "item": {
          "id": "aee2fab3-02e6-4bb4-9a33-1da031ad2785",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "82e2942b-f22c-4ccc-8dcf-23d8ec3b5e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbbe0dd-b383-436c-b5f8-feed863f07a8",
        "cursor": {
          "ref": "3d4c11d5-a068-45eb-95d3-810c460622da",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "31500c40-1019-4aff-b539-5fb8177e3492"
        },
        "item": {
          "id": "0bbbe0dd-b383-436c-b5f8-feed863f07a8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a157dd18-9f7e-40af-8ad7-bf8998446fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e86c40-a69e-4382-8788-86e11623264f",
        "cursor": {
          "ref": "ad2322f5-b310-48ae-9192-8a7d7edd0448",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a7a042c0-d0f6-45b1-8b7b-3c007596680c"
        },
        "item": {
          "id": "f6e86c40-a69e-4382-8788-86e11623264f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cbfba045-6732-4f25-ab34-339c0a08f596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886449b3-cea5-41a2-87ff-ed8da17f7f5b",
        "cursor": {
          "ref": "7cb2401c-1c22-43d2-a84f-195733662345",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb73cde3-912b-4836-a008-ddf6cbddb65e"
        },
        "item": {
          "id": "886449b3-cea5-41a2-87ff-ed8da17f7f5b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ee6505e4-6106-4467-b820-24bea5757e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8b7cdf-fb3a-4a47-b2a9-592f480b03bc",
        "cursor": {
          "ref": "f5510b7a-75c6-4780-9013-3a21afbc3d5f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5ebff82c-4ced-44c9-b2ba-9def2de8d2e7"
        },
        "item": {
          "id": "9c8b7cdf-fb3a-4a47-b2a9-592f480b03bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "41cfc9a6-bfb2-48f9-ab23-79258b11e0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636368dc-139a-4cc9-8a60-522c92743aa3",
        "cursor": {
          "ref": "0244c628-4255-44d5-90ff-003a052a7e17",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "08b346c7-62f1-4cdf-b1a0-ce0a08b17f4f"
        },
        "item": {
          "id": "636368dc-139a-4cc9-8a60-522c92743aa3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e1eba882-d900-4eac-b3f0-e42da90aa8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7740d8ee-b4d8-4d57-a75a-490376805011",
        "cursor": {
          "ref": "070bd139-cb81-4d3b-af0e-a262872c69b3",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "176bb42a-ea5f-4af1-86c3-90fc9fab3e5f"
        },
        "item": {
          "id": "7740d8ee-b4d8-4d57-a75a-490376805011",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f4efb9c1-35b3-41fd-8b24-769628fb2da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b39c83a-3b88-48a3-b156-59707ad72fa6",
        "cursor": {
          "ref": "1cf737ca-2d6c-425d-a235-da7ae4d92ced",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7bb5244f-6d7f-468d-9860-a3dd9a1448bc"
        },
        "item": {
          "id": "1b39c83a-3b88-48a3-b156-59707ad72fa6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f56ec6e2-c6fe-4f5b-b5fd-13ba8e375fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2a9f4a-411d-4cd3-a803-8550052c07ae",
        "cursor": {
          "ref": "f98773ea-e0dc-4938-9ca6-bc26a08835db",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fe35ee06-d07e-49ec-be5e-2e7349ef551e"
        },
        "item": {
          "id": "3f2a9f4a-411d-4cd3-a803-8550052c07ae",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "63d357c2-b424-4c64-a04c-2f1f247017ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0df20b2-2497-4eca-b537-10b8e96b8b70",
        "cursor": {
          "ref": "3c875d37-c37a-4eaf-82da-56ce8425eebc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0ba2c80f-e16a-42cc-866c-97c7746d3bbd"
        },
        "item": {
          "id": "e0df20b2-2497-4eca-b537-10b8e96b8b70",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a319c82-04ae-42f3-a16d-15c50c50d450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae117d5-7f0c-4906-9388-a648f6fd4d6f",
        "cursor": {
          "ref": "af156ca7-ac19-49bf-96b6-33c1281b8bc8",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "52dfe05b-a659-4814-9d44-18028d1e20dc"
        },
        "item": {
          "id": "2ae117d5-7f0c-4906-9388-a648f6fd4d6f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3bdeeb1e-72b0-467d-a8e1-ff533a06594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05594989-0c02-43a5-9a11-088ecac9b1f2",
        "cursor": {
          "ref": "2e4bc1dd-4db7-4f63-9917-3a49631d20f0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "847c3890-95b7-4387-876c-076cec4129d9"
        },
        "item": {
          "id": "05594989-0c02-43a5-9a11-088ecac9b1f2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "afee4cba-e76d-4ee4-ac4c-647416b9eef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72985bab-99b3-44b9-84f6-164a7e41b521",
        "cursor": {
          "ref": "efaade80-cf7f-4cdd-8dcc-9b1d59926873",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "afa487ab-a699-4d5d-956f-6b6a981be179"
        },
        "item": {
          "id": "72985bab-99b3-44b9-84f6-164a7e41b521",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9cbfa07e-fd91-425e-aeee-81978219c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfb8e65-1068-4cb0-9af5-464c7c7c89c1",
        "cursor": {
          "ref": "e76ce605-663e-47a6-ab62-237d4a038cbe",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82912965-89d7-4946-a259-4c0e874f2d3a"
        },
        "item": {
          "id": "abfb8e65-1068-4cb0-9af5-464c7c7c89c1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d6a279e8-9512-43a7-9aec-18bbe26b7641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834d330-d7fd-41bb-b1b4-c96c081a1a46",
        "cursor": {
          "ref": "c3350b51-c61c-4b87-87a5-df1d131d979d",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ada0792f-950e-4a2c-bff0-510fb93a8742"
        },
        "item": {
          "id": "8834d330-d7fd-41bb-b1b4-c96c081a1a46",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "897ba1b6-cd01-4f0f-a52a-c0c99d04c063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7221bae5-924d-48a7-b567-5af35d82daed",
        "cursor": {
          "ref": "83b03077-0f4f-49ae-968d-1107a719ee3e",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4aa3ebd6-786d-433d-8e9d-42b46eb1207d"
        },
        "item": {
          "id": "7221bae5-924d-48a7-b567-5af35d82daed",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "aefd7b38-ad9d-4b09-885c-85cf6862ca77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038afd5f-8a0b-4c58-b8d3-c417ce4a7a9e",
        "cursor": {
          "ref": "0588bdec-bb69-43d1-95f0-cbc246b9ebf9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bf3275cf-cc7e-49a0-a149-9deccf8911bf"
        },
        "item": {
          "id": "038afd5f-8a0b-4c58-b8d3-c417ce4a7a9e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "950b6ffe-700d-4c93-97fb-39d8885e57b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1382967f-d21d-4f88-a5e6-078e1c07cd1a",
        "cursor": {
          "ref": "1e07e226-0f5b-47c5-99b9-432607c75cce",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c48fa578-fdf7-48e5-88dd-6126659ff33c"
        },
        "item": {
          "id": "1382967f-d21d-4f88-a5e6-078e1c07cd1a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bd8817bf-4d70-4cc3-aea1-ac8abeb02d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d28833-fca8-4c1a-a8c8-50322a730772",
        "cursor": {
          "ref": "675d5ecd-88d1-4252-aa46-fafacff1854f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56a7b939-2864-406b-bfe9-c0229e946c8c"
        },
        "item": {
          "id": "f9d28833-fca8-4c1a-a8c8-50322a730772",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a8a9ca6-0cb3-4140-beb7-847ba8da097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca657c01-b645-4796-bd7e-d071de8be392",
        "cursor": {
          "ref": "3251279d-eb54-47d4-ac7c-e9ec169197d1",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9b654fc4-fe69-4a8e-bbd0-865e2427d900"
        },
        "item": {
          "id": "ca657c01-b645-4796-bd7e-d071de8be392",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9996a835-6911-4a02-a213-76f351fce014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf3a9d9-f2c8-4759-ad15-d955391ff399",
        "cursor": {
          "ref": "8c31aa06-08ea-4e3d-8794-92e72e28f126",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ac483e2d-ea8e-437a-a62d-4d3cf9a09350"
        },
        "item": {
          "id": "9bf3a9d9-f2c8-4759-ad15-d955391ff399",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "17355421-1a88-4c9b-a56f-0ea3ab140273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662d3eb4-8507-4e7a-9337-8ed6c3945e6e",
        "cursor": {
          "ref": "d7e5cc01-935a-4e14-84ba-63f0a455ce1a",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a5fa5f5-edbd-433c-a9ec-33e989d94a04"
        },
        "item": {
          "id": "662d3eb4-8507-4e7a-9337-8ed6c3945e6e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c5696734-f32b-4891-805b-7133b93755ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251066d2-9441-4db3-804c-6b27d36d1058",
        "cursor": {
          "ref": "6aae75d1-dd7c-4969-b57b-9cd8f2a59d1c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bf421e0e-609d-425c-8fa8-c5cd00652270"
        },
        "item": {
          "id": "251066d2-9441-4db3-804c-6b27d36d1058",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "63b9a843-3de6-4b46-8208-0e747f679b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6953c1f-0da8-4cd3-9702-faaf20128ab8",
        "cursor": {
          "ref": "5b2b3621-3edb-42ec-b4ee-5092f1c9e947",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4aa72876-bc61-48df-9031-bb2c7b8c05d9"
        },
        "item": {
          "id": "a6953c1f-0da8-4cd3-9702-faaf20128ab8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c6bc7f36-0a1e-4b7c-a4c2-08d788b0c64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3e8d43-919e-436b-ae72-6af056c5514f",
        "cursor": {
          "ref": "1494b1f2-a9cc-4a38-a6ed-db509080e3c6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2e46f5ab-b24d-4b46-971a-8f481f2d5778"
        },
        "item": {
          "id": "6e3e8d43-919e-436b-ae72-6af056c5514f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ca2a7b6-791b-4ec0-92a9-371f4ac9bd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aa9513-5409-4782-b636-3bc42396be3f",
        "cursor": {
          "ref": "77f94eca-d9e4-44f0-9642-7893f3f040b4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "19e05385-f962-4bda-8515-09e1958d8245"
        },
        "item": {
          "id": "75aa9513-5409-4782-b636-3bc42396be3f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4b6253fb-9c4f-41f9-be78-7f8967c249cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ba1a32-4bb9-4e2d-9a4e-6d45a3ddee31",
        "cursor": {
          "ref": "c178abb3-8105-489a-a90c-0a900d22f1f5",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b8997e5b-7dfb-42f6-871c-f903adb7dfee"
        },
        "item": {
          "id": "c7ba1a32-4bb9-4e2d-9a4e-6d45a3ddee31",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4dc9061-0a97-4090-8701-6717e06e2404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab79b7d6-73f9-47fc-8c02-d2fa1d7be242",
        "cursor": {
          "ref": "d5a5243c-d579-4774-804d-ce893ca1135a",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d3a16480-542a-4373-80f2-6005003262fc"
        },
        "item": {
          "id": "ab79b7d6-73f9-47fc-8c02-d2fa1d7be242",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f26e042c-6ea3-452e-8e8a-639a601b57ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8296f56-05ed-4872-903d-7dda928164a9",
        "cursor": {
          "ref": "6e13b2b5-3991-4449-8fe6-28045ebd592e",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "232e404d-5a2e-4aec-af62-23763e62afc9"
        },
        "item": {
          "id": "a8296f56-05ed-4872-903d-7dda928164a9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a960a5c0-f652-48eb-9861-4bc408b6fa09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c693ad8-1195-45ce-b3ab-21b23f71ea7c",
        "cursor": {
          "ref": "161b4888-aa63-4996-8bf2-7629975330f0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68c3a944-2188-432f-a260-cd49364cb582"
        },
        "item": {
          "id": "1c693ad8-1195-45ce-b3ab-21b23f71ea7c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "553f7863-ea3c-4b14-bb8a-6b9f346aab65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25305903-a6d3-4a88-9132-800d1f5f3f3e",
        "cursor": {
          "ref": "eded38bf-e739-44f2-8029-c43ee5ef44f7",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7335119c-6996-486f-a69e-498b2a5fdda5"
        },
        "item": {
          "id": "25305903-a6d3-4a88-9132-800d1f5f3f3e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6b312f7a-4809-4f07-ac63-58d92c073a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f7a45-b6b2-4709-8d8c-d4508218fbb3",
        "cursor": {
          "ref": "deae3a4b-48f9-4b9b-aca5-295ccf787887",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e5683c77-9cf2-4c26-9bc9-e716723441b3"
        },
        "item": {
          "id": "4d7f7a45-b6b2-4709-8d8c-d4508218fbb3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8eb6229-9fae-4c47-9fda-6a36810a7b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f881d2-a3d7-4754-9ef8-5233f31fbe96",
        "cursor": {
          "ref": "61cfc38e-09ab-455c-b058-6c30e792ad65",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7bbc761f-192d-4fff-b3f3-af97e73eee69"
        },
        "item": {
          "id": "94f881d2-a3d7-4754-9ef8-5233f31fbe96",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a5f62d9f-3c42-4c34-8ade-6094866a825f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3aa95d-267e-4c9d-b50b-004da3126356",
        "cursor": {
          "ref": "79207a14-0a6d-479d-a5c2-74c24359d67b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9dc63a20-a285-4b0e-b45f-6c6a49274871"
        },
        "item": {
          "id": "7f3aa95d-267e-4c9d-b50b-004da3126356",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8fb58619-129c-4bf8-a009-d2ce7e5b51ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d629120-3489-4a1f-a687-307acb8ff839",
        "cursor": {
          "ref": "d0e6cc73-d6ee-487e-a64e-fee0067a4744",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "51efb305-141a-43d7-9f6b-03081a3ab6c7"
        },
        "item": {
          "id": "8d629120-3489-4a1f-a687-307acb8ff839",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9b1100b4-3011-442b-b857-34cf02a5473b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e748db73-fa9d-4480-9e8b-46f89d9086bb",
        "cursor": {
          "ref": "329c4a70-a6ec-46c8-8b21-b4b0ddbc146c",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "333ace67-7ab6-4d37-a80b-e046c5990cac"
        },
        "item": {
          "id": "e748db73-fa9d-4480-9e8b-46f89d9086bb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "05647553-5e32-48ce-a8c1-94bcc20fb02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7307cf42-cdc2-4d20-9311-cc00bb4e9485",
        "cursor": {
          "ref": "6edd8235-229f-4417-bb48-ee1e7169398a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "66ba31dc-4598-4781-9e9e-8edd8e72938d"
        },
        "item": {
          "id": "7307cf42-cdc2-4d20-9311-cc00bb4e9485",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e40900bc-4d92-4c68-bf62-d710247f3361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012c6a0a-feea-4065-bdde-d1d3ede1a6a8",
        "cursor": {
          "ref": "1acc6702-38ed-4509-b79e-122134419532",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b9076674-88a9-4648-b3cd-6971b9501b48"
        },
        "item": {
          "id": "012c6a0a-feea-4065-bdde-d1d3ede1a6a8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e57ae6b9-91b2-4967-975e-011668080cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dc2fbd-e6ff-42e0-a200-f4b125ac01a0",
        "cursor": {
          "ref": "9557d5f5-62d0-4bfc-91ea-f0031f258343",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c01b57e0-77fc-464c-9e1c-ec10cf1eea4b"
        },
        "item": {
          "id": "b7dc2fbd-e6ff-42e0-a200-f4b125ac01a0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5e4e91e9-bf06-497f-a5e0-9e0dbbd9043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ef022f-fec8-41fc-838c-454ec3e61b55",
        "cursor": {
          "ref": "0e8512e2-c85b-4dba-8de7-e7e4aca1b363",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8c47361f-bb09-42f6-8560-ec39261e700c"
        },
        "item": {
          "id": "18ef022f-fec8-41fc-838c-454ec3e61b55",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "64feaf35-9826-4b74-982d-f01e03e6c93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15dc6b8-fdcc-4e24-b309-84566fe3ab35",
        "cursor": {
          "ref": "22c1dcaa-b248-45d1-8372-38f1cd1a86d4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "29b8d002-2daf-42ed-8986-abd843c4dc06"
        },
        "item": {
          "id": "d15dc6b8-fdcc-4e24-b309-84566fe3ab35",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c8e038cc-6725-4fe8-8eb6-c70e1153d723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7893b664-c0e2-4502-bac4-fdc71e66ff3b",
        "cursor": {
          "ref": "84f84ee2-8b3c-4912-8bad-58c4587ccccd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1a771eac-3777-4fb3-bd38-bee9044edd1d"
        },
        "item": {
          "id": "7893b664-c0e2-4502-bac4-fdc71e66ff3b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "03d15c19-1890-42b1-a8df-1b7f8c250188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae5b4b-9538-44a9-8f2f-8b133b860588",
        "cursor": {
          "ref": "3e993f5e-042a-471c-92b0-a42a389f449d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "da3eb689-4bcd-4648-8da7-06f5a1cd0f69"
        },
        "item": {
          "id": "18ae5b4b-9538-44a9-8f2f-8b133b860588",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e4424c01-93f5-45db-a2b6-888299b8fddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bed66f1-07d0-41e3-bc8f-44c4c6cfb3fc",
        "cursor": {
          "ref": "403a3b02-93a6-42a6-ba31-3a636f5f5523",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e467397b-b78b-4a87-b018-e40e00ad3dfe"
        },
        "item": {
          "id": "9bed66f1-07d0-41e3-bc8f-44c4c6cfb3fc",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2a3c73b2-5676-491b-bded-73e02efddeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb20b8cd-40ad-46d1-9f09-cec50bc2b17d",
        "cursor": {
          "ref": "29ef63be-0247-41f1-972f-fd9a9edbc29f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d6695ec8-70a1-4dc6-9731-dc1288c3dfb3"
        },
        "item": {
          "id": "eb20b8cd-40ad-46d1-9f09-cec50bc2b17d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d25a5414-253f-4653-8932-c7111c511d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7175dd38-2914-45c5-8324-5ee7b4fb6ea0",
        "cursor": {
          "ref": "51981df3-9ec2-4792-b7ab-29a8ee571868",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "690c7c4c-e768-4ed1-9ab5-5a95e4b0841c"
        },
        "item": {
          "id": "7175dd38-2914-45c5-8324-5ee7b4fb6ea0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "dbdc814b-29d6-45be-962c-db03885eebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae2c1d1-ff3a-4444-b9a6-979a33b1b3df",
        "cursor": {
          "ref": "c475c88d-5cfb-4f90-b787-798b93b15bca",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3323218d-8943-4018-9f69-0e5db62b7fad"
        },
        "item": {
          "id": "dae2c1d1-ff3a-4444-b9a6-979a33b1b3df",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b9c29d7a-8ffd-4a8b-b3c4-568ac3f7679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25b777c-bcee-467a-b482-ab72282b713d",
        "cursor": {
          "ref": "86fb599f-fa73-41bf-a962-b7a7295d10e8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "31d2223b-6deb-4a40-818c-f0f5092d73bc"
        },
        "item": {
          "id": "e25b777c-bcee-467a-b482-ab72282b713d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87d0604c-4f99-44a6-9f34-808890cd39dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716075ca-19d5-42e8-87e6-4e0d37c8e7aa",
        "cursor": {
          "ref": "004359bf-0575-4041-be42-09da8ed0ee9c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f4ed0050-c321-4a85-8582-bb9063d40c9d"
        },
        "item": {
          "id": "716075ca-19d5-42e8-87e6-4e0d37c8e7aa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d9e5c2c1-ee7a-4b76-969e-f09b33ca9fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c665d412-a528-4bba-9df1-e078ab3af2a8",
        "cursor": {
          "ref": "ae5cd284-fa43-4f9c-a736-94db732606aa",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "34b4a38b-07ed-494b-a2a5-cd5d8aa0b3e0"
        },
        "item": {
          "id": "c665d412-a528-4bba-9df1-e078ab3af2a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "832dd88c-9c75-4b53-905d-2bf04a19980e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9574a661-da12-4256-900c-3d47c296b21e",
        "cursor": {
          "ref": "0db56e7a-0326-482a-a2ec-133d948f0374",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cbb0f4e4-f4b8-4c36-b223-88abded328ef"
        },
        "item": {
          "id": "9574a661-da12-4256-900c-3d47c296b21e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0867fe40-62d3-4536-a0b5-4efba04904a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc44019-353d-44c9-9acb-07023200fe28",
        "cursor": {
          "ref": "f9daac8a-ad20-4a04-9b82-72a2f6147730",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b2d7af64-86ce-47c2-9d81-2960a4e529e2"
        },
        "item": {
          "id": "fcc44019-353d-44c9-9acb-07023200fe28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "516b0f11-d72e-40e5-87bc-91bead893715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdce47f4-f6e0-488a-8fe2-322f081dc057",
        "cursor": {
          "ref": "be47b352-fbeb-4dc6-bc56-e1cade1133dc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6328c6b5-f8a3-4927-8a59-f73077606acb"
        },
        "item": {
          "id": "bdce47f4-f6e0-488a-8fe2-322f081dc057",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f1648cbc-a6fa-442f-8a83-08215949a572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b5b6f4-e997-4f37-a90b-06f5e602ae17",
        "cursor": {
          "ref": "9d4fab43-7945-45ec-9f81-f810953c47db",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2a06132-2d0c-4bb8-aff8-dd58dfd5f38e"
        },
        "item": {
          "id": "e6b5b6f4-e997-4f37-a90b-06f5e602ae17",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e0502f4-1861-427e-a3ec-e17419fb7d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130f24ce-6760-4309-b788-89c938953a4a",
        "cursor": {
          "ref": "e882c613-64a2-4855-aac4-ea524ff2d1a3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6e8c8466-59ad-4a09-9d43-80ab662e927c"
        },
        "item": {
          "id": "130f24ce-6760-4309-b788-89c938953a4a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d4bd74dd-de36-4d5f-b425-7dbd20b6d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fb2da7-12be-43b4-a990-0cbf38b71e5f",
        "cursor": {
          "ref": "ef685a93-ce0b-4e98-945d-481cb8195695",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "125e408a-96f8-4817-9199-83050aa3a0a2"
        },
        "item": {
          "id": "90fb2da7-12be-43b4-a990-0cbf38b71e5f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e510c69b-24d8-4376-943e-a839be293054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d975ae3c-00c2-4f16-8d1a-378044c54eac",
        "cursor": {
          "ref": "1e2aba16-5561-41b8-84c9-e58be419f9b1",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "76515a32-2599-4a88-88d2-b9918178970a"
        },
        "item": {
          "id": "d975ae3c-00c2-4f16-8d1a-378044c54eac",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "05f3bbed-5b68-4c54-852b-4a07fa14a64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d33bdaa-0198-4747-aaf4-645c3f4386b9",
        "cursor": {
          "ref": "b7b3f9a3-4b62-48bd-956d-3d7335bc183a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d1421f05-ecf5-45c3-b7a6-f61d924a98b8"
        },
        "item": {
          "id": "2d33bdaa-0198-4747-aaf4-645c3f4386b9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6df517ed-55e4-47a1-9352-912323ca6616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad94300d-8c5d-4ba9-a4e4-7fc2cfd97952",
        "cursor": {
          "ref": "78b26c02-dc38-4a79-aace-a189e23fa927",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2f0d2420-c495-4ac1-b0a4-8bf93d7ce4cd"
        },
        "item": {
          "id": "ad94300d-8c5d-4ba9-a4e4-7fc2cfd97952",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ec7a5819-7e16-46e4-a3c7-512e706202e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febfbe45-fa18-4ee8-80ec-a29a990041d9",
        "cursor": {
          "ref": "0211816d-3871-43a2-8b63-f5684e7fd7f1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "18962d7d-e77e-4a05-b0f2-dab201116915"
        },
        "item": {
          "id": "febfbe45-fa18-4ee8-80ec-a29a990041d9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9d19b7f9-f145-47d5-bd7d-2324a8ca8f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b57a866-70e8-4d1b-b841-e22c62ec3798",
        "cursor": {
          "ref": "969a607c-20bf-4648-a0d3-26402c4340b9",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7526c388-61c6-42da-9ba7-e67d0f78abd9"
        },
        "item": {
          "id": "6b57a866-70e8-4d1b-b841-e22c62ec3798",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5fba255c-b78b-4225-b8e2-16e6f20c35c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc8edcb-ef11-4c7c-9089-86598a41c0c1",
        "cursor": {
          "ref": "bdb8c8fe-8994-4ec6-aaa8-701f1af0c0b0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4c8ef3db-afe8-45a6-87d0-1b363d95020c"
        },
        "item": {
          "id": "ffc8edcb-ef11-4c7c-9089-86598a41c0c1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "db11fd9f-d0e8-4c33-96b7-e5e4b9fbabb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5f38e-5ee5-4aad-951e-76f62cae78b1",
        "cursor": {
          "ref": "a495bc6f-0fea-4e38-8593-2789ac1ae45c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7e1035b5-b694-42bc-a824-f633db3b2c33"
        },
        "item": {
          "id": "bac5f38e-5ee5-4aad-951e-76f62cae78b1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e8b8324f-ee09-4c9a-b44d-001184575dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd9e19-d23e-48e7-ac94-c21e1571ee10",
        "cursor": {
          "ref": "d1534ecc-913b-4e4d-82bd-cd797f3013b5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fa84b635-e45a-4190-a244-80c88e815724"
        },
        "item": {
          "id": "27cd9e19-d23e-48e7-ac94-c21e1571ee10",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "76cc4f22-6a97-44d2-98bb-7112eb0bb15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05287a2c-e0d8-4c19-8f00-1809ef6dfcda",
        "cursor": {
          "ref": "f0f971d4-d8e0-424d-8cfe-3df96a51f2cd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "67e1afdf-6b75-4737-a48b-5733b6f03681"
        },
        "item": {
          "id": "05287a2c-e0d8-4c19-8f00-1809ef6dfcda",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f3451d16-cd19-4ed7-888e-0438ed2eb199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57367cf8-5d3a-45b9-85a0-453c4de45e88",
        "cursor": {
          "ref": "87e55d14-7e03-46b4-8845-c70044418a30",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7544304b-d75c-48d6-a894-3436484e11a9"
        },
        "item": {
          "id": "57367cf8-5d3a-45b9-85a0-453c4de45e88",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b55fe62d-967b-433d-8376-dfb267d0e9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9d1802-64c5-481f-8bec-5036d1798523",
        "cursor": {
          "ref": "249fe3fb-afe4-4059-88cf-566bfd0cbf14",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d1524b75-1aae-402b-8b2a-4f198d1dafb5"
        },
        "item": {
          "id": "de9d1802-64c5-481f-8bec-5036d1798523",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "661c0764-a774-4721-b972-6156e68a0d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54901141-85a3-4b82-bdf3-1db02949ab46",
        "cursor": {
          "ref": "069598bc-280e-446c-a607-73adc50bb6ae",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c70267bd-3aa0-4417-8438-9725acdea693"
        },
        "item": {
          "id": "54901141-85a3-4b82-bdf3-1db02949ab46",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e6fdc24c-c011-4ea3-a7a8-b6b53b90b16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4c328b-168f-4996-b5fd-ed8c4775f570",
        "cursor": {
          "ref": "6a9c39bc-52b3-4b13-8575-2d51e3c6ddd6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "164ec776-a31f-490a-8c01-79cb819e8328"
        },
        "item": {
          "id": "ed4c328b-168f-4996-b5fd-ed8c4775f570",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d81b2c4f-4845-44a1-bbe0-d1b98157e5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0765d2-bc52-4baf-8e6b-7e9983d127ea",
        "cursor": {
          "ref": "6b8bac0e-55f0-449e-b42d-c2429ba587e5",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6a46b767-6063-4417-89ea-e3aa4efbb36d"
        },
        "item": {
          "id": "ab0765d2-bc52-4baf-8e6b-7e9983d127ea",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3f372103-0331-427a-9151-134fcea1863e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a3303b-4289-4335-91d9-ba0db7c13627",
        "cursor": {
          "ref": "2cc76778-e47f-4bdf-bce9-017ec423c495",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d4013f30-e2c8-4dcb-bae4-2417eaba5e63"
        },
        "item": {
          "id": "b8a3303b-4289-4335-91d9-ba0db7c13627",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf7ed324-670d-4f53-96b4-7d16ad4fb651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c3e456-836e-4f04-811d-9330765d6406",
        "cursor": {
          "ref": "f44e40ef-d830-47a2-8f5f-61dbf2f61c89",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7a10fd46-03c1-4d9b-ac41-61b48cf7c833"
        },
        "item": {
          "id": "d1c3e456-836e-4f04-811d-9330765d6406",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "78154ea7-dd98-44d5-b3b2-7613285823f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4ba947-837f-4da4-888c-8390685372ee",
        "cursor": {
          "ref": "36227c2c-e4ca-4a49-8aff-5bd23b67ae33",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "27813402-f7ea-4823-9c92-86436b9fc4b8"
        },
        "item": {
          "id": "4b4ba947-837f-4da4-888c-8390685372ee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4fa9df2c-6673-410a-bc1e-7f3b7cb6b0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c357f6a4-822a-4990-a671-c7a15b6cbd5d",
        "cursor": {
          "ref": "150a98b0-f813-4b28-93d4-323ad390618f",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee255eb1-0799-46e7-8150-45262480dea2"
        },
        "item": {
          "id": "c357f6a4-822a-4990-a671-c7a15b6cbd5d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7f5f9385-528f-4088-82aa-4f1722a70651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc8a8d1-ad50-422b-a803-fa0bb3c3075d",
        "cursor": {
          "ref": "98243128-be2d-4cf3-8edb-31e251336d19",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1fe9c308-eae6-47fa-88ac-ea23b41e91ad"
        },
        "item": {
          "id": "5dc8a8d1-ad50-422b-a803-fa0bb3c3075d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "623deca0-a90a-4efe-94f8-8ac3d01d71ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764cb668-60e1-425e-ba65-225e9bab953a",
        "cursor": {
          "ref": "971f2818-93b9-4561-b579-aa00a8ce1ac4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9dc20d16-8bab-417e-a19e-b743f477c94e"
        },
        "item": {
          "id": "764cb668-60e1-425e-ba65-225e9bab953a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "606f8f00-1aff-4b3d-96e3-afafeea92f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7d1491-4f5c-4988-8e83-0670222a5a1b",
        "cursor": {
          "ref": "2a566a7b-1b5a-40d8-9027-d2520e87bc86",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c489cce3-b54d-4764-8c74-5ce03e69a796"
        },
        "item": {
          "id": "4f7d1491-4f5c-4988-8e83-0670222a5a1b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0217ff9a-cf35-45be-9773-a33a48b4a84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628b0850-6c88-413b-99f4-da1626eedb6c",
        "cursor": {
          "ref": "d037ba62-5f79-4e5e-a5e8-59434ce1f33f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7b51c93e-4ffc-44b3-a641-6950b9a79ab8"
        },
        "item": {
          "id": "628b0850-6c88-413b-99f4-da1626eedb6c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4043c28a-f018-4e74-8fe6-1b86ef20d316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea09fe1-b9ca-48fe-a09b-fc7979ca406e",
        "cursor": {
          "ref": "964bbecc-67c3-415e-af31-9e97295e9a89",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5c93db5d-e55a-456d-8889-a7e25038cfea"
        },
        "item": {
          "id": "aea09fe1-b9ca-48fe-a09b-fc7979ca406e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b1b28594-1e16-4d13-8af2-eb546f460cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc59b73-48bc-4513-accc-7b8f77f3bf1d",
        "cursor": {
          "ref": "543bf369-d3af-45a6-988f-d92bd415306b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e7487469-1692-4d96-90f0-bb7e7b6c335f"
        },
        "item": {
          "id": "5bc59b73-48bc-4513-accc-7b8f77f3bf1d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b4ffb669-670c-4fe1-8467-9af8ede8830b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7da8c8-f741-448f-8edb-90945296a6c7",
        "cursor": {
          "ref": "1f7e5451-6197-4997-8e85-efb1811e1afb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ddf7908f-8400-4a45-8c82-bdcf5887235a"
        },
        "item": {
          "id": "9b7da8c8-f741-448f-8edb-90945296a6c7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6b9bea1f-c377-48e0-a01c-a180c1e8f92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0602caa-4a72-4f76-a04b-3dabe9bcf14b",
        "cursor": {
          "ref": "c90308d8-45de-4412-aba1-042625c3ac06",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38a10b68-41a7-437c-b675-b260beb96a4c"
        },
        "item": {
          "id": "a0602caa-4a72-4f76-a04b-3dabe9bcf14b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7234ff79-b337-48d4-aa57-2b68eefa1d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce29ac74-f30c-4bd0-a806-ed582141baef",
        "cursor": {
          "ref": "f3fe760f-efdd-4a91-9cfe-de639655bf0f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "deb15741-12a5-4d83-815c-48f6ce965682"
        },
        "item": {
          "id": "ce29ac74-f30c-4bd0-a806-ed582141baef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3374fc1d-ef61-41d8-9d25-aa5348d53efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbac13de-4b73-47c5-a5fe-02e0852d7c2d",
        "cursor": {
          "ref": "7fb1c1f3-676d-4186-8d84-15f35179791f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ecd4dbab-e8b1-4665-9e56-784361016a13"
        },
        "item": {
          "id": "cbac13de-4b73-47c5-a5fe-02e0852d7c2d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c35c7681-2b58-4973-908f-8810d828bda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8254d0-2ef3-4ad9-bb85-62c1d225c1f8",
        "cursor": {
          "ref": "c4a4d9f2-3606-475f-b11c-82563fcc539c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "60fcd3f8-5a25-4ea2-8263-331fa3e43858"
        },
        "item": {
          "id": "ef8254d0-2ef3-4ad9-bb85-62c1d225c1f8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "629e59b9-d126-46d1-89d6-77e4b9f9b8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4312ff-5169-4051-8aa3-fd2378a957f9",
        "cursor": {
          "ref": "394c5d67-331e-44c5-899c-1cf29dac8e2c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "01455b17-12c8-4feb-a3d1-4437db915980"
        },
        "item": {
          "id": "ef4312ff-5169-4051-8aa3-fd2378a957f9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4a5d773d-c2f6-4941-9a17-a3663c0b4c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b57b39-67fa-4862-9dad-93909047e9ae",
        "cursor": {
          "ref": "a1a18d53-dc0a-47f1-8f5b-669141a5c130",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "11968662-2eda-45f0-9a49-0dd4542e7f09"
        },
        "item": {
          "id": "f0b57b39-67fa-4862-9dad-93909047e9ae",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6c109ba5-4a9b-43ed-abb4-438b1227556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f3ef2a6a-c921-4ff0-a979-0137ea0d51b7",
        "cursor": {
          "ref": "fa297fb6-f888-482a-8e72-8d8af69f6aae",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7441952a-af95-43ed-bdf0-b20a8a66b11e"
        },
        "item": {
          "id": "f3ef2a6a-c921-4ff0-a979-0137ea0d51b7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f0854690-d76d-4a9e-b841-af119da2d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "73510fe2-e7d7-415f-aee7-8a63f22329f2",
        "cursor": {
          "ref": "b070713d-b3d6-4a11-831a-64a340756786",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9e77d8b3-402a-4407-8cab-9d7ed346f7ff"
        },
        "item": {
          "id": "73510fe2-e7d7-415f-aee7-8a63f22329f2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "42a232f6-b283-4437-a0fe-162c448e7467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "46b79a0b-f5d2-4bc0-9935-08c0a3a931d3",
        "cursor": {
          "ref": "b31d4296-354f-4616-8429-dce5a7d30f77",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63e856f9-35ac-4174-8768-86135c6db2c5"
        },
        "item": {
          "id": "46b79a0b-f5d2-4bc0-9935-08c0a3a931d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7076ad49-b94f-4562-abcb-d1e2dab9848c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d3cdcf7d-702a-40e6-ac51-d1132ad5ebbb",
        "cursor": {
          "ref": "bb574262-1137-45c7-bc38-0caf9c1cebf2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ed195d3e-5bec-46ee-a464-5c06edb022c1"
        },
        "item": {
          "id": "d3cdcf7d-702a-40e6-ac51-d1132ad5ebbb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a6420ef9-50fe-440d-b9df-0101a2654adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d0459c83-b654-475a-909b-2d08a87ee7ac",
        "cursor": {
          "ref": "839e9d8a-7db5-4bf4-8f68-d4d5b6189c0b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dde46891-e47a-494c-9598-e62d50649ab8"
        },
        "item": {
          "id": "d0459c83-b654-475a-909b-2d08a87ee7ac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "98e4b4c3-b721-4ed8-b96a-78ca23159e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d3a7d2d2-c404-4ba2-9f13-5282a48550b2",
        "cursor": {
          "ref": "c5718fcb-3f3b-48bb-b52f-43ffccad7dc2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2f760b32-758a-4805-ab83-470e70e78fea"
        },
        "item": {
          "id": "d3a7d2d2-c404-4ba2-9f13-5282a48550b2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4b1d4b7a-2c4c-44e1-8708-454abf3621bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f152a061-8553-4fb5-aaf7-dbfa40b6bea7",
        "cursor": {
          "ref": "a4984747-ec99-4974-b437-0bcb022284e9",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "128c85e8-5ce2-4fce-9fe0-f53b1caf4e6c"
        },
        "item": {
          "id": "f152a061-8553-4fb5-aaf7-dbfa40b6bea7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d16f31c4-8a53-4aa8-9ff7-7b25ab23c54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbe037f-bc65-482d-bf24-59de473a45e3",
        "cursor": {
          "ref": "3c21262f-158b-4960-ac3e-9ca0c42ca955",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "33fbd8a9-f10b-484f-ab23-93b97b3a4fd6"
        },
        "item": {
          "id": "edbe037f-bc65-482d-bf24-59de473a45e3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70ffd33a-cbe4-447b-b7e1-e326b69af294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64b0905-97d0-4717-a6f6-737fe517b857",
        "cursor": {
          "ref": "5220159b-66ef-4d46-b40e-9706577b1823",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a6a5e570-4dfb-4ee8-b2de-ccb1f05d033d"
        },
        "item": {
          "id": "c64b0905-97d0-4717-a6f6-737fe517b857",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "584edab3-0c08-4f01-9622-4db866163210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51485ee4-92ed-4fa6-9c9d-a46b853cb6b4",
        "cursor": {
          "ref": "9a40956c-1a5d-49b1-8006-711c9dd614c9",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5b497c63-f721-40e9-8232-f455e657aab8"
        },
        "item": {
          "id": "51485ee4-92ed-4fa6-9c9d-a46b853cb6b4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7bac1193-3fc9-4711-afa0-374fa4104309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77699475-2316-4042-a8e4-156aa25462ec",
        "cursor": {
          "ref": "f805fb7b-7002-4f56-85f9-0199fed2020c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f96f94da-2cf6-4b1f-aee2-b371efb54d6e"
        },
        "item": {
          "id": "77699475-2316-4042-a8e4-156aa25462ec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d518662a-cadb-4b96-832d-690c8964d542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d674290-a171-4c5a-b655-2dc37d041d25",
        "cursor": {
          "ref": "683c4d28-f010-4b2b-baf0-72ba7008cac7",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4d850c7e-017b-4a23-9e1e-829a41788322"
        },
        "item": {
          "id": "4d674290-a171-4c5a-b655-2dc37d041d25",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec224dac-a9ee-4cc4-ac5c-1d0f682d92ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a6ad36-8571-49e6-a266-fb7419373613",
        "cursor": {
          "ref": "3e830c9b-356c-40aa-b566-639e94b75202",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a702c7ae-a7a3-412a-ba2f-5548680eaf1f"
        },
        "item": {
          "id": "b7a6ad36-8571-49e6-a266-fb7419373613",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "050ec7c3-ec6f-4dfc-8006-f58c0bc9b150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f236d20-9980-4ddb-a48a-fcfcda9a6cbc",
        "cursor": {
          "ref": "aab03bc4-aaba-42d6-81ae-47dcb4faffe4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea51f350-a8d5-44a7-853a-924781747d84"
        },
        "item": {
          "id": "8f236d20-9980-4ddb-a48a-fcfcda9a6cbc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b214e19a-d5de-4bbe-9516-b4209f329f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b22b264-05c6-45e0-9b12-3a6a2e61491a",
        "cursor": {
          "ref": "90d784f0-8841-47e8-b0f6-5a5ade624f62",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "acbef58c-fbb1-4046-8c83-c0ceafd88eab"
        },
        "item": {
          "id": "4b22b264-05c6-45e0-9b12-3a6a2e61491a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9264d63c-a849-4943-bb7f-b07a6d1c7d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed173f1-bcc6-404b-8d44-995331c13d6b",
        "cursor": {
          "ref": "c7ac36d6-10b1-4a1f-845c-a75045449a08",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "058d7124-6479-49d1-bf50-257ecc173675"
        },
        "item": {
          "id": "0ed173f1-bcc6-404b-8d44-995331c13d6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "78092f77-8ca8-4c12-a883-254402018b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deae99a5-9914-4ccb-87e1-ad9fb537aee4",
        "cursor": {
          "ref": "c7a7aef3-f06b-4d63-8b66-1f80330521db",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "87f72938-0454-4878-b3ff-811008428101"
        },
        "item": {
          "id": "deae99a5-9914-4ccb-87e1-ad9fb537aee4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "57e55b0e-cb10-47fe-9539-abc3d6c1e50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc100e-eae6-4435-92bc-ba364bc0de5a",
        "cursor": {
          "ref": "5e1639e0-ceda-40aa-889c-8320ed552f57",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "bb671411-8e6b-48d0-9d30-fc7b06168253"
        },
        "item": {
          "id": "dfbc100e-eae6-4435-92bc-ba364bc0de5a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c74cb1eb-c7d6-4a4f-ac36-80ea2fe5035c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca732adb-8b03-4057-ae24-57a3a0492b6a",
        "cursor": {
          "ref": "de6ae548-2b67-4673-b280-d853f53045c8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "aacfa248-d3dd-4baa-abc3-de28d2e930eb"
        },
        "item": {
          "id": "ca732adb-8b03-4057-ae24-57a3a0492b6a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e39815ce-9e43-485a-bd7b-406bcce07853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2284d8e-28ea-40eb-9e1d-ee682cfe5fbc",
        "cursor": {
          "ref": "d629062f-f6b8-4ab3-a3d0-1681a4090e10",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "469e650a-c367-444b-93fd-c6d367591963"
        },
        "item": {
          "id": "d2284d8e-28ea-40eb-9e1d-ee682cfe5fbc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7ac5c073-d37b-4f13-956c-006f1249bbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e007f906-9a95-4930-aaee-e5dd14c86688",
        "cursor": {
          "ref": "27cf8ae3-6d8e-494c-a4d5-2cefe7708016",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e2c8a4c8-eac7-44ec-bc85-bfd26f63ab9c"
        },
        "item": {
          "id": "e007f906-9a95-4930-aaee-e5dd14c86688",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4273e871-7ece-4ed9-84b5-1d93b9432601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55003e8b-a296-4215-b4e0-6f17e25bb94e",
        "cursor": {
          "ref": "cf654f85-2cea-4829-9e37-5f31efddd810",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8007a914-8249-4295-a906-1c06b50ed97a"
        },
        "item": {
          "id": "55003e8b-a296-4215-b4e0-6f17e25bb94e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b562418-3b98-41b7-8547-b09cd57a8786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b5c690-f8c9-463f-9c23-2378884875d7",
        "cursor": {
          "ref": "d04c6ba0-da3c-422f-a102-d41ec47765cd",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ae961c5-8007-47af-b652-caab749f4282"
        },
        "item": {
          "id": "09b5c690-f8c9-463f-9c23-2378884875d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84e9f891-b7ea-441b-b7da-8aa2f387a5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdffdf14-d967-4d3e-a5f7-9376bd935b88",
        "cursor": {
          "ref": "4d4975b0-b40f-406b-86d1-b15d335d22fb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8131fdf5-fdbc-4a9d-bc64-9f9b82a2ffde"
        },
        "item": {
          "id": "bdffdf14-d967-4d3e-a5f7-9376bd935b88",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "05f519e1-d130-4080-901c-e1c8ca75cb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be662ba-4db0-4458-ab6a-ae1e0e694775",
        "cursor": {
          "ref": "b88d3174-50bb-4bd5-97da-66029f4ef56d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0ced016-2522-471e-a15d-76f6e362ca4e"
        },
        "item": {
          "id": "3be662ba-4db0-4458-ab6a-ae1e0e694775",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f5b258a2-0a99-4160-8d78-6b751d82f18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0fa7bf-59e0-4dc9-af58-1a5b042cb927",
        "cursor": {
          "ref": "142230eb-dbdb-4cb0-8e0a-c9f4d9478406",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5f82186d-da53-4af6-9027-12ca1cf1d91a"
        },
        "item": {
          "id": "ae0fa7bf-59e0-4dc9-af58-1a5b042cb927",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3dbe61d-5ed3-4dd2-b474-cb70790e81cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d3e9a8-7a46-46b2-ac8f-5401abdfe0ab",
        "cursor": {
          "ref": "68344781-bb38-4513-9ad6-09f744cf21b2",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2984ce2b-09b4-436f-afc4-7278b84d12ee"
        },
        "item": {
          "id": "f1d3e9a8-7a46-46b2-ac8f-5401abdfe0ab",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2c6dc16b-4202-42f6-a16f-c4da4ba259ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e412ba57-7335-4ef2-a538-e173248c71c7",
        "cursor": {
          "ref": "a25d3906-118c-4cfc-9619-f8ced83ebbb1",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "27af584f-7fce-4040-b717-672613eb27d3"
        },
        "item": {
          "id": "e412ba57-7335-4ef2-a538-e173248c71c7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6513064-4d5f-4150-aea4-47849de1af19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894094ce-e964-4cfc-b185-5a697b52cd1b",
        "cursor": {
          "ref": "29f29498-3ac5-46be-ae2c-f8ecef650542",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b934e8ee-e5e7-419e-9946-74f85ab74f79"
        },
        "item": {
          "id": "894094ce-e964-4cfc-b185-5a697b52cd1b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d9476168-e71b-4c6a-8ae2-8aac6fd2e13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2523d1a4-09a0-4e46-ac91-ce9c427f2182",
        "cursor": {
          "ref": "85d662ff-e5a0-4c46-9cad-56a3375fad6d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9fdfbf2d-723c-41a3-aef1-1e217c683ae7"
        },
        "item": {
          "id": "2523d1a4-09a0-4e46-ac91-ce9c427f2182",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "839d30a8-a43b-46aa-a159-f22fe665e9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea2ab8d-6528-4fc8-80a5-6aea80e66b31",
        "cursor": {
          "ref": "08d644e2-825b-4c8e-a2d5-664eb95d0178",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2faa8e03-3c9e-4280-ade9-223f4f190c7f"
        },
        "item": {
          "id": "8ea2ab8d-6528-4fc8-80a5-6aea80e66b31",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "278c6310-3959-4948-9ce3-19e9978b222a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f46045-14d7-49e8-8332-6cffba04e067",
        "cursor": {
          "ref": "bbfc2052-f782-4773-a665-39b43acbb39b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "83ceb7e2-b368-4cdc-85a9-54aa86199845"
        },
        "item": {
          "id": "07f46045-14d7-49e8-8332-6cffba04e067",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b49d36f1-3f58-404d-be81-36eb962e420a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3891594-86f4-412a-927c-10501b4cc0ca",
        "cursor": {
          "ref": "8b85fca2-b5fb-40bc-a862-283ba4ac494d",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fad8f101-5bc7-4112-a057-af87fd9372cf"
        },
        "item": {
          "id": "a3891594-86f4-412a-927c-10501b4cc0ca",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1ab0b2a6-f794-427a-89c4-61c25b305b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e0531-22e8-47d6-8fb2-59e763e21cfe",
        "cursor": {
          "ref": "0d967374-b222-431f-914e-a4cea86c31dc",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f4e0394-99fb-41eb-bada-477194fcb188"
        },
        "item": {
          "id": "057e0531-22e8-47d6-8fb2-59e763e21cfe",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6fdd5e61-ddb6-4889-ab30-cc766bcac2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf2810d-bd3b-4072-9e7e-a9f15a1337ab",
        "cursor": {
          "ref": "52e8815b-de1d-46b1-9442-a7a5e523bf2e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "562d343c-6321-4a99-bb38-cc320074fea5"
        },
        "item": {
          "id": "edf2810d-bd3b-4072-9e7e-a9f15a1337ab",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff526843-6db8-4d67-8ed7-1189d6007bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7380ae81-b466-4117-8d6d-73ed4066ab57",
        "cursor": {
          "ref": "f13501b0-2d3b-4b4b-bda1-10a4cd28c7ea",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a43e1be6-efe1-41bd-b133-09b7e2460532"
        },
        "item": {
          "id": "7380ae81-b466-4117-8d6d-73ed4066ab57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c79dbd33-c3ae-4967-a42c-2ac4ec2e10a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb5983-32f6-4042-b2a2-eeb68cc6f567",
        "cursor": {
          "ref": "5cd767f1-8076-4bb6-b0b6-4ba153e237bc",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dd9cbc0b-01b3-4b2a-ac31-07510b73bbf2"
        },
        "item": {
          "id": "45eb5983-32f6-4042-b2a2-eeb68cc6f567",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fd056a4b-703e-4615-a7a2-31b09d3e349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40453bc3-e697-4629-922c-4cb9d55b08b5",
        "cursor": {
          "ref": "638b78a5-654e-48c7-b19b-14cf32880807",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "010950bf-9b92-41e4-aaa9-aafa57a0535f"
        },
        "item": {
          "id": "40453bc3-e697-4629-922c-4cb9d55b08b5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c614d686-a8eb-4384-992f-ee77e63a3d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8c9f3f-2e5a-42ad-95d4-ba12646d646d",
        "cursor": {
          "ref": "0c354e47-513a-46a0-a94d-544e706dd5d3",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8956b5b-017a-4688-aff6-edd45ede4986"
        },
        "item": {
          "id": "0d8c9f3f-2e5a-42ad-95d4-ba12646d646d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e039bd11-b1bc-4a4f-95fd-ab0a794dada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582ccc31-cda9-43aa-be27-1ee121d4a092",
        "cursor": {
          "ref": "07416ccc-1794-48ae-ab46-f7bdc7271f3e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fc50c728-ae05-43d8-a076-0205950bd76d"
        },
        "item": {
          "id": "582ccc31-cda9-43aa-be27-1ee121d4a092",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e9719cc0-046d-4460-97c8-ba13154fc3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4201a0a7-f5f9-42ac-8879-7692920f80a4",
        "cursor": {
          "ref": "078acf14-e6fe-483b-b334-c37c281b8254",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "23aa08db-9f8d-4dfb-af51-c27fbc9c7f8b"
        },
        "item": {
          "id": "4201a0a7-f5f9-42ac-8879-7692920f80a4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0b455d2f-561e-4f15-a5a7-12183f04224d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09862c03-45b2-459d-82d8-470cd2289514",
        "cursor": {
          "ref": "ae3750a8-b55f-4b56-8bc6-e5b370e6896a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c55f85c1-3071-4c3b-9323-308e6b36d0c5"
        },
        "item": {
          "id": "09862c03-45b2-459d-82d8-470cd2289514",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e9824c91-5236-4a16-a366-aacce6e97b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11599dd-ba38-4c80-b332-04dbc4f8b01a",
        "cursor": {
          "ref": "fadeb7ac-9427-4e15-8343-0049d1a041ee",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7a8cb162-7f78-435f-aae9-8dcefe20ab74"
        },
        "item": {
          "id": "f11599dd-ba38-4c80-b332-04dbc4f8b01a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "31d07519-c9ac-4f02-9272-c17ad7e5a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b554cc7b-589b-478f-a7b6-9cdb2346a583",
        "cursor": {
          "ref": "d69cd030-f376-47a2-a641-8bf4586d0796",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8775ee2a-c430-4d26-821b-973d29c83c6b"
        },
        "item": {
          "id": "b554cc7b-589b-478f-a7b6-9cdb2346a583",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "25a3e22c-32f8-4743-95ee-35f4434d7a73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e59bc9-f0d3-4de5-b1b5-6c7f563748c0",
        "cursor": {
          "ref": "7df19974-6b39-41b4-9291-60abf5bdddc0",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0c68e288-381a-4244-bcbf-df54ca35818a"
        },
        "item": {
          "id": "78e59bc9-f0d3-4de5-b1b5-6c7f563748c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3059a459-9f18-4a45-9877-a9c409151531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3445496-1b71-44c4-8bca-b723f58d28c3",
        "cursor": {
          "ref": "7f854192-202c-4bd8-8c52-93721950a36b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "64f34cd6-7ec2-450e-8314-d007438b388e"
        },
        "item": {
          "id": "e3445496-1b71-44c4-8bca-b723f58d28c3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e55225e7-9490-4ae6-9acf-f1f61a450acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6718ecc8-9fad-44f5-b70a-2002c5d83bd9",
        "cursor": {
          "ref": "f66f43ad-0c2f-4381-874c-a79902565097",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ca3b77d-69b5-4522-8e0e-9826a8501cc8"
        },
        "item": {
          "id": "6718ecc8-9fad-44f5-b70a-2002c5d83bd9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "189eaa7f-d089-40a2-92b1-1fe502b5d602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbcbd5c-3d82-4a08-b924-6a609a812a52",
        "cursor": {
          "ref": "158eca55-2da0-49e1-bae7-e842771f31c0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d3cdaa84-cc7e-4911-9794-20a302c5eae2"
        },
        "item": {
          "id": "3cbcbd5c-3d82-4a08-b924-6a609a812a52",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dd73786d-1609-4b27-b924-8180cd4d5ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d0ce3a-96e0-4225-aceb-8e185b679570",
        "cursor": {
          "ref": "96fecbd0-b786-4299-90d7-1d8709d2870b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "545a7ab8-d333-4e70-b781-b827af43be06"
        },
        "item": {
          "id": "b5d0ce3a-96e0-4225-aceb-8e185b679570",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "439b23f8-c326-416d-b8ce-265e96640bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117c56e3-3398-4b6b-bc37-8deda6f10d68",
        "cursor": {
          "ref": "b9180fd4-6138-4c3d-aeb8-903ae6b07e5f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f89d58c1-df47-44cf-a977-bc30660167f8"
        },
        "item": {
          "id": "117c56e3-3398-4b6b-bc37-8deda6f10d68",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a5cd7f9a-24e5-4744-b85a-69861aed6c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054979f3-6ade-493d-a433-df6e4458d7ed",
        "cursor": {
          "ref": "0d63cc7d-2b18-429b-b796-69b554752b4c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "11d4a570-b97a-4f65-bf58-a5d1993acfe8"
        },
        "item": {
          "id": "054979f3-6ade-493d-a433-df6e4458d7ed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5b5e6034-911a-4b08-a24a-598c045c5de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c86394-8b1e-49cb-b6d1-1f60cd97ac42",
        "cursor": {
          "ref": "8f237953-ff49-4af1-9760-78478a388d25",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "af25e077-5ef1-4c0f-bd33-fb53b0431477"
        },
        "item": {
          "id": "f9c86394-8b1e-49cb-b6d1-1f60cd97ac42",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "27cabef4-9c05-4214-8d48-c8d911f447e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1507a6ac-e7ef-4cef-bed7-c8a79f5eafe4",
        "cursor": {
          "ref": "cb92f46e-fa43-4c2c-8641-114b1cfc047b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0a498c96-b926-479f-9382-f8e206856bc2"
        },
        "item": {
          "id": "1507a6ac-e7ef-4cef-bed7-c8a79f5eafe4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "79a34832-4695-4ccc-98a5-a1b21f9bc0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da9d038-356e-4e24-a816-a02800453bc2",
        "cursor": {
          "ref": "39046e19-dee2-404e-b5af-7b1e469cf332",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c9b714dc-3e62-417e-844e-b3592126cfe1"
        },
        "item": {
          "id": "9da9d038-356e-4e24-a816-a02800453bc2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fe6e3480-e001-48bd-afcf-1b37ed8d2244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3452971-5642-4a08-95c4-4ee25e2c0bb5",
        "cursor": {
          "ref": "a2eece92-9a4c-4e99-b1a8-75a824f87e4f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1350a2c1-b7d2-4e7a-86b3-35f2f76e68a8"
        },
        "item": {
          "id": "d3452971-5642-4a08-95c4-4ee25e2c0bb5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7347b572-250e-4fd6-a9d3-caffd2525962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16b6187-7e8d-4f80-a99a-16c759c3f2a8",
        "cursor": {
          "ref": "acfdb160-c327-412e-a6ce-de54c157e353",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d0d64561-5097-4793-9b58-76497d48ef0c"
        },
        "item": {
          "id": "c16b6187-7e8d-4f80-a99a-16c759c3f2a8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3256cedd-35b5-4e1b-b943-ef3c84b05070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b324a6-ba13-4246-8546-a54bac6fbc7d",
        "cursor": {
          "ref": "06a304bc-fb1c-46b1-9c92-056723436371",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8a5a8bc2-1d1e-4e2d-959e-ec70c8d9f737"
        },
        "item": {
          "id": "85b324a6-ba13-4246-8546-a54bac6fbc7d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "19f49777-1144-4b05-a1f4-9f3eb99a9fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92de91ee-108c-4dc6-aac8-3cc1d1323d35",
        "cursor": {
          "ref": "ea6c7654-a0dc-4441-860f-e8957c0fc0da",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "728e89dc-ff5a-45a0-b369-a5a8dd5ae776"
        },
        "item": {
          "id": "92de91ee-108c-4dc6-aac8-3cc1d1323d35",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "80919aed-0c0b-4cb6-a4e8-d92c5059a913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c593597d-162f-4617-9905-625ba12a4d28",
        "cursor": {
          "ref": "3f431086-34a2-4fd5-8ebe-f650a3ad247b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d4e9cbf8-750d-4898-b27c-1c7df8e56531"
        },
        "item": {
          "id": "c593597d-162f-4617-9905-625ba12a4d28",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "433c4abe-cfaa-42fa-aa41-1e015d070c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84953aa-e261-4f1c-9070-ffc12d840e35",
        "cursor": {
          "ref": "77d107dd-0d71-4302-a92c-a863880023e1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "afb6178f-65f7-4190-a7db-70885f883302"
        },
        "item": {
          "id": "c84953aa-e261-4f1c-9070-ffc12d840e35",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20ac4d90-1f2c-4d53-ab8f-f974724b60c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db10c601-1718-46e6-827d-9ad4152b4c05",
        "cursor": {
          "ref": "484c4d8c-dfc3-44d7-8e1d-d3d7ce02c8c0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c84594e7-8ba0-4367-913a-fb80dbb5ce12"
        },
        "item": {
          "id": "db10c601-1718-46e6-827d-9ad4152b4c05",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ddd288c4-3436-4e42-969f-529c1988aac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ce6dbf-1f00-4fa4-a54f-570579c2b52b",
        "cursor": {
          "ref": "f4e875dc-f1dc-4a05-b583-95a007a6e58f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "88ff619c-1fb9-4708-b318-9f3da9dfe7a1"
        },
        "item": {
          "id": "18ce6dbf-1f00-4fa4-a54f-570579c2b52b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4f88d688-8192-4f73-a2c1-f5f54a4ffc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0221bb-76ec-4106-979f-a90890b7bd42",
        "cursor": {
          "ref": "02315805-a0b8-43de-86d9-1ceb56eec9b8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "62476836-ca4a-41de-8dad-616814094eab"
        },
        "item": {
          "id": "3c0221bb-76ec-4106-979f-a90890b7bd42",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4889cd7d-d56c-4acd-8525-60acd3956e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ca50a6-1c51-4d8d-a284-50473637a7b7",
        "cursor": {
          "ref": "b49d99dc-4029-4307-bc19-9902b97368d8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e151c610-146a-412c-bfda-12bab8cb0798"
        },
        "item": {
          "id": "82ca50a6-1c51-4d8d-a284-50473637a7b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cdd5c48c-2d88-4036-8d38-26481dbefa29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da815312-282c-4a01-8204-d814ec83efef",
        "cursor": {
          "ref": "bf248091-a584-44fe-a47d-1782a05e0eb4",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3e55c2a3-29cf-4de6-a2a4-e6bd74c3293a"
        },
        "item": {
          "id": "da815312-282c-4a01-8204-d814ec83efef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a9bf9087-589a-493b-80f5-8640c765841a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703746cd-7fa2-48df-ad0d-61559db3ba66",
        "cursor": {
          "ref": "d118178e-8494-48a3-a4ee-f2b85734e871",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eca57012-896b-4b6f-ae80-f6c736246e69"
        },
        "item": {
          "id": "703746cd-7fa2-48df-ad0d-61559db3ba66",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e13f900c-c1d2-49a7-a419-4226f819b346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ffd32f-f719-4e72-a8ef-b6833d391c37",
        "cursor": {
          "ref": "e93b0e3c-0da4-4157-86e6-81514650fbf1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "83953b2b-b22e-49e1-804f-59d0e6751d02"
        },
        "item": {
          "id": "68ffd32f-f719-4e72-a8ef-b6833d391c37",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "84ac56ea-9582-40ee-945e-845dbcb555fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e9d628-2ca1-4bf4-ba3f-c88622a3049b",
        "cursor": {
          "ref": "51191711-3cc3-42bc-80b9-d1cc64d90570",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7d6f1dfa-3375-4f99-832c-7cfa52a4defa"
        },
        "item": {
          "id": "d6e9d628-2ca1-4bf4-ba3f-c88622a3049b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a60d9759-afa3-4d90-a085-16e37bbc9c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26db6686-5d1f-4e03-b60e-03ed02bd337b",
        "cursor": {
          "ref": "38f11f54-2b8c-42f5-93dc-f601b57d2622",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "105f4a90-771b-4067-8435-62103b080acd"
        },
        "item": {
          "id": "26db6686-5d1f-4e03-b60e-03ed02bd337b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "501a83e6-f16d-4d7d-8e10-384655399bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0718d47a-f803-4eb6-9dbd-f740ad40b69b",
        "cursor": {
          "ref": "fef6ec64-3e26-4083-a6b9-1c16a22685cd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c288b7b3-9b5c-4b71-b384-30f0ab05c3ab"
        },
        "item": {
          "id": "0718d47a-f803-4eb6-9dbd-f740ad40b69b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4c6de486-4303-4955-9ff2-9e0471f63975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c1a397-087f-495c-a8fa-022dfd39c2c1",
        "cursor": {
          "ref": "fdb9a576-7307-4014-b34d-ad4d3701ae08",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bd9b586f-5976-4aba-bdbe-a7252b3e8648"
        },
        "item": {
          "id": "c8c1a397-087f-495c-a8fa-022dfd39c2c1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "03b15228-8cc9-47d8-947c-dc53890633eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7e9932-b045-42aa-a88b-2843ab105ca2",
        "cursor": {
          "ref": "6b541cc2-ce8c-4547-932a-e148dcbb58a8",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a5ad3360-5c66-4a7b-82a1-c74f8a8fa3e4"
        },
        "item": {
          "id": "1e7e9932-b045-42aa-a88b-2843ab105ca2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9ba95b3e-4413-4e3b-84e0-6e140660489a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b6e756-eacc-4de4-a2fe-bcb1aae28be5",
        "cursor": {
          "ref": "5a9268b0-e613-4ddc-9c19-bcf18fc998c3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "83bcf6bc-be0b-4bd8-9bde-598db18d881d"
        },
        "item": {
          "id": "f5b6e756-eacc-4de4-a2fe-bcb1aae28be5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "245baaa9-c786-4b32-9228-534bb68e1ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a440e987-436f-4c80-b3c7-69faef1e2f31",
        "cursor": {
          "ref": "4cc6ab9b-5552-4f87-ba75-b28d9c301749",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8547c36d-398b-4a5c-b82f-66b791db9a28"
        },
        "item": {
          "id": "a440e987-436f-4c80-b3c7-69faef1e2f31",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f8ec93b8-4a1f-4238-b0f1-7cabde5035d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a292c1e-8809-408c-82f9-127b7918a6bc",
        "cursor": {
          "ref": "db9f6f97-4964-4022-a287-0689b5d174c7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "689d29a4-ece1-4904-b6f3-280efe1a68dc"
        },
        "item": {
          "id": "8a292c1e-8809-408c-82f9-127b7918a6bc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7ead3572-2787-4a5d-ae0c-1a3f8c885746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6046c969-4944-4833-9a7e-5f090b1cd87d",
        "cursor": {
          "ref": "12eccf6f-fbb4-4320-a4ea-d9212dd6bf71",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "def2902c-1422-458c-bb71-4646f4c14f53"
        },
        "item": {
          "id": "6046c969-4944-4833-9a7e-5f090b1cd87d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ebddae9-0153-48e7-bb2f-b7ad422bb2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4cbf81-817e-4609-bfad-abda332d1743",
        "cursor": {
          "ref": "1d09b660-14ed-4ead-a74f-354e20a1e31d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b70bddfc-49ee-4760-a7a3-418e028d658b"
        },
        "item": {
          "id": "1e4cbf81-817e-4609-bfad-abda332d1743",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de2f8b54-8794-4140-9b26-5becca7a9af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a2ab48-88c5-4896-a02f-11d33bd53016",
        "cursor": {
          "ref": "31dec08a-fd8e-43ab-ae38-7124c918423f",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c204aa6a-1839-40ea-9bd8-161ccf3ca9f8"
        },
        "item": {
          "id": "e1a2ab48-88c5-4896-a02f-11d33bd53016",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "317e862c-d958-4070-a091-2b18ae78d00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceb0adb-0882-4f36-bb0a-28e96745d60a",
        "cursor": {
          "ref": "dff148c7-5427-4d8f-b612-916a4728f1a1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9071b5aa-540d-4005-9845-b78ba1cc1658"
        },
        "item": {
          "id": "3ceb0adb-0882-4f36-bb0a-28e96745d60a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f343a15f-0d29-48c6-9b9b-8eb696852c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3a3f87-8108-4fae-8ef6-5e2810d21231",
        "cursor": {
          "ref": "247a0b20-9f64-4fbd-9e5b-d8b32d645ecb",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7ab5e4e6-8906-4ab0-86e5-6dda119a92e7"
        },
        "item": {
          "id": "fa3a3f87-8108-4fae-8ef6-5e2810d21231",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b140c598-a995-4764-bf5d-64f4bc6d0894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb5899f-cb46-49d2-aa3e-6a8f2bdb4dcb",
        "cursor": {
          "ref": "004bef98-beeb-42bb-a344-129cd22d6c4c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "63c2a442-fd35-4fd6-975f-4dc34742ae23"
        },
        "item": {
          "id": "cdb5899f-cb46-49d2-aa3e-6a8f2bdb4dcb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9f6264ba-fa3b-42c0-bdd3-fe1ab2284b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d256cb8-81db-4304-9762-fbbe4c43d501",
        "cursor": {
          "ref": "8f71e117-fe81-44f5-8d66-2d2f738b1d40",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7ea2064d-1d95-484a-866e-b633aca2926e"
        },
        "item": {
          "id": "6d256cb8-81db-4304-9762-fbbe4c43d501",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6181abe5-e82c-4c8e-83f0-a900129f0431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4094186-f9ce-4bc3-a4cf-101e4dc5d662",
        "cursor": {
          "ref": "39c7086e-8914-46a6-8d3e-eed646c42153",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f03a1186-b24a-4f29-ace3-0578f8a8a21a"
        },
        "item": {
          "id": "d4094186-f9ce-4bc3-a4cf-101e4dc5d662",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "95cff096-38ac-409f-9e7f-a09b3a4a4448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15ea1b0-56ea-481e-a984-5ad107767f0e",
        "cursor": {
          "ref": "971ddddf-ac97-4e76-8d00-fef26b0886d5",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f8438695-29b1-4837-9f86-029e37e6cfa9"
        },
        "item": {
          "id": "e15ea1b0-56ea-481e-a984-5ad107767f0e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3045edae-7680-400e-901e-9056328ca9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd8168c-0a96-4bf2-a5f1-40fe70675baf",
        "cursor": {
          "ref": "0611b39a-fe3b-455e-9c47-16273b13afd7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "05cf5cb7-0c9f-458c-8be6-010c1fe140da"
        },
        "item": {
          "id": "ddd8168c-0a96-4bf2-a5f1-40fe70675baf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a39fdfce-f4f6-4347-b9dd-d47a3a089324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5d0fd6-c16e-4bfd-93c3-6923b0e02b5c",
        "cursor": {
          "ref": "14484d39-8d39-428a-a80a-dbea6069b3b1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6467713f-0111-454e-aae4-d4d445520b57"
        },
        "item": {
          "id": "fc5d0fd6-c16e-4bfd-93c3-6923b0e02b5c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1472846c-400d-45ce-a5a2-25c1e695b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4c4f7-0b45-431d-ba3e-9fab2c88d21a",
        "cursor": {
          "ref": "0bf1fa17-43de-49c6-b249-42ece28c3ea1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "699cf6db-5f59-4093-974f-5a03be232924"
        },
        "item": {
          "id": "0fe4c4f7-0b45-431d-ba3e-9fab2c88d21a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "53756f32-b50a-4396-857b-22ad2fc483ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c492f0-6787-425b-9f77-553d00844ea4",
        "cursor": {
          "ref": "9660d451-b68c-4c17-9b3c-88dd24415af2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cde0e17b-f20c-4bec-ba91-94dc7b9135e4"
        },
        "item": {
          "id": "a1c492f0-6787-425b-9f77-553d00844ea4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4b00d288-e55d-49f5-bd84-abe2ea4d0842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b346cc07-97b9-4620-9cc8-a4656d519671",
        "cursor": {
          "ref": "dc52733d-4463-424d-a1f7-6b35791a5a84",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b911b02a-9649-41b2-b3f8-4d7b10a040c3"
        },
        "item": {
          "id": "b346cc07-97b9-4620-9cc8-a4656d519671",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83ec97f1-2f19-464a-98d0-9e7cb47b4aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81936e1a-d6a0-4c76-a045-6724349c57ee",
        "cursor": {
          "ref": "b29ec732-2357-4703-808c-74a5ad0e6ed1",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b31a5c07-43e0-46b6-8e9d-3f855e392a30"
        },
        "item": {
          "id": "81936e1a-d6a0-4c76-a045-6724349c57ee",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fbba1edc-72bc-4d2f-91a0-c0e1ca44aece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6724eb-680e-4d7a-be73-22814b7e0016",
        "cursor": {
          "ref": "77ac8289-a889-4e68-95cc-163f70c9edf3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "21848754-b9cd-4ef7-ac0f-68ec87eab8c2"
        },
        "item": {
          "id": "5a6724eb-680e-4d7a-be73-22814b7e0016",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1177f4ea-63fe-45d6-a524-91c510d229d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c01368-68e1-4123-a290-502349b415b1",
        "cursor": {
          "ref": "ccbb8094-788a-434a-a079-996f5d9ef42b",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6950ce2c-895f-44e5-9128-109b763eb2fd"
        },
        "item": {
          "id": "97c01368-68e1-4123-a290-502349b415b1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a9e0dbc7-b094-46a4-b94e-51624d84bdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e44de8-6edb-4e0b-a973-ea8a22e55dfa",
        "cursor": {
          "ref": "688342a1-36a1-482f-8b4f-e192693b8562",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "380245b2-3506-4248-bfaf-5fc5dc1c959f"
        },
        "item": {
          "id": "28e44de8-6edb-4e0b-a973-ea8a22e55dfa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f9404619-453a-4f68-9f52-b6d9fea6586a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a16d8b4-2bfa-4858-9a56-62fe742947b1",
        "cursor": {
          "ref": "f1c6910a-76b1-43db-9f9d-e8d81bbdd690",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "11a9e3ba-3568-4f0d-a80c-2655cf3be64c"
        },
        "item": {
          "id": "4a16d8b4-2bfa-4858-9a56-62fe742947b1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9646f87b-bc54-4104-8956-aaf40d9dbb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3adf578-6550-483a-9dc7-e8395cc969b2",
        "cursor": {
          "ref": "6db231eb-af43-4d24-a73c-b0f1be084fc3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "35d1c290-79f6-4454-841c-a1ba4069cf7f"
        },
        "item": {
          "id": "c3adf578-6550-483a-9dc7-e8395cc969b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "41098278-d0d9-48de-81ae-10b25f614e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5592ea73-e29d-498e-af31-ca589862baa5",
        "cursor": {
          "ref": "21eb77ba-8915-432f-8f61-0d5586af12d8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ddc2b99a-9b12-4528-9682-cd22a15403ac"
        },
        "item": {
          "id": "5592ea73-e29d-498e-af31-ca589862baa5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1d80d023-3e46-4ed5-b351-2baa0287ef5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79f8e79-a329-470d-9cf5-4ecf45bf0762",
        "cursor": {
          "ref": "8c21695e-27b2-4434-b73f-9a504f5b3979",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f27920bd-f74d-4e50-9ca0-9624f1dbeaae"
        },
        "item": {
          "id": "a79f8e79-a329-470d-9cf5-4ecf45bf0762",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "77f7e1e5-6c70-4239-9c16-ce27f10783f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a85ffa2-85cf-42a2-b5c1-09a1071e6092",
        "cursor": {
          "ref": "de189432-75b3-403c-a7e2-1966ccbc86a2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3c26c115-ba30-4084-9c6b-522f586dccb0"
        },
        "item": {
          "id": "3a85ffa2-85cf-42a2-b5c1-09a1071e6092",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "004c4e78-5e0b-4070-997c-487cc91a3824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ebeed9-d50c-4610-b80b-0953d0df1deb",
        "cursor": {
          "ref": "7e4b81cf-4790-4da3-a002-de9dfbc3c48b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "686793ea-771a-4d1d-88d5-31f5acd862af"
        },
        "item": {
          "id": "d3ebeed9-d50c-4610-b80b-0953d0df1deb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bd90ecf4-865f-45e1-9468-fc566433aa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cc35fe-bd56-48d3-98b9-32e3f727edd1",
        "cursor": {
          "ref": "8a1f3979-16a1-4ada-80dc-71f132bf5e83",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7bec3f19-4838-4303-a24b-93f95635972c"
        },
        "item": {
          "id": "f5cc35fe-bd56-48d3-98b9-32e3f727edd1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b0de8b6-74f9-4e5a-861d-47ddebf0f990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d47bd6-6ab9-4ba2-af61-e926a2614c3f",
        "cursor": {
          "ref": "ced962aa-5e01-4e6c-879e-ef3ebbef8ace",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4348eb4b-e0cc-4df2-b121-8016faca1a0c"
        },
        "item": {
          "id": "c9d47bd6-6ab9-4ba2-af61-e926a2614c3f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cf1ba1c7-c1c4-43c1-8dd3-48ea4f36a66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644bdac2-08fb-4024-9ec8-924e3c248d95",
        "cursor": {
          "ref": "16475b23-97aa-4c0d-be6d-9c48c674cc9c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "40ac1ff0-c86e-400d-9df2-5babbfb1bce7"
        },
        "item": {
          "id": "644bdac2-08fb-4024-9ec8-924e3c248d95",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dfe5948b-b583-490e-ba2e-c9cd8cf5f24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cf1157-d6df-4c40-8e79-aed37612ec96",
        "cursor": {
          "ref": "6026a572-8a59-4939-b844-8b171eacf122",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d49e4b16-8948-4bcc-9608-9209d3f8d72e"
        },
        "item": {
          "id": "45cf1157-d6df-4c40-8e79-aed37612ec96",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "793ace5f-a78a-4f88-ab99-cf17f454722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5a747-9c7e-46b7-a3a4-17320af1e6a9",
        "cursor": {
          "ref": "2829bca8-1f78-4ac7-a3d7-0338ea57f083",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5481f5fc-5e36-4b2f-8ecd-35d78943cf14"
        },
        "item": {
          "id": "acd5a747-9c7e-46b7-a3a4-17320af1e6a9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b6c7184e-c59d-43ce-9dd1-e502f08af482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b65934f-58a7-4fee-8d93-029488d6900c",
        "cursor": {
          "ref": "26edaf07-2e1d-4985-b2dc-1b95ed0b607b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "57be044e-067c-4771-ac74-738346670424"
        },
        "item": {
          "id": "6b65934f-58a7-4fee-8d93-029488d6900c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4ed4f258-4cd3-44e4-9ee6-5411f6bb7170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fe852c-588c-4e52-bc3d-39ecde6208d4",
        "cursor": {
          "ref": "ef7ce329-ad5b-432b-b756-bdc17bd1e08b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3cc524f7-f365-4f52-900b-14b396dd3b74"
        },
        "item": {
          "id": "95fe852c-588c-4e52-bc3d-39ecde6208d4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4488e0ef-10ce-488d-9eb9-94a2c989d848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433c524c-21e5-4298-9fd9-a9119f341a67",
        "cursor": {
          "ref": "0fe3e1af-266a-443c-a29e-fde4d96c7a55",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "491a210d-e173-4790-a525-0ef0f5dc063d"
        },
        "item": {
          "id": "433c524c-21e5-4298-9fd9-a9119f341a67",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a4f8aa1f-8b48-428f-928b-05470f3ba2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c86e8e9-14d0-4d81-9459-11da612625bf",
        "cursor": {
          "ref": "02a698e6-17a6-4bb4-82a8-e8841b5f88f2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2209237c-c24b-4444-917a-de5a0f827c2a"
        },
        "item": {
          "id": "7c86e8e9-14d0-4d81-9459-11da612625bf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fe249735-36a7-4238-ac7f-3c34685ef75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893f862a-dd4b-4a13-b88a-e641edc75d7a",
        "cursor": {
          "ref": "7769105f-fd8e-4803-a278-19b01724c79d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "450bff63-4cad-4b7e-9ae4-5936f55f0992"
        },
        "item": {
          "id": "893f862a-dd4b-4a13-b88a-e641edc75d7a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "63d4f8a7-8b63-431d-b3a0-17bc8317ef14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d216e06-85b8-4ebe-a1c7-fc3587fd0c41",
        "cursor": {
          "ref": "41e7f7fd-fbdb-41ed-a3f2-2ba7a89f5828",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a58d025f-ac14-4379-8943-21d245537239"
        },
        "item": {
          "id": "4d216e06-85b8-4ebe-a1c7-fc3587fd0c41",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4a64539f-7933-427f-b61f-783f4ed19ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b233637-cb07-4b85-b8d8-74c8a887608b",
        "cursor": {
          "ref": "41f0aa30-d7d7-4e85-98cc-37534a337423",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b2f389cc-5c5c-4633-a8eb-6159492869d4"
        },
        "item": {
          "id": "8b233637-cb07-4b85-b8d8-74c8a887608b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dca4998c-40e2-4070-a577-561ac10a0035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5f2a7b-ace3-4689-9c74-b8863fefad27",
        "cursor": {
          "ref": "c9bdec63-0762-4864-a857-ac4a131d0ecb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d04132ea-cac0-4c3d-bfbe-e65367095b6a"
        },
        "item": {
          "id": "dd5f2a7b-ace3-4689-9c74-b8863fefad27",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "42f073ae-7c6f-4f9e-9b67-01d722ed9e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9f4c2b-d941-4ad9-92de-3b9480eea614",
        "cursor": {
          "ref": "dc3f5571-8745-4a29-a5ee-ef49957158ae",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "db053a23-dd42-495c-97a2-ea0821a8a150"
        },
        "item": {
          "id": "eb9f4c2b-d941-4ad9-92de-3b9480eea614",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e2dcc9f8-40fa-4688-8aff-de37225c4cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a8cbb6-39b6-4422-82d1-32d6878e7f38",
        "cursor": {
          "ref": "463dc3ed-9c54-4fff-8ff0-c4ce1b291abc",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2f60474b-3fb8-48ac-aad5-45f74e369791"
        },
        "item": {
          "id": "67a8cbb6-39b6-4422-82d1-32d6878e7f38",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3fccca28-9f34-46c2-ae3a-0cf7b3c6d3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdefa6d6-75db-475e-86fc-f21f8f1c9af3",
        "cursor": {
          "ref": "123fe49c-d323-44fa-a4cb-858a44bff6ef",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fc95477d-6c84-47f9-bba2-06479bf376e2"
        },
        "item": {
          "id": "cdefa6d6-75db-475e-86fc-f21f8f1c9af3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5463c100-a5de-43dc-8a98-0b9438faa206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d9983b-fbf7-4c86-80d1-8620e620bdca",
        "cursor": {
          "ref": "5fa20ec0-911c-47dc-8e84-529dc555c818",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c97e6135-d73a-4f47-a29d-e009505f4eab"
        },
        "item": {
          "id": "79d9983b-fbf7-4c86-80d1-8620e620bdca",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e6d0dd23-4363-40b3-a3ea-9ca2dc19239c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bca442-cecf-4ccc-bd88-8265a29309a6",
        "cursor": {
          "ref": "a7b773f9-f85d-478c-80d0-cc25d5294866",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4e4aca43-b09c-4509-bce2-0f493e1f3423"
        },
        "item": {
          "id": "34bca442-cecf-4ccc-bd88-8265a29309a6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "14c922c0-2eaa-4571-9a63-d0af9cf279c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2f0011-c3ac-460d-8acb-5ab4714bd0a2",
        "cursor": {
          "ref": "a42eb499-26e3-4999-8d8b-645cc4b08d40",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5c07327e-713b-48f9-8c43-e37c1e0b7fd1"
        },
        "item": {
          "id": "8b2f0011-c3ac-460d-8acb-5ab4714bd0a2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9d8f0caa-51fa-45b6-b63a-340ab1977e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e52623-e36a-4862-bf11-143cae013c28",
        "cursor": {
          "ref": "7ca64ed6-102b-4ae9-976a-3bc8008423a9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cefc8f9a-36e2-4287-b87c-a459f71a4262"
        },
        "item": {
          "id": "d7e52623-e36a-4862-bf11-143cae013c28",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aa95253c-ea27-4da8-bc6d-d7e5caa26e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb58a93-a089-4997-9344-b3053a299253",
        "cursor": {
          "ref": "f4605969-f4e0-4349-81c0-130f607d79f5",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c5910ca3-da8a-45d3-95dd-d6e83cc274c5"
        },
        "item": {
          "id": "fbb58a93-a089-4997-9344-b3053a299253",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "10f6651b-3009-4842-9be8-6267cf3ed6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3545f202-9db1-4fce-ac69-0654f136b44f",
        "cursor": {
          "ref": "943c63fb-8409-4fd1-a9ef-ec5975f98c4c",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "48c5a8a6-c808-44ca-9e00-08ce9302e44a"
        },
        "item": {
          "id": "3545f202-9db1-4fce-ac69-0654f136b44f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c150e3ef-c699-4eb6-a79b-def8c3888e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77aac0e-5f90-4132-8272-5118c920a443",
        "cursor": {
          "ref": "b084169c-df75-48b3-8b78-1252eab31082",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "529328ae-9fdf-4f3f-adcd-fe9a8b4276ef"
        },
        "item": {
          "id": "c77aac0e-5f90-4132-8272-5118c920a443",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e453bfba-71a4-4b78-ba71-c4f3448b9bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed0986c-27b6-4868-84be-9be049fb96cd",
        "cursor": {
          "ref": "aafdd9ba-8fd3-418f-9ac7-88c43060d4be",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e537b942-c985-4ead-9141-84606a9bc15b"
        },
        "item": {
          "id": "1ed0986c-27b6-4868-84be-9be049fb96cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "87ec5aca-cfcf-4c3f-9111-8771557e164e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a9165f-11cd-4dc7-9ba2-fde556e036b5",
        "cursor": {
          "ref": "fd35e1f6-2fb5-4de0-8ecd-5639e135ed52",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "048dee87-eedc-456b-92f0-7248934cccc8"
        },
        "item": {
          "id": "32a9165f-11cd-4dc7-9ba2-fde556e036b5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a67f9970-e250-4158-8170-7270d1cdd0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3641864b-8019-4ee8-b504-ee0462ccca93",
        "cursor": {
          "ref": "cd04bf84-7899-43e4-a88d-0b4ec1d9cfde",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "66e1946d-b0dd-4f55-b91d-f66382ab9fb5"
        },
        "item": {
          "id": "3641864b-8019-4ee8-b504-ee0462ccca93",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c8bb8efc-de48-4ff0-ac1a-866802d40354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab35b375-1405-4af7-9988-904cde075d9c",
        "cursor": {
          "ref": "a67e339a-b92f-49da-b577-e6b709dcfc38",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8cb5e89f-966a-4f84-9583-ab576b6e3d0f"
        },
        "item": {
          "id": "ab35b375-1405-4af7-9988-904cde075d9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "56ffcae8-e9f3-4145-aad9-541224cf963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a36bd3c-1880-4852-8a5c-467858700eb4",
        "cursor": {
          "ref": "64d94ec3-8b3f-4a6d-b4fd-85b477fa77bb",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6893ceca-6517-43f5-a869-075f4381860b"
        },
        "item": {
          "id": "3a36bd3c-1880-4852-8a5c-467858700eb4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a2f083e5-cf85-47b9-9865-c4893b02621f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2bef8d-8bc2-4f2e-87bd-e4240d2b0e1a",
        "cursor": {
          "ref": "1628acfc-9997-4f65-ac75-ed2f6b2d7120",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "32ed9e68-e163-4871-b9ac-a6769f344099"
        },
        "item": {
          "id": "7c2bef8d-8bc2-4f2e-87bd-e4240d2b0e1a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "42ea5514-4c7a-4ade-852f-ff4bd39392ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c1cbf1-8915-4d3e-bbc3-f841508a4793",
        "cursor": {
          "ref": "5f4336ba-b5c9-4245-baba-a3cb92dae309",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f9e855d1-493d-47e7-a3ed-90882920e9d7"
        },
        "item": {
          "id": "b9c1cbf1-8915-4d3e-bbc3-f841508a4793",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0dc9fa7f-2a50-41e7-acf6-5b0a35fc743a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e3ec08-bbc1-4468-aed1-4d1bf9cd93c7",
        "cursor": {
          "ref": "f5f03436-e3af-40b4-828f-609bccb3fa9f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c14b8e0b-8dc6-4390-a8ab-a684473afb08"
        },
        "item": {
          "id": "30e3ec08-bbc1-4468-aed1-4d1bf9cd93c7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e0a4f9b5-a22d-41ac-9831-8a31edbdd4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05df23dc-c01f-481a-9043-01b9f179e139",
        "cursor": {
          "ref": "c8efd361-a2dd-45b5-b01d-b4b54115ab57",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb2e2685-6a2d-4bf9-a235-e5f887ab5a19"
        },
        "item": {
          "id": "05df23dc-c01f-481a-9043-01b9f179e139",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9ef20e04-f528-47e9-8921-e7b6945afb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79022b28-8549-4746-ab9a-b12a9208c2a8",
        "cursor": {
          "ref": "c03a7531-3644-4c58-bf9f-d8e05394df54",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e21161ef-4490-466a-941c-c4df4d420a60"
        },
        "item": {
          "id": "79022b28-8549-4746-ab9a-b12a9208c2a8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "09aca104-55ef-445c-b326-38c35f84c78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5733fb-1eac-4d7c-8cf3-a335967c41fa",
        "cursor": {
          "ref": "f5e94959-b913-45fe-9550-de158a43dfc0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c4d2dcc5-28f0-42cf-99e7-b72090ac87e7"
        },
        "item": {
          "id": "bc5733fb-1eac-4d7c-8cf3-a335967c41fa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "72d675f1-68af-4b69-9558-25ff04bc53a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5116bf19-a8ca-46a0-9423-d7d536278106",
        "cursor": {
          "ref": "32dec9fd-9afd-46fe-b913-9a547ce8596f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1ce25768-32ff-409c-b805-6647c4f9c37e"
        },
        "item": {
          "id": "5116bf19-a8ca-46a0-9423-d7d536278106",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae394b41-5a28-43ff-98ea-4aefd6f9f826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056aa24a-28ac-4e24-8f83-a31494c63895",
        "cursor": {
          "ref": "9c79dd47-cad2-4b35-ad90-a712492c48a5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "55b327b7-84bf-4e2f-9fe4-d677a2525c31"
        },
        "item": {
          "id": "056aa24a-28ac-4e24-8f83-a31494c63895",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ddc1cb98-6ffa-4453-85a4-c358244f4d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc633cc-d8d4-42c4-a141-62341a810ec6",
        "cursor": {
          "ref": "001b248b-546b-43ad-b752-54a8157708f8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6557b96d-eff1-488c-8147-8bf76bf3db9b"
        },
        "item": {
          "id": "9fc633cc-d8d4-42c4-a141-62341a810ec6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d1383d83-26c7-4207-9540-23f04b1a997f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5314c4-c9d4-4498-9ebe-a90988e8f99a",
        "cursor": {
          "ref": "a80e622a-6372-41e5-9548-8b0d78cff7e6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bf7be53d-bc8a-4213-870c-b1dc28316284"
        },
        "item": {
          "id": "6f5314c4-c9d4-4498-9ebe-a90988e8f99a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "efb183ce-eb48-43ff-b6b5-ac252a28d0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2e615-df0b-4478-b6e8-e1baaf010f63",
        "cursor": {
          "ref": "823ecb1d-6826-4429-8fe3-b00f17fb9bbb",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a4f2871d-592b-431e-bcb3-1fa187774a10"
        },
        "item": {
          "id": "68b2e615-df0b-4478-b6e8-e1baaf010f63",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "da3a590c-840c-48c1-99bf-7bd26782350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12463d4b-3df9-4e10-8e01-0d9718be7216",
        "cursor": {
          "ref": "1151ae87-4033-488a-821e-024f9b063cce",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "46240602-e2c4-4051-80f7-41b3bbbecf2a"
        },
        "item": {
          "id": "12463d4b-3df9-4e10-8e01-0d9718be7216",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b027243d-c1b7-4ea5-ba1b-b3b76d13d617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c201d7-b780-43af-8fc8-529eb4c8f343",
        "cursor": {
          "ref": "d86d29b4-966b-4fce-92f6-2cbc19db5364",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d3c9b9b-65fc-4101-84df-33d4fd301dcd"
        },
        "item": {
          "id": "f3c201d7-b780-43af-8fc8-529eb4c8f343",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "696ff7a3-933b-4c2a-b3a8-1d2aae109a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab338df-a269-4616-977d-fb12d955a6ff",
        "cursor": {
          "ref": "51629e72-f73b-4543-9e0a-c5a51c8e0ca0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1fa2f3f7-2085-4cd5-b8ae-1f68e77dd697"
        },
        "item": {
          "id": "9ab338df-a269-4616-977d-fb12d955a6ff",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c4c81697-1b8a-4985-af43-8a00b52bc0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f4ca5-063b-4801-9df0-c95cf7855684",
        "cursor": {
          "ref": "9d5801cc-e098-4504-a0b3-fce44782a11e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b8c21177-9467-46db-8e3f-1b603747fabe"
        },
        "item": {
          "id": "ef4f4ca5-063b-4801-9df0-c95cf7855684",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "08356266-5bbc-4b74-8d64-c7ef02492e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1493ffca-8e2c-477d-bbb3-80aaf8c116e0",
        "cursor": {
          "ref": "f506440f-6ca5-4abe-a6e1-850ba3c4192a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "93cd5a5c-a750-4716-a10b-083e37f81364"
        },
        "item": {
          "id": "1493ffca-8e2c-477d-bbb3-80aaf8c116e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fbc1cc40-0650-4b95-898b-740592087912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "121051d3-6364-44e5-bc42-228f8a926725",
        "cursor": {
          "ref": "e8c1c05e-566b-40e8-950f-513ed447033a",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "70093f84-5759-4941-8b6a-d1353db16cd0"
        },
        "item": {
          "id": "121051d3-6364-44e5-bc42-228f8a926725",
          "name": "credentials_verify"
        },
        "response": {
          "id": "db7b8709-44e5-4cc0-a420-3a9dc9fbb3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "db862a7a-7377-43df-8956-de8c4e6fb47c",
        "cursor": {
          "ref": "7a6f857a-a163-4085-b534-50aecd9cad53",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2f07d49c-b9b8-47bd-82c1-924812ccad71"
        },
        "item": {
          "id": "db862a7a-7377-43df-8956-de8c4e6fb47c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c28108b2-c529-4ec4-ba08-9eb7f1bf29d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "16413f44-7a3a-4189-8b67-37fa37370d0a",
        "cursor": {
          "ref": "0045ffdc-e388-46f5-b8ea-958200e57b2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a7a868b-df08-4e1a-8124-29e3bd31f80d"
        },
        "item": {
          "id": "16413f44-7a3a-4189-8b67-37fa37370d0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0af75641-3c1c-4937-ac50-d5ae42c4a5a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16413f44-7a3a-4189-8b67-37fa37370d0a",
        "cursor": {
          "ref": "0045ffdc-e388-46f5-b8ea-958200e57b2d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a7a868b-df08-4e1a-8124-29e3bd31f80d"
        },
        "item": {
          "id": "16413f44-7a3a-4189-8b67-37fa37370d0a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0af75641-3c1c-4937-ac50-d5ae42c4a5a9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093a9243-0b3b-414e-91c7-804625fc4f22",
        "cursor": {
          "ref": "f3f4d076-15a8-4749-b9dc-436cb88fb51c",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9010866f-cb1a-4852-ac7e-cd079552b4ee"
        },
        "item": {
          "id": "093a9243-0b3b-414e-91c7-804625fc4f22",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "89973764-b120-4434-89c5-1c1c748cc8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe52b01e-bdba-4d7c-b49b-7c7c759036b4",
        "cursor": {
          "ref": "df84cf76-033b-440b-aa36-74996a03c5cc",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b4919da5-1bdf-420e-95db-99c932a32a80"
        },
        "item": {
          "id": "fe52b01e-bdba-4d7c-b49b-7c7c759036b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4814ee6b-9b16-4c19-88b8-ae74d0b7d83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}