{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0ab0810a-3487-4815-a275-5ab538fbaea1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c553f6b1-e9df-4d0f-9c8f-3e0ef2305163",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd50e673-75bf-45e6-a970-6d341b99b30d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d8af69d-790d-4ae1-abfa-124f5f31354c"
                }
              }
            ]
          },
          {
            "id": "b5860f6d-82f8-45ea-942f-10ca08e25ddf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dea12941-4509-4130-a860-2c2bd6567605",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "088af847-bbea-45cd-9b46-d3e3aca94424"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f3d11c8-968b-44a6-b70d-8fc85e668600",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "03cd7c75-8cd5-4b47-ba9a-745e37700482",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55679e99-d70c-4623-9379-e347241da01f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "648c0b53-b1a9-43cd-8769-b0260c1715f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70ef1b03-30cb-418f-b822-b6ea43841437"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8de3fda-008d-46ae-bf25-ddd940e69c16",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b8f5d51-dc2f-4555-a624-21dc1de4a260"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e6605f9-254b-470a-9d50-aaca8fc746ef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b5485bc-1c09-4990-a86b-20276fed6a24"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "482cda73-edfc-47d7-8dbd-8f517261ed82",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ff38695a-af40-4a10-a4d6-d7817764dd19"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2ca5ab2-bff4-456f-ad0f-30fb332d99e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df1269c7-9a6a-407f-bc0d-d82d6bf9e32a"
            }
          }
        ]
      },
      {
        "id": "5ef71ba4-000e-4369-854d-fd817a2e977b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "add0a2d5-4c90-400f-a445-9b8cb814871f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b7ca995-ad29-466a-b3ce-4b7d213339e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8db6f070-1139-4841-911f-3f0403143a7a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52b713a-df5b-49f8-99a4-47ab511a9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "084cd4f7-84f5-46d2-b4b6-6b45df184e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90839608-02b7-419c-a92e-875439d37676",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7069bfb-00a3-459e-a372-fbd9c5d40b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b2ab977-a215-4dd5-9b25-142f8f2eef95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3660024b-e01d-467c-afd2-7dc3e6e9299b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379d8932-a834-40a3-adb0-1e1bef350dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4df474a-0d14-47fe-b5da-da2329f34f5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21a9418b-be5f-4d8f-b35a-2b364d7e8324",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d0a7d35-72a1-48e7-8392-f8f253b9697d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571414fa-a69b-4d7f-a601-54a63f3cf35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15664f36-9c0a-4373-8428-2b8b1547b942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd74cde7-1d6b-4023-b366-266588eec2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0220f19f-a31d-4149-bced-40dedebda49d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea174a9b-6b90-43e8-8ee3-7676a1d57c77",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a4fa32d-d61c-44b2-9521-eb998c123302",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04b70f52-0404-402c-b11b-5f7917781481",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "51d5f902-3d4b-4895-bdc4-5d20ec6bd8af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "382cce3a-cf38-432d-8f16-c6732da40439",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6fe7aaf4-ffb8-4dcc-a494-b2ba74843b71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8718ada8-e379-4682-96e1-11a44cf05cf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57c128ba-7f8e-443d-ae7e-1ef3e4871e1a"
            }
          }
        ]
      },
      {
        "id": "4a2c8f52-207d-4b95-b0ec-a0ad19fe31f0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "434f6b56-5c63-4f15-abc0-5bd0b5219227",
            "name": "Negative Testing",
            "item": [
              {
                "id": "005ae6e0-84a4-4861-be1d-75c1eaaff247",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ee90c952-777f-44f2-8249-d4ced84473e4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a9d35a-a3cf-4f56-bc6d-990bf844a225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57949f01-8d09-4ff0-bcbc-dd1b9f595c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f86fdd6-aeac-4bc6-8553-fd348ffd960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36541b7f-bac5-4364-93d9-71f4c881a301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3397713-e1ea-4e43-a817-ed597b436e62",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731e4d4c-ef97-4366-bd28-b544346e10be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f777037f-1e64-45df-88d2-d0e31ac7f202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7afb37-c594-4444-aa99-1158f89bd043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fb4c46d-6a08-433e-83fe-178e7ea225ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb4c37e-df5b-4c01-85ea-318cb68764ca",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bbc568-b95b-48c5-aebe-744d62c7a62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624d67c5-9fcf-4da5-8ae0-f241cd8b2196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36995667-9efd-45d4-af14-bae2dcca619d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "345296b5-5bbd-4321-b327-4a3ca029f47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517dc8c9-e271-4b94-b5ff-df035ce98999",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3ce9ae-1290-456e-a864-8039a818e084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3f91af-c80d-4976-969d-6882f800ebb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a20bb1e-41a9-4e07-8b16-451d6edb529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c4f4177-2809-49e2-b484-cdfab9ef8f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505be750-1603-4172-b358-ac1214fd7be3",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7f1e6-709c-49c6-84d5-a167922f82b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f294c9-672a-49b2-9bce-75059f9d4a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1109f235-da75-489a-998b-3e0b4dbabff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "253232b0-9593-442d-85ea-ac937574b3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6811c84f-f49d-4814-b86b-fe81960e85af",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2c60f7-0978-4a0c-8c86-fd8be9b534b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41d516a-1f22-4821-8977-15a7c4bc27bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9350a9-5c42-47cf-88f4-b80a5ea83c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20270408-aaa3-48f0-a8fe-2e39ec76650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9855d42c-a294-4d68-bf11-7e5109554cb4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b54076-75a4-475d-94e2-7cbd8d1cec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21fa1ff9-6267-49bf-bbcb-97887e4067aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5e89f1-1420-4355-9ad7-a4d28671fb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ce6be50-7386-40b3-859a-34c487ce4360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b0478f-09f6-427c-a710-39ee0f76d373",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89cbeb7-d90a-4688-b7f7-6b4792cb3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbf760e-b43a-4002-88a7-3b725862803a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22193c3c-7191-4553-94e7-d55c8d3d1253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d159a82a-97bf-4ac8-9b79-2c7cd53bc794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672d6ffa-a572-456f-816d-3deb133e27a9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0473b374-3023-4126-96f2-e31d05baf329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98017dd-b8fc-43c7-be3b-e051303f373c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4b7357-62e8-4c51-8cdc-bebe909d106c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2340a83-4af8-4b44-9897-cffc7ba7027f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383dd158-934e-4559-97b3-851438eafc30",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a69455-19d4-4c98-acb5-2b7584ef3cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9831adb8-efb2-4e57-b8d6-e3ebff409b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0a0dd7-ad74-40cd-a591-908a8a144def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83eb4327-52b1-4227-b92c-aae604ee2f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3621d29-f006-430f-88f5-d09b2776667d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d6677e-88dd-4f16-9b4a-a3edf0adb5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58013c30-8876-460d-a1ef-89c2cb2f9050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ff5f91-817c-4297-92ef-6ddfc53377ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "542ff952-e51e-4e1f-8199-229a423bf954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6da6d16-0164-473a-bbcf-17ee2cac4ad1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35184c9-5a98-4ecd-b946-a31692e64adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f59d19-f699-48b9-9d04-635c6441c949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c36d75-edf6-463c-a4f0-90aeb44d2579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48688e70-d95d-4095-833a-d6c173132041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29b1673-fec1-433f-98c8-d781fa5e7ea7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46a46f6-2ac0-49c0-a6b1-a8f676767f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eca87a6-6569-4b9b-9ca8-4b34c6e8244e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68373e55-a97e-403a-8b4d-94c0e3cef2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f9f1efc-1a99-4618-bd7e-cf264bf9c8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a663148-3849-465c-bc67-3d087f425699",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb94168-6ab0-4171-acc5-faf11d4f89b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bb4bad-9133-49d7-b04d-dd001f7e4fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d95d0b-fdc1-4123-b2d7-f165d004a1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c5e9cb8-4bf5-41ba-94c9-b79fbcd68046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0195fe1d-6169-41b5-b3e1-0aee2063b265",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4063a3-adad-4dda-a41c-1450b45e26f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4c9bb2-300f-40b0-b940-45ff5cea6661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd96eb8a-a880-486e-8c62-3ad8d268de84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcdc49a7-2739-432e-98a3-5500cbbde898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31da1a7-b011-4164-96e4-dbda8d44315a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8560c23c-3895-4a2b-b759-d8a8bce57f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192e797c-50c2-4369-8261-ef0debdb5955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f948f1-c20f-4b50-ac9a-a7dcd82b93f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92243520-3199-48c4-aa15-f20820149568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93d3490-0ffc-4047-904f-e356a01f6d0a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f87d9d-3b05-46e7-90b1-c50262a8581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1d08ee-4f30-4f57-acb0-c76fa5da5875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9e74ca-7a72-40e3-bed3-fbffcd3cde0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80c12c3e-ff1e-41cd-ae6e-7007b50c3fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce1b743-d305-4929-866e-932541ee7978",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6019cb-e28b-43fc-9524-1e8c45595d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d509aba9-f62d-45ca-8bd7-9c38bfafc58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1476e89f-d768-4810-ac96-0eee404b28ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d737e8e-9cbf-4e35-8796-8c3fd7e0546c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbfe3bf-0503-4ae8-a950-0f0d0c142d8b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4875c9d-3b4d-4096-81ff-6a70e40d462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c7be92-98e6-42de-9a93-83eebe5b0c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371a98c-cf29-48a7-8173-10700902d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6904a7f4-dc78-419a-a1f5-8e75e029a6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02fd5d0-d7e7-4bc6-882e-267c397e9f8e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff436f1c-e055-4f97-a5e0-f51b70568f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7321a7b-71e5-4838-9f48-858c2cbc5686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65077db4-5e93-45a2-b9ee-cdc48bb86fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0518b6f9-2beb-46af-851f-350dcb1b2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e017abc-e57d-4b2c-b48f-8a3ef9c2abf8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c30f42c-5349-42ed-9c64-24bd95129888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db962ce-bf6d-42a2-941b-ee9985b78f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad590937-81fd-4d60-87e9-5279344d12c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "422fd251-7402-4bbc-a303-b2ec03b59fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a07acd-698e-497e-bf1a-c65b2dad7de6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7985b7-144c-4ffc-b0b2-d648e98e9e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f9fdab-0140-4f84-80e7-75c600e86cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7334969-1bab-4764-8bdb-ca7eef39d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54d6dbc-6405-4f20-8ab3-0bb229a9c1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f1b076-c58a-46e9-a50c-9d25f7f241fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8065c40f-0524-4906-ac9f-77ae4b97cde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86f7cf3-8013-4b9a-b393-8cc5f97e8af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3132f1c2-88f4-4bb8-8916-d1b75daedd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6a0514-ff54-45dc-a2e9-9f20ad2a0ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69d7c88-d0f0-4e26-b2ef-0ecbec7b05a7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03589a2-99b2-43bf-bcd5-83d9b0a100dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef839fae-e655-4435-8f6f-e694b75aae5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0622fff6-8cab-4067-a3ab-6ae709cd5319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e832958-044f-4b9a-b75a-ebcd5b72a7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f507d-ffbe-4918-9f2f-7e8a29052e5f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eae614-0648-493e-a0a9-c300d1a6cd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16e70f8-c135-4d30-81e3-7b78440e9680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab5347-f6d9-4c9b-9d76-2cfd70dbdd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00c062b-e8cf-4925-9d71-6470484044bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e281cf-0315-4715-bcde-a0b030d60447",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a44543-dc9b-487a-94d2-0d4e06ced839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed27c46-b8c3-4289-aff9-5d8402308325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0d436-141d-4333-b96b-393db7972bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0543b1-c3c0-4412-9752-436932fe02af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd09257-2765-448b-bf01-55cc93044be8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b5cf7d-407f-4e81-a0ee-b5dccd0570be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26801ba9-8b19-4d65-afc0-8a56d5d7b41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd081cc-e10c-4051-a952-da7f54256ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a53d1990-610c-4690-b192-d18f2a544d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6239d29b-2147-4c49-9ecb-2d61050ff574",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4245779f-5eed-4769-bea6-ecbde6440b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c06231-0462-44f6-a6d0-dfebd11340cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e544d8-8960-46cf-8181-56a4594fdb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93e77e2d-0024-4932-8423-5fd73ca9e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa57a9a-bc65-4c6f-8ef7-7e0bb33ace7a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e951113-31d0-4e65-925a-1d3f753addec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbac415-5624-4a54-891c-37451ac0b1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f09a70-95a3-4cfa-a5e3-87614ef78245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "568e6bf2-2ca4-4f24-86dc-a713a12951d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa84ec64-a809-4ca3-ac58-1e05829449fc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3482c3-1d23-40a0-b12f-ede9f519e678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d3bcc0-78c0-41ce-aea5-4126f20bfdf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3f4487-43ef-4986-a0f5-5748d51baa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1234454f-5d4c-405a-8025-1a602edd88ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b68a6-a6c4-4326-b2ea-f9d3e489e41f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ed0218-442b-49f9-a41a-ac338733d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719e3cb2-2b2d-471c-a747-17fb576ffbe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83fe9b8-816d-448e-879a-99eadc77c3e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7027a94-b798-4c7a-b1b7-8ba24224673f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d84a11-1c56-4293-a8e3-23ca1e3e911a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7f22d4-b840-4e18-84d6-b259001d41e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0649e0c-7f78-4ee2-a163-11e1e7e7f62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39ed0ae-2c80-4892-8351-f7d403f1ce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d209ab-693f-4e1a-89e1-984f53a872a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f9561-d00c-43b8-a243-3a91262f9a1d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9b1401-5438-4f53-8523-15ae5a299ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d34e2d-a9c0-44db-810a-877ad7cc2e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1ab8a0-35c4-4e29-8829-a8a63a0d7129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca7a8ec-b462-476c-abe1-f49f39e7a8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b73b9c-d52e-4721-b6f4-6fd9efd8c7fb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cbf91b-d2c1-4638-aa24-a87c1e01d6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7db609-8724-45a5-8c4c-5c48bfcfbf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c4f939-6913-46b9-9687-a7a11514db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f84ce9-333b-41f1-8889-1046160678b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ef9d2c-c272-4a8d-ade1-d21df3f0bb85",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4f4572-fc6a-4e7b-8bb2-01dbc4aa14b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93aec8be-d293-48cc-9329-b187886fb378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c90ad41-d256-4dbe-b7f1-38ce4ddc90b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd375e2-ac87-4a94-afdf-8a5a591caf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61180b34-b107-4b7e-9911-e6a96962aa9d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58862a9-0b06-413f-b71f-6f9ad0602631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def76416-9b3c-49b6-a036-f5cc6b35477b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76045105-9f80-47a7-9750-fb889878aec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "887a95fd-22b5-47bd-a4a6-f568dc4bc8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e62c959-f36c-4ced-b68f-29619df837f6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e7c5a-53b6-438a-bb52-58650b994fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7dee005-7056-4d87-ab83-c28d7a197699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94a9c9d-5404-4ab4-b6bd-4528f3b5e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "296a870d-c3df-4264-8c63-9efa579178e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669e34bc-0a55-4416-a346-dcd8d92ada4c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541588f-bd07-4bb6-a0bd-e595a037f850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79b0c47-e4b5-46a8-8db6-c4de112ab063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62034f3-6454-464b-b41c-31a38952dba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d74309e-3639-440e-8e6d-583110911b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c03d59-4d0a-400c-96db-ef55adebfd3f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bc6cb5-2538-4231-97c3-cb551e10c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7677461-84ef-4bc5-b056-01fe9c5c27b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b47d1fe5-67cf-4c49-a701-fa5551477626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce8aa379-cb8d-4349-b435-739b67b0aa5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f1b7dc-c56e-4be4-b8ac-512af73c6937",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685c3513-18ca-4c96-8da6-9365a4d4f65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b243bf-9c76-4ecf-b7a3-9d3d23eb1965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ad2b20-8fd3-4526-af4b-114510f17a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e68b6c4-a9a6-4749-a6e1-e30f0f90d3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68533a89-d2de-41f9-8f6c-0393d1e53e99",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c3a48c-5065-4aa0-9ad2-6c92033204ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8814f0c5-13af-452b-905c-0deb3e0cc0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74345e-9e38-4cce-9fac-f4cfba98a224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5551c6aa-e99a-4654-b313-6c1e6afdd634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c45e25-5ba2-481f-b0d9-fae83cde4349",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f06338-f37b-46e0-bd6a-480a5856a6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1286ebe-006e-4674-87e1-1bfd1917a1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485e5e1-20a4-4870-a9a5-ed4dcadc3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3ab12d-6a6f-4148-9bae-d654802315a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1f2e26-8258-4972-b288-b8b82dc416ec",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed312f02-b21f-42d1-8a62-4b810eddd5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be9698ff-6261-4a86-b093-9ac44850eeab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18d9b77-c384-41aa-9d0f-34e99b4a0e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15253c7e-56f8-4b00-800b-f2e0783d70af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1c2be8-9176-40b9-9a25-7e27e43e7674",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40dcf2b-2341-4ccd-961a-9c9147fd356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5637a985-a056-4484-9594-acef80a18e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f68bc18-7e24-4c5f-922c-d4d7d97b8de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9243e9df-50e9-4034-b318-fe69a411c228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907e29a6-8d53-4d51-b30c-945d71bcd0a4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea2fa48-b6e6-42fb-8b3d-80684f9241bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a97f3dd1-88cf-457b-a8af-4542881a35ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821f6e0f-b29f-4937-8967-a51893eda388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "703f72a4-3638-4fc3-859e-ff3b0ab66cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c479b236-eb62-478d-8b7a-ada2e9079522",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a2d8cd-12ad-4628-b70e-81a73fb7d423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e3463e-9e0a-4a9b-b5aa-c09488688169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08975a30-9959-4f2e-b1f6-cf5200cf6e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a962fb-6968-4a89-84d5-1a2a0736bd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbead6e-66ca-4102-bdff-25ed9b9f0b2f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44a912f-b94e-4076-bac7-564c0f1e6d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59249eb1-dfda-45d2-ac2c-7bc6bb2e4538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9bd53-8de4-4f7d-af5d-2b47dc367384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bebcf20b-00dd-47d5-a86d-d21259a58405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d55833-d660-4a63-ba2a-6fd49fb169a9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f4677b-fe05-463f-b982-d7e57b64d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0da7530-ccf8-49ff-ae62-fb28e8d3c659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78881f4-eca5-4e2c-9a3a-61ca684bdb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "322d8a83-9376-4f3e-bb30-443b3dfde63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ecd287-6d8d-4a06-b57e-bc8a8dbd1ad0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c531892c-b61a-484a-9a0b-7079b9441278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e630e2-781d-4f51-a6ea-aa2936bd5f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5dbb7e-cdfd-49d5-a46b-0fd1568ff8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7551c7ac-425b-4201-9657-4cf3941f2e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b862be-50c6-416f-a953-01fed19667be",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d0dbd9-897e-4d54-8786-d3ed400322ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8264a0-acfa-44c4-a713-bf90194adf47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca89362-9c04-46eb-9ee7-99b9243ab905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4752dd8e-5c37-4281-a30e-6a9b9b1d27bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7f4ad1-152d-4cf4-8766-66cd5d4d7d4c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0d4a7a-86ac-4cbd-b5a7-4031706f9782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8dca9e-1216-4c83-90a7-c458e5b69f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bd6b54-cd0b-4b0c-8242-ab6d118ca7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "66b08194-ba56-4ef3-a72f-f46d5e80604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108c1f39-3a22-42c2-b376-9ef450fd3041",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa95556-c7df-496f-a00d-f12b92138541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a36b7d0-d0fe-479d-87db-7d2af829c87f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a30bf0c-dac4-4db5-9cba-1d3264ea451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "601263fb-9c14-4ea9-99fa-8b818c8ee38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e17d744-b8c8-416e-9f25-56972ad9e9ef",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189fdf14-9768-4253-8710-0c22865cb7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77bf395-4580-4b0e-9d55-78fccddd90b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d23b09-81ab-44c1-bd39-106a9c24cbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32a063b-444e-40fa-931f-3e60fa9ec743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed97b342-12b8-4ae2-891c-6969a193cd82",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99455a1-388c-49e1-8161-35477b93b449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1c067d-b24a-4f70-9e84-1b20c690d8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94db7c8e-b400-4838-88c6-8424f2df557b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "358dcf98-0a59-48ce-9194-c29f66607603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b45463f-80a2-4cd0-becf-eb177ef09a15",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3815dbb1-be91-4610-a2c7-0d155a59af3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2d3068-ef16-4561-8f8f-9d18671a7f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28799394-8fa6-4bbb-9120-e346d83ec761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90d9aee-ce3b-401a-9e1b-bacdc510a093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08347fe3-e320-409c-8760-fd3f464ed3f0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bf1206-f342-4061-9713-192700d6da0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd08e4f-2e4b-4ce7-b9ab-b50a56d11c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cc709a-ca1b-454a-94c2-fba065c0b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe28dbe-58df-4b8d-b5b3-d11e7eb0def1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c4f472-161f-4e95-a86f-e1aaa9b65d40",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad07acc-3d4d-4e08-b7a2-e8e6b3477a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea30e5c-a25f-4b53-9712-de0fe5a083e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b979e1-e6dc-4c37-a73b-3cc59de88ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "933400f7-ec7b-4863-bc02-b59c86fa3673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a808ee0-580e-46b2-897d-1f6a20018c8c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd94691-5236-4610-9e01-dd104a2734ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d2ada6-e2d7-410b-a81c-4c78f5e814d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60675bf1-445f-41cb-b2ea-f0c8c1e4400b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f78433-dcb2-47df-80c9-9aed4cc8c270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33f8173-e4b2-4e14-9218-2ef4d9a68c30",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a64c94-cfe4-4720-bff3-97ff2846e42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a057ec3b-3db6-426d-a2e8-e3c92566eb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b27271-2617-481b-a88f-0dcee0dc9e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "07a5b50e-2bf5-4e34-93fc-a1efbfae6d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee0b4b6-9d60-4e07-a155-bb73f8e1a849",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616e830e-06a5-49c7-8452-81cb31887da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77f3a5c3-6aba-4349-b8d5-b1c0864902d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb10c8b4-d0dc-4936-ab93-4ebf4e239122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a818aa-73d2-498c-a252-009e1916063e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dbf8fb-c7ca-4751-a5fd-55bf73334a03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93cbed1-bf0c-4bc0-aab1-6bc9e5f8f97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5abe11-48de-427c-981b-7c95322330e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0e3a98-3bc5-4de8-9c5f-58ed0a535dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "088dc12f-022d-4198-9df2-cbf4b7bd98cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c29925-b054-44d4-ba0c-1944d60be855",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaab009-0a9b-438f-af98-fede6a97ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b285e9-84f6-4e01-8edc-e765adf3951e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286e7442-9cf3-4c25-8ff4-a247f76c0bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69a6279-a263-40a0-86d9-5bde2e1b70b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50eabe4-a9b1-4c89-88c0-c583706a707f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf95566-a277-4265-a7d4-afedc685f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702f361f-8df6-4ae3-82f4-69aec0a437d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1dec39-a172-4104-9024-4cbaba948a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c0500a1-df75-43ef-8265-17bdbf3462cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17002258-84ff-467e-bb6b-1f7b16c5bc59",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11270145-9ce9-44aa-a225-2de0be5a5ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0211749-a457-41a8-8489-827e3b962d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826ea93a-c7ff-4565-83a7-02fda5ca4625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "563fed73-920f-473e-b89d-7e745a848ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ace07d-5c41-4534-81ea-be8ad2b9c501",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3575e54-8358-4697-8062-205bad124806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d3c8af-3aff-4941-a45d-dcab854a3ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c247d0c-9052-497a-a7c6-143d53d978df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c037ea9-cb1d-4a51-9111-2c539102ebd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b481ea8-8b51-4fcd-af7c-81106a8be53d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012b8a97-7c86-42e9-8ad7-85f4bb904161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe0f922-4f87-4a50-9eea-692e3fa68b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855c467a-d866-40bf-adde-7b6de866635f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd7e92b-3461-4569-b20f-7ac67b87ad09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5487eb0-e3ec-4e5f-84ac-2225a481bb37",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33797cbe-0741-47cc-b64d-bf0cc2dc6ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5184a1a-c96b-43c8-a631-3ff8bb110536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ec8d63-355f-47b5-9504-7bb2bd8427ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "927c5e21-74cf-46f6-9b4d-8724837be307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1489cfb1-c9ef-45ec-89c1-9dd0693575a9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5ffcfd-1198-4dc5-ad47-f2d375b9c424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97fd7bf-1031-4e7c-8170-98638e1292d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f666d59f-b82c-4522-b2a5-162ee37ebccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1485a54f-18b3-430d-99ad-6dacd841132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f33dd3-fde8-4afd-aa76-3d0f04b0c5ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2647bbb7-056f-4294-84ec-80014e8ab13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b26cf17-79fa-4d64-b8e6-4b91a4bd8d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1510bb9a-bcb6-477b-852a-7eb0e0f591d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3519e79c-7cdb-4a0f-af6e-4e43305940ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee9a196-9d81-484a-b464-59af700fd7a0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4203b4b3-b169-40b3-bfd3-337e15528a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b80537f-595e-48e7-b2da-5990574e6aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432a7e9f-d1e9-47b2-a80e-d4e0cbf5f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c21435f-70cc-4257-8b27-a8efe24b08b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d82873-bdc3-4153-b1c7-cc44554a8931",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74138795-19f6-42b0-88eb-db3df4799f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64077f1c-611b-4710-ae19-a28d0d1063ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c593bc-cb29-47d0-b6ba-bc850608b48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2682b574-7a1a-4f80-aa12-fecf5b3247d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2beaf06-7d0f-4f27-9257-b992ee2406a0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c031d6-a601-48f8-9fbf-502b308fa2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75bc9a9-a229-4209-905a-238af5ff4c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7955e4a4-cfdf-42d0-b0e2-1645f3a4e035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc657cae-6a58-41d4-ae66-1432a2aa1b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e635b1c-d637-4ba5-8f06-f7e07deb25bd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270d2f27-d273-4b52-bec2-9814d67080f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890d7301-5791-4d37-b652-d1a6f0642e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cec1820-d357-4982-83c3-fb49725114be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea7de48-466a-43ce-9678-45b130b37261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c126c44-8408-447d-a17a-25f6d6d511f1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6357721-e34a-470d-ae9e-c60bd96cfe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba89111b-07a8-45e4-b460-57544835cdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a54459-d625-409f-97fe-e98bce162204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99c0f84c-1816-4cf5-a668-89ba9b03140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df362033-d94b-4d7f-a3bd-6a190b7e8ca3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0909d94e-edb3-4344-a0dd-3c5ab38c0b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14170eff-d43f-4c46-a7f9-1c312e3d76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13bd201-30e1-4948-b645-bc3b56d0b304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af3f97ae-ea1e-43e3-ad42-81d504ec0e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e963701-20a9-4623-9c8e-2eda0fcb6874",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b44b47e-dbdb-4998-849f-66410e3f0c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb467e10-be3b-40d2-9d5e-8832d3c37d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dca335-724c-4510-a267-fe03b093c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc42692e-aee3-438c-8693-122a1f753233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0300ce3c-dad4-4a22-bffd-793e4540d4ee",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdeb6f02-ddb5-409c-aab6-f2a566d98404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8ad5df-ffbd-444b-9447-9cb50cc9cd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9064bce-af42-4e3b-ad17-01e46f2b473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f493ad6f-4fd7-4adb-8dff-97a75aa098d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a15678f-9ab7-4875-8f80-864cf38aec68",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e060e9-8e63-4dff-8023-dc3c9b877ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666fd94b-c84a-4cb6-a07f-635fae3fa457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56cf556-f1fb-44f8-998a-f87b19c59cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7305789d-e3ab-4752-b7a8-3a448cafb5be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9c42b4-baf5-432b-94bb-a972d5cc7aac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f54439-5cc9-496d-95f5-84699d2bfb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac459c2-0c8e-452b-8745-646fecda5879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68443f2-02a5-493d-8ad2-6c78e7b2fd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b33b3187-378b-4c75-a727-c697904fc794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80afbf0f-73aa-4a6e-b6e0-b029bc07c94b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100af3c9-b9d6-40c9-ae70-2dd07e0ce184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74e53c8-d88a-434a-aa86-9f43b1cc8e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c739e-bd49-46dd-b2fc-fd7268477672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a9834aa-af45-42d7-bb9a-173529c1be7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551b8456-6f57-47d8-ad02-af29a9f77d7c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d39e0f-51ac-4220-9d04-edeae9be3b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f63b59-2914-41fd-b25f-13f6c636cae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a9cb5b-8fca-4456-90b0-3189b2b62ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58f568f-18ac-4d17-94d7-c5265ce7ddf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c04ba63-cc13-4377-96b8-847e94f9dd03",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0573769d-7d7a-4035-b6f2-8ac6b79130e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5822d3-6395-47a6-9a0c-30d9b2e2375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b3ca8e-19ad-43b3-9611-d15fccaf4691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce30536-f9e1-40e6-a4bf-db36f15e2c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaedc60-b167-432e-bf8b-29873d565018",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916debde-f417-42b2-8826-81cbe0c5a4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624ee261-d64e-448a-b39d-a47664c59fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6046a1e-e426-46ee-bf97-b9b08d236211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8583da-7ee8-4e15-837e-0381f7dad968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33928e1-e219-4328-bd26-4bf811d82384",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082c7fb9-2e60-4538-b7c0-9de1d0180e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c2ced67-9436-40e9-bbb0-322b5120f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cb65a8-0cd8-48fd-b062-a381856a53c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef69c62a-ac24-4a96-b26c-96482713223d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0236cebc-f486-4614-ab8f-9cc7497bc4ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d80428d-c11d-4f10-97b7-748153733c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bd8a06-f92f-43a2-9e81-1ecbbaf974f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4506b52b-6c15-41bd-8b64-162f7dbbced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63318ded-d69c-486a-a3a3-492a3402915d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6589137-e927-43e7-bebc-f2287d39c49e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c3cdd8-dbd7-4cfe-9c90-22f354b2cc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245dd843-1732-4f42-b1d2-e96bf275dc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f55963f-1940-4142-b139-a3c2c1880eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62758205-c370-4a68-b4fb-49d03d2ba820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb0725-ea24-4ebf-9138-794be83b2480",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e10596-fabb-47de-8a62-4c4c86e4af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbaf76d8-dfdd-4e6c-af52-92a65556d4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf31e8a5-73c0-45d7-8371-edff1d348d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a47efa-c8d5-4ba3-819e-1a7286a6b0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b784e4-d417-4992-9bc8-49bcbdd8d1f4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3b366e-ee52-4d94-b505-93af1a2d96c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6f4733-a5d8-46db-9143-cd1150f54441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3399738b-a8a6-4845-b57a-f79357d69d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb68687-5e1d-40b5-899e-27589e2491c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b425f985-20fb-4aec-a9e9-f93c3cf620c2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b411cb5-ce5d-4f4a-972c-adfa941382fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a2567f-4a62-4bc3-96d8-298340aec5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd92bb09-0224-45a6-9f8f-f2913d8ab549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c61f09cf-b8bf-437a-a8f8-d6b3a5ee9e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc93b9b1-c14e-4af3-9bb1-bb358afa9f68",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25784541-b076-4ac6-a36f-57595926a7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31791501-f616-48a7-8e6f-c9df26cd7f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b043771-539a-4634-a395-94e690e37b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df8fd56d-0721-41a8-927a-769509c7d982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea945e-3e2c-4466-b976-40d2793f2324",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345018b7-b3fb-4143-b05f-f490c00ef31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f468501-a9c7-4adc-9693-09c34d4d0d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7ba972-50f4-4d22-89d8-70d61ad233f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddf181f-c439-4616-b323-6de5b5f8b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd9eac-7f03-4a78-8316-c64940a8fc42",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8095941a-397c-4252-9c6b-92a57912d0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "afcbdf51-9665-4f38-b32a-3534cce6b143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bbb034-6e1f-4012-beca-a6bc6bdba0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ba40db1-a4e7-4c72-b7ba-7243cd09baf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "34c91c90-81cc-4f4b-9218-6e41646d0666",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2118ebd-6a2f-4f8e-bf31-08bd77747322",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43df058c-2791-402e-83cc-2ab9112a2e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74fd1841-bb97-4aa3-bdc9-c27d5933b556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8a2e21-c8a7-417d-9677-96b1d54eea54",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6a570f3-aa98-4a44-84e3-338287420903"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17dea06e-b48a-4567-ba52-50611cdc7713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cbc50a2-5d64-41fa-a708-353a44422ff2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b48cb5-ee18-4764-969d-3f8466290fbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89d77fa1-b62d-4803-ad7b-77ca2b05699f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f66ad7b7-da87-40fd-80e6-a935ca889b8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "317c7faf-8962-4caa-b6b0-87ea6cab6ca3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48856f34-a643-4d27-9760-c7bf10d91689",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29771424-0681-42aa-94bf-3f8cc7c75813"
                }
              }
            ]
          },
          {
            "id": "738dc700-8bcc-42c9-8a65-0149bba3c932",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5be389b7-4b46-4952-ac65-4d5b2f6aecee",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7211e290-6e23-4d5a-9c79-7231a52fab0b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d0e7da-9fca-4150-9114-81807ba16e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "770e4c5a-6229-4622-a615-8511a736be1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4069acfe-7a46-4bee-b1ad-b65386144693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ab016a-5928-4f8a-ad0a-bcf982980883"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11e2c6d1-8fc5-4bde-94d1-908bdd64f0f0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36e61bbb-c962-4321-b311-e9189f756741",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "025e7b11-8d55-4b38-854b-59bbf1cda5a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bea1e0a5-5b04-4078-908b-d17f6ba8878e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a7edafc-4217-4837-9a1a-0c5071c769ec"
                    }
                  }
                ]
              },
              {
                "id": "457b2211-99b9-439f-879c-244f6caf5083",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1eef7cc-308d-40db-8d97-9114bd193870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a92385f-4a9c-45f7-92f1-71151cf90535"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4729fddb-f32d-41ec-b3a6-72706ec49f4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba36e8e1-1e9e-4810-806f-757b2c5d84f4"
                    }
                  }
                ]
              },
              {
                "id": "fcee3199-1e98-4726-9e73-664bd60e0e5f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6aeebd2-7532-4569-89a5-88a87d9925ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc1096b5-1f32-4b47-9243-b80ca5cdf1c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "035b1ab7-6fb8-452b-91f1-d96e1d32755f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ceea1cd-6e93-49d5-b94d-a7ee22a70bec"
                    }
                  }
                ]
              },
              {
                "id": "24316be6-a684-4315-9659-1dcbe2a238ec",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "edc786fd-4659-428c-9824-9e56b4c4e255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "400bc7b7-a6e6-4c3a-909b-308ee421a90e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2199a9b9-c408-493a-8bed-69e890e6ee78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "07bf5d50-b3c8-47d4-9d2b-618093a86274"
                    }
                  }
                ]
              },
              {
                "id": "165139ea-2888-42a8-8673-b892ce394a04",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5469d88-702c-4442-be00-7f1b0ec9e749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bff3c18d-aadc-4480-9d48-172ce29b587b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d85cdf9-b5eb-45f5-85cc-fbfd466ecb0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a128a649-cc6d-406d-b4fd-c15a4ae5e7a4"
                    }
                  }
                ]
              },
              {
                "id": "0cb2380f-d86d-44a0-bba8-04799845b808",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016dfee0-ca7b-4193-be50-e82a8a7a7827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f243c34-8763-4d72-962f-c5c700b9dabb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9b24da7-749d-4794-b05b-0603653fe7cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b993db0b-1e29-40d7-8cbc-22f436fec559"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25d69e70-5f99-4153-8e94-1b314ca4c0d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a83a1dac-c7fe-40b6-8b8b-d9ad5e516e96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b931f5b2-fc29-4075-b1c5-11877fdf53d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b731994c-21e2-4df7-bc37-9bbfbb21b23b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fbe31ca-3df5-4b38-b4ee-37e48d39a3eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b403ae4f-a8de-4b25-85c3-594732eca43e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5e092b4-09c1-4477-b35a-2874bc418c33",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e89082c-7d05-4769-b892-0fbc563c1e94"
            }
          }
        ]
      },
      {
        "id": "5fa83f55-1ca3-4aff-8340-38427ec34fbb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f8c02a8b-f89e-49ea-9e27-121c6dd793a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b8f397b-1e66-4516-aeb7-e5abe9ae937c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1852245-8fbc-4552-87ec-b92a0a80d7a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1efcd1d-ae99-4337-9760-0819183de181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0228f37e-a458-424f-bb91-6033a758f2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b87aeeb-fe98-41f5-b2de-cfa64b0fae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5f61ef-022f-4c9b-943a-08e42e5b3339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669096fc-bf21-41f0-a518-827d7cad4e50",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23125fb-cbe0-4d34-819e-3f9fd318a2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86da7f5c-2b97-441f-9a8a-313c55a8d235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb5d0e-52be-40ef-a79b-702722657aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "387688b7-4c6b-429d-947a-9623f420534c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e472c-cb57-4e34-ac95-d4c9e017fa8e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed40e1f4-a85c-4d11-8458-cd30004e7b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6c296a-3621-4665-a130-37c8bdd91c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c82190-b41d-4849-b715-a4b49612c870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bae0a2b-f1f8-4e4c-bfd3-0324c166ef25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f89696c-30a6-4905-b3ef-92e79a9f8847",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c9caf1-e963-4385-89c9-073e0aa47633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74debe73-eb69-4ae8-b11e-ab24f947b56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6a516e-88f7-4392-bb70-40ca1e5d01ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25ce32a5-e3c2-4535-8bed-5ff58e4474b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5072d9-d07a-460a-bba5-08ca5b19173f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2771077d-4c30-4ef2-92ec-69382ef8917f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ec42bf-f1dc-4cda-8617-7e853e523b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a9c920-de20-4b64-b6eb-7f1aed2c1460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f3ae44-5ccf-4c22-8bd7-d9fcd05a417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee7d288-7c3c-4eb3-afbf-cc6be5bf6b4e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b1b354-45b8-4f63-82f3-8a7fc94de3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3760acd2-a6ff-4601-bf6a-765c6731711e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bb22d-81a6-486b-9551-83abb46e1475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7628a197-fcae-4cac-a692-8d269a8b5401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916e1645-48ea-417f-b1e2-e1ac0e96bae0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f8504a-0ede-4196-abce-c0f188a1eb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f2d319-f3c3-42f9-b130-8c7afe6bfed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b2e32d-6cb5-413d-b450-9c3e82e6b071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5feb5f1a-9da9-4bd0-9244-0a5357df1e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8122feb-2a7e-439b-b1fa-88cfb7767ba6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbed89e-12b0-4b04-9fcc-3ef474701a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ff8145-1be1-43a8-a866-603aa197222a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88ba90e-96e4-4c38-b82f-582f5fb43810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2636ccaf-ee48-4012-8908-8efc8bb5b107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432aacf4-22cd-4a6e-9bfc-fe26bdf3c120",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f1a9b7-8171-4761-a601-7bab08afc991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1006dd-686e-4bba-852a-fe75a9bf1e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fa9a42-a679-4f26-8caf-6fe4631a93b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed671cfe-30cd-4ae3-9863-b6d0ca50a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7992c04-3d5c-48e8-8d08-96b2d11d70c3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6adf0d1-d127-4df3-b011-698d6cdd87e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcc4c70-2774-4e6d-996e-bb7670b5e537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81464a05-a6ea-4f83-8cdf-8fe7d7fcaaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce6030c-e031-41e8-b090-2d3548591d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dfde7b-9b67-4fb7-93df-ece7c4aa6345",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c263d0c4-68b9-4737-ba51-8d96640b18b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f41ae2-ca12-480a-b634-043f47848c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779b1ea9-b234-495a-9e43-e327b2681f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5196fbc3-a45b-4602-9173-e015fb5396ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd85a17-0c70-4da0-add0-1d7b7e1af4e5",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15625e0e-49d7-4f58-9d6c-a22c6f6b62cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e05bcd-3464-448c-860c-9e1390467bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0571dc74-768a-4f42-8cb6-96872076e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3edd94-96ae-47ef-93a7-e93eb76e404e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab7318-af28-415a-b89a-f6630240d69b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d4068-e0e3-43ac-83c4-481d59210b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bde0f5-b69a-4f1b-999a-6fd428a94d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a528c9d-0286-4e54-80c5-5ebbb9daf803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6259e686-b40b-483d-a12b-06efa5c2724e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396a1773-cd6f-4c4c-8cf8-5586cffb3fbf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068f5b60-482c-4919-a43e-77fde82ef733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1bf9a2-5c5f-47d4-b237-578aae7f58d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd10fa-68e8-4f11-b957-70d7b2bb92f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5718b18-16c1-4b6a-9db1-6682c37f1b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b226983-a682-4b33-8fbe-8c0c67daf313",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092263c3-dacf-4f57-a77c-16b4d81aa4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bd4194-151e-4256-9f95-2ee8ba6ad9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac47ec5-9be2-4fc0-9940-6790c266d44e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bde5f0f-ce9f-46da-8c94-91d7601f06cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2b77fc-f333-4e71-a7ba-b3fde848c668",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03a2a91-062f-46b0-b68b-b6dcbbd113fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cc45fe-afea-41dc-a8b8-149fd494ec46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418735d8-3256-40d2-b373-376a05969c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3fe428-d93c-4248-96bc-fb1044da8fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0d01a1-ef2d-4e86-8289-431be6c48af7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424d07d1-0099-4ab4-b025-397771990db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17c8f162-4eab-42b9-8c83-3e34a6afb98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034f5eb6-4d60-479d-a503-7fcc7badf520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b154bec9-0481-4f90-bdee-43045a5c4e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32057f64-d57f-44c4-9bb6-25fe129fce6f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48659d4b-c4d7-421f-97e4-3ee92aac1bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4477d418-ce9f-4cdb-b416-54ece84e78d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6570cb-5706-4e46-a6d0-f81b173c0ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ff5e76-6a4f-4f3c-8a3d-46efe596fe8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afc7c52-465f-47ae-9076-f0ddf8aa516d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce442a0e-571e-49bc-863d-06bb4f195d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343a9611-1706-48c4-9781-9afd6af0dbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0147a5-699f-47c7-91c0-03a158386e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7926dee9-6aee-4dfa-abed-05a03bf36cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56879262-9607-420c-9e6d-d98bc1834be2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c4311a-8688-4795-9fc2-016b778c62d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9467a2-ae66-4d49-8229-5427d1aebd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d81daf-13da-4139-907e-29c2a1e26911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4922fa42-604d-489f-849a-980cd9f4b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e6929b-6ee2-4380-b363-66f197ae0d08",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad9a9cf-7cbd-4b65-9eb4-999aad60d2e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d871a6e-082e-46c5-8372-c57041e3e239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd6df7e-b9a0-43da-b480-6693bc04e92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cc8cde-7deb-40b5-88f2-a754611695ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfedefb6-1aac-4e77-a6e0-602e576a9de2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6a9c61-fddb-43dc-9f11-26ef39c8e25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28eb75e-1803-4907-94a2-5a038ae94d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b65c80-4161-4916-a0f7-d7f18d94e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f76a9747-ef27-41ab-9928-3f95f9ed59e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb50f98-b6d7-4fe4-bbc8-5f0a7f6ab205",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fbde7e-34f0-4360-b663-bf0ad345f199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9d377c-3687-4e77-b76e-56f4ec295750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ae159c-21f8-4260-afea-78b2c00153aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584dc20a-f802-4a21-8bfc-2f2292d9f6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74469756-ca30-4879-9e30-c7100383e058",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0efea79-8c0e-4673-9180-dee73cc6362d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4ffb33-3fc1-4c88-8665-d29540b66e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba4e482-c3c6-4e24-8616-f68d8da159ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e71134-6109-4241-94d2-2c4fb143be47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b0543c-3198-4364-a1d9-9579493e8855",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa51830f-e509-49b7-a6c3-b56192f40eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ac2c7e-d063-40c0-be3d-34e1bb82b296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bf4b0c-1ed7-4205-8200-4a8a45d241b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0cf76b3-ccf8-4289-852b-3ccdea04e69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329ade2c-bbeb-409c-8367-6799b32e8410",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae46f05-f8df-4d5a-a8f1-2815b8ec5475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5989a9-ac09-4065-bef3-5115f0ae1ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f90ec84-86db-4f35-84af-703cb60e219c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc4ce62-075c-4934-95b4-f8db09080103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f8316b-409d-495e-a293-a243e4e625c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c58e82-49d3-4119-997c-c7e9cc54c7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a12fb35-ce28-44d5-bdd0-f87f7832ba04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd98dca-d713-4a73-aa26-f8d631294d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e65efe-3679-4c10-82c8-66e9dac61766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ade589-52a0-4b6c-9127-febd58f83c79",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46089ed6-00d2-40eb-b5ef-1e51ab5f84b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29cdfa0-eb8f-4169-9d83-57bf5408008b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643c825e-f8c3-4a76-8fd4-4b541c32c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd38e6e0-4340-4586-8f4c-881df9dcbd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c501d45-96dd-446d-8016-06b2e3eedd12",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aa870a-2d3b-480f-ba9b-18d224bfe505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80362cc-3862-4411-ab4e-c4c675563174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ded2224-5442-4f54-b87e-2f9b7fc0707a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ad24cf-24da-4a9b-b6e5-a9fdc3e8e005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1271a96-ee07-4af3-af17-74daa0f9ca85",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a158c2f3-b1b4-4eac-a584-0bb8cc9be6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66d6f18-786a-47d0-b1d7-f4807949eb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa204b7-8df2-4e1e-a01e-d8a328b5311e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "745f9f73-1015-4185-a060-e15993feefa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fa95ea-87ec-42d2-a6a9-3b1b5c75d34f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce662856-e17c-4c71-89d0-b7a6609a3c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06096fc3-c756-4c1d-a42a-414b7eabea04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b645897-4452-4f80-a7b0-3ba7377a15a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb5800d-acef-4ba2-bcf7-08ab9ed80d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858c2770-df50-437e-8e68-511b7ac322dc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d517e8-7850-4a04-8c4a-4d5c44b824cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d13fef-a4a7-4b45-a25e-04cf56d3001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af086a8d-26e7-472a-9d25-88b2773b935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e78734b7-0c88-4502-8504-fa8f5ca412da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a3c302-2773-4acb-aa2e-30e775f72df9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d167cbfb-2139-4b30-8a0a-a388def0463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b7764b-e8a9-4746-8c78-43be39be3737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f985cca1-c852-49ea-a70a-9fe6ee4466d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20d6be7-db26-43e1-b30a-d00a04042382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5bb2a5-167a-4321-9f28-1d947b5a4a00",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65535979-61fc-49c9-ab5e-6df3d339086b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ceb657-c1ed-4630-9c01-ce1707f77780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624923e6-6d52-4243-b99a-dc0c0e9b925a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa2c7c9-bead-47fc-ac24-97068ec56e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c572f2ca-35ec-42f5-ae9f-e4e856982ea9",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27bda0e-6f33-4f5b-a1f4-7f33d82e9df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b82ba3a-6e10-4452-9f3f-b78ec5cc77ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bed38b-b882-4a7e-879f-b27e71086664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40c32a7f-1d63-43fb-a6d2-48aefd17bd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a18db6-7ec0-469b-8f36-2763be651e73",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ee2e45-9880-487c-8e58-5dc38419dbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dbf6cf-8553-4ca5-8925-506d435cef5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330aba08-2d08-4143-95dc-47b371fcbb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e41e3c-2e07-4a4b-94d2-e78a6ca71f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef777a7-8adc-48eb-9849-2ab2a7e7390d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a72281c-e5ba-4de9-9018-bc2baaf2e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a506ba-6746-43bc-b78d-6cafef16f7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb711d90-818b-41ce-b5b4-74efb99e72db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2c9d5c-a9d0-45bb-8b8b-c39a7a78f984"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0e55a08-a7d2-4c3e-b5cd-64351e40f54e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1dae558e-5315-413d-a1a2-e768c48e07f3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e2dc4-35e2-454b-8739-74cea2a1682c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "32d8dbfc-da8a-4396-89c0-5b6e455646be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49bd691-ee2e-4e3b-9288-c04e148830a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "884032d7-d1b1-4664-963a-ba27c160d57f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c873c953-e6af-4bb8-b5e6-975cf083240a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d97968c5-e36e-4e04-9626-e2aaf5a46812"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf1ea2f-147d-42c8-9dd0-ea1380227cab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d34cfdb8-a751-4523-949f-e27645025b8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4396a3db-dccd-486e-b122-314f63c73e4b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db24d2e7-2b42-40fa-a82c-0d208020639c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f27dce-1d3a-4dc3-9bd7-654728b74d1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e0b9c9f4-23cb-43da-9fc0-1f275d99326b"
            }
          }
        ]
      },
      {
        "id": "87a68a54-f6d0-40bb-a4b1-c3c2c9e1e431",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f8f5eac-0fea-4505-905a-75a112c261be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da7a4410-e66f-4dd6-a9d0-e7e292b0d2bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ebc25eb8-54d6-4166-825a-5dfc293031a8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6df3d3-0431-419d-8498-dc81be1a9b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d815f91-ec9d-4d4a-8780-4b613ff44423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93340877-ff4e-48a5-8d13-c450ee807e74",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89eab58-e5d3-4f1c-b45b-2d8e1514b205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9887b857-44a5-415a-a278-3d6f87841dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb58fca-6f5b-4ae2-a4ad-acb4d45887b6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9f547c-fb62-40bf-b31c-1b978da85b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e989e4a5-b667-4e58-ba27-2a89e73c42e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873169db-5d49-42be-bfdb-757b7a1731aa",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbbaae0-f50f-4356-9e59-08ea051f7cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bb6971-483b-4251-a87f-2ecb131a6a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38724e57-4241-4701-97e2-0a40446a96bc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1faa9c1-96dd-4861-b57a-634dcd0ae137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd16f1a2-98d5-4c2b-a3b0-eb3dcbecbee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdccbd5b-a1ac-428f-9e7f-2516485eb2b9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ff9ec-e139-41a0-bd48-9f883945d6ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c92f0c4-22e4-48d4-bf50-3c81735daa44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fc451b-4c52-4fa3-aaaa-7de6f509ed77",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87600790-3201-4263-952f-7f6b25a1fda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2418cc61-4189-46c8-827d-da3a44449648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45490e60-51ed-451b-b483-c1ac5d55575e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50abfb4-7d99-46df-8ba3-e30f17ea9a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68422bd6-9228-4c07-82c8-857ede7dee71",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74fb64b-e801-463a-ac78-892eedc86dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f899797-c627-41a8-9ebb-506753f73993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44300c7-f675-414f-bb9a-e92ff8b17ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ba0fc2-7456-476f-9875-5db4f7811938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5041a3f5-2af7-48a6-a3a0-991b31ecc9f1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbe7d7c-65c9-4b3b-a8b5-047ad1e12d9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f864f6e1-87af-4456-a0c4-0763c03da8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f60896-24ab-4740-9df6-a5ae781e0a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58d6269-ea17-41ff-99b7-3dbf49a1879e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609cf1e0-bd1e-4e8f-94b5-973bbd80e839",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b03f4d-6788-44b6-acfd-6c9c6878d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "149bba6a-2be6-4348-9508-3c856cc2f5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533999ec-ca78-4ca0-91cd-1486971b4ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "293c8b8f-89c6-4822-a8e0-14c99e10a4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be12675e-8338-40fe-9eee-db5f0e4d7f9f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5e833c-7d66-4d5b-a273-3b6f9700ca8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5556eb9-f74a-44ae-85c5-4ee68ae7e847"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09deb5a-fd8c-4c30-b62c-0a383ec27c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a35648a-e9a5-4ac1-89ea-2e49d7653619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4689c68f-7d9c-40bf-9d60-1a59b9fd23f3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcb7ad5-33d4-4463-bcbc-1655a3109449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5404b7a-3277-43d8-a59f-994f07160400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc283a98-41c9-4600-a9dd-e546d0a60c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b59e4bc-f87d-4ed8-9024-c1d24358c02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdff226-49d1-492d-a5dc-65dee93fde41",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daffa30d-1efc-4a71-9b31-9fada24d9f75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60735a9b-eb14-4f3e-a3f7-0109d87db54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fca9008-fe4e-4357-8b02-c00bea2cee81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b12a15-6a23-4724-bcd3-b78c218d248d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7065ca2-f7ad-4c98-bdc9-306856ff761b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e387e8f-81e8-4c37-b479-4386117a1ff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73169253-96b5-448c-8e1e-65be7c295a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37358a47-74e5-416d-9cd9-3025b73a031f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53a416f-0884-4a0e-843d-3806c9b17eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7176006-5012-4114-bbff-87c30335d730",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abaa373-7e7b-44eb-aa5b-52b6c0d39dad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102fbc85-e808-41e8-83c6-65e6c8b7812b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67af9ec-8f07-4eb6-a809-4339359be09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6a21a2-48c2-42bf-aa9a-a1a836339998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8299c3-d41b-470d-a865-2b48444106b2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced1438-2694-4f54-a405-38f36627d350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c646386c-de52-4860-92b7-fadae5e7693b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae96218-3f6d-456d-bcc8-edb1ed5c1262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aa26b9-3858-4a46-8dab-59a8255e1786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77435b2-f360-4d9c-a463-82d34a12e51d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75abe482-0710-4005-9994-bd1451f5dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850c64b7-cb99-4233-80ba-5c9ad9209961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e9574-2f7b-4dd7-8dca-144232259588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2180b7-b0f6-40d5-b721-43d9ffd7cf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cadbd3-db4a-42e6-b89a-8d0b06810306",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9d4393-6067-4785-b039-544070dc9729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273e5c02-185e-4063-98d6-791cd3e71317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf82680-d254-43e9-8880-3a618c607091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8759b600-d130-48fe-b97a-104acea764cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98c0a68-44e7-45ed-9171-e809f57a4f25",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8398e872-8198-4204-b845-bb54c7ffac30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91909e5-6c9f-461c-a59c-51f561a8b743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38154434-6822-49df-937d-fd2387251cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3553f4-8d06-433d-acd6-33098150a9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11111a26-3f77-46ab-8d49-2268008f1d1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2344a5e8-081e-49e1-9208-76f89716fc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c3846e-3b5b-4d11-a6a5-7eaeb02f6822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f2e873-52f7-45e6-a9da-6381826e4f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f370411a-6ac9-494d-ad3a-88f51a3f89e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8c5985-67cc-4602-a4e9-d7b3cbb6a775",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13592f58-0b21-442a-9d3a-209d5d221bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd987f6-0636-4907-a843-6c38ab9d79f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d472e48-1377-4492-a9a5-d1950173f296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e9526-2829-4bc8-a3cd-365d0f1b9105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd92ca59-10a2-4aa3-b0f9-c49638ca0ad5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78359826-15c8-4a77-b867-8c7c4af88dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f684a0-8964-4310-9623-2085722db8e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e597d17-85ee-4f7c-80e3-40fa8ab26d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9faed5a1-d925-4b7b-9706-864f01dc1d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3918022-32f4-4910-9483-4321a488ec22",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1506bbca-db50-4bf5-8090-9612076f59bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b208d7a9-5e05-4a12-af58-10870d7aebcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b74d7fa-c25e-4c0a-b57c-27810a177c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f916bdd-9daa-40f4-a370-84db29cf21d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92510a60-91ce-4d72-8976-0aedec8c61d7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9430c7-583a-4844-8f03-7002077e9752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be701fb7-a6cb-4fc7-a157-460b20f1ef24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4906989d-150e-4959-970e-b8df52b9d824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239b9a32-19f5-4b5c-9b3c-a85fbd9340d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0f3a9a-34c3-4324-b187-00bda1d26916",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2cb578-96e6-4588-a4e6-dff270bea5b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5b2ba8-fee0-4977-a005-c56bfd3a0f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3186a975-8e53-4921-bec2-6ffe864767ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e5d82d-2f70-4f29-8b26-8ced7d62c557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf4a468-6880-4036-874f-262d7e974d97",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0abab37-9522-42c0-80b3-fe522924f284",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf80f9a2-2018-4bc2-8e2e-38bb007c88d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c6a3b2-beff-4a6a-9b4b-11e53268a539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fbfb7f-1af6-4794-98b7-dcc9bf781fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d96ec9d-4ea8-4606-8da9-1869bff0e869",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22ac4fe-bbdb-44ee-808e-ce984c890b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2dbc64f-6a40-4459-a822-793392ebfa81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1afe35-9d95-4108-9824-7fe4292a544e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f347b1-6cf4-4eda-b0b7-dd7ef4736096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52c6d3b-22ee-45bc-a1dc-efebcf2b6ee7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d127897-32f8-4c64-91c6-c82260ea53e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3c9461-b378-438c-b904-bd124890636c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac27877-f3c7-45f4-9a26-04ffc4c7219c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c4707b4-e484-4fdf-a980-94014afa79ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e73d66-1ef9-4fb3-b4cb-3e3f8855db1c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f84d15-af30-470e-969c-b172ec365f8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d80bc029-95f3-4819-b7ff-a41c72001517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ab9ecd-32ed-477b-8651-90dbd6cedf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51c3be9-073d-4c91-b4df-ef24e00b89a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36e85ae-b54f-48d5-8038-535d1dfbe134",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55596ae7-66cb-42bc-a45f-999acbd0cb3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db2c799-c216-4d39-972f-058d88abf51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e5dcfd-b87a-46db-82d4-5a2621b32e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f5f749-0d91-4717-96f5-c18a163b525f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac0a342-91df-49ff-9888-20cfae8c485b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56a07f6-536a-4e1f-84fc-0886aeae76a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531ddcfd-c755-4989-ae99-f5574f8a05a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b95793-9318-4dce-83a0-2437afe98558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c63f0bb-2eca-4f3b-bb2a-c70805790cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1950b96c-1c40-4e3f-9793-6931415e5f4c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a8ee18-8c92-4207-990d-f434c3f3ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cb69f6c-f064-4265-ad3f-b171680b76e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788558be-dca5-4984-a57b-842279f34d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa93ea4-0d65-4337-864d-0b66e8a17666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe38a872-36a0-4a5f-bbd9-0cd9f2c0df13",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ebefe0-e1cf-48d9-8f64-6f333f0e6edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0c5764-83f5-49c2-8ca6-e8d114f0c8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22850e2-2c0b-4507-b122-08c921b4a74f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7134a3c6-9410-4287-8ece-a48e28b77cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c9800ad-f95a-462d-b589-87d9217b9fe8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389e43e1-93d1-4129-8289-6b35ff2f3c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fb5180-92c9-437e-be53-35f4cfa86082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a05a756-8f56-4cb3-ba93-3b132a65410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc1cf817-644e-413d-a53a-b77840739065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c467ff-e1c8-433d-81ba-5169fdbb4576",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bdd8a7-11f8-470c-ace5-0ebca7965226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558b5c98-0484-4f53-aee9-fc102f2641be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10859144-7e0f-4a3c-8f23-bc9ee89dbb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecc75a3-fcaa-42f9-a2f2-2694c3cf15d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94abaa2d-91c4-4be2-858f-860c5a6a92a4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792236d3-42a2-4237-ae59-3f265bbab399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34252a51-8e0e-43c0-824a-e11c12ce1071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a361666-0fc0-4e54-846f-575cb3bc0f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59710776-426a-4a38-99af-6d9b37ccbfbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181ba6fb-9b29-43c7-b55e-eba0f97d66da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf263a1a-9aca-4137-aeee-1639a3a5f5f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e7853a-87b0-47f0-84b3-a7a1a1a1380f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff024518-d6b9-437d-a9e2-855f14427280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045c9a2e-e4d6-4d09-a321-0923689e31f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e06469c-9a57-4c3a-a79a-16a37d00e976",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d0e23-5de0-4b52-bdba-f403e828a072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc4fbcc-1f49-4036-9e0a-38dfc98a86fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c02a21-e3ed-40ec-9bdf-b57a8f042d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95933d51-c456-42a2-8451-ac771e996bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf6c8d-9dd5-43d1-8646-567794703aa9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64040dc8-c2bc-41d7-9169-a95c13e5ed70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fae037-784a-4f3c-88ed-b5c8db46b8a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dc0954-bf51-4f21-994f-8577234f5304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "977eb8cd-d479-4da5-9fc9-6ec102b6697b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8684b4b-b717-4869-8966-eb290705b494",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec31dd5-4663-4f99-b335-1089d6295246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417225df-0bf1-4de7-ab21-5e4ab7375f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25d08b7-8cca-4025-946a-f365d0a0a1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7341ba77-0391-4a9b-a1cd-6822ff15d363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f338d1-83e9-4a09-95f4-2e24dbe50695",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64529475-cbc2-45b1-b7ee-17093c900216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27055d1-9120-4310-b527-c08f1d7992ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac4adc4-82a5-4af4-8f5e-3d578f6f3b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec8e8e9-46e1-4d26-84db-ec53cb93a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff14e900-37cc-4f95-9de4-874eb66bebc6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1435ff-5da7-4234-a017-d913e764fa05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67412fc-5704-44bb-b125-2eb06178b5ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ee540-8723-41d1-a57b-9ef4421a90cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b305453-540d-49db-b143-2f92cc9b468a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1849c688-fda5-4fa5-90aa-5a8e99dcfb46",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f771be9e-100d-4e34-b4d1-cf503f18ce76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15253341-54e8-4bbe-a35c-8f5673ecc796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a05cf-152d-47c6-a637-718389c1b9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e6b823-f7ff-4b77-a8ea-79d08b21e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef4ac4d-6ee4-4fe6-a3e7-a503db179a76",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0a34b-a4c6-489c-96b3-68058969619a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f120a0-f27d-41a3-ad8a-92c63517a128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcee5dd-1920-43b6-aa13-b98ad9f4c111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0c4add-7563-4d90-bb36-14f746197603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8661a31d-bdcc-4bc1-9210-a5f2e1db3d52",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063c189b-a7fe-4282-9a01-424e7e362c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ac723b-3d9c-4482-ad27-50e8d81ec06c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6297be59-b946-43df-8250-746b6b3dabf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153f70f6-327e-4db7-b455-1d3f54a8f738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2526b2c6-3e0e-42f4-a3dc-28dcdb2c9e11",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd2a7dc-3939-4dd1-a409-9ed1af985395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c3d76f-2d7b-4bc8-a996-cd42279399ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7df2fd0-bf21-45ed-9b69-e075c98243fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72e28ed-7a6b-4bb8-9daf-186e9df2cb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1226b1-54cc-435b-8c1a-ad80191a113e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86d31a4-97e9-4190-b3ef-794f60d34530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fe3807-46d7-4449-aaa4-ab028da8192e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd02d6d8-130a-4dfa-8090-ea9bf2a902d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534599ed-0f5e-4e34-ab2f-08e84bc6f421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4762604-8243-4600-9270-46f7962c39d2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc926b8-2054-4bda-b17c-e5b364e7a952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35371388-335f-4a00-87d1-eaf22a04f4ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b19f73-1188-4d88-90c1-84747ca58eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2a073f-3c29-40c7-8100-7cd0e8f46227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224e4175-7127-49de-bd87-20f40cd9cc39",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cb1072-4c98-445f-8869-821da8646131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d41540-520d-4e84-b45c-0b7062fe7a99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a57ded7-3a2d-4d62-a955-085d8cbc0548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65386504-0530-4503-8ddb-22f8977e30b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28583e9d-33ba-4ac1-a315-4158522ef00e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82197443-1ffb-4974-a8d6-5e479c443a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffbb7a6-d2dc-4db8-8cf0-d0b719a077fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92035980-7a9d-4f42-91a2-49f7ed664908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196e9d08-8d9e-4482-949f-23c3e2a31d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb0f733-2b33-4b95-9f66-1737c722e5c6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f8536e-64bb-4ebd-8b11-96fd65c2eae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b1cb72-c8de-4a7f-930e-13d97c08172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b68a0-23a2-4f8c-bbd1-113e651e5d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f544fd3-226b-4262-8dfc-597756de7efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec3efe6-490f-4213-83ec-968d722e76d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24edbba-e99d-4bf3-afdb-f3797a54dc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214e0c52-92fd-467d-9cbd-369d4b375938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3312b9a-2408-4906-969a-954c48c03554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674fba69-c48e-4803-82f9-e66a8b6b7635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f20f39-56d9-47e6-964f-0d47caa93e3b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c136610-f62c-46b4-a98b-bdb7d9f846da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08a09b2-a5b1-460d-b2a6-a7b015fb8638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be72ff6-62bf-4ff8-bf2a-52bbb0e2a1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a5681e-9274-407f-8d5b-cd75fe54e6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9638c260-6c91-486d-af40-c26571e1f39c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d118d-7d1a-4370-ba6c-1a6dbc11dc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb08ad2c-540c-4e70-9be6-545c84ef244b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6815a3-7778-4add-859d-020a7c7b70ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcce0bed-f559-4c24-a190-67382284fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd0aba1-1040-47ee-8f12-142418e06278",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e85770-968d-494a-b853-58253d0f88b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6702a9b-856c-4529-bfdf-2f43dbba6da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd67f3f-e719-4c23-9377-506152d1333d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06379992-6b03-432b-a096-6368fa5d38fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8398ff6a-6bbb-4e65-9edd-000333962cd6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297b43e6-2752-4752-99e7-f6234e289c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f13bae-de90-4f72-8219-ceb673a4472a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4c0054-3cda-444e-9fab-3fef17edb078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214c3512-1aa5-45eb-a219-7e52cf1da062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aea7359-06b9-44c5-9cfc-19e73b833192",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fce5f9-6418-41ca-8497-8e2b8e8a0b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bca9674-ec09-4ad2-b96f-5a4b3571fbec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83771f6-a21c-4b75-a06e-39005b56de3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ce9d33-37ff-4179-bfc7-4c75ccc35efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a074b35-8318-4ae5-b8e1-27b9247b91a9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b42a0-c87e-4ead-8ffd-1389ce20c805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f394a6f-0490-4976-afec-fa30f12d9179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f2fc6-711e-4405-ba69-0f7aea879c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111683e3-4931-40a8-a32f-478e06bce08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b4816f-c994-4cbd-ba5e-c1b6ffc234bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec35bd2-9e52-4a39-8d57-fd83eea5be6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f577682-f52d-4343-b20d-3c0f7633f618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6270c4-b9e2-4083-a8e3-ef09b220ab03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619d518f-61d3-42d0-bb43-171e18445f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae0c282-8309-43d0-adb7-a0b384acb8df",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d066c7-7122-4b1d-8e25-4a69cf6ed965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe0040f-c2ae-4a10-a8b7-32499454b4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a272218b-1d5f-495c-9cdd-7b0dc3912287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5331d713-01c5-4de2-be40-2045a157fc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f96286-dd75-47cf-992c-e0fd28665210",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6fd594-ad70-4bb8-bc04-5f439ad0879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab0e69dd-fc31-4dc0-a916-4a8539b3b3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c86695-fe7b-4933-ade3-42bd49dce8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31979d42-a5d3-42de-ac7b-eac5153e18cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695f0c16-65c2-4e39-9c82-971024f75413",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d239279b-7c13-4ddc-b052-f2820575234f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a730eb6c-b87c-405a-a583-142c002c21bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37513c6d-77d1-4350-b7b8-d530567d4b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a3def5-7b28-4008-a6c7-36f560b4c3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0e7c70-823d-457d-81c4-e85cdf0eb3ca",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4691764c-5307-4aed-96dc-8dee35535aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82267d59-67e9-45c3-918f-5f666a60b857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ea7757-f75a-47d0-b52f-53ea38f59ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9125964b-e8dd-4b76-8439-fee27be4636a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18de2985-1100-464a-8a23-04fa56151056",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb69877-9a4b-4718-a4c3-3f1f3ac5ac61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502bf2f6-1fc2-4f31-b470-ca0d2a128ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d62868-b29f-4e23-99d3-b97997fc6f97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91fed684-b2c6-4f1e-97ea-a0c82da0ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4032e0be-d86c-4b99-a425-1cb9fd35f42e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51278cb-59ea-4122-829c-0869c471ff89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ef4109-2386-4ae3-8eee-46cc91e4db0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54162ff3-2294-423f-a22f-f7ba29ede70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b0fc4a-55d8-495e-b2a2-ea6787a42450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6ca1bc-0044-4769-9003-6a77b41678c4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d81d95a-bdcb-412c-8fa8-fafe50eb9e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae0415b-272a-4565-b183-830fa7eadc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060badcf-06f3-4d64-9ca1-215651a69bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89a13a00-ba7d-49d7-9a63-56f55c5d17c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b89ff99-a8d2-49be-a40a-0b89ba127f63",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92947ff0-28cf-4ce7-99ca-d9f6cb666477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a619c81-a725-44d4-9fd5-8bc029bb2690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f62987-2141-45c1-b559-0e3030688aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e07caf3-b61f-477a-bfe6-2901c45c0168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ef5dd4-37a2-40fa-9091-040c150720a6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b75032a-1000-45b6-992d-f4939d9a2622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dfa19cf-0ca0-4671-99fd-c164d8a474f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5c54d4-5498-483e-b3ff-db1d1b361476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97180d9-c9a2-46b9-a633-d8fcb9eccf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92567cf-63ce-4481-9571-d1d4f7607548",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3b36cc-44ce-4cd2-8481-029e24bc02aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f58744-6d08-45c4-9910-1287767ae27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15561bb9-5460-474c-93bc-3c5933ec982a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9799e5c-7bad-4aab-89cc-52e2587ccea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd09b9d1-cd5b-4c70-a709-9c7668559354",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6cbac2-2498-4045-8610-4a23b3482290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee893798-24f8-4abc-a414-35c5fab09cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392cf210-6536-4cce-9157-ed6fabdc4211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66eb2fd0-cca3-4d7f-8e79-1a4a811970c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe25f02-79d9-4ca2-8e59-42ceee107cbd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979702b2-a500-444a-a55a-8c1e2580975a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e178c27a-e63a-482b-9699-ee580e44ba86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7283f4-363c-4aba-a962-711ecbc15216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e19e4a3-5c9c-41c6-978f-1b15871d3e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068da429-f809-4da5-8c31-85f75da24b25",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552dc0bb-ace6-4ed3-9081-d66b6b422dc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d24cd45d-77af-4773-b4ac-699c9baa0a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e467bc0d-f30a-40f9-a365-7d568faff35a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e0718a-0a53-4064-a200-f82510a78a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5478f113-5658-4dfa-9433-b3d2665a4d8d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dff91a-f367-45e9-b244-b56bbc588d8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d293b42-3146-4123-aa64-d54e737e32cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1eefd5-fc6b-4527-8499-57b9900232ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c52aa24-6b13-4d8f-9790-b15a4549bac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f6a7ea-4abf-4db0-9f8c-636f4dbdd365",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8a4802-caaf-48ed-85cb-3daad78f57f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be2e714-cfc6-49f0-8b07-4c10c9ce390f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420b187b-a9db-436b-b7dc-03008012620a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fb9bdf-4f08-4693-af3a-53040a608617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d207ec5f-40cb-4d7c-b376-144814d508c1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22d87ee-22cf-4e34-a2e5-9a9cfff7083f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ff2709-b9ea-4418-a33e-864c92c7cad5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd6967c-51a1-4300-8c02-411e5770733f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34930b65-d46b-466c-911e-6b848e532d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20bc1bb-16c7-49d8-96d7-f3f4f0d47396",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d507a3-b78a-44df-9c83-463e77ce4ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9db4bcdf-1ee2-489f-9ff3-5147033784b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328ce1d3-07c7-4ba5-873e-20a52a0bd902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855ad325-a381-479e-9ac2-3a47633c19c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abd8ad5-e001-4aac-a753-73f5a82a63b1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1904d-6f51-487f-bf2d-0682a3caf2ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ec9ab1-fd41-46c9-86a0-07d02392cded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4e8ebb-ae91-4c63-aa4d-b96ce757c08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9bc3b8-6503-409d-895a-3593ec1ba445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b423e9-b64c-4151-b104-5852ae0d6314",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590b72eb-a945-407b-bf26-45e8c1244b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b34f05-845c-4c06-a57a-9a14a1f1e404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5446f4-77c1-40ed-a9de-b59fcda4c698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f64ecdc-0b1d-43a9-8f07-9ca24e4c45b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f7998c-6c4e-4dcf-8bf0-747b235e612f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed4c0b6-e219-448a-be0f-ff0e85e570a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac249067-ca36-4b08-9c8c-78f700b4e3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73127fd-f359-494f-b5af-d4739399738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650c3f8c-3375-468a-b4de-f5ef96835b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364dd931-af08-41fe-870f-7c4b7cd076ed",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce631cc6-34f2-4de4-b9d4-819d1c6abb17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4795fa5-4b95-4c4f-941c-33f8ad76f057"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201bcc7c-7eaf-47bf-af61-7dc033b1d6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4829d60e-2f64-44f3-87ff-2249279ef6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84816cb-898f-4577-bd72-c7c352e4b84d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c7d72e-93bf-4d6f-95a2-b91e2f374b28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bf7665-851d-487e-834d-715c227b9058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "903be0c5-1274-4c90-ac8a-36950997506f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814e0a2d-6a0a-4218-acb8-f01295ab12fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac58fb36-0e04-45d4-912b-b4dbfd1e35aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d291701-da00-488d-9787-17a68baa6887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15e1a50-aede-433a-b71c-7f690f5df6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e89b5e-373e-4d71-bb2d-dd4d3c4434e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0f82114-031b-48c4-9a17-173f82310967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d366637-fd31-4d39-ac46-e3e45e8dfb24",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb678b9-5b7b-4eb1-bc95-dfa27544ac87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3b96f9-fe0d-4d16-8d27-b04ea6f6d430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef9cb99-22b5-445e-84b0-2ce416753c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94304ca-a226-4b84-9fa5-e0aa907608e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7eef7e-2c34-4ab1-8927-897e1bea0c4b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48d3a5e-832d-403f-b4d6-82c9257aa78c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0686eea6-3a2f-47c2-8563-9b413d6613c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308a663c-882a-4ec6-ab38-6f993a6cee69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb8ab396-3227-4db2-accf-b1634c6a5991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dbc816-f079-4298-91b4-0838c9dc31c0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199b2bbe-d0da-4437-98df-b2209918d05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dfccfc4-71ac-4db4-8502-d54b5590da9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a34ef0-73ff-40db-846e-093591ca3f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466a8945-37c4-402c-bf8a-9817ddbfaea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7335dac-aeb0-443b-b497-adf34e3537aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd9a4a8-5ee7-47d2-9da9-f73c4db5678b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736de900-9ab1-48bc-8156-62a73f45bd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04ecd14-a2e2-4525-8e37-1b8bbc5d2657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486312d5-7b7b-4ada-870b-94428794c110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c422adda-10e1-4ec3-adce-7a85e8688ecf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972f5d1e-b79e-435b-8cdf-77afce316b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0707ac2-0561-49ef-be39-d0f19b3c80e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bf1e1c-1565-43f3-b4aa-063a6c38853c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7c60d9-774c-497f-a9f7-b08dacc4f815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009b2d53-ea73-4d61-a495-23b7a064debb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f1f024-c75c-4458-866e-5af846c3e548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4ad3f8d-d6de-4bd8-910e-cc4f674060ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa12006-c630-4a6b-a5f5-24a271178e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6d9722-229b-4161-bc2f-8f08dfa43529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3c84e7-47d2-4a0d-b1e5-75692dc585d8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e42827e0-ab8a-4c93-8fd3-626377c6bf6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb3dc8e-11d7-4ded-857c-943909565b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00356fff-c35c-4899-9545-d47cbad2e8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c2efed-8b5e-4772-8e66-d6ae2680cb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7edcc5a-ce08-4313-b933-dab5cbb22a84",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b17fc6-db7f-4a71-8eaf-7d86f173a81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b4f95f0-129f-442c-ae07-bf3f43a59b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab100d01-df05-45a7-8ac6-5925a6a5b2b2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a3a51c3-db07-4ad9-8893-6eb5a56a2805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a735c15-77cf-42c9-825a-fac556f2df44",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3594fda6-2ead-4028-9a3b-514daa71e136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d590a778-8881-42dc-9312-12e96dfd74f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d2046-bf00-4666-a848-4f2dd2cb8a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d098881a-6ec4-455b-b16b-9d781f392636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b74ec-d895-4103-8139-f97ad4b7da9e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c4264f-d965-4926-a80a-940c519ce967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "518e6a5d-f3cd-4a57-92de-484ddea0218a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdfd396-5d9c-480f-9630-b928baf9b902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ceeb305-14f2-459f-b874-c579a3636f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814fd7e9-8d18-4826-856e-71fcc997e5c7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f62603-2e32-4d2c-9e04-7fc5722a21dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1699a96d-7b47-48ae-b441-4911971b0b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8921e72-b626-479f-a446-8dc0971de03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2281e6b5-5189-482b-b93d-22b09cf3e72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93b5f73-c05f-4863-8254-c27c9d5e40d7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f3d34-d293-4ea5-a709-cf5431e3c0c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bef7a0bc-af32-4a5c-bb2d-3369debfc274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50c82e0-ea24-4297-bc4a-1e51a8818744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e499c5e2-14ed-4a8f-993f-65d9526b96f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baeddead-c13f-45e7-bf27-f46632d56e3b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3727bc14-7773-47e5-bb2f-bda9a6f3fc8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743490d1-a5c7-4fb5-81a9-3209b9951aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b417c401-f6fa-4cc5-b277-411f35b357ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f90af3-6049-45f5-9340-9e707327bdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad5e8e3-1675-4f09-9bc9-f34b9252f4ef",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560fa369-b128-4bc2-b0ed-3b552a3b6359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57773d6-216b-4b1a-8034-6df1dd684516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5deb815-eea5-4ae2-85dd-885d44446724",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54738aa8-3aa0-430f-a2de-7d8da241fe41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1a3517-50da-4143-8113-4559c25d710a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2319f135-eb6d-4e08-a6b3-c7c8fb50c2d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e559970a-87c3-4b67-9b08-3d1d2953baa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872f0521-fca9-4ce1-b58b-9e0efa9f12c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6404c11c-ad68-43f0-bf8a-9ed5d928719b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4209d00-3140-4eb4-ab80-d5f2ad4936bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b969ab6-6aba-48ea-9607-c05e8bb12a04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8c10d15-6926-4b2e-9893-73a0decf1d07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "95c17884-ac1f-402a-8b27-fa37cfd3d554"
                    }
                  }
                ]
              },
              {
                "id": "b7ffe0fe-303e-44f0-8aa5-f36ac42d4576",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48c5fa5f-7ecf-4d5d-96e0-25b037ce3033",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070f0475-5828-4cb6-be1e-e3465062825b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "549fbe93-eb84-4c43-a844-555b29a764c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ce501-44b5-4fe0-b0d4-551ca327346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb7008f2-ce8a-4165-85b7-bbd23e4ce19e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b799ca48-8156-44e8-9110-b8c6cb1a051d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07004455-c205-4b6f-be64-ac49cd74d278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe89a6b9-f2de-4587-9769-e6c23ff7eddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0436b980-f6d2-4324-8627-c451110e62b9"
                    }
                  }
                ]
              },
              {
                "id": "5c794779-0e8c-4731-80ea-37d1ea0ef228",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d5ed9aa0-6d08-4e67-acd7-e7d737b990e1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6095dc1d-9a0a-4545-bbb4-0e21d5cb0dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "07e0f4e0-89da-4f8e-b07d-7be87e8d2caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dde7bc-31c5-4e8b-949a-af0444a11468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d0496f-1a39-42fb-ac1f-ec569108b2da"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "044d0f22-e556-4b5e-b4c3-cc9ba9d89504",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f516a92c-003b-4602-8299-c69557baf14c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f484872-8a2b-4739-944d-5723fa2107a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0adeb720-6bad-45bf-867d-cf0b960babf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e816ff75-ac7b-4c05-baa0-f03ef2220046",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32ff3a33-2f05-4567-9dbf-2687fa5031a6"
                    }
                  }
                ]
              },
              {
                "id": "25beb178-cb83-4dd8-8558-1305fca5fa94",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90753378-f9ee-46ce-8977-abcd712dc648",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec5818c7-21a4-4129-9807-d909ad804a31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3daece84-254b-49ee-8f5a-7a9b70372d62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37d4232-a9e4-4890-89c8-ab71282cf980"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9d4d534-d449-46dc-ae30-82f930ec58bf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1119f5f7-9847-448c-a9cb-9130faf91737"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed32c933-abea-4b1d-940e-94a8127839d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "197aa220-15f0-4d2c-ab65-40f4991db59f"
            }
          }
        ]
      },
      {
        "id": "3fb28fdc-94df-4faf-a4c5-429170d09998",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fc9a3782-c5cb-4b3a-bda4-7de3f5e19b42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6605cd26-acec-4a60-bd06-8f283ba98397",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdb6bdc1-3f36-465e-8cf7-f0ce96ad9f60",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b47050-33a1-40b9-8f38-7929d4b87ea0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f2c9a84f-c087-4783-bf68-7851f7257079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468741e6-e88d-4348-9cb2-35c40c961a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3efcb7a4-f2e9-4c1d-9a56-14f4ee43dd73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3b18d8e-ff50-4ded-9c63-c7d819d93fdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f8bd2ee-e1fe-4774-b3b4-35c31d2592be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a826f2-5114-4d41-9659-47c47a6fb9ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6d82af-37a9-4227-baaf-770b6b5c4996"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c2f864f-9b78-45f1-b234-0ee6797b50c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "82355aea-be4d-466e-8b5e-d3243735a6c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77405e5e-b04a-441f-b23f-37c7c0dab4bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be5dec5f-5bd6-4785-8992-86f4089d41be"
            }
          }
        ]
      },
      {
        "id": "0871c1f3-4377-4511-8788-c094c2ccef9b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1598d906-6b25-478f-8456-3f39a85d08e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c9bc1c4-5b3e-41df-8242-2ad061270a6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bf864f2-1b6e-41a4-9d78-e12237738fe9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe5cbf8-3ebb-4c59-8134-9ece0e068864",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0971deb1-9853-478a-9366-0b4b8eea1a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb1d536-b3d2-41fe-87b9-d5dbb4e57184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20612509-8270-4a29-8b1a-1789b32b3015"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1c701c6-d96f-4584-b297-917dd4a5bdcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea7dab0-4359-4195-9db6-aeb368f5a0f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "08a32916-bf64-4c15-b2f8-7d94d4f78ddd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "066efb69-1864-4dfb-9aa7-317a3f2bdbbc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fbe162e2-1dee-41eb-a7fe-3dffecdf5145",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68125324-a850-41a1-99c3-76a489fc225a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cdca6f7-c84b-4b59-b398-beab6fe47540",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33e18ce3-066a-4a53-970c-5e8b57953755"
            }
          }
        ]
      },
      {
        "id": "506de5ab-e566-4687-9817-6f1760f90dbc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "16684318-0937-43fe-8d4d-a9baae4f8e4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50dc6a08-a5ac-4aaf-81fe-790e0882844f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "954ed7fd-91ac-4a70-82bf-78aabec96394",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d66a724-f63e-4e1b-9a0e-4bdaa6d1a0ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50361cfb-d56c-4c0f-8f21-f4566ab3898e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6869d83-3c1e-48d4-a22b-a681ba7494d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ed8d988f-b25c-41c8-a257-05322d0736b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33b5b831-75b7-4ca7-813f-8b7fe4dad6ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62191edc-0e25-47e2-b18f-675201b4689b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2b5790f-a74e-49ab-9318-3fd1a001efeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "531ddd65-86e4-41a1-8219-18916a6c6d2d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e157457a-ce12-4370-96aa-79083556ac04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "05af2b24-0375-4954-9725-54a0df824ac5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f383378-9c30-47a1-bf94-78e9076f7865",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3aaf546-5ad9-4743-bb95-754c04f19d45"
            }
          }
        ]
      },
      {
        "id": "5875fadd-109c-428a-a318-fb9ad146aee5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69478c4a-5e86-4e04-a97e-2e292ff5c25b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e36fcd5b-b99d-44d9-9898-0f7de7a4b988",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "62683896-a2b3-4451-9c4d-8b9eafc46a41",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfef51c3-fa48-49f9-add4-06936d4271ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e414236f-997f-47b0-9090-b4591291fdb5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 109.55952380952381,
      "responseMin": 26,
      "responseMax": 9774,
      "responseSd": 666.7209802492612,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721608885055,
      "completed": 1721608920699
    },
    "executions": [
      {
        "id": "c553f6b1-e9df-4d0f-9c8f-3e0ef2305163",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0bef9705-e39b-4853-bda6-e9fd718b0f3f",
          "httpRequestId": "16800453-2195-4ea4-8d18-9ec89338451b"
        },
        "item": {
          "id": "c553f6b1-e9df-4d0f-9c8f-3e0ef2305163",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "faad52ca-d997-4f54-9fc1-aeec48a2adf7",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "b5860f6d-82f8-45ea-942f-10ca08e25ddf",
        "cursor": {
          "ref": "92fcbad5-072a-4a83-a2c2-d07cee626fbd",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "880f840d-68ee-4a77-b37e-b3c88f93668f"
        },
        "item": {
          "id": "b5860f6d-82f8-45ea-942f-10ca08e25ddf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9bac6aae-ec08-4208-aee8-bfed475d84cc",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 0
        }
      },
      {
        "id": "55679e99-d70c-4623-9379-e347241da01f",
        "cursor": {
          "ref": "bfdcf63a-2224-4224-b085-c6abe7caea96",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ca9f63eb-ea6d-4f2f-8270-c45c15a909ba"
        },
        "item": {
          "id": "55679e99-d70c-4623-9379-e347241da01f",
          "name": "did_json"
        },
        "response": {
          "id": "08345f4d-276e-4a92-8554-81f3984449a5",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db6f070-1139-4841-911f-3f0403143a7a",
        "cursor": {
          "ref": "a8d765bb-d1c7-4143-93b6-9e4a06bbcdfa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f03b1df-d2f5-4225-8458-6e67fc7cdcd7"
        },
        "item": {
          "id": "8db6f070-1139-4841-911f-3f0403143a7a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e002ad73-f0b5-4876-8393-07ea75ae9b06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1214,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db6f070-1139-4841-911f-3f0403143a7a",
        "cursor": {
          "ref": "a8d765bb-d1c7-4143-93b6-9e4a06bbcdfa",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f03b1df-d2f5-4225-8458-6e67fc7cdcd7"
        },
        "item": {
          "id": "8db6f070-1139-4841-911f-3f0403143a7a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e002ad73-f0b5-4876-8393-07ea75ae9b06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1214,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90839608-02b7-419c-a92e-875439d37676",
        "cursor": {
          "ref": "26325576-055f-4c3a-8129-a102d87b69bc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c19586c8-ecca-48c7-b5ce-458754156665"
        },
        "item": {
          "id": "90839608-02b7-419c-a92e-875439d37676",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2b6779fc-2cbd-4c53-857a-2c59f5ab5efb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3660024b-e01d-467c-afd2-7dc3e6e9299b",
        "cursor": {
          "ref": "399d4b20-0187-4f1f-9061-e6bde6711c79",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1c919d2e-ee81-4aaf-9560-c6cbc06b85ff"
        },
        "item": {
          "id": "3660024b-e01d-467c-afd2-7dc3e6e9299b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "903c7dc8-329f-4b38-8e19-27faa793fb16",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0a7d35-72a1-48e7-8392-f8f253b9697d",
        "cursor": {
          "ref": "596937dd-1822-4185-93e4-ae40c3384022",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "211e6410-a566-4c92-9d5c-47e033362def"
        },
        "item": {
          "id": "6d0a7d35-72a1-48e7-8392-f8f253b9697d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fffd47c4-74ff-43cc-83eb-9daf9f49b2be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4fa32d-d61c-44b2-9521-eb998c123302",
        "cursor": {
          "ref": "3a4bd18f-1912-425e-ba76-e4235cec6d31",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "dfaeb76b-4da5-42ba-95a4-5f34a1fc5784"
        },
        "item": {
          "id": "4a4fa32d-d61c-44b2-9521-eb998c123302",
          "name": "identifiers"
        },
        "response": {
          "id": "fb14498b-43ac-47b0-a235-7d2cc72b53e6",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90c952-777f-44f2-8249-d4ced84473e4",
        "cursor": {
          "ref": "b0353d1a-a76e-455c-a622-aadfdce181f2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3a6fe017-59d1-4e46-b36f-0c17a51d43ce"
        },
        "item": {
          "id": "ee90c952-777f-44f2-8249-d4ced84473e4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b0b0f299-1040-47c8-99c3-48076437f14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3397713-e1ea-4e43-a817-ed597b436e62",
        "cursor": {
          "ref": "4e36bb4f-8f2d-4800-b804-cab73631a50c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "31d0c793-dad7-461e-84ae-83a7783047b9"
        },
        "item": {
          "id": "a3397713-e1ea-4e43-a817-ed597b436e62",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4a9136ba-9d28-4c20-8b6d-42b10d1a8240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb4c37e-df5b-4c01-85ea-318cb68764ca",
        "cursor": {
          "ref": "38966832-0df6-45ac-a1dc-0775dedf1795",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a1b513d7-ba6b-4038-ad4e-62ba73a52707"
        },
        "item": {
          "id": "dbb4c37e-df5b-4c01-85ea-318cb68764ca",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "60d8ea8a-cd01-4bbf-8943-f29dd6ee713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517dc8c9-e271-4b94-b5ff-df035ce98999",
        "cursor": {
          "ref": "83925ffe-6e80-4e13-81d4-99a407deca5e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1698247-9641-4c76-9022-cba9ac293795"
        },
        "item": {
          "id": "517dc8c9-e271-4b94-b5ff-df035ce98999",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ffa487a0-b75e-4f00-b23e-62ef2898f8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505be750-1603-4172-b358-ac1214fd7be3",
        "cursor": {
          "ref": "82f97059-88af-4be4-81b0-3975bf31eeee",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "262c266b-ea14-4f4a-9380-ef6d57376da6"
        },
        "item": {
          "id": "505be750-1603-4172-b358-ac1214fd7be3",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "21281379-1373-4280-8ae2-1c1f3fe4f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6811c84f-f49d-4814-b86b-fe81960e85af",
        "cursor": {
          "ref": "1e197759-58e3-47db-84a6-7be6ce4a4164",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "394fefcd-41cd-4605-b78a-8e66f358f628"
        },
        "item": {
          "id": "6811c84f-f49d-4814-b86b-fe81960e85af",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d6afc9ec-7de4-46dc-9eb1-a77ad8185f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9855d42c-a294-4d68-bf11-7e5109554cb4",
        "cursor": {
          "ref": "de86d2e5-0668-4e4d-8a67-8dedf4e0cd44",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e210913d-1232-4ee1-be24-b6355784a59e"
        },
        "item": {
          "id": "9855d42c-a294-4d68-bf11-7e5109554cb4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "998ca043-e010-4c2a-b19b-0b6129132366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b0478f-09f6-427c-a710-39ee0f76d373",
        "cursor": {
          "ref": "f3fb0ef1-4e7e-4a99-8951-39aba016afaa",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "76c13c68-7698-41ce-a976-0959e994cd16"
        },
        "item": {
          "id": "73b0478f-09f6-427c-a710-39ee0f76d373",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "207ce937-d889-4b11-9f4b-828db10d9991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672d6ffa-a572-456f-816d-3deb133e27a9",
        "cursor": {
          "ref": "4d2b2f8d-9775-4797-8bb1-96ba937ec010",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "52885010-d385-4bb9-a238-2e72ea52e300"
        },
        "item": {
          "id": "672d6ffa-a572-456f-816d-3deb133e27a9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d67423d9-78b9-452e-983a-aa123dd21f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383dd158-934e-4559-97b3-851438eafc30",
        "cursor": {
          "ref": "45501917-1e23-4e54-b687-685d1a06cac6",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86debe59-dc1a-4f32-98f9-3f3b9370a309"
        },
        "item": {
          "id": "383dd158-934e-4559-97b3-851438eafc30",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af4f6b87-1d9b-4543-ba42-7092a52a2b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3621d29-f006-430f-88f5-d09b2776667d",
        "cursor": {
          "ref": "0f3a1f11-86ea-484c-bb66-61bbbf18bae7",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "21748c66-0905-47d0-b47a-099d480253d1"
        },
        "item": {
          "id": "f3621d29-f006-430f-88f5-d09b2776667d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ac0ea309-9a36-420a-918b-99d153480510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6da6d16-0164-473a-bbcf-17ee2cac4ad1",
        "cursor": {
          "ref": "429824a0-5e80-413a-bee1-41b0bb38d2fe",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d404b5f6-9aa5-439b-bb36-0ea65c72ebbf"
        },
        "item": {
          "id": "c6da6d16-0164-473a-bbcf-17ee2cac4ad1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "15855bf5-42a2-44b5-8914-ec09767d13e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29b1673-fec1-433f-98c8-d781fa5e7ea7",
        "cursor": {
          "ref": "6dcff34b-6e44-4dba-812a-07330963d282",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ea645014-7c76-4eb5-b18a-ff2344807642"
        },
        "item": {
          "id": "b29b1673-fec1-433f-98c8-d781fa5e7ea7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "593e18fb-71e7-419a-bec3-9a7ec64d8466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a663148-3849-465c-bc67-3d087f425699",
        "cursor": {
          "ref": "2a81d33d-f1ea-41c1-9947-f8ad4e4c162d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e60ca116-b3c9-4148-b1aa-527aa0297f98"
        },
        "item": {
          "id": "9a663148-3849-465c-bc67-3d087f425699",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dadb224d-faae-4c4d-82de-65b6fbb63a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0195fe1d-6169-41b5-b3e1-0aee2063b265",
        "cursor": {
          "ref": "bac98a80-a569-4787-bca2-7490d583a2c0",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "63c88836-ae5e-460e-8222-10cf2c6bf949"
        },
        "item": {
          "id": "0195fe1d-6169-41b5-b3e1-0aee2063b265",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a3c76645-cf83-4777-a31b-0e67b19db836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31da1a7-b011-4164-96e4-dbda8d44315a",
        "cursor": {
          "ref": "8057a973-4dfb-4b15-a62e-193fcc78654a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6c616812-f82b-423d-8e50-eac4ae82b5fd"
        },
        "item": {
          "id": "b31da1a7-b011-4164-96e4-dbda8d44315a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "906c49a8-88de-4bcd-9b6c-14134900c92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93d3490-0ffc-4047-904f-e356a01f6d0a",
        "cursor": {
          "ref": "14932886-5fa3-42d8-beac-a3096e730ee9",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5fe85fe3-b284-45f2-a842-c3ff0a16c993"
        },
        "item": {
          "id": "f93d3490-0ffc-4047-904f-e356a01f6d0a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "53243581-5369-4314-927d-aee6a88e6c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce1b743-d305-4929-866e-932541ee7978",
        "cursor": {
          "ref": "cc9a61fc-82a8-4915-b617-422f2d3601f2",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "168f70cf-18f1-4d56-b323-ebb39488ad70"
        },
        "item": {
          "id": "9ce1b743-d305-4929-866e-932541ee7978",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fa7eff37-297e-42c4-8db2-24695d0241f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbfe3bf-0503-4ae8-a950-0f0d0c142d8b",
        "cursor": {
          "ref": "e3f3fc75-1435-403b-bdd0-2d2c3fa296a0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5c6681d2-9ac5-475e-a225-1bdf6a10994a"
        },
        "item": {
          "id": "ddbfe3bf-0503-4ae8-a950-0f0d0c142d8b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "561046b5-c31b-49ce-b26d-6fe8be933319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02fd5d0-d7e7-4bc6-882e-267c397e9f8e",
        "cursor": {
          "ref": "d7dfdc66-53ae-4c0e-a688-bd7f10cacb6b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "df921e32-6121-427a-86f7-817e66ab5c70"
        },
        "item": {
          "id": "f02fd5d0-d7e7-4bc6-882e-267c397e9f8e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8f344c9-8516-4bae-92e0-48747cc927aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e017abc-e57d-4b2c-b48f-8a3ef9c2abf8",
        "cursor": {
          "ref": "1ed7732c-f2e4-4e1e-bdb5-9b6e41734340",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b3c55160-0a4e-4ab2-9082-ddfe3b228b7e"
        },
        "item": {
          "id": "2e017abc-e57d-4b2c-b48f-8a3ef9c2abf8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "97fdefaf-25aa-4b49-a861-12a069f5788b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a07acd-698e-497e-bf1a-c65b2dad7de6",
        "cursor": {
          "ref": "d1ef830e-85e0-4a89-a916-b0d4d43dd2c5",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f3aa4466-ea7d-4bc0-889e-da83731a5a13"
        },
        "item": {
          "id": "c9a07acd-698e-497e-bf1a-c65b2dad7de6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9e8372c0-1ccf-4be3-a252-d0145a53e883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f1b076-c58a-46e9-a50c-9d25f7f241fb",
        "cursor": {
          "ref": "7fc1dd7d-2956-4a4f-bfdd-fbf34cfaab8f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "99de98a9-48ca-4960-9d23-bd4e6fa0d8d3"
        },
        "item": {
          "id": "c8f1b076-c58a-46e9-a50c-9d25f7f241fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "413de402-2df1-406d-bc2c-1096a71638a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69d7c88-d0f0-4e26-b2ef-0ecbec7b05a7",
        "cursor": {
          "ref": "89765683-da45-4ecf-9faf-04c5577e67ef",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "441872ab-75ff-4847-952f-7d21f31ac756"
        },
        "item": {
          "id": "a69d7c88-d0f0-4e26-b2ef-0ecbec7b05a7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0224c1ce-4f2b-4b12-9a19-e6e5a055a237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f507d-ffbe-4918-9f2f-7e8a29052e5f",
        "cursor": {
          "ref": "115b4cda-4c13-46b6-90c3-b3a4e281e70c",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "53194de6-c2e8-4c48-9788-7fe7869469fc"
        },
        "item": {
          "id": "119f507d-ffbe-4918-9f2f-7e8a29052e5f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "42f37922-d294-4153-83db-ee8f43a73d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e281cf-0315-4715-bcde-a0b030d60447",
        "cursor": {
          "ref": "c4917121-21bb-4c59-bf80-b33ddc48af6e",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "aba13b9c-c897-4bdb-a90c-4a3620c42eb9"
        },
        "item": {
          "id": "84e281cf-0315-4715-bcde-a0b030d60447",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bcafdd88-6bd0-44e0-aee6-c9d12807ee4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd09257-2765-448b-bf01-55cc93044be8",
        "cursor": {
          "ref": "b5698559-8c3d-427b-953c-6efc4ad90e4e",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ff5ed7a4-198d-49e3-a5da-c3a6014f791a"
        },
        "item": {
          "id": "6dd09257-2765-448b-bf01-55cc93044be8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bbb96ecc-8c78-48e4-8850-09642b2345f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6239d29b-2147-4c49-9ecb-2d61050ff574",
        "cursor": {
          "ref": "01e1c989-c13b-440e-8d72-56c95ab44c83",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4a16f141-0e52-4352-81ce-2e7053ee6232"
        },
        "item": {
          "id": "6239d29b-2147-4c49-9ecb-2d61050ff574",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e1fb2fb8-390f-4a4d-81b8-d277986b9078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa57a9a-bc65-4c6f-8ef7-7e0bb33ace7a",
        "cursor": {
          "ref": "7f17b16a-38d2-447c-a879-0636172651e3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b75eee4d-9ec1-4f8f-ad95-4288fda163a8"
        },
        "item": {
          "id": "1fa57a9a-bc65-4c6f-8ef7-7e0bb33ace7a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "84838d05-861d-4fd2-a27c-8a405a341332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa84ec64-a809-4ca3-ac58-1e05829449fc",
        "cursor": {
          "ref": "3fbe512e-93dd-499f-af29-cd64ee7e86b4",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c4e36e49-e13b-4fc1-bf3d-c5aba5b09702"
        },
        "item": {
          "id": "aa84ec64-a809-4ca3-ac58-1e05829449fc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3193bfff-7c28-4812-a16c-c7dd32465d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b68a6-a6c4-4326-b2ea-f9d3e489e41f",
        "cursor": {
          "ref": "fcf0abd6-50d2-4524-9745-1a27db93394a",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8c30e873-7974-44a0-9320-89fc569c3fa0"
        },
        "item": {
          "id": "fc2b68a6-a6c4-4326-b2ea-f9d3e489e41f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5296ce70-3bb8-4ef1-8399-b805d5d2d6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d84a11-1c56-4293-a8e3-23ca1e3e911a",
        "cursor": {
          "ref": "ac8c3174-cc48-44b9-90f8-2a26e1b3be62",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c16d161b-86e7-4322-89f5-de9524501395"
        },
        "item": {
          "id": "a9d84a11-1c56-4293-a8e3-23ca1e3e911a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "029a210d-c555-4abb-95cf-82e296f64cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f9561-d00c-43b8-a243-3a91262f9a1d",
        "cursor": {
          "ref": "880dfb56-098c-428c-a5c6-4e7709988546",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "988d2fc2-9f60-43ad-b8c0-aa3b941f0f25"
        },
        "item": {
          "id": "b42f9561-d00c-43b8-a243-3a91262f9a1d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2bb305e6-b2ac-4dea-9565-61c1f2593c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b73b9c-d52e-4721-b6f4-6fd9efd8c7fb",
        "cursor": {
          "ref": "f7da5231-a037-4b1f-bc91-a6eef58fcb97",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44d10ab0-61fe-4338-8c86-7fbde622d4ef"
        },
        "item": {
          "id": "c6b73b9c-d52e-4721-b6f4-6fd9efd8c7fb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5fd9a91b-364a-4684-9ade-37e9c081cf4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ef9d2c-c272-4a8d-ade1-d21df3f0bb85",
        "cursor": {
          "ref": "86bdde9d-640d-46e2-94a6-ec54302ea87b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "be395c3a-e1ee-4292-a451-57d0e10a395b"
        },
        "item": {
          "id": "32ef9d2c-c272-4a8d-ade1-d21df3f0bb85",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84e26b2e-ed59-43a2-a96d-3af1ce3fa816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61180b34-b107-4b7e-9911-e6a96962aa9d",
        "cursor": {
          "ref": "485f96a9-d59d-4c8b-87ca-e2ee92ff6b1f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6b41255d-4533-43a7-bf05-b7b6fd1d1dc5"
        },
        "item": {
          "id": "61180b34-b107-4b7e-9911-e6a96962aa9d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7c8d20f7-6008-4b97-bdbf-406802603285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e62c959-f36c-4ced-b68f-29619df837f6",
        "cursor": {
          "ref": "96dc1588-4fdd-48f9-aa9e-6062ea4550c8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "10694fa9-db01-4444-ac29-0b995be04830"
        },
        "item": {
          "id": "0e62c959-f36c-4ced-b68f-29619df837f6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "154a2711-3a06-42f2-b470-c446ab139a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669e34bc-0a55-4416-a346-dcd8d92ada4c",
        "cursor": {
          "ref": "06b46ff3-1cf3-4fca-9170-b2082908e72c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0b4436d7-831c-45db-ba5a-02ab067f47e8"
        },
        "item": {
          "id": "669e34bc-0a55-4416-a346-dcd8d92ada4c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "aa6d1ff0-7579-4446-91a9-9640a1e461fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c03d59-4d0a-400c-96db-ef55adebfd3f",
        "cursor": {
          "ref": "10e4c2f4-097f-4289-bb91-68ce27abf2cf",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4ac099a3-5702-4d34-8550-1b669bacce24"
        },
        "item": {
          "id": "e5c03d59-4d0a-400c-96db-ef55adebfd3f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "41479add-5097-414e-bb26-cf48c8a79e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f1b7dc-c56e-4be4-b8ac-512af73c6937",
        "cursor": {
          "ref": "5376f6e7-cba6-47e3-a3bb-4789798a400b",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b5801aea-aeca-4df2-897c-ec6b1e6d2699"
        },
        "item": {
          "id": "a5f1b7dc-c56e-4be4-b8ac-512af73c6937",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee62f63e-55fa-4aec-b849-125e3353ed47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68533a89-d2de-41f9-8f6c-0393d1e53e99",
        "cursor": {
          "ref": "843d3ff9-b991-4932-badf-5869a79d7fb7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f5e83a84-7055-442e-8f9f-17aa887f53f5"
        },
        "item": {
          "id": "68533a89-d2de-41f9-8f6c-0393d1e53e99",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e819f098-04ed-45b6-bc3e-85a8ec54692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c45e25-5ba2-481f-b0d9-fae83cde4349",
        "cursor": {
          "ref": "a399b4ed-ed84-406f-bbb1-6e26d4ddc09c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "219ebdce-1473-449d-a401-23f03ee49929"
        },
        "item": {
          "id": "d6c45e25-5ba2-481f-b0d9-fae83cde4349",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e1fa119a-bbf6-4149-9ba6-631ce6a4ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1f2e26-8258-4972-b288-b8b82dc416ec",
        "cursor": {
          "ref": "5b408a94-112a-41b7-ac0b-de35990807a7",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "92e117f9-8146-4a36-955c-0bd987fc9b2d"
        },
        "item": {
          "id": "df1f2e26-8258-4972-b288-b8b82dc416ec",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b838c592-9137-4c53-a70d-078b8fb87a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1c2be8-9176-40b9-9a25-7e27e43e7674",
        "cursor": {
          "ref": "6db6aa64-5315-43b9-b04f-958e57d77f93",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "75c3ecec-0e4c-4f85-9265-a407e3908793"
        },
        "item": {
          "id": "2d1c2be8-9176-40b9-9a25-7e27e43e7674",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2376fccb-e5e0-4928-aa04-04eb57ca0072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907e29a6-8d53-4d51-b30c-945d71bcd0a4",
        "cursor": {
          "ref": "a520a560-c97b-4863-8208-2a8eee8d52bb",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c701cfa2-c284-4bd2-bf0f-86ffe794e02f"
        },
        "item": {
          "id": "907e29a6-8d53-4d51-b30c-945d71bcd0a4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0c649c7e-90a1-42a8-a9d2-693ee62e3fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c479b236-eb62-478d-8b7a-ada2e9079522",
        "cursor": {
          "ref": "eb1d5e89-dd4a-46c1-b753-45d95c9f65fe",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2551cb98-82ca-4b9d-8dfb-16b381a6d0f5"
        },
        "item": {
          "id": "c479b236-eb62-478d-8b7a-ada2e9079522",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "41287efa-5b98-49b2-a852-06739375a574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbead6e-66ca-4102-bdff-25ed9b9f0b2f",
        "cursor": {
          "ref": "4d82779f-5949-4e67-a431-c90c50bd9334",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f4789157-8256-48ed-9dec-c6675909395d"
        },
        "item": {
          "id": "9bbead6e-66ca-4102-bdff-25ed9b9f0b2f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "903b1e2d-a301-4ab9-9bbf-c22c393496b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d55833-d660-4a63-ba2a-6fd49fb169a9",
        "cursor": {
          "ref": "da0915bc-7593-4b49-bdcd-b1e8d51489fa",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e7f01a91-2f79-4a31-9512-20cc2e685751"
        },
        "item": {
          "id": "e9d55833-d660-4a63-ba2a-6fd49fb169a9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "36c0691f-9d69-4318-ad31-b7fd86a1fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ecd287-6d8d-4a06-b57e-bc8a8dbd1ad0",
        "cursor": {
          "ref": "2edc5207-eb73-41ee-b7bd-b3bc02648fa3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a37798c2-e9ba-4c25-83ee-3da8b9bbecb0"
        },
        "item": {
          "id": "60ecd287-6d8d-4a06-b57e-bc8a8dbd1ad0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2025b094-21be-4885-ab0c-e2681e965783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b862be-50c6-416f-a953-01fed19667be",
        "cursor": {
          "ref": "9668782d-dd9c-4ac9-8fb8-49b067ca374b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ce1cf150-da01-49da-9437-441ece5fb6fa"
        },
        "item": {
          "id": "f6b862be-50c6-416f-a953-01fed19667be",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1a4ab58e-ab84-4282-ba93-9af313d4923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7f4ad1-152d-4cf4-8766-66cd5d4d7d4c",
        "cursor": {
          "ref": "96303336-a430-47cd-9614-2981ca998ef5",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfb7704e-4029-4b7e-b862-f68b49117f1f"
        },
        "item": {
          "id": "3d7f4ad1-152d-4cf4-8766-66cd5d4d7d4c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "082df9cd-4209-433f-8917-5a305dc2a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108c1f39-3a22-42c2-b376-9ef450fd3041",
        "cursor": {
          "ref": "eefce11c-ad94-4bb5-8330-a46d2d5ed90d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "787e7314-0f08-4c35-927f-aeb718985b68"
        },
        "item": {
          "id": "108c1f39-3a22-42c2-b376-9ef450fd3041",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bf66c13e-198d-4bad-a20d-80c780189175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e17d744-b8c8-416e-9f25-56972ad9e9ef",
        "cursor": {
          "ref": "0860b9a2-ee35-486f-b15c-b24b1ad88022",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4ee1525e-0ad3-40fd-83d9-829a65ff9366"
        },
        "item": {
          "id": "9e17d744-b8c8-416e-9f25-56972ad9e9ef",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1a9076e3-adc9-4ba4-9ba9-b5eda6dcb36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed97b342-12b8-4ae2-891c-6969a193cd82",
        "cursor": {
          "ref": "861bc432-5e1a-4b6b-a957-3fb3a1853dc8",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7ca0f113-b968-4ff8-aa0c-aca7b6cb84c6"
        },
        "item": {
          "id": "ed97b342-12b8-4ae2-891c-6969a193cd82",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ee732235-c3df-49e6-8dc3-4f3035eca2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b45463f-80a2-4cd0-becf-eb177ef09a15",
        "cursor": {
          "ref": "1463d296-0fb1-4eb0-9970-2c5bda8df8cb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0cafba2c-6f55-4725-b91c-b78dbd4fbe67"
        },
        "item": {
          "id": "9b45463f-80a2-4cd0-becf-eb177ef09a15",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cc1d29da-fe9b-46dd-aee5-0bc9f7173657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08347fe3-e320-409c-8760-fd3f464ed3f0",
        "cursor": {
          "ref": "6e0a26a5-6b11-433c-b00f-1848cbc0d048",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7f032e99-96f4-4e4c-9008-f3a979dc27e6"
        },
        "item": {
          "id": "08347fe3-e320-409c-8760-fd3f464ed3f0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0668a1b6-443f-4d3d-8884-33c1c895a379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c4f472-161f-4e95-a86f-e1aaa9b65d40",
        "cursor": {
          "ref": "557508ab-31dd-4996-972a-6c146e6e31c6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ddd51432-eb33-489a-86f7-6cdc4ddfa226"
        },
        "item": {
          "id": "21c4f472-161f-4e95-a86f-e1aaa9b65d40",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "95eaa0bc-43bb-40c7-a4d8-e1ea26d821b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a808ee0-580e-46b2-897d-1f6a20018c8c",
        "cursor": {
          "ref": "c82073f9-58a5-46ad-b7b5-f9cdf823cac8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "064c16c7-0a66-43ba-9241-e69f53010faf"
        },
        "item": {
          "id": "2a808ee0-580e-46b2-897d-1f6a20018c8c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9fbafd33-b668-4107-b6a4-cc05c76848f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33f8173-e4b2-4e14-9218-2ef4d9a68c30",
        "cursor": {
          "ref": "25812d79-2b48-4944-9060-45a3e44621cf",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "40d1bb31-6542-44b2-befb-669e47255b46"
        },
        "item": {
          "id": "b33f8173-e4b2-4e14-9218-2ef4d9a68c30",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "624ad4a1-a89a-4fa8-b7df-f632dc4d4d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee0b4b6-9d60-4e07-a155-bb73f8e1a849",
        "cursor": {
          "ref": "5a333481-557a-432d-b883-901221b82410",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8b4a03d5-289d-423b-b025-879b6a134d74"
        },
        "item": {
          "id": "3ee0b4b6-9d60-4e07-a155-bb73f8e1a849",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9016d63d-18c2-4af9-aeae-dd4ed54fa16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dbf8fb-c7ca-4751-a5fd-55bf73334a03",
        "cursor": {
          "ref": "237d4405-4a5a-48f0-b20a-3eea58b993a2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c58b232b-ade5-4bf1-b74e-593abd1ef643"
        },
        "item": {
          "id": "40dbf8fb-c7ca-4751-a5fd-55bf73334a03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "86a12968-2dcf-4028-9c91-0485982c0ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c29925-b054-44d4-ba0c-1944d60be855",
        "cursor": {
          "ref": "6194b3ac-a82f-48ff-bded-86f0e3d1bfdb",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "87c7db31-55fa-4f30-b8fa-9fa4f7e2915f"
        },
        "item": {
          "id": "06c29925-b054-44d4-ba0c-1944d60be855",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e4a1dd4b-94b3-4dd7-b0bd-73f1405c3a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50eabe4-a9b1-4c89-88c0-c583706a707f",
        "cursor": {
          "ref": "af29bb25-4a24-4cc9-bcb1-50cbb05608a9",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "212b5539-1863-42ed-b5f5-c6e84a82f388"
        },
        "item": {
          "id": "a50eabe4-a9b1-4c89-88c0-c583706a707f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7f355634-2fa0-409d-912b-d41249d5387a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17002258-84ff-467e-bb6b-1f7b16c5bc59",
        "cursor": {
          "ref": "b356a965-4a5e-4ff7-9937-1cb33ae0b8f7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f87b344-d275-4fb3-a572-e924ec328018"
        },
        "item": {
          "id": "17002258-84ff-467e-bb6b-1f7b16c5bc59",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9fabdf7a-a7e6-4338-bd44-fd5e07231f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ace07d-5c41-4534-81ea-be8ad2b9c501",
        "cursor": {
          "ref": "59a8d8b4-b9d4-42cc-9699-b087a888567f",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ebb4412f-43ad-44f6-afdc-354c6df496b1"
        },
        "item": {
          "id": "e7ace07d-5c41-4534-81ea-be8ad2b9c501",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0db9c0ce-20fa-49c0-b04e-0a6b256a0b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b481ea8-8b51-4fcd-af7c-81106a8be53d",
        "cursor": {
          "ref": "7d759ef5-9e26-47ce-91e4-1b564683605e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "faf3411c-52d8-4604-b4d0-0582c43dff50"
        },
        "item": {
          "id": "7b481ea8-8b51-4fcd-af7c-81106a8be53d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4c6ee138-020a-4b11-8747-c4409efc5c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5487eb0-e3ec-4e5f-84ac-2225a481bb37",
        "cursor": {
          "ref": "ae2d2ddc-e7dc-46a2-a8fa-e71a0ca180bd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "87a3f44c-2d49-4fad-b87c-2d664f1ce155"
        },
        "item": {
          "id": "b5487eb0-e3ec-4e5f-84ac-2225a481bb37",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "de9eddac-3584-4121-9506-b36b314d0f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1489cfb1-c9ef-45ec-89c1-9dd0693575a9",
        "cursor": {
          "ref": "a985048f-d6a7-43b0-8562-4ca8939fc6c8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e5beec0c-2454-4fc5-9ba6-828de29af345"
        },
        "item": {
          "id": "1489cfb1-c9ef-45ec-89c1-9dd0693575a9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d8eb733d-338e-485d-a4b4-00f5da0d7676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f33dd3-fde8-4afd-aa76-3d0f04b0c5ab",
        "cursor": {
          "ref": "46ca75ff-bdf1-4092-948e-646b5e44ce6d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ffdcbddc-d3d4-4e5b-b135-859e47d1b5a9"
        },
        "item": {
          "id": "f6f33dd3-fde8-4afd-aa76-3d0f04b0c5ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e106a2eb-813a-4d26-b6db-8b3c60d2c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee9a196-9d81-484a-b464-59af700fd7a0",
        "cursor": {
          "ref": "650a62c5-2613-45f1-a826-bde8dfd9c18f",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1f2a098f-d5b5-46b9-996f-9412ca4e45f3"
        },
        "item": {
          "id": "dee9a196-9d81-484a-b464-59af700fd7a0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "96ff69eb-f0e3-434e-9f0f-bc03403727b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d82873-bdc3-4153-b1c7-cc44554a8931",
        "cursor": {
          "ref": "dedbe260-d574-4dfe-8d41-4e0234e1dd77",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "bb8547ae-1aee-417a-8446-c0c52a2ef99f"
        },
        "item": {
          "id": "30d82873-bdc3-4153-b1c7-cc44554a8931",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b7c2a31c-26ff-463f-aa04-f17c3d0669c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2beaf06-7d0f-4f27-9257-b992ee2406a0",
        "cursor": {
          "ref": "ac620196-3034-4ff2-87cd-213ee51e55bf",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "84b75f0d-f908-48f7-b679-5a45719d58a6"
        },
        "item": {
          "id": "f2beaf06-7d0f-4f27-9257-b992ee2406a0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fb4b7d41-1e9a-4bf6-b637-4b4c16069034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e635b1c-d637-4ba5-8f06-f7e07deb25bd",
        "cursor": {
          "ref": "17050cb4-d42c-4684-b5a1-553c4f4f3825",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdb89f11-f55b-40de-8739-c8f2b2544e6f"
        },
        "item": {
          "id": "0e635b1c-d637-4ba5-8f06-f7e07deb25bd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "de387067-de53-4fff-8493-f49c2910d14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c126c44-8408-447d-a17a-25f6d6d511f1",
        "cursor": {
          "ref": "25dc2e05-96ad-41a6-b810-e9d512b5b6ee",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9cf4cef1-5f79-485a-afe2-3684498c2df8"
        },
        "item": {
          "id": "8c126c44-8408-447d-a17a-25f6d6d511f1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "006493d8-0e1b-40e3-a786-c587a153212c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df362033-d94b-4d7f-a3bd-6a190b7e8ca3",
        "cursor": {
          "ref": "cafec20f-a854-4da7-bbfa-8ea16e93876e",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6a363e66-75a2-4535-86c6-caa1591c920a"
        },
        "item": {
          "id": "df362033-d94b-4d7f-a3bd-6a190b7e8ca3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7e469689-5502-4f3c-a25c-06dbfb953ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e963701-20a9-4623-9c8e-2eda0fcb6874",
        "cursor": {
          "ref": "2f6d1632-a586-4e60-8dd5-68f43f627da9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "663b5a6e-eada-45ea-a4a1-3cda7ff34291"
        },
        "item": {
          "id": "5e963701-20a9-4623-9c8e-2eda0fcb6874",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "30a380da-c1cf-4c1c-81ba-1130f7665478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0300ce3c-dad4-4a22-bffd-793e4540d4ee",
        "cursor": {
          "ref": "337a7f4b-80a8-4bbf-baa9-9962bb4f55c4",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "165cd8f3-43e8-4f50-a464-b62077d9e007"
        },
        "item": {
          "id": "0300ce3c-dad4-4a22-bffd-793e4540d4ee",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ad97172-96bb-44cf-9d08-472aab13c968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a15678f-9ab7-4875-8f80-864cf38aec68",
        "cursor": {
          "ref": "9afb40b8-0e08-489b-85a4-9b97637c844a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "997c8692-4713-4603-b1f6-96f8a8bafa1f"
        },
        "item": {
          "id": "2a15678f-9ab7-4875-8f80-864cf38aec68",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f8fd8e6c-9e12-4081-80a4-5c64b0489302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9c42b4-baf5-432b-94bb-a972d5cc7aac",
        "cursor": {
          "ref": "ee7ae53f-e2e7-482a-8f37-da871f07a394",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "997a11b7-a315-4bfb-ad95-7bd8e98433b6"
        },
        "item": {
          "id": "ee9c42b4-baf5-432b-94bb-a972d5cc7aac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1d4d062b-3d28-4df5-9709-14688db4371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80afbf0f-73aa-4a6e-b6e0-b029bc07c94b",
        "cursor": {
          "ref": "a86c5cc3-25d2-4951-b0a7-57a5634e5a34",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d6b7fb5b-c183-4a0a-b25c-31d797c053f3"
        },
        "item": {
          "id": "80afbf0f-73aa-4a6e-b6e0-b029bc07c94b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1826f7fe-2441-4fb4-ac7d-30e125b53a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551b8456-6f57-47d8-ad02-af29a9f77d7c",
        "cursor": {
          "ref": "cdf4ad3b-c33a-48fb-9b6f-e85b233ab01e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b73a361b-7e24-4398-8160-86b7f872f1d2"
        },
        "item": {
          "id": "551b8456-6f57-47d8-ad02-af29a9f77d7c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4cf71878-8eb1-4ec5-8e31-eaf2799a64f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c04ba63-cc13-4377-96b8-847e94f9dd03",
        "cursor": {
          "ref": "7994faf9-b6b0-444e-8e1c-f3f2e2f6fb6d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5f68404d-8195-4200-898f-ee88b1ce9170"
        },
        "item": {
          "id": "1c04ba63-cc13-4377-96b8-847e94f9dd03",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "07fd04d6-d268-4abd-86ac-924dcbc51cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaedc60-b167-432e-bf8b-29873d565018",
        "cursor": {
          "ref": "5b4e3ff5-4cbb-41a6-bc61-cdcb3c2e571a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8cfd0255-57ff-43de-abbf-c6eddd60797d"
        },
        "item": {
          "id": "6eaedc60-b167-432e-bf8b-29873d565018",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f2ca6056-edfc-499a-8698-a799f10b7239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33928e1-e219-4328-bd26-4bf811d82384",
        "cursor": {
          "ref": "aea3211a-5f4e-4e60-9fb4-85bd5a6d5997",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a95e2a30-afb4-443a-bee3-4244dca4c4a4"
        },
        "item": {
          "id": "b33928e1-e219-4328-bd26-4bf811d82384",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8687a662-1b08-4876-83df-6f38468e7f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0236cebc-f486-4614-ab8f-9cc7497bc4ba",
        "cursor": {
          "ref": "7bd9217c-65c0-4172-9aae-640dc3fbe1e8",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1126060c-b0f3-423c-995a-72eac5082185"
        },
        "item": {
          "id": "0236cebc-f486-4614-ab8f-9cc7497bc4ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7e3eca28-7d0b-4a17-a63c-55ffea0ae856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6589137-e927-43e7-bebc-f2287d39c49e",
        "cursor": {
          "ref": "85edf43b-ba67-41f9-82c5-206317642bfa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "76811b60-0cee-4f8b-8947-7256710882a4"
        },
        "item": {
          "id": "e6589137-e927-43e7-bebc-f2287d39c49e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "acec7ed2-4d64-4f97-9287-f34b2b8daf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb0725-ea24-4ebf-9138-794be83b2480",
        "cursor": {
          "ref": "d15f36ab-4c83-407b-9ed1-cd66583c9010",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "20aa8a9e-f5ee-4abb-af05-16e1e5a18efb"
        },
        "item": {
          "id": "c3eb0725-ea24-4ebf-9138-794be83b2480",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b67a645e-3ccb-482b-b487-34d996a33b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b784e4-d417-4992-9bc8-49bcbdd8d1f4",
        "cursor": {
          "ref": "0ed25244-8a20-4c03-95ab-e66d3944bb51",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "45555285-a1be-4872-82db-c69a07ea5748"
        },
        "item": {
          "id": "b9b784e4-d417-4992-9bc8-49bcbdd8d1f4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e1c109b5-4d78-4941-9676-27bafffee6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b425f985-20fb-4aec-a9e9-f93c3cf620c2",
        "cursor": {
          "ref": "25d32722-c4c3-4314-a9eb-bbc3e38a5ba9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "83203d84-2ae2-4392-99a9-3dee90e41dd4"
        },
        "item": {
          "id": "b425f985-20fb-4aec-a9e9-f93c3cf620c2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "08e88962-7f53-4d6f-8294-64c63e780943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc93b9b1-c14e-4af3-9bb1-bb358afa9f68",
        "cursor": {
          "ref": "515e86c0-9c6d-4e77-8e07-3b4549667f05",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7411639c-9166-47b9-b872-bb8fc3d1aa3c"
        },
        "item": {
          "id": "fc93b9b1-c14e-4af3-9bb1-bb358afa9f68",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "68a29511-7c69-421f-a9e5-69ca2784a3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea945e-3e2c-4466-b976-40d2793f2324",
        "cursor": {
          "ref": "fd2c4dba-e590-47d2-81e2-02baa1e615b3",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac31abab-bf4a-4c0b-a129-93cdef517066"
        },
        "item": {
          "id": "8bea945e-3e2c-4466-b976-40d2793f2324",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "874ec30b-712c-49e0-9aea-b28f5c2f8c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd9eac-7f03-4a78-8316-c64940a8fc42",
        "cursor": {
          "ref": "8a68f078-afaa-4cd6-a511-49e9e0288692",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e4c8e693-a28b-49fe-9469-ecba5e2a3ad6"
        },
        "item": {
          "id": "7bcd9eac-7f03-4a78-8316-c64940a8fc42",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "26d18805-27b0-4e4f-b401-f80c7f7179a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2118ebd-6a2f-4f8e-bf31-08bd77747322",
        "cursor": {
          "ref": "357b6a18-845f-46b3-b818-84902c62a5ba",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dc09441f-e88b-44dd-8580-8b429a0f8698"
        },
        "item": {
          "id": "f2118ebd-6a2f-4f8e-bf31-08bd77747322",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5b1312fd-92b3-4cf1-bf2a-7a8a9bb91825",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7211e290-6e23-4d5a-9c79-7231a52fab0b",
        "cursor": {
          "ref": "d15d7d80-0a5a-4129-8453-3c7c1ad86b88",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a63e354f-f046-454a-acf0-f5acaea49258"
        },
        "item": {
          "id": "7211e290-6e23-4d5a-9c79-7231a52fab0b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d334c9fa-5518-499d-bc78-282e1d37ac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "11e2c6d1-8fc5-4bde-94d1-908bdd64f0f0",
        "cursor": {
          "ref": "abe29193-c58c-4845-9990-c7427ad71656",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9205e60c-e4ee-4005-b98b-468d8fb45e92"
        },
        "item": {
          "id": "11e2c6d1-8fc5-4bde-94d1-908bdd64f0f0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "839bcb3d-85f3-4548-93a1-b0e6a1b56034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "457b2211-99b9-439f-879c-244f6caf5083",
        "cursor": {
          "ref": "cf5b84ab-996e-406f-8645-b6d237bb49d6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6948a012-e8b3-4635-b5fe-076a7056566f"
        },
        "item": {
          "id": "457b2211-99b9-439f-879c-244f6caf5083",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8e3d0c73-a459-46c9-b517-5ebefc7adac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fcee3199-1e98-4726-9e73-664bd60e0e5f",
        "cursor": {
          "ref": "0a3f4354-739e-41b2-8bd9-d2bef5fb755c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2f451e9a-431a-4c50-b20c-b523e7281829"
        },
        "item": {
          "id": "fcee3199-1e98-4726-9e73-664bd60e0e5f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "52971ca2-b785-45f9-8bb7-dabcd5e92070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "24316be6-a684-4315-9659-1dcbe2a238ec",
        "cursor": {
          "ref": "a093c56e-5c17-4b69-8ae5-410b9c086fe5",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0ccfa856-c87c-4dbe-bf95-f132316ce593"
        },
        "item": {
          "id": "24316be6-a684-4315-9659-1dcbe2a238ec",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8da496a4-d9f3-4431-83d3-7f29e2dbc0b9",
          "status": "Created",
          "code": 201,
          "responseTime": 9774,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "165139ea-2888-42a8-8673-b892ce394a04",
        "cursor": {
          "ref": "1457c75f-e913-4a57-ba7f-24f9ba63ed32",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cb020329-a975-4fc5-b1f5-a92a5096feeb"
        },
        "item": {
          "id": "165139ea-2888-42a8-8673-b892ce394a04",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "79051470-ff4c-4d02-aa10-be7048d8c731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0cb2380f-d86d-44a0-bba8-04799845b808",
        "cursor": {
          "ref": "14606c78-b5bc-4b32-b4c0-7cedd1c70a21",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b345bd3d-49d2-4946-bc32-3ce607b517cf"
        },
        "item": {
          "id": "0cb2380f-d86d-44a0-bba8-04799845b808",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7c7d28ac-6897-4c4b-bb8d-e34fa4a8ccaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d1852245-8fbc-4552-87ec-b92a0a80d7a5",
        "cursor": {
          "ref": "b8cd4a0e-e4f8-4113-a43c-010276294613",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e783d722-25ce-4156-b836-a8bbae6a6b5c"
        },
        "item": {
          "id": "d1852245-8fbc-4552-87ec-b92a0a80d7a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3cf3785c-d75d-4c35-b26c-e0598b854c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669096fc-bf21-41f0-a518-827d7cad4e50",
        "cursor": {
          "ref": "dccba54e-20cd-416c-893e-0bc533277d9e",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "030dd738-612f-4fd9-a29d-979113daf812"
        },
        "item": {
          "id": "669096fc-bf21-41f0-a518-827d7cad4e50",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "58ba6155-9c7b-43e3-bbb2-61361c0866ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e472c-cb57-4e34-ac95-d4c9e017fa8e",
        "cursor": {
          "ref": "2ede579f-375b-4bbe-801d-47740de7cc2e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d3d41d9-a07a-42db-bb76-b89163950633"
        },
        "item": {
          "id": "f27e472c-cb57-4e34-ac95-d4c9e017fa8e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00da139a-07b5-4a32-a6ae-53f56d904ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f89696c-30a6-4905-b3ef-92e79a9f8847",
        "cursor": {
          "ref": "1337fdc1-0753-4a3a-94a1-d325fd13d58c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2d10d84d-1ab6-4743-b9e1-380b693eeebf"
        },
        "item": {
          "id": "9f89696c-30a6-4905-b3ef-92e79a9f8847",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4507f324-ef40-4152-aba1-94226e18e3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5072d9-d07a-460a-bba5-08ca5b19173f",
        "cursor": {
          "ref": "9b16171a-015b-4435-821e-874864c9638e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "643bbcf5-956a-4224-a03f-174c3ad3cd81"
        },
        "item": {
          "id": "4e5072d9-d07a-460a-bba5-08ca5b19173f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ddc8248b-972a-451f-8c67-4cdf29d1dcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee7d288-7c3c-4eb3-afbf-cc6be5bf6b4e",
        "cursor": {
          "ref": "d89a9d7b-40a4-4ebe-9ac0-d02355af6579",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a7004c7-1cf5-4742-b32e-6c1a9da4b652"
        },
        "item": {
          "id": "bee7d288-7c3c-4eb3-afbf-cc6be5bf6b4e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8eca2c3c-6948-4823-9c7a-0bc63b9cb9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916e1645-48ea-417f-b1e2-e1ac0e96bae0",
        "cursor": {
          "ref": "63845323-ef4d-4341-bfd1-84379074fc49",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "457853b5-4cee-41c9-b08d-930d9f3e5008"
        },
        "item": {
          "id": "916e1645-48ea-417f-b1e2-e1ac0e96bae0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "678e08ad-bc2a-4caf-9c29-c217c60a8113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8122feb-2a7e-439b-b1fa-88cfb7767ba6",
        "cursor": {
          "ref": "724d16ae-b084-49ba-9204-530c6298a5eb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab34f968-6fca-4bd9-93c3-07cb5551bcaf"
        },
        "item": {
          "id": "b8122feb-2a7e-439b-b1fa-88cfb7767ba6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cc82ebdf-ded6-49f5-bb47-3fb9f475b3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432aacf4-22cd-4a6e-9bfc-fe26bdf3c120",
        "cursor": {
          "ref": "6a645235-d7b2-428a-9176-8583ac705a71",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "46c3a798-9167-4a94-8498-2cc4236f1395"
        },
        "item": {
          "id": "432aacf4-22cd-4a6e-9bfc-fe26bdf3c120",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "516f997c-23d5-4f47-bb6a-bf822eb143e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7992c04-3d5c-48e8-8d08-96b2d11d70c3",
        "cursor": {
          "ref": "7b684ae0-8a3b-40aa-9600-55fb63da7cbb",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "36dd66c3-8bf7-4183-9bd0-aaf458515ebd"
        },
        "item": {
          "id": "d7992c04-3d5c-48e8-8d08-96b2d11d70c3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bb2aa8e1-044c-40a4-a53c-10e28038292e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dfde7b-9b67-4fb7-93df-ece7c4aa6345",
        "cursor": {
          "ref": "13d45a6a-b616-49d6-95a8-bb1059563312",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "97ec3654-dfcc-4c44-b827-36cf01c5e2c4"
        },
        "item": {
          "id": "a0dfde7b-9b67-4fb7-93df-ece7c4aa6345",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0d236d07-d1ce-4932-9757-b5db7dc88729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd85a17-0c70-4da0-add0-1d7b7e1af4e5",
        "cursor": {
          "ref": "c1991678-d421-46f1-90e7-5be8742fa59f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "937c900d-cc53-431d-81e5-144059ba688b"
        },
        "item": {
          "id": "9cd85a17-0c70-4da0-add0-1d7b7e1af4e5",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93727fbe-a9d5-40c6-9ef6-e9061dd8ccf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab7318-af28-415a-b89a-f6630240d69b",
        "cursor": {
          "ref": "9d0e2040-26f3-4ee6-829d-10093f01c445",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7a9e367e-7223-4d6f-ac79-bdcfa87212e9"
        },
        "item": {
          "id": "f5ab7318-af28-415a-b89a-f6630240d69b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "76a0abb9-6cff-4e14-a008-317e1f332d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396a1773-cd6f-4c4c-8cf8-5586cffb3fbf",
        "cursor": {
          "ref": "e568d6a2-ef0d-4e6d-b7f0-4318e1771fac",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cf2ff575-c3b5-442c-8fb7-fb8dc98b5ef8"
        },
        "item": {
          "id": "396a1773-cd6f-4c4c-8cf8-5586cffb3fbf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cc2a6b0-2028-49c4-8ae9-8d6d91d583f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b226983-a682-4b33-8fbe-8c0c67daf313",
        "cursor": {
          "ref": "b5456143-fad2-4ece-bdfc-49c84e31b829",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9323d8fd-01f9-4eaf-bbec-e56936009303"
        },
        "item": {
          "id": "9b226983-a682-4b33-8fbe-8c0c67daf313",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "df58f3db-9b1f-4733-8cc0-9fbaed6a58f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2b77fc-f333-4e71-a7ba-b3fde848c668",
        "cursor": {
          "ref": "43bbbaa0-665b-443d-913d-43055f8b702f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "97bc5a67-d0c4-425c-b0ff-c7b242607771"
        },
        "item": {
          "id": "2d2b77fc-f333-4e71-a7ba-b3fde848c668",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "50f3b2c5-2edd-403d-ab34-3e6e5cac19e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0d01a1-ef2d-4e86-8289-431be6c48af7",
        "cursor": {
          "ref": "0884cb5c-f627-4904-9f1d-3ad3f52a71e1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "98888fd7-2a43-4b9a-8eb1-98a13a667f40"
        },
        "item": {
          "id": "6b0d01a1-ef2d-4e86-8289-431be6c48af7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e77b4321-bece-426e-b0de-8d99be832db6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "32057f64-d57f-44c4-9bb6-25fe129fce6f",
        "cursor": {
          "ref": "629e4d2b-d719-4cfb-a13e-e360d7abeda1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c2b8d7d8-438f-460e-82ec-8a9d309a8315"
        },
        "item": {
          "id": "32057f64-d57f-44c4-9bb6-25fe129fce6f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aba23438-8ec2-4602-961c-25e7fe355335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afc7c52-465f-47ae-9076-f0ddf8aa516d",
        "cursor": {
          "ref": "0ee4d402-4501-4e9a-aa34-f031520e11d0",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dd2b731c-962c-4583-9e54-a06d4a2c2272"
        },
        "item": {
          "id": "2afc7c52-465f-47ae-9076-f0ddf8aa516d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "42e88422-d5b0-4efe-8391-d60120f83ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56879262-9607-420c-9e6d-d98bc1834be2",
        "cursor": {
          "ref": "9c1e2c5a-1507-4f05-9322-c08ae2610a03",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "02352b3f-a322-4490-9a6f-ac71242528ab"
        },
        "item": {
          "id": "56879262-9607-420c-9e6d-d98bc1834be2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d7138060-b243-4917-9fe7-a833be2f029b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e6929b-6ee2-4380-b363-66f197ae0d08",
        "cursor": {
          "ref": "4ae1a45f-5f90-4c06-8dd0-537ffbd83b9b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e9407c54-c698-42a2-9aee-1eafe4332e3b"
        },
        "item": {
          "id": "31e6929b-6ee2-4380-b363-66f197ae0d08",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "851b2d89-fc82-4765-8b26-6575dd949e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfedefb6-1aac-4e77-a6e0-602e576a9de2",
        "cursor": {
          "ref": "56b3136f-0ecf-4d99-96ad-387e86bad367",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "473b5d52-6830-4aed-9f1c-35235fcf33c3"
        },
        "item": {
          "id": "cfedefb6-1aac-4e77-a6e0-602e576a9de2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38774e78-c75f-4203-8d15-70bc389df667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb50f98-b6d7-4fe4-bbc8-5f0a7f6ab205",
        "cursor": {
          "ref": "c3db7000-2452-4862-93a8-4765b5e051f0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1fa81d70-1ed2-40ec-be60-4c78ef21e0df"
        },
        "item": {
          "id": "aeb50f98-b6d7-4fe4-bbc8-5f0a7f6ab205",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ec950dcf-dc64-4b48-a5ff-2662e3202d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74469756-ca30-4879-9e30-c7100383e058",
        "cursor": {
          "ref": "46a94df5-6773-4a50-bfee-266a4aa73117",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9340bf56-036d-4bbc-840b-d8e506df7460"
        },
        "item": {
          "id": "74469756-ca30-4879-9e30-c7100383e058",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2970fd47-fb75-465d-8be4-91df3aada5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b0543c-3198-4364-a1d9-9579493e8855",
        "cursor": {
          "ref": "d84bd428-1777-40ee-a501-77d6147fe2a9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5a109412-1d24-4922-8b8d-7613e4442557"
        },
        "item": {
          "id": "b3b0543c-3198-4364-a1d9-9579493e8855",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1013eb14-297f-438f-8017-54721565a81b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "329ade2c-bbeb-409c-8367-6799b32e8410",
        "cursor": {
          "ref": "acb44fcb-5468-49f6-a53a-ea222f42cec6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8e9cdd17-8c13-4a04-85a5-7b291c7747c9"
        },
        "item": {
          "id": "329ade2c-bbeb-409c-8367-6799b32e8410",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2fd24808-178b-4a08-85a6-499a1b20e5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f8316b-409d-495e-a293-a243e4e625c0",
        "cursor": {
          "ref": "578ff97d-05b8-4701-91ad-ee065e102ade",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "50b118e6-b152-459d-a0ec-938564b82e57"
        },
        "item": {
          "id": "a2f8316b-409d-495e-a293-a243e4e625c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "471459bf-345f-4fc8-b247-5063db300072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ade589-52a0-4b6c-9127-febd58f83c79",
        "cursor": {
          "ref": "bbf41bb0-7416-41e7-bb34-6148dfc942b6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c9ddc06b-9f3e-41e6-bc46-8c255eb3a462"
        },
        "item": {
          "id": "d3ade589-52a0-4b6c-9127-febd58f83c79",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb5bcd73-01dd-4338-a796-3e606f005ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c501d45-96dd-446d-8016-06b2e3eedd12",
        "cursor": {
          "ref": "e3f560b5-697b-41bc-a93a-3d57a9bb2ebc",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "327ea606-bc55-4cf9-9fe3-245635f422ab"
        },
        "item": {
          "id": "4c501d45-96dd-446d-8016-06b2e3eedd12",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c235097e-94a8-4da2-b8f2-87db85338582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1271a96-ee07-4af3-af17-74daa0f9ca85",
        "cursor": {
          "ref": "cdb1d400-123e-4d34-bfd6-64e815c8253a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "873791db-21f8-4f1a-b952-8a7f9fb10308"
        },
        "item": {
          "id": "e1271a96-ee07-4af3-af17-74daa0f9ca85",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "469c4e30-c2a8-4977-b6e9-a31a1124538f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fa95ea-87ec-42d2-a6a9-3b1b5c75d34f",
        "cursor": {
          "ref": "31eb4c0e-57c3-4ede-8913-d5ecf4298ea1",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "11f93d0e-2f54-4002-a436-ef5341d4baa6"
        },
        "item": {
          "id": "e9fa95ea-87ec-42d2-a6a9-3b1b5c75d34f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "de141890-dd5e-482c-a522-b5fa05df771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858c2770-df50-437e-8e68-511b7ac322dc",
        "cursor": {
          "ref": "e3e94e59-29a3-4fe8-9f06-42cf9dc54944",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d8e43f80-5d52-423d-9964-aac54bcf1604"
        },
        "item": {
          "id": "858c2770-df50-437e-8e68-511b7ac322dc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b8330deb-ac4b-4d24-a593-967332a93804",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "09a3c302-2773-4acb-aa2e-30e775f72df9",
        "cursor": {
          "ref": "2a63962c-57ae-4069-9408-37da9674bf65",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7a5922d7-1743-43e5-97de-92bf68b4c2a6"
        },
        "item": {
          "id": "09a3c302-2773-4acb-aa2e-30e775f72df9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bbe3cade-87cc-480b-b45f-e17a8073104f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aa5bb2a5-167a-4321-9f28-1d947b5a4a00",
        "cursor": {
          "ref": "cb553534-7023-4135-8090-d0d548f138a8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "21c55774-c8e2-4c5c-a5b3-4fa4bff4791c"
        },
        "item": {
          "id": "aa5bb2a5-167a-4321-9f28-1d947b5a4a00",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "355766dc-c222-415d-8ccb-712326aef959",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c572f2ca-35ec-42f5-ae9f-e4e856982ea9",
        "cursor": {
          "ref": "abeaafae-e832-441f-a915-b9679209e6fa",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "adc83b0f-48ea-4cac-a6a3-dc1ecf4b1386"
        },
        "item": {
          "id": "c572f2ca-35ec-42f5-ae9f-e4e856982ea9",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6a7a81b-3d0c-417b-a670-cdd51e1058c7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b5a18db6-7ec0-469b-8f36-2763be651e73",
        "cursor": {
          "ref": "01c22eff-bc2f-46b7-bf49-72de6cb75e32",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "589deb21-621f-48cf-9977-f67c440c719a"
        },
        "item": {
          "id": "b5a18db6-7ec0-469b-8f36-2763be651e73",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a7caf173-08ac-4d0d-9e12-0c1cb496f604",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "fef777a7-8adc-48eb-9849-2ab2a7e7390d",
        "cursor": {
          "ref": "807e05a0-86c3-46cd-87a8-e97ba24982d1",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f6acd844-747d-43b5-be1e-8a498aea8ee7"
        },
        "item": {
          "id": "fef777a7-8adc-48eb-9849-2ab2a7e7390d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ff78ac11-5c7d-4a82-b4d7-5ec560f250b2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "1dae558e-5315-413d-a1a2-e768c48e07f3",
        "cursor": {
          "ref": "49608f88-ae53-4e56-ae6e-c54834d628dd",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "238fb2fe-afb7-4f77-9402-cd35c6a017ed"
        },
        "item": {
          "id": "1dae558e-5315-413d-a1a2-e768c48e07f3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "763a28a5-aa62-47ac-9b74-04920bfa8261",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc25eb8-54d6-4166-825a-5dfc293031a8",
        "cursor": {
          "ref": "742ad78e-f4cf-41fa-9082-621c4144a27e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "51f2f23b-6652-4e61-b244-0924a9ad726d"
        },
        "item": {
          "id": "ebc25eb8-54d6-4166-825a-5dfc293031a8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "30a48d9e-a74a-4a42-807c-f7b1f26a4ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93340877-ff4e-48a5-8d13-c450ee807e74",
        "cursor": {
          "ref": "2685bdcd-79ad-4604-8967-bec95957d2ac",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ef7c4891-a0f2-436d-9113-1e976bf1d646"
        },
        "item": {
          "id": "93340877-ff4e-48a5-8d13-c450ee807e74",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "758af8eb-8683-478b-ac88-b7d037150642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb58fca-6f5b-4ae2-a4ad-acb4d45887b6",
        "cursor": {
          "ref": "a81e8bdf-afbe-4e8c-a33f-9ebc6ca2f23e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a314b774-6d9e-4964-a0e3-381121c74102"
        },
        "item": {
          "id": "bbb58fca-6f5b-4ae2-a4ad-acb4d45887b6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a257b712-7441-45e0-a6c3-613b04a0dde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873169db-5d49-42be-bfdb-757b7a1731aa",
        "cursor": {
          "ref": "728b6142-950d-4786-82ef-69516313753b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f5f03597-6418-4255-b9fc-6890525bb72e"
        },
        "item": {
          "id": "873169db-5d49-42be-bfdb-757b7a1731aa",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a8c14499-9956-4567-8bd9-3d5132f4dd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38724e57-4241-4701-97e2-0a40446a96bc",
        "cursor": {
          "ref": "2237af42-7963-44f5-af16-f268d02a0f0d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f97a713f-1a1a-4101-8ae6-c73058804b53"
        },
        "item": {
          "id": "38724e57-4241-4701-97e2-0a40446a96bc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1ff21ff0-29d5-4c64-b8ac-a005aa011268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdccbd5b-a1ac-428f-9e7f-2516485eb2b9",
        "cursor": {
          "ref": "6c24f463-64ab-46af-afd9-8fac72a32164",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "988a2408-2c91-4c43-8e20-1a5ec6f0e5fa"
        },
        "item": {
          "id": "cdccbd5b-a1ac-428f-9e7f-2516485eb2b9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d785f1ec-ffad-4a49-b9bd-f57018aca98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fc451b-4c52-4fa3-aaaa-7de6f509ed77",
        "cursor": {
          "ref": "e6995c35-35de-45de-9948-4aa9b98715e1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a9cb1ce4-e352-406c-8bd0-3868bcf19207"
        },
        "item": {
          "id": "74fc451b-4c52-4fa3-aaaa-7de6f509ed77",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3f3b76bf-5cee-4c59-8ff3-333583fc468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68422bd6-9228-4c07-82c8-857ede7dee71",
        "cursor": {
          "ref": "7134c0e1-8217-4b8e-84dc-c86f66566177",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "126a027d-fb3a-46fe-92e6-4e5cc4db7e3a"
        },
        "item": {
          "id": "68422bd6-9228-4c07-82c8-857ede7dee71",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9eb6d28b-0e0e-413b-afa9-f6c7d814bc2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5041a3f5-2af7-48a6-a3a0-991b31ecc9f1",
        "cursor": {
          "ref": "f65af73d-f19a-440c-aa04-bcd3239e63ee",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f59c6834-f55c-4cac-b9b4-0a7d519de4a8"
        },
        "item": {
          "id": "5041a3f5-2af7-48a6-a3a0-991b31ecc9f1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "82b50bb4-df20-4484-a8b4-475f3c0f60dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609cf1e0-bd1e-4e8f-94b5-973bbd80e839",
        "cursor": {
          "ref": "f5e17c10-8816-4620-9360-651f2a6128af",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cfa8e656-c108-4a4d-95d4-89f174761dec"
        },
        "item": {
          "id": "609cf1e0-bd1e-4e8f-94b5-973bbd80e839",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "39eb9118-cc68-44cf-ab97-d5b0f7b29a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be12675e-8338-40fe-9eee-db5f0e4d7f9f",
        "cursor": {
          "ref": "5c39fc09-cac5-41db-9b58-bb1551113472",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "fb213acd-762b-45ea-bd0d-4b12b632dee4"
        },
        "item": {
          "id": "be12675e-8338-40fe-9eee-db5f0e4d7f9f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d1b89f3b-d417-48df-95b9-43f1201e487f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4689c68f-7d9c-40bf-9d60-1a59b9fd23f3",
        "cursor": {
          "ref": "7b0e089a-489f-42be-a58d-fc0ae83334f0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fcf3c3d6-11e6-4877-92ba-bb17f24c6a78"
        },
        "item": {
          "id": "4689c68f-7d9c-40bf-9d60-1a59b9fd23f3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e440c21b-644c-4356-9de9-77ead309cbd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdff226-49d1-492d-a5dc-65dee93fde41",
        "cursor": {
          "ref": "19075427-1f15-4579-b3b5-1fe39e39d2bd",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2b36d541-8207-41b9-9534-a486c86bc9af"
        },
        "item": {
          "id": "9fdff226-49d1-492d-a5dc-65dee93fde41",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "08ea0b66-9dbb-43fc-ba80-3f9260361afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7065ca2-f7ad-4c98-bdc9-306856ff761b",
        "cursor": {
          "ref": "05908d95-d63c-474d-9ae3-fcec834a359a",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a7f34564-91a9-4140-817e-29f49613581f"
        },
        "item": {
          "id": "f7065ca2-f7ad-4c98-bdc9-306856ff761b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "97f6fd6c-0864-4d3e-bac7-da92961bca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7176006-5012-4114-bbff-87c30335d730",
        "cursor": {
          "ref": "eee14a6d-6c34-4a42-969d-3693b861b245",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2189e2cc-315f-4c11-a23a-33f68149ac94"
        },
        "item": {
          "id": "a7176006-5012-4114-bbff-87c30335d730",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "403b9036-b7a3-48ce-9853-e95740fa6b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8299c3-d41b-470d-a865-2b48444106b2",
        "cursor": {
          "ref": "0271fae3-999e-4bf2-96fe-757c0c844a39",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "649539b5-e592-4f10-8f03-1df4cacaec11"
        },
        "item": {
          "id": "ee8299c3-d41b-470d-a865-2b48444106b2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "81888613-aef1-4571-97ab-61c6bc8f049b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77435b2-f360-4d9c-a463-82d34a12e51d",
        "cursor": {
          "ref": "89c1fa0c-f2a6-4d66-b6ed-dfddcd0877d8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0b424e89-aaa5-4589-bcdd-7d8492849809"
        },
        "item": {
          "id": "c77435b2-f360-4d9c-a463-82d34a12e51d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0cf3edc4-04f5-4116-8d6f-679cc4bed3b3",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "65cadbd3-db4a-42e6-b89a-8d0b06810306",
        "cursor": {
          "ref": "9bac7588-fdfd-4011-8c59-a326f1b94327",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "54153c01-88d8-4ab3-a428-cbab5609c48a"
        },
        "item": {
          "id": "65cadbd3-db4a-42e6-b89a-8d0b06810306",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "61e3aacd-3a37-4061-924b-240a6a6c7994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98c0a68-44e7-45ed-9171-e809f57a4f25",
        "cursor": {
          "ref": "90b07014-0902-4432-88ee-16b76a06ec10",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fd7430f-22f3-4735-a131-5c1d0e5ec488"
        },
        "item": {
          "id": "a98c0a68-44e7-45ed-9171-e809f57a4f25",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c7559ae8-6b44-4403-9a0f-e775b6acc332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11111a26-3f77-46ab-8d49-2268008f1d1d",
        "cursor": {
          "ref": "1bb6b610-5b48-4726-b3ca-5effe4ec5bad",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cf659c63-103e-48ec-9d52-4e72f4a4621b"
        },
        "item": {
          "id": "11111a26-3f77-46ab-8d49-2268008f1d1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4931dee3-9f0a-4272-91eb-e6b4619dbbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8c5985-67cc-4602-a4e9-d7b3cbb6a775",
        "cursor": {
          "ref": "1262e367-7380-4951-816c-3a7d6e182167",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f86a46ed-13db-44d8-bac5-9a5f6b15b614"
        },
        "item": {
          "id": "1d8c5985-67cc-4602-a4e9-d7b3cbb6a775",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "64df35b2-e28b-449b-ac4a-1618e18fc9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd92ca59-10a2-4aa3-b0f9-c49638ca0ad5",
        "cursor": {
          "ref": "558b2c7b-a870-429a-862a-2e282cc7dbcd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d058cb68-ba05-4343-98cb-2b420bbc62e8"
        },
        "item": {
          "id": "fd92ca59-10a2-4aa3-b0f9-c49638ca0ad5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8a7f715b-f758-41c9-a368-6da3a7739e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3918022-32f4-4910-9483-4321a488ec22",
        "cursor": {
          "ref": "966388a7-791f-43f9-8623-80b002388b4e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4c411452-ba96-4c5a-a147-d1c06417fe48"
        },
        "item": {
          "id": "f3918022-32f4-4910-9483-4321a488ec22",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f1454632-dc4c-48d8-9e0c-804309b50385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92510a60-91ce-4d72-8976-0aedec8c61d7",
        "cursor": {
          "ref": "e9781fa8-963f-40b9-b799-66ad1779adfb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e164b765-88b6-45e7-8968-6f299c18bb40"
        },
        "item": {
          "id": "92510a60-91ce-4d72-8976-0aedec8c61d7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6bb4b3a3-9e97-4346-be68-146d812cc7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0f3a9a-34c3-4324-b187-00bda1d26916",
        "cursor": {
          "ref": "cb553c41-9efd-4f37-ac74-23066b25324e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "45c33040-13e8-4a8c-862a-6737eda30f46"
        },
        "item": {
          "id": "aa0f3a9a-34c3-4324-b187-00bda1d26916",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2ad971f4-4560-44e7-b9a6-e2b4287d6d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf4a468-6880-4036-874f-262d7e974d97",
        "cursor": {
          "ref": "128e3a5f-92a3-4b52-85fa-faed694c1813",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e0566345-fb90-4674-827c-be2647c5d6d8"
        },
        "item": {
          "id": "fbf4a468-6880-4036-874f-262d7e974d97",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "61d20372-f207-41e0-bc00-3602be6ca3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d96ec9d-4ea8-4606-8da9-1869bff0e869",
        "cursor": {
          "ref": "ca0da897-2437-42d9-9a73-1bf9cf8295fc",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ed8638e5-df4b-42fb-99ab-4c7a67ba12ee"
        },
        "item": {
          "id": "6d96ec9d-4ea8-4606-8da9-1869bff0e869",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "605a7ff1-1bb2-47a3-be25-8d7ac116bc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52c6d3b-22ee-45bc-a1dc-efebcf2b6ee7",
        "cursor": {
          "ref": "b3d65f67-27f9-4513-bd1a-fd0689fa5eec",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9bf7a5e3-ae53-4e6f-a38f-30b79006f344"
        },
        "item": {
          "id": "b52c6d3b-22ee-45bc-a1dc-efebcf2b6ee7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1f370fb2-8be8-4f14-8ba4-d9686e291c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e73d66-1ef9-4fb3-b4cb-3e3f8855db1c",
        "cursor": {
          "ref": "1682dafd-c55c-457d-8bed-5174f58bc5c8",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b7f7a533-a5a4-4ae9-9e2b-3f89831a8f0d"
        },
        "item": {
          "id": "99e73d66-1ef9-4fb3-b4cb-3e3f8855db1c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0b1f2d29-18c9-4006-80a0-eb5cd44a985c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36e85ae-b54f-48d5-8038-535d1dfbe134",
        "cursor": {
          "ref": "4917ac36-59f8-4af5-a358-fdabe4ffed32",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6df464c7-97d4-43f3-a7e6-6dbf5eda5d34"
        },
        "item": {
          "id": "f36e85ae-b54f-48d5-8038-535d1dfbe134",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "967b04d9-a461-4298-9b16-4c22cebeb643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac0a342-91df-49ff-9888-20cfae8c485b",
        "cursor": {
          "ref": "994db21a-9cbe-4291-9cce-daf218fb78d0",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5b88a345-6c89-4f91-af6a-e00cb3a17c8e"
        },
        "item": {
          "id": "aac0a342-91df-49ff-9888-20cfae8c485b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9bfde81-b8a8-4b03-988c-0293678a6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1950b96c-1c40-4e3f-9793-6931415e5f4c",
        "cursor": {
          "ref": "d00240be-6b61-42f3-a963-714d68c9ced0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "35b5375d-d337-4b40-81b4-207d9e4c194a"
        },
        "item": {
          "id": "1950b96c-1c40-4e3f-9793-6931415e5f4c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6356f525-08fe-4a35-a972-e591f4c8c250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe38a872-36a0-4a5f-bbd9-0cd9f2c0df13",
        "cursor": {
          "ref": "29e1bb96-0c14-4a84-bbe3-397474c1a740",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "601e889b-47f4-44f8-ad65-cfe1c0ed0d40"
        },
        "item": {
          "id": "fe38a872-36a0-4a5f-bbd9-0cd9f2c0df13",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bf048550-4e49-499a-bfff-07e7cb80487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c9800ad-f95a-462d-b589-87d9217b9fe8",
        "cursor": {
          "ref": "ef7cab5c-445e-463e-8043-99463a8e3eb7",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3757ac80-b032-47ec-8578-19ca3a67883c"
        },
        "item": {
          "id": "1c9800ad-f95a-462d-b589-87d9217b9fe8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ff46edab-e521-45ff-91dc-211e00b2fc88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c467ff-e1c8-433d-81ba-5169fdbb4576",
        "cursor": {
          "ref": "7c02e1d8-a1ca-44d3-8c25-212985a18757",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "11e6d2bd-05ea-4606-bdbe-811d6a59b793"
        },
        "item": {
          "id": "75c467ff-e1c8-433d-81ba-5169fdbb4576",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4c47aa26-c981-4ce4-8d6c-837ed8ac814f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94abaa2d-91c4-4be2-858f-860c5a6a92a4",
        "cursor": {
          "ref": "ba4cf8c9-49c0-483e-bc14-505f62be5d27",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3e7f3690-1c6a-445f-968e-a37c0a2377e3"
        },
        "item": {
          "id": "94abaa2d-91c4-4be2-858f-860c5a6a92a4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ab652790-738c-4e11-a229-badf042d31bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181ba6fb-9b29-43c7-b55e-eba0f97d66da",
        "cursor": {
          "ref": "000f4378-b123-45b1-bf3b-1bb584a65ad4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bc0021c8-0740-4428-876e-2a882efd7088"
        },
        "item": {
          "id": "181ba6fb-9b29-43c7-b55e-eba0f97d66da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "88d0031f-6584-4e66-b53d-70845e09401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e06469c-9a57-4c3a-a79a-16a37d00e976",
        "cursor": {
          "ref": "a47168ea-652f-4011-93f0-eed3f5c0f045",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "291be58e-c0ad-46ab-ac46-584110d08cb7"
        },
        "item": {
          "id": "0e06469c-9a57-4c3a-a79a-16a37d00e976",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e3f344ef-46bf-4360-aa13-015ad59e5133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf6c8d-9dd5-43d1-8646-567794703aa9",
        "cursor": {
          "ref": "b8658fcd-7db6-438b-b1fa-2ad8e41f6193",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2c2ffca4-306e-4121-adc7-f48105ea018e"
        },
        "item": {
          "id": "6faf6c8d-9dd5-43d1-8646-567794703aa9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3244f2ba-2d22-4501-94c4-6f2a2d9115c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8684b4b-b717-4869-8966-eb290705b494",
        "cursor": {
          "ref": "859074f3-2d02-4d0e-b5f3-9b37f7be4b03",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "36b5a8e4-8c83-4fad-b75a-7c9753324c00"
        },
        "item": {
          "id": "c8684b4b-b717-4869-8966-eb290705b494",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "650711ee-5220-4075-bc18-daa34dae47f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f338d1-83e9-4a09-95f4-2e24dbe50695",
        "cursor": {
          "ref": "c5a1b554-94a2-4925-a67f-6cdb479e3bce",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e7be5c03-56e9-4f99-81ca-b1d172c36e8c"
        },
        "item": {
          "id": "a2f338d1-83e9-4a09-95f4-2e24dbe50695",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "07d7e8fb-c358-4c22-a0b7-492684444351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff14e900-37cc-4f95-9de4-874eb66bebc6",
        "cursor": {
          "ref": "ac72399f-c6b1-4b94-a788-f25839292637",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2d4212e8-721d-40a4-a5a9-fb8778ff3f36"
        },
        "item": {
          "id": "ff14e900-37cc-4f95-9de4-874eb66bebc6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "89df42a7-76ab-4554-bf62-cfac9d5a8a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1849c688-fda5-4fa5-90aa-5a8e99dcfb46",
        "cursor": {
          "ref": "525b33ba-919e-4735-88d0-db8ade03155f",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d420c105-f981-4b96-93fc-68c4e7006f70"
        },
        "item": {
          "id": "1849c688-fda5-4fa5-90aa-5a8e99dcfb46",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a6dafc08-883a-42d7-90b5-53d5aaa4f272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef4ac4d-6ee4-4fe6-a3e7-a503db179a76",
        "cursor": {
          "ref": "a283dfe6-2ea6-409b-a1ce-5e4b56eaffb8",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3921accc-a398-4dfc-896d-29684f6c66d3"
        },
        "item": {
          "id": "bef4ac4d-6ee4-4fe6-a3e7-a503db179a76",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "de3a21d2-40dd-41bc-9617-4bc67a2f4c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8661a31d-bdcc-4bc1-9210-a5f2e1db3d52",
        "cursor": {
          "ref": "79ea3e18-bcf0-4337-ad66-a1774d831d57",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c0909a3b-2b67-467a-92d2-21fc214fa6e7"
        },
        "item": {
          "id": "8661a31d-bdcc-4bc1-9210-a5f2e1db3d52",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1bc49684-189d-47cf-ac92-8e1f64f1dcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2526b2c6-3e0e-42f4-a3dc-28dcdb2c9e11",
        "cursor": {
          "ref": "a7251b09-d871-4c70-b9b4-4214c00a9267",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d0d52a89-a425-4154-9d75-954aeaac9a70"
        },
        "item": {
          "id": "2526b2c6-3e0e-42f4-a3dc-28dcdb2c9e11",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9724b7b0-df04-4ccc-ba8b-2028cda73b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1226b1-54cc-435b-8c1a-ad80191a113e",
        "cursor": {
          "ref": "ffb360ee-377a-484e-bc96-ee4c298398f5",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b781b8bb-4e6b-4376-8d88-d77c30ee7dd2"
        },
        "item": {
          "id": "0f1226b1-54cc-435b-8c1a-ad80191a113e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b438b446-5090-4ec7-ad35-0b5af683d0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4762604-8243-4600-9270-46f7962c39d2",
        "cursor": {
          "ref": "71f28145-6bf4-43eb-a8b8-739787574ec4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2cd08df7-e77b-4cc8-84c0-15537c2d3832"
        },
        "item": {
          "id": "a4762604-8243-4600-9270-46f7962c39d2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fd75084e-51a0-475d-852d-bd373b1f39f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "224e4175-7127-49de-bd87-20f40cd9cc39",
        "cursor": {
          "ref": "7e87d89a-16c9-4d3b-ada5-7c3a86e6496c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d52867a1-3f77-407e-8f81-63b402639ffd"
        },
        "item": {
          "id": "224e4175-7127-49de-bd87-20f40cd9cc39",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "419f6b8a-c51f-474d-9f3c-62a113346533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28583e9d-33ba-4ac1-a315-4158522ef00e",
        "cursor": {
          "ref": "02c175d3-3c3c-45c7-b8ce-f3fa202cf327",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f7df62b0-286b-4f45-a768-63d656fa4f3a"
        },
        "item": {
          "id": "28583e9d-33ba-4ac1-a315-4158522ef00e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8854536a-fbaa-42be-9e67-b531e37d7eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb0f733-2b33-4b95-9f66-1737c722e5c6",
        "cursor": {
          "ref": "fc368d6b-d8d0-4174-bcf0-44b9d5a0ce89",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bfa18c8e-72cb-4fa5-b7d0-bd1e27e2269f"
        },
        "item": {
          "id": "2fb0f733-2b33-4b95-9f66-1737c722e5c6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "78c8523f-615a-4340-98e8-8dc0cb8867e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec3efe6-490f-4213-83ec-968d722e76d8",
        "cursor": {
          "ref": "4213af6e-23ff-4894-a123-664c23b539e2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8d77b49d-40bf-4691-82ce-eb10452dd97d"
        },
        "item": {
          "id": "6ec3efe6-490f-4213-83ec-968d722e76d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "585d6df9-7f6f-4086-bba3-73ba2cc089a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f20f39-56d9-47e6-964f-0d47caa93e3b",
        "cursor": {
          "ref": "8197cb19-66e9-4206-a47e-67c18bc27f6e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "24d7d69c-ad18-40d8-839e-fe2311f7725f"
        },
        "item": {
          "id": "f8f20f39-56d9-47e6-964f-0d47caa93e3b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "593e1537-062c-4e55-aad2-237c94478949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9638c260-6c91-486d-af40-c26571e1f39c",
        "cursor": {
          "ref": "5872d4cd-758b-401b-b197-7956302de49b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b2e957a6-80b7-4684-9db1-636ab3fbd09d"
        },
        "item": {
          "id": "9638c260-6c91-486d-af40-c26571e1f39c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ae64c142-d793-4ab4-93da-07f07deb92ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd0aba1-1040-47ee-8f12-142418e06278",
        "cursor": {
          "ref": "a8a24439-291b-4124-b938-7363faceba51",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7a5fc659-c3bd-4e0b-9496-3eddb8449f7f"
        },
        "item": {
          "id": "ebd0aba1-1040-47ee-8f12-142418e06278",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "08212cbe-94ed-48ba-933c-361e7555b710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8398ff6a-6bbb-4e65-9edd-000333962cd6",
        "cursor": {
          "ref": "fa1ae808-b954-434d-9303-c3140336f16a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "15694e56-3e84-4c4e-b5cc-221c61ef2eb6"
        },
        "item": {
          "id": "8398ff6a-6bbb-4e65-9edd-000333962cd6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd336e6d-16df-4e75-942c-233e9aa96e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aea7359-06b9-44c5-9cfc-19e73b833192",
        "cursor": {
          "ref": "77c99e4a-8187-4be0-b94f-93d72a02ad3a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2b3d28c4-0a13-4540-9528-6531b67d74c1"
        },
        "item": {
          "id": "8aea7359-06b9-44c5-9cfc-19e73b833192",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1da246d6-34ce-46b8-b80a-a0804d3fee00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a074b35-8318-4ae5-b8e1-27b9247b91a9",
        "cursor": {
          "ref": "52dc5458-651b-443e-9692-2248c935820b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e9889642-6de5-4791-8a66-21bc89f31a8c"
        },
        "item": {
          "id": "7a074b35-8318-4ae5-b8e1-27b9247b91a9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bffeaa14-81d3-4b7f-a3cb-0774b4a25f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b4816f-c994-4cbd-ba5e-c1b6ffc234bc",
        "cursor": {
          "ref": "fd713037-2f71-49b5-b4d8-f94104726663",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "875851fb-3947-4126-bea0-470c5bc1500e"
        },
        "item": {
          "id": "17b4816f-c994-4cbd-ba5e-c1b6ffc234bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2c3babbc-c7a3-4b4b-9093-b130fedc2d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae0c282-8309-43d0-adb7-a0b384acb8df",
        "cursor": {
          "ref": "54f892f4-c5f1-4b30-86e8-7365da6624b9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f204169-2fb2-41cb-84b8-7290882d2511"
        },
        "item": {
          "id": "fae0c282-8309-43d0-adb7-a0b384acb8df",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2d9c453c-72b7-4086-8661-7af90dc9f503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f96286-dd75-47cf-992c-e0fd28665210",
        "cursor": {
          "ref": "3eb34449-51c3-4333-8f68-7e56044f17c8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "755f66b5-30e1-4afc-abfd-5351f069b6c1"
        },
        "item": {
          "id": "04f96286-dd75-47cf-992c-e0fd28665210",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3e8940d1-2ee5-443d-8b1e-71a476612a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695f0c16-65c2-4e39-9c82-971024f75413",
        "cursor": {
          "ref": "d25bbde1-b699-4f47-90ef-b72f3b15248f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9aa3c4d9-c555-4e36-aab5-202be751f91e"
        },
        "item": {
          "id": "695f0c16-65c2-4e39-9c82-971024f75413",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fb2acac2-ee3c-4f7f-a015-618d4101c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0e7c70-823d-457d-81c4-e85cdf0eb3ca",
        "cursor": {
          "ref": "98a20d22-c6fa-4b88-84b6-9b0eb8a64eb2",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a647cb67-317d-406a-ad06-c2848ebf9cbc"
        },
        "item": {
          "id": "8f0e7c70-823d-457d-81c4-e85cdf0eb3ca",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "caed05fd-b739-45e9-a5b0-7bba360629eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18de2985-1100-464a-8a23-04fa56151056",
        "cursor": {
          "ref": "36a407ff-bca1-4648-a0c0-6a397106e771",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4f40078a-bbaa-47b6-a903-73ffaabe6499"
        },
        "item": {
          "id": "18de2985-1100-464a-8a23-04fa56151056",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6b9385a8-7f1c-400e-8fc9-5a2112348b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4032e0be-d86c-4b99-a425-1cb9fd35f42e",
        "cursor": {
          "ref": "fb1997bd-ae4d-4fc7-b245-b0aa490fe722",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2db71ff8-915d-476f-9f4a-bd504d7b558b"
        },
        "item": {
          "id": "4032e0be-d86c-4b99-a425-1cb9fd35f42e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b9957975-fc9e-4093-b6ff-a8edc9264d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6ca1bc-0044-4769-9003-6a77b41678c4",
        "cursor": {
          "ref": "9b577710-4784-49a5-8e5c-82ce70ffb043",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "456e74cd-0574-4b19-a0ec-b2578bacd0ed"
        },
        "item": {
          "id": "2f6ca1bc-0044-4769-9003-6a77b41678c4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7f273302-fd12-433a-9b51-1a096542cc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b89ff99-a8d2-49be-a40a-0b89ba127f63",
        "cursor": {
          "ref": "99f188f4-c1c0-4be5-935b-b0b7fd5ad90f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f6678ad4-3537-49e0-934e-9242e823a35d"
        },
        "item": {
          "id": "3b89ff99-a8d2-49be-a40a-0b89ba127f63",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3f1de9d9-85e9-432a-a13d-3a359d7e67f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ef5dd4-37a2-40fa-9091-040c150720a6",
        "cursor": {
          "ref": "92c697a9-a08a-4433-8945-d2ac901311be",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5cd7300d-1b89-4125-af10-bc3dd21357c5"
        },
        "item": {
          "id": "86ef5dd4-37a2-40fa-9091-040c150720a6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b8a0bce6-4bef-47a7-9f53-2669e23be758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92567cf-63ce-4481-9571-d1d4f7607548",
        "cursor": {
          "ref": "a5a8b774-0475-443b-8218-19f86f411ecb",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bda35ada-f390-4154-afb5-30e7a4509579"
        },
        "item": {
          "id": "d92567cf-63ce-4481-9571-d1d4f7607548",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "413071a1-2e38-438c-8ef1-b6c02501e4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd09b9d1-cd5b-4c70-a709-9c7668559354",
        "cursor": {
          "ref": "5b56a268-6815-4e34-9346-271dfbfd5b7c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "67e59a34-a01e-40cd-8c2a-fd4d6618167a"
        },
        "item": {
          "id": "dd09b9d1-cd5b-4c70-a709-9c7668559354",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "88e074a2-0cff-4bd3-a3df-d053063932c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe25f02-79d9-4ca2-8e59-42ceee107cbd",
        "cursor": {
          "ref": "49bf366a-a095-4988-b7b1-8d65eb546f4c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "29c96f24-efa7-4121-b577-0377038a4fa8"
        },
        "item": {
          "id": "3fe25f02-79d9-4ca2-8e59-42ceee107cbd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "85277717-cd69-4f03-9d8b-71622964b9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068da429-f809-4da5-8c31-85f75da24b25",
        "cursor": {
          "ref": "9122f77e-3e8f-45dc-8512-357b850af0a0",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dad16d8c-8303-4b2a-bc22-82089177e1c6"
        },
        "item": {
          "id": "068da429-f809-4da5-8c31-85f75da24b25",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3c57ab39-14b7-4d84-9f8b-25bafaf77bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5478f113-5658-4dfa-9433-b3d2665a4d8d",
        "cursor": {
          "ref": "fc07e2a0-a566-42f8-b720-749af0c353f3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e0195165-f474-447e-ba0b-f82444bb8bd5"
        },
        "item": {
          "id": "5478f113-5658-4dfa-9433-b3d2665a4d8d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3fa9ffb6-922b-4d16-8877-d573712cdc0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f6a7ea-4abf-4db0-9f8c-636f4dbdd365",
        "cursor": {
          "ref": "724ef857-6ff5-4eec-bb4e-aa026581fcd4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "873464d7-7e68-4bc7-a49a-3b5b2e5195fa"
        },
        "item": {
          "id": "71f6a7ea-4abf-4db0-9f8c-636f4dbdd365",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ee1ea3fc-a097-4af8-bd90-0a9d28b58347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d207ec5f-40cb-4d7c-b376-144814d508c1",
        "cursor": {
          "ref": "bbebc2a1-4afd-42b6-ac33-6faf5eee647f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d787b9a0-433d-43df-8bee-7c8484fb12b5"
        },
        "item": {
          "id": "d207ec5f-40cb-4d7c-b376-144814d508c1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9c7330fd-ad56-4491-be21-2b843ce17561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20bc1bb-16c7-49d8-96d7-f3f4f0d47396",
        "cursor": {
          "ref": "be32bf1c-fae1-4018-b448-26f3c93b3286",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "34cb234b-6fea-41f0-997c-0daf5d5e5917"
        },
        "item": {
          "id": "a20bc1bb-16c7-49d8-96d7-f3f4f0d47396",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "47768c8e-8fd4-4876-94a0-e2775d3f9efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abd8ad5-e001-4aac-a753-73f5a82a63b1",
        "cursor": {
          "ref": "d4bf961a-ad1f-4d2b-96c4-c0370ac9c6f2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5e790a47-0cf4-48d1-a5c7-2aa387965442"
        },
        "item": {
          "id": "4abd8ad5-e001-4aac-a753-73f5a82a63b1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e8a1f24c-5577-451f-b8d3-e4914a4309e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b423e9-b64c-4151-b104-5852ae0d6314",
        "cursor": {
          "ref": "8fa32b4c-f185-4aac-acfc-c01c45da667a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "58b84465-3c76-4b8f-aa80-c3e2ddbeacfe"
        },
        "item": {
          "id": "a5b423e9-b64c-4151-b104-5852ae0d6314",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6f35d292-ce0c-43aa-9da3-21b7d92754fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f7998c-6c4e-4dcf-8bf0-747b235e612f",
        "cursor": {
          "ref": "95f2dd1f-05a8-4416-aa73-fc7f37094a46",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2c57a439-8bcc-4a39-8f66-36edf368e64a"
        },
        "item": {
          "id": "a2f7998c-6c4e-4dcf-8bf0-747b235e612f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "188c9e02-9cda-4f79-9d37-8a7eabbf01c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364dd931-af08-41fe-870f-7c4b7cd076ed",
        "cursor": {
          "ref": "565e061b-9652-46fb-ae2b-b376f8ac9218",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "37d373ca-6d89-419b-86aa-33dc07393587"
        },
        "item": {
          "id": "364dd931-af08-41fe-870f-7c4b7cd076ed",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68bcaf07-971a-46ba-8c2d-f26fbe3e8dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84816cb-898f-4577-bd72-c7c352e4b84d",
        "cursor": {
          "ref": "1a943047-6e2f-4f1f-bc20-02c0e4e3227d",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8b1c97c2-9f47-491c-9b18-da128458f4a0"
        },
        "item": {
          "id": "c84816cb-898f-4577-bd72-c7c352e4b84d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c69e027a-0bef-494a-a6ae-ffbb2cf7980c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac58fb36-0e04-45d4-912b-b4dbfd1e35aa",
        "cursor": {
          "ref": "2b96421a-026f-494c-965a-f788df59b999",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "45eb2578-2d3c-4c8b-b0f9-dbc0f292de79"
        },
        "item": {
          "id": "ac58fb36-0e04-45d4-912b-b4dbfd1e35aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "331970e6-ab5e-452a-b7a4-badccc39bada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d366637-fd31-4d39-ac46-e3e45e8dfb24",
        "cursor": {
          "ref": "41fdc320-c83c-46bf-bc5d-04e498444b9d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "03957117-ea49-4736-b6c5-7e290e44c916"
        },
        "item": {
          "id": "7d366637-fd31-4d39-ac46-e3e45e8dfb24",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5a669c82-73da-4435-99bd-e7dffc6b0f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7eef7e-2c34-4ab1-8927-897e1bea0c4b",
        "cursor": {
          "ref": "c0edb774-d2ca-412f-a3ad-a966ca038a31",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5591ada9-d7ee-4ff8-9a54-c9106c26bcd0"
        },
        "item": {
          "id": "7a7eef7e-2c34-4ab1-8927-897e1bea0c4b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "54b15640-9cca-482c-914b-50b0c5d9c771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dbc816-f079-4298-91b4-0838c9dc31c0",
        "cursor": {
          "ref": "7b50a233-ad9d-449f-8a60-f04d01627987",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "19356b68-48e7-4ba2-bb2b-1333757d9101"
        },
        "item": {
          "id": "d2dbc816-f079-4298-91b4-0838c9dc31c0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a58244a2-4876-4643-908c-9fda40bab395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7335dac-aeb0-443b-b497-adf34e3537aa",
        "cursor": {
          "ref": "cad005e9-03c8-4ba0-86bb-d1764d3050c9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0dc27def-d003-4d77-acbd-142e79dccffc"
        },
        "item": {
          "id": "c7335dac-aeb0-443b-b497-adf34e3537aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "393b9e78-1a2d-48bf-962a-7ed987b5f902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c422adda-10e1-4ec3-adce-7a85e8688ecf",
        "cursor": {
          "ref": "21b284a6-ccf0-489a-af56-878b4772dc21",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f204eff1-0110-4f1e-86ff-bfc819df8c74"
        },
        "item": {
          "id": "c422adda-10e1-4ec3-adce-7a85e8688ecf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1cb7b3f2-52a2-41d8-861b-f2c73efc8f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009b2d53-ea73-4d61-a495-23b7a064debb",
        "cursor": {
          "ref": "346f07f0-d5c3-4d6e-ba2f-1fd5b3502514",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "275943c7-603a-4e1d-b727-a26f105f49d5"
        },
        "item": {
          "id": "009b2d53-ea73-4d61-a495-23b7a064debb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "825fd263-40db-4c41-af34-1dcb52502bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3c84e7-47d2-4a0d-b1e5-75692dc585d8",
        "cursor": {
          "ref": "6dd76a7d-222f-4f31-a31f-57b986302c28",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5550bb88-bd52-488b-b51d-7e4e3fef3366"
        },
        "item": {
          "id": "7d3c84e7-47d2-4a0d-b1e5-75692dc585d8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e765a64e-ea8b-4b45-8f28-1d27f5d54c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7edcc5a-ce08-4313-b933-dab5cbb22a84",
        "cursor": {
          "ref": "0e6641f0-38b5-4c66-ad25-a7de9f027938",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ec1a2d5e-af92-4122-8f71-2f5dacac3706"
        },
        "item": {
          "id": "c7edcc5a-ce08-4313-b933-dab5cbb22a84",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2c036429-2145-4537-ac80-fcb8fb8ba36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a735c15-77cf-42c9-825a-fac556f2df44",
        "cursor": {
          "ref": "d96ad3a8-6b51-4557-ba66-5f2f497b8320",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8cd57d93-01de-4b16-929d-63b05c3e48c6"
        },
        "item": {
          "id": "3a735c15-77cf-42c9-825a-fac556f2df44",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c601d15e-6320-4cbd-b1ef-2e9241168b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b74ec-d895-4103-8139-f97ad4b7da9e",
        "cursor": {
          "ref": "61444ac6-9a73-440b-9ee6-2df4175466d1",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3b6e5c4c-fdbc-48e0-bb19-ae327f6367a0"
        },
        "item": {
          "id": "217b74ec-d895-4103-8139-f97ad4b7da9e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ac6659c-9503-4bd9-b156-ceea0a3d4c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814fd7e9-8d18-4826-856e-71fcc997e5c7",
        "cursor": {
          "ref": "f0fe055b-8276-4fad-b27e-6cf44bbfa79e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2119f9dc-c469-46bf-89c1-a26a54613004"
        },
        "item": {
          "id": "814fd7e9-8d18-4826-856e-71fcc997e5c7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e25ce2cd-c64e-4efb-9658-fd4df9f70efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93b5f73-c05f-4863-8254-c27c9d5e40d7",
        "cursor": {
          "ref": "5248c465-d608-424e-a2ef-fc22c2fe6a44",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "57de4497-7745-48ee-8615-c7df53953aa3"
        },
        "item": {
          "id": "d93b5f73-c05f-4863-8254-c27c9d5e40d7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "19a0a86c-5a90-42b8-b142-a44a890b8e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baeddead-c13f-45e7-bf27-f46632d56e3b",
        "cursor": {
          "ref": "5bd165cb-3799-446f-9c9d-ec0a868d9d22",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8662c7cc-152a-4cc7-b68d-9f2aeaf50c2d"
        },
        "item": {
          "id": "baeddead-c13f-45e7-bf27-f46632d56e3b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "61e00494-86e8-4381-8e94-7a9e593ab9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad5e8e3-1675-4f09-9bc9-f34b9252f4ef",
        "cursor": {
          "ref": "17a9d2c2-1894-4bc4-b045-49cb4fb51017",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0c62a1a4-9225-46d0-b8e7-f8551309c367"
        },
        "item": {
          "id": "dad5e8e3-1675-4f09-9bc9-f34b9252f4ef",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a30e9d8d-79b5-44d8-824e-e1089547f61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1a3517-50da-4143-8113-4559c25d710a",
        "cursor": {
          "ref": "21e19466-a690-4faf-b236-af1620657658",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "66a7d6f7-de15-41e3-9adb-16af894a4d27"
        },
        "item": {
          "id": "dc1a3517-50da-4143-8113-4559c25d710a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d00dfde1-5aa0-4d71-a89f-83751d151b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5fa5f-7ecf-4d5d-96e0-25b037ce3033",
        "cursor": {
          "ref": "bcc18ffa-dd58-460e-b7a0-616e86d13b8c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1bdcd5d0-55c3-4d4d-bc58-fb6a138a0c8e"
        },
        "item": {
          "id": "48c5fa5f-7ecf-4d5d-96e0-25b037ce3033",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "54216e6a-f876-4994-b977-7ef7a375457f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ed9aa0-6d08-4e67-acd7-e7d737b990e1",
        "cursor": {
          "ref": "efd7d42b-bb32-4351-a4ab-4a5f53d54ed6",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "864e59bf-311b-49fb-9809-bba35f11ce9a"
        },
        "item": {
          "id": "d5ed9aa0-6d08-4e67-acd7-e7d737b990e1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "93e43c83-add3-4a02-b666-6d5995828a13",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f516a92c-003b-4602-8299-c69557baf14c",
        "cursor": {
          "ref": "6b2af232-1d01-4e31-8a41-a09fd7e80742",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a1d06a4-2967-4fc7-b9a9-ca570252351f"
        },
        "item": {
          "id": "f516a92c-003b-4602-8299-c69557baf14c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "af8ce7e4-d780-4300-8290-fbd151a8fbbf",
          "status": "OK",
          "code": 200,
          "responseTime": 2665,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25beb178-cb83-4dd8-8558-1305fca5fa94",
        "cursor": {
          "ref": "6d745305-7421-4a90-9589-0fdcda5d4b7b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eef750ac-539d-4542-9ec4-b105fc9f6799"
        },
        "item": {
          "id": "25beb178-cb83-4dd8-8558-1305fca5fa94",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "79f65564-ab2d-45ee-a3b3-6100abe346a8",
          "status": "OK",
          "code": 200,
          "responseTime": 3060,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb6bdc1-3f36-465e-8cf7-f0ce96ad9f60",
        "cursor": {
          "ref": "7d3a7e05-5cf0-44ac-88c1-7958931c04fa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "08e81af7-13ec-4394-9b1f-64af952e6ad9"
        },
        "item": {
          "id": "fdb6bdc1-3f36-465e-8cf7-f0ce96ad9f60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9cd73b2c-ffc8-437f-89a2-b545afb0243f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb6bdc1-3f36-465e-8cf7-f0ce96ad9f60",
        "cursor": {
          "ref": "7d3a7e05-5cf0-44ac-88c1-7958931c04fa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "08e81af7-13ec-4394-9b1f-64af952e6ad9"
        },
        "item": {
          "id": "fdb6bdc1-3f36-465e-8cf7-f0ce96ad9f60",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9cd73b2c-ffc8-437f-89a2-b545afb0243f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf864f2-1b6e-41a4-9d78-e12237738fe9",
        "cursor": {
          "ref": "44cc9046-a0a2-4c90-84ba-c37a6f8027b8",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8c22199e-9168-4513-b0bc-860112e42228"
        },
        "item": {
          "id": "0bf864f2-1b6e-41a4-9d78-e12237738fe9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8a753ebe-1409-471b-a823-bc8d3e627e8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954ed7fd-91ac-4a70-82bf-78aabec96394",
        "cursor": {
          "ref": "a1e2ebde-3a41-4504-975e-8f4ed605c875",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c48bea6e-68d4-4925-b19d-72aaaac3e959"
        },
        "item": {
          "id": "954ed7fd-91ac-4a70-82bf-78aabec96394",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e7146564-dad0-4c13-a780-ae3b4fffb468",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}