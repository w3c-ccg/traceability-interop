{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4489dfa4-76a0-4494-913d-ba1574b24b7c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fd5d96c0-2ddc-488a-a371-9c7b20c62f03",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3ff483d-9d5d-4e9b-8782-7ba1e3f2b570",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d242bdd0-2c70-4d96-a4c0-dc2d59863224"
                }
              }
            ]
          },
          {
            "id": "9798d96a-e518-4adb-b07f-27a53c0266f8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "68fb26af-ed66-46cb-be39-5607a02eb9ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc6dac3a-3c74-4620-a256-e008bd70058d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "de4da686-dfdf-4e0b-90f1-cb0c4356f4be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d1773583-4bdc-4fa5-b4c7-4b01c4b9a681",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ddacea9-4b05-4aaa-93ee-1d8d1069026f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "360861ac-14e8-41d3-8748-c5028bf8d9de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1359f7a3-64e3-4e17-a18a-12fb60d3443a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e94f5ae1-ab31-4bf8-9147-1883383f07ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40a67fe7-bde1-4b7b-8904-860b002dcd8a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5197e5ee-23c7-42fa-a2a0-d4ce923ea2c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "145b0021-15a5-4224-a666-7ed71e0cc615"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c132f8bc-ea28-45f7-b563-db4ed3a41b47",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ac1a6eda-7204-4f64-9ca0-4b0d333b1ef6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43228977-7cf6-4ac3-8e5e-46ca8dded703",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be4dc03a-746b-4758-bc9f-cee63b577c7f"
            }
          }
        ]
      },
      {
        "id": "84a7921a-60af-48a8-90eb-4f02de2623b7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "18ae5a41-b7f8-42ac-ac80-0fe1d4cea721",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0278fa9-29e9-442f-91da-40c7a34d48b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "57d705b9-7972-41df-9938-bb294d893bb5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c637068d-54a7-408b-afb1-571a46264406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7cfc005-3cfe-45fd-b853-f5951ad9d461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59531e0a-67ac-49d9-8d45-0f593b23fcb0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba70e15-90f1-4623-9991-f65dffb18a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12b56101-38dc-4ef2-b528-53d1c0407830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "672555da-6608-46d8-9838-c64f9fe4e568",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0263afb-d9b8-4d7f-a0a6-21b1d0b5cb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7ed2501-c2fb-42e6-bd86-e9e1f782f548"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "264f14c4-7562-46e1-8bdd-6b86202c5d02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30598555-8d59-4fe6-8dcf-8d8d620068da",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d200b6d5-37ee-46cf-b8d6-a9fa5f4f2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93703256-b4f6-4a62-a4ce-6c9e98b9eac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7eb93d-01f8-42af-bd89-e42fee4ad6f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b760b2-31a3-4de7-8dbc-922b443bf012"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "62c53e5b-cebe-4878-96e9-3f52c6d7e1be",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ac5033b-280e-4b9d-807c-ac1d77dd1571",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "437a6b0b-883b-408d-85fc-47e16be95d16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "693414b0-c481-44d0-8188-cb3d04fd3e76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72dcad50-118f-4c97-8634-2613f0a39a92",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "74f30d52-5133-4142-b616-6e5135d2c322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ed96782-e38b-40eb-89b1-ee296fa4ad8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b268733-4d3c-473b-a900-c27039364386"
            }
          }
        ]
      },
      {
        "id": "71838477-1449-43b7-8d6d-88c35b8ab012",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "866da48d-19f8-46d1-b82a-9a0b91f43477",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8ad1e301-2670-418c-8499-2b662d7037dc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bd2446c9-d430-4889-9820-f04d8f242c2a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29df3ce8-ae7f-43ea-af1a-4bc89e698787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9f8d11-c9fa-4436-a049-20f95061789a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc59b388-d9ae-4daa-bef7-a51bf6bf64f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf81d97c-fd91-42ca-b47e-8ba009b08169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933ae6bc-0647-490f-8785-562084921f7b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62eb115e-94e5-4d30-8512-f18f5ebc474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c7a81ad-9d38-4978-a105-839fb55d07d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a19e10-b8e1-4ce4-aa9d-8ca080e0f893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f501d51-e125-4e0d-9090-154d62835519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfafc80b-1a83-4ca5-86be-502fa5c1c916",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6872119b-276b-4d08-aed8-58ec321ecbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8af9598-2e69-4e4c-a63c-b1ef3e4c8eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c1291e-9eae-4fe9-b35b-e0519c8cab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8217ee1f-638f-4a30-96b6-1ef42b0c2fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39668451-7e13-4c94-bc2a-1cc0a6884942",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0f58c8-a3ac-4f26-a19a-eb7dcd6023d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfe49df-6be2-4b21-943a-05abdb8cb9e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bd008b-704d-4bf3-a43c-4600f064be2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc6d2c68-9bb5-4e6a-aafd-ee6098ee4476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab1f67a-2942-496a-b7b5-cc6464a92a13",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85aa2ba-e450-4d15-b35d-1dd112380680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9305268-c131-490c-be51-e4dd44e55417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26460a1c-f15d-42b0-8bdb-9dc0cb251f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a46c79-393d-4eb3-9a3b-73043811a30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3aa460-108a-465f-89c8-0856e930806e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9692e75f-dc14-4466-94b9-3a4b059f7dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ed2a24-a4da-4b8e-843c-f23adf462eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053c5b31-c4e7-4f54-8ebe-06603bddf97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "315ab81c-d0d1-4a76-9c5c-27c3820e01ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c891d93d-1f9b-40a4-b160-bd704c7d012e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52f49af-aba0-44d2-888d-90c7b00112c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7853e51-94a2-4507-b89a-2474eb92aa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f8039e-4c58-4958-966e-0e423b00da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c243eb6-472f-47c3-a223-1abba6c9673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c752657-c1a2-4d3d-a270-5c4f3fc4fcee",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bbc06b-176f-417f-b536-b97cc2facb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded337f9-2617-4575-bce9-7b18679d2dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60db235-359a-4637-b244-8a935c936fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9878fc01-63d5-4b6c-962b-40a8ce25478e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854a1507-2398-484c-9e5b-47f2727a0605",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a0cab8-9d6a-441f-89e2-c58d89afd8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0d62ec-5b1d-48f0-be21-ce1827b9d14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f324cd-a000-4f67-abba-c1f4f62fd9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "921a3cd7-aeb4-4384-9005-926eae17ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4bda141-ada3-4eb8-ad03-28afef11cca0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b11879f-03da-48b5-b81e-8fb2a841d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f45d513-8e75-422b-bb93-fc1b9eb274d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554935e0-9c10-48d1-9819-c3759e93583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069e6d1a-5e8f-4aaa-b13b-090dee09cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cafb91-a09f-4bdf-b7a5-45531feef510",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a85bc6-b19f-430a-bb87-81f5a3fa05dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a193fb4d-6bba-499e-baac-2e7099a3e23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2f76cc-ee06-42b4-8338-24e16211bf96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76b1575c-7423-4594-909f-cb547ecacf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd74231-3b30-42eb-a355-1ba58edeff35",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6922974b-5e16-4fbb-8a4e-0613b71e4e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a509d83f-9176-4ee3-98cf-c5c12c6d9bd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2693c604-953c-4c86-8a6b-348de4ea1d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31227b23-9979-4dbb-b7bc-8cf846ab8d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d150c5-4ea1-4f19-a5b3-954c972793f6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabae4f5-1d4b-4f53-8c93-3f7d5b1d0265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e8a6e3-d95f-4955-adcd-b898334382ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e4a3e1-f477-49db-86e4-7db02dbe9052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce9e880d-3c96-4ac6-901a-db94b34aa0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15655d0-cb8f-4460-bb52-cae8b47fe3df",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51099fad-92e7-442d-b675-a0953ab3848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09a1ee0-04ba-44ab-beab-0e6423fa1a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa546212-1410-4e73-a116-f34eb26c81ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2def7f-5bba-4832-a208-42a922b9cbb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c165e9b-e2c7-4db8-b810-2076a273b06b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eb2066-4d3b-4796-bfdb-992a8a75da2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a97d5e-8b38-4b72-bf63-32cbc9331c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9717f0b0-2aa6-46c7-aa20-c2a56efdd171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "736e5f50-4cbd-4020-bfec-8349419259ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0093081-92ea-40fa-a554-2e7dcd0e2f90",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2fe472-06b0-4320-a292-2e19513b1d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9307e74-b2dd-494b-9be4-090c01477ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c9b7dd-f828-4732-bc4f-3741398f7734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9eb209f-3a18-4ed7-87f5-4a4e0f4c67e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ad6311-5059-49f7-999b-1a3218e481fb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ddb234-d304-4fd2-b26b-8d2bd164d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd00d177-b62e-4e10-8418-760e84b36b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d689681-06e1-40e9-9aea-f0d99e89afe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cec5ce84-4102-414d-b646-86b73a7bbf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cec2f13-9e6b-4399-9fd8-5a98e81588e1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "161ffad0-2ec6-4740-bd22-e90b249c74d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43fbaeb-d598-4870-a803-f51285690053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6b8043-1618-4f92-8451-651b04815fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d32afb8-2f15-4fb3-85d1-0e286f02aebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5216fd93-31c6-40fa-8c86-6e590d5e14b2",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f5c189-bf9e-404f-894a-abeee9643cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336db4bd-dfd4-4ec6-936b-1662c21a2399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbc660c-80c1-46c9-9abc-8eed24fbdeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b28f77-e03d-4e85-99a8-cc8ea4921919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a03f0c-a9d3-4c0b-a384-dd6d43755be4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de3d6a9-c673-48ba-bfbf-cd861419b1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31654afe-21f0-4834-9fdf-8a80b1cf2d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b835bd-f4ca-4dec-bebd-5de843014035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16bb83f-aba7-4d7b-87d7-6c4599552a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c025e78f-a02a-4ece-8d40-ee72d0dbfa3d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c44a9a-f1e1-4a9b-a703-efdd2700a91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e456fda4-e05b-416a-96a8-e5b3a45f3148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b008d0b-7caf-4f0f-8331-15386f37aaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a44613b-c539-4cf3-94de-ed1f161993a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872ac112-a54e-4c1f-946f-cb5049cab5e7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e932f4-3f3b-4168-97dd-2c5d837435a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca85deb0-871c-4e14-be25-d8e908d39a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda0400e-f814-4850-8223-6fc0a6292ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb866a4-cb61-48d5-8918-4cd77e8942ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864e7006-73ce-4381-9004-47a93a7f1f35",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e82734c-eb16-432e-85dd-69238808f7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39101477-918e-43bb-808a-596f3d20e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cfb545f-af28-4f05-8b12-c587a21b0c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd78621c-2de4-4834-bebd-430c765d1451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a2b1bb-d7c5-4a33-b2e9-c6f710e2228c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c4e5f1-fffd-4429-8388-e55eedce577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07873d4e-4f30-4f2f-95e1-418b501c8c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00874748-d50a-4fc3-be60-06878e3fc979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ad3992-6c3b-4af3-8a08-1436733356ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32df01a-00af-4fb4-8f13-cfc69d2214ac",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce5c6ce-d03e-442a-8104-eadbaa8ee0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b9d4f0-5510-4af3-94af-3f8f005af905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d81d1d-a22b-47f3-83fc-15efd70fb3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f0d29b-9a46-4dc6-b6fe-e4832d20edb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5838d64b-c29c-4c7d-9b1a-dc59f40addff",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdba95f-3b84-4ed2-92d6-3a97253aaa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155bdf2c-f6c3-414a-82e8-7a16a75fabd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeaa21a-5e73-4320-be29-703f8b2c7cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7626d680-9da9-4ff6-be92-cf32865f8177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82ac82d-768d-4e05-8769-3c918547a2d8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a6ff9-58c1-44f5-bdbd-dbe7d419281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a35de20-5759-4019-8312-821e73599293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161546c8-628e-467d-92b0-3fe80a92f223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9023a5d9-4e28-42ea-8064-a17bade8fb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd0acdf-fdd0-4baa-be44-661abdb3dfd6",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578634cb-d511-4fd9-953e-c35d48e8a42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c585c464-d22d-425f-8265-736b34aa60ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafdca00-07e7-438e-995f-d6e13028e4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae44a93-de2f-4cef-8020-c0bd1800c056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d962706-8284-4332-9da2-47cc8e977875",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a497344-2dbc-41a1-bc84-5a35fb39ae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe08b5f3-3583-4cad-9ace-74a33221a9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f5724a-894a-4f7d-8098-3bf531151ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d37308f-6e6b-45fe-b623-3d13dce30489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19c73c1-38de-449d-bf75-e416150a4ae1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41325355-517e-4773-b0e0-ca2d258ebbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0c2cec-64c4-44fb-ba66-9ca336a53ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f24fc89-e1bd-4db7-8976-1f8ab9c7e23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5371313e-b2e4-475a-ac5e-6fe15b1b0935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eba0f5-3f92-4905-9285-ae7a31371768",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afac55a0-0536-40e6-84ff-05c2c1cb878b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0da18b-f6c0-4e21-a7c1-ce6915a02c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cae0ae-2f88-4416-a44e-98c62c4a5393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c63018-d7a3-4913-a906-d43e589e5b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa78f50-a9e9-4f92-9f6e-f66d82724452",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba342d7-0190-4d0b-a590-219b1eec6240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7bb1c7-e11c-41f5-af2f-ecaca2582361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fceab92-0a21-4ba6-a1f9-dcfab2936710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a96630-3f71-4e34-8ad6-e619ba8facc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f4af18-d71a-4ee8-bef7-d204ebcc68e1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9ca27a-42fd-4bf8-baa6-914d00059739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910f99bd-d0d9-49a0-82ed-6c5324738392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4670543e-e591-44b8-97ea-9d2e502200a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9beb7e-45df-4cff-b27a-c72b65bb5326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3d8bf7-f443-49f1-9304-6dfe3dfcf8f2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457ac251-cf28-43df-bdb0-ee6c6d4f2730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a51fef-ad5b-4605-ac7d-4fec58c5d4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3a3ab9-fa37-4aa7-a83f-8631dbc386f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd137b5d-face-4e30-a5a7-7738fb70190c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1e5500-ff85-48d6-a24a-97442322f381",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356afee9-4b22-4ed1-afaa-738e87347c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb234de2-c75a-4516-9258-3401405629bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6efcc3-71a3-4189-a419-c6f4d8b5adb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "548c2631-97d0-4c39-8dc5-9783f737cc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3210d01-4a62-4afe-ae88-bbd74d3ab588",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbe9023-5de0-4294-ba60-cf3354ad640e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaa22c05-659b-49f2-9610-faf5fc6e7863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cde2b06-bd45-4262-8b8d-d247c13d9b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0508554-9fdf-4ad8-806a-46e601162180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2487c515-dfbb-4d08-80b9-fe582d2446ac",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fd8106-866a-49fb-9b96-62800a1286ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b6aa8d6-32a9-42a3-aaae-34c3713aa4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5b492c-8665-40dc-9c0d-f1f7b94a8b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aae2658f-cb49-4015-9185-86b28918f02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5e74bf-2ea9-485f-873b-9a0496bbae20",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62fe623-8515-46b9-a276-06c8983e8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf29ea6-07a0-410d-88c8-3bf4412367b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b89c4a-ea67-4e83-9c65-a715a8160ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3cdf29-b216-41a2-b4a2-ba7fb7441705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b56a083-e199-4d4e-813a-9cba1c1098fc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f13bc89-e72f-4f35-80a5-a8d1ead62fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58354e8e-0867-4b02-915b-d53ae411dcb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af236eb-52fa-40a8-9968-281be7451b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f6b0bf-d0d2-445b-a202-724980150d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168483c1-0ba6-4fa0-a832-903d027dfadf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbebf84-ad5a-4965-a24b-9ba411a9d936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22ce17d-e115-4cae-adfd-77a81c372a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8d0b90-3008-4f7a-94f6-9cff1c956a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "315d11c1-9f68-4498-9f66-a847e3f64e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c96dcba-9398-466a-9a23-5d48d594945c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f79b10-1690-43cf-a3b5-22914b2ef650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56737540-742e-48e6-b1e2-3197f84590b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed50f36-c658-460d-8a4b-651b68498c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d098dcc1-d3b7-4895-ad8d-74dd03fe9788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40afa027-c9e1-43e9-92f6-53df89be4a84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bfa001-b9d9-4e5c-b2e0-704732ef3945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a70903-6f7b-4304-af42-d6d2c2d3a9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3311aa9-d5df-46d1-aa53-59c7aaa99233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4af89a-9966-4b6c-a601-542f72330e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb0fb3-8406-4677-9176-0e1a8004386a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e8dbc0-bdf8-4b35-9fa4-3d5cc2bdb09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ef3232-5c92-4f23-9be1-a934426b16b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dbe843-bf3d-477a-a29a-4c01cbdf2818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c0eabaf-03fc-4128-b00e-21463ba0dd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc227ec0-fbf6-453f-821c-7a148fa179d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdc002c-89d9-4157-9ae6-fec046735a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4073e5c5-ecc1-462c-ba13-1f4bca13bbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f729b132-37ac-45b3-8ed7-3f1936254dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca53f92-17af-4f1e-811b-2dcf81791d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1427bbb9-7806-42f9-b628-0ee473578650",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a2f982-2e2a-4c39-bf04-f44f90d7e140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030f43f9-c1ca-447c-a752-bd702391993b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15ce882-0ae9-4caf-bcb7-5a56c270754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cfc6af-8d38-4d6c-8db1-ed25ce6835de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76f93a2-1169-470c-b59a-f5c20561ffd8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d52557-d8f3-4b49-836d-d21e3e4642e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f056e1-1b6c-41c1-8063-326b9b16ec8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b8f8a5-5c50-498d-bea6-05923da455fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9121ce5e-f379-413b-b617-ee9b593d3555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370c4ff-9219-4272-bcd2-1f1379d726bb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa13fff-36d7-4815-9b7a-db11e5380b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fdd6900-4ee7-4b70-a6f0-cc886f4feb1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b215201d-1c4a-4705-8e39-51786be97ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ed36ba-ae2d-4240-b018-f4da1d32a5f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e197d023-6097-4cf6-a4e5-c61cede27afd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060b6f96-d09c-4861-9a8c-864ec123b4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66d631a-405f-46f7-828d-697f4618e610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f769a5-d9ce-499d-83c8-577268c30911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42209ba8-700f-49e2-a326-50e8fd58f4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894dd341-a63b-4ce6-90cf-b22aa96092b4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2a24ed-d661-408e-b240-0b6e10a86de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43dc1d7-0882-46fe-94a3-109685fbc6fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952cd2b4-0b96-44e9-91ad-39d514158abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74af2166-9b04-4e42-8cc5-0c6195608eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7254656f-52c6-4e1d-9ab9-e34b3cc5ac5c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2d9ed0-dab0-4a7b-8fc8-8c58c17d1bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725ad4d0-49ac-4034-a333-128e37fc352b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2c30a9-bf7c-47d5-a206-f6f39d27e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14b07fa8-223d-4b52-8c74-918046782f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0863f5a-74a8-48a3-b246-847679d0bd03",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f4e8d6-4c69-49f6-8297-6b2eea629a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde6c96d-4e8c-46a4-8caf-87b891de8d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eceab324-f208-4d33-a929-a5a44be2b956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1add571-a40a-4820-862c-6697464ddc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4659e270-85b2-4736-b370-81df7d91541f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f67ab2-6c89-476a-956a-60f42d0207c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9b5959-6c61-43d9-89d5-6c0c4cfd901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab56399-b84a-4e3d-b93c-066dc534ac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade7bfcc-1253-4dd4-9d54-e7a2e3a130b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "845b3b52-6228-4a66-82a8-099dfd44bb53",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf9bd40-bafe-41a3-a526-a529e17f0dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a539f57-06f8-4eb0-9281-d1881f427446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1348b6-1e0d-4868-9166-969a27a8ba9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae01906-749e-45ec-8eb7-dc0daa14310c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accf5470-eb9c-4cf7-8bae-33c63d18a50d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d9ee59-b124-4837-988f-b425cb10dd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "374e3273-17ab-433c-9d5f-51629d6b1c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01f819a-d3a2-4df2-8e19-1a7621ec730f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ed8438-4ede-4e46-a4c7-ee54674cece8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761e48d1-05b5-4ca0-b2cd-0db52657fe2f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6d9a1d-fdff-4bc4-992f-00ff0a29bf89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bb7983-465f-4d8d-aee0-3036d52f475d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7180979f-26b5-491a-ae41-dfb47b4b26bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba4772b-3e09-47c0-9915-ef7c41345130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cad94ca-c5c8-4673-85f3-4c211e337ef0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56be33b3-9ab9-4741-b9bc-e5f9609c5ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd852256-46f7-41ce-bbed-937463be7a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211f31e5-0aeb-4e70-8d7e-5a97fb3522c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "79cd5690-e18a-4b4b-bdd9-605f35805424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73330b8b-93e9-41e4-8b70-d903efc1e93a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28d3d9f-4bb5-4e47-8ce7-4d3fb0843222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202e24ec-ec4f-46dc-bbda-a04983f02537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9f4206-5a6c-4c5f-8266-c3b9a7af4a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b03a56-1431-4a89-b866-fab507442b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72e633d-a46e-4623-a9dd-2003dbe47d7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2c83fa-2c6a-4644-9b20-07c786bc5821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f61941-6aee-4b87-9926-f20486db7696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb98627-882b-4332-876e-57cac70f4206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80684353-b216-4345-87ca-7117b6e1f3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dcf55b-87a4-49ba-96d9-57da141bdfc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ee1669-7c33-46eb-bff1-ee0a5a224b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c30124-722a-4b22-937b-3cbdc4a28388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4a2a5-d646-4661-a2e0-bf87b153cbd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e964010e-f18a-4f0b-9ec3-a03b60b1626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35352aa5-c2a1-4ccd-8536-56d020cf7309",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52069fc-66aa-4116-aede-d2b3a9c4cc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3080c137-06e5-4997-b2c7-5541806dd43b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4ca0e7-ef5d-4b1a-8404-f35eeb15087a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1e51cc-613c-460e-b1ce-be63af2f0857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c02623-9a00-4ed8-a7e8-563da5d71e7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d032d59-424b-45cf-8692-9d597fb06bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27391864-8c3a-4823-b0ce-901ed5cfcfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaa9c2b-83d5-4ef4-86ba-b824c169d511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fece6b-356f-4f6b-a1ef-7fadefedbfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1935f2-e75f-4fda-92de-7f714d494101",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5db842-4c88-4d6b-8b6e-927af7c16f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab7a380-c4d4-4019-9f39-6dbbb90b03c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51c6faf-03f4-4f9f-86bb-70c75373ad89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c205f6-0477-46cf-9d7f-97b1b5de79cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c791a82-ffd2-422e-aa32-ad9398dac82d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec3ee2a-09da-4210-8bc4-7fe763d89f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e803aa7-76c9-435c-827b-85e10e2b159d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c445c27-c15c-4071-9029-29c52b303f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c575f298-32ba-4a96-9985-6a22f5f79ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2924e881-1e9a-4a0d-b731-5ce9fb520698",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201d7616-0fa5-48a1-8487-fce8e563c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053c2246-156e-4e98-a277-87fb8241dd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68200025-b5c9-477a-b16e-185eb1c1c86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff0a5d0-9797-4d41-9ae1-7fc8f71f347a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1fee3b-72e2-400d-be82-f16b94bf8cf0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1881c7af-35a1-4375-a699-fdff5ec759d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845ca087-4217-4cb9-bb43-4d564ddad77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b7ab13-7fa3-4c86-a8ed-601b72575bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea728c11-645e-4515-959a-300162e6fae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63411ed1-c69d-4dec-a7af-49252a0520db",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75844443-9259-4250-8df2-e41c80bb9713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77eecef9-8cdc-43e9-8a31-42aed5b4e8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef78773-d5d9-4455-8b46-e917be3e19be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94a9cf20-3509-4b11-999c-9bca17a6e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b37d6b-f80a-43ac-9698-ffe610a45788",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c4cde-fce7-47e3-9f17-81ae2478127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87dfb18-54c3-4eee-8399-c020de0d607c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5339cbff-66e7-4230-831a-289f761f82f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4a114c-8c88-43c3-9f0c-4ea21959eeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5e2452-6075-4551-abe0-fcb5a4ef5a48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2975b57-0c47-452c-b4cd-8d66947827e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c4bbb7-fcbf-4d17-8535-5c046ec93a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fb1335-186d-484d-a096-22c74d10d39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d6dd11-f225-447e-bbeb-0e0ba478c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38e845a-0508-43c1-8c62-aeb0d5b6e483",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704eab75-0132-4038-8294-0adb101e23b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb82b4d8-e463-4fb7-b462-07ed6eaa2fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7038848e-1366-40e2-82f0-e58f50d4a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "257f59d7-b28e-4492-8601-8fca8a9c000e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ef27d6-8174-4c46-bdd9-c0157e791ec7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737d0a22-7c36-4751-90b9-c2729538f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9d457d-473d-4fa4-989a-734b6b5dfeb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16a9f78-441d-4e57-ae01-4c433ad372fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7506f076-d4c6-4b55-8ba1-1d9eab91b439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de8dabb-7acc-4d4d-a9a1-d1e2371eb980",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0d3dd8-ef72-4552-8dbd-77ad11cc5d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e40662-ae33-4de5-ac3f-f801db5f462c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5059fe-5f64-41b5-b880-d5b582ebd409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b37aba78-bef3-4475-803e-5ffbab286766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aeb155-2cbe-45a0-a54b-e7fe8a0dbdaa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990468b7-8df0-4eb9-b939-4051077b52b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc2287d-b3d0-4f27-a0ad-71832b65838d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1200498e-1361-4862-a8f2-4d53181dd53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fac791d-3907-45e0-a8f8-dffcdb0283f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8348ac7f-8ca2-4462-b889-cd98be34dd98",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52513292-8df2-47c9-b67b-c7b33e213830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbb5872-2d29-428a-a9db-0c2b1cc0708c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094caa30-eac7-4703-97fd-09ad5264d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d9a199-1ed1-4c2b-b5a2-e705f4408456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47484a6-5a59-435c-8af1-5516a657693b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e72fd65-c8a3-433a-b70e-a12ca4f66df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb15092-7020-4ec7-a4ff-2164513f80f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba394300-2a25-4e6b-baf5-b654475002af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84506a47-bfc1-4378-bf81-60ccec44c9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d71424a-c16e-4828-86a3-35e5db0de110",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8433074f-7b80-4d45-a590-51389de0102f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036fc2b1-008c-41a6-a077-6927cbc5a495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab7d4b4-7c82-4979-a1ff-455731b20ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a4d543-d07a-4af8-aa9d-29d0d4b2d649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0312e8bb-1688-45dc-b017-35616deef8ee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf7623f-122d-47b4-9d05-e6d8f279a68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa37d54-90cc-4f77-9f3e-ee4b7b084d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e1fd1f-7c9e-4e8e-80dc-7454b4c595b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93021522-8535-4a73-9ed4-73585f42aa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb77a6a5-b193-4e6d-83d2-c609487009c4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6dff36-857e-4e91-8f2b-86b7eb10147a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fd7064-e936-4b2d-9892-6c4fa22c9a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9ee693-8f9b-4982-af75-75c99c8d3fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc024447-e63d-4c22-9ca7-000f92750af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f5aa2-340b-471b-9c45-d255fb8f849e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "034f9f93-90c1-44f3-8d53-8b6849417285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d17ca35-f877-43d8-9518-997187b2fc59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed45eb2d-42d7-4368-b24b-127c21d46a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb058ae6-9dce-4484-89d7-60ed5c60688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828d1cc8-ca1c-4b43-b9ec-83d6ea6553f5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c381cc0-8c1e-4c97-ba53-13da944c6322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656485bb-70d3-4ea5-accb-48cf07920f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e0c34-3e9d-4774-bfa9-cfdb6db882a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "195d9dd5-ce40-4419-adc2-7a8dead275fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30824b0-b576-4a10-b003-38bca98059f9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae4e091-7ab2-48c7-8ad9-1d0ecf1d63e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be8eea3-7d73-4ecc-9797-087543e9dda5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d6b840-3a49-4dcd-a69b-f98a6733ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9c9f99-62ca-468f-b2e2-644cc665a51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae1b0b0-6407-432f-ac17-ff6a9044bc2f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039d7981-c432-4f94-8e05-667a617e3e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cabac6f-ad0f-4cbf-b549-186114f61f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a139334-d9a5-441b-a4b1-655bf058af88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd095d02-9240-43d3-bbc3-1e1c1d44ec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97270775-770d-4a6b-9283-076f3bc21158",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdee9b40-8f85-4646-a6dc-ab848c77578a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5542ee3-6bcc-4b47-9899-f763afe29da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ebdd8e-b362-40cb-914f-33321047559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e7eb35-20b5-4940-a234-8738823edd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640170ce-41b6-45e8-8c71-f0503aed9af3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9415a22a-9553-41a2-8e98-faca11c9647f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248618e2-55bd-4a37-9edb-148e7b47218b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9897485b-adbd-4b75-aea3-a060ccb850cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3def4a5d-e14e-47f6-b669-811d10273f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d5c6cfb-5734-4a0d-b8a2-94f7d20b5445",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66008b48-ae84-4c30-9929-8e6bc66f840e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1a731d-6ad1-49ed-9cfe-b5885181de47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42755ab8-6f6e-43ad-a8f9-096f13cb6ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f13e6a3f-9160-4d30-8e48-a1a2dc60e897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ac9162-522b-4d44-ae33-1baba0e6cc07",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06034156-093e-4d23-91db-7d8bc8f96202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "484006cd-4a05-4a1a-a6a9-66ddec027524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6e2594-b3e4-4af4-a6fa-3899114fe990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2fca0525-d72b-4f7b-b9d8-99d6c772b665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccb35ff-a1c4-40ba-9c9f-0f0e7f3656f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7bca4a-9ed3-4fd3-bf52-98dfc61dd028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd14737b-4690-4815-a579-f69c03aa7261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc4cbbe-95c4-4e57-8efd-d1e53c2056db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7180e0e3-4c5d-4b91-9d1b-7e9cc583d8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500a73b4-90cd-4267-9bc2-2695d161f857",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c49dd4-969b-41f6-a594-1df93249c40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b982ab06-4466-43c5-9f92-52763c0e5570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1634cb-8e73-4734-9c22-f894a711c76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b110abc2-5698-43b2-aff0-bba2beb832d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43118c6-c609-462a-aec2-f692f0d2bc47",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b860d96e-914c-41eb-8fb5-802766498aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cf5318-6cc1-4ebe-81c2-ac5ed4ef370a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582dd2db-4d0d-49d3-b20e-0e2599dbc824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b77d7a7b-19f2-4355-8d37-42a941497ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b104b2-25b2-49ba-b082-74764353602d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfa73e1-cb03-4922-b226-60e0ced893cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6742a1be-33e7-4601-9ead-11f4d964add3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa64c74a-3578-44c4-8e24-badff137b592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d49ba3-4475-4bfa-87bd-d3a0a30e254a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812a669a-3ae5-4b5a-b71c-0e6948bdf651",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fc952b-4942-401d-aa1d-fad18d5a81be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32310088-2d2a-432c-910c-3262ee6ae9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "035c3a2b-c112-477f-b440-adcabc9ec697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59829260-03c0-47fc-b803-bc30595f63eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881f1088-b262-4a7c-bbd1-a8ea26e04844",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bf7974-4cf4-4733-9b40-8d24b2240e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22132fa-2853-4664-a6bf-d29dd5807629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebb00c2-d1d4-4ff2-910d-cc0c1748737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21021f75-ccaa-41e5-a85e-26581f047a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644f226f-cd1e-462c-94ac-c15920bad447",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e17a0df-5f61-4c11-b899-a478848b4c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a93b708-4471-43a0-ae8f-3cc0f866e8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f6352d-3b61-463d-aa47-1ca5e9866ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c15e005-3678-4727-8d80-1e8712f27855"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "489e8bee-4bb0-405d-9579-3d2be1fa7529",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "061d2127-c0a7-49bd-97ae-d9f14d5e7321",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fdf0b8-1337-4ba0-8341-f1376e8d6c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4021c6bc-1e5d-4df1-a09b-aa60df5c8453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cff73fb-2184-44f0-bba7-1d0b6de8d5dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73be86c0-1c2f-4bf2-8e92-a8dd51d648d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9982a67-d124-4a2b-8a82-6f21d90b17b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85ef8bac-4464-4d39-ad65-d34019bbe270"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab278f42-cd40-4818-b80c-46f3be8e3885",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2141137-8961-4b0c-a440-49f192f6d549"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4530c001-7b8b-414e-a386-5f5157f7a400",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5009cbbb-e1b2-4bb4-b55b-308aa24ac18e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ff85f51-8883-4a6d-b1b7-d5679c124cf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5dc3e6c6-8249-4681-8632-4b39944241b2"
                }
              }
            ]
          },
          {
            "id": "5ac36f61-7ecc-4a39-8946-3803ad9b60c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cfc7b6ff-b330-403d-b120-70a38773f407",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6288b1fd-4d0c-4503-897e-f371c865286f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0003c7fb-670b-43ad-8d77-59cd7f146eb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b01526b4-636d-410e-b9ed-f1eecd2f6cd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6815462f-f155-4bf0-96d9-31524bd6dda2"
                    }
                  }
                ]
              },
              {
                "id": "c98f9dc1-60c7-4189-a3da-87c20833a898",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ef6b5cb-978c-4bf3-91d8-a8a2ebec1642",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82206b1c-c6aa-460a-8d55-3a41ae175d95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0502119-86a8-43bc-bb52-e425dcbaaea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8115256-2992-437a-92af-b375a2ddf82f"
                    }
                  }
                ]
              },
              {
                "id": "d71ddc43-0017-45ac-822f-03fb04e62f0b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f99fe5d-a38d-4c13-8776-084a61ee514a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c154b52d-c609-4e06-8bc7-6ee0e9da894c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8598783f-b086-4d53-81a7-b0dfe0b306c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "163d7052-a993-499a-be27-15100378702b"
                    }
                  }
                ]
              },
              {
                "id": "ac8ddcb0-31c7-4319-8fd1-b8413f57a206",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72abf4a8-2664-4583-9be2-ae1acc39d7b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9ef79bb-5c9f-4690-af36-65d93a91fa2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1922d381-0ee2-4bc6-9814-8579b973c613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0c8152b0-8f99-40fd-8b1e-99965309266b"
                    }
                  }
                ]
              },
              {
                "id": "74f3cd23-4046-40a1-823f-ec58dda78eac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d51f70a9-633c-451a-98ec-37d6e412b96a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d308b575-e751-4ea8-9d83-d26ec9e9ba7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b13e4fa-61e1-4027-9fcb-019e793ffef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3534883d-aa9a-4d83-be88-ee481db029d1"
                    }
                  }
                ]
              },
              {
                "id": "ed1c6580-9c1e-4655-9812-ae1337e080b0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6937257e-9bc0-4155-803a-3e2885612066",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed35032f-b789-4b5d-996d-a82cd5822ab0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b0186e5-33cc-44a2-84a9-3cceed5795bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9435a650-e862-4f7a-81bc-c2e0ae249abc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d4da020-105e-45e9-a80e-0b0ab019e481",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab105780-7b5f-458f-ac41-2b27da4236c6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3dc3db3c-cc53-476e-93aa-09b3a6697bcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ba479f2a-f8ee-4290-8a9e-1d9617448d1e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c45df03a-3c05-4c5b-9d4d-e477cd84c5a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "23fceec9-22be-4133-8a0d-0eb379e0589d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae94f6fa-6825-4e5a-bd53-1c05ac80f358",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67f28fc0-360d-4369-b68a-3d391c5903ca"
            }
          }
        ]
      },
      {
        "id": "c8e67f4e-789b-4e9b-8339-42661f79c61d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f39dd4f8-dd8d-401c-a3ca-b3c0b4bb6155",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abc032eb-49a0-4a42-96d3-b4bc4065b64f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "017fda62-8a0c-4085-9941-60662c071e61",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e842b66-7cc7-4642-a1d5-e3244a2e0560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bac9ba6-43bf-4b59-ab21-f8abf549b3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760180b9-b105-4ba3-8c75-9aefef84dc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "132948a0-ff1e-4c32-aa66-537a98813eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23da3fa1-3798-4a51-b8ce-7f98f2f82803",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f9ed2e-39c8-4a1c-acce-2dc9e0ba7a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2bf55f-91fe-43c7-aeeb-dd924b2c5632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00cee14-bc27-4e87-a3ee-75fd7f9bdfa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0f2c58-4d3e-453b-8f75-c76aa8fe4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c58ec4-5ad6-441e-8b64-02d394a99a33",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f74e3e-1b46-4955-82d4-4c9f44298121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47dcbea4-0cd2-4774-928e-0663cffa53b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e78097-294e-4f59-8fa6-887a147a6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1830b6b-dc91-4f66-9dc3-051840054c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0550cb04-a17d-424f-bf84-f203680dcbae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0cd552-ce5e-48a9-93f6-06bdba791f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07963c5-6646-4546-82ac-ed327bf97592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8155089f-5551-418e-a303-fb1d3e0dc3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7973854b-7968-40e4-bcaf-dfdfa7a16180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f693f6-c3a1-4099-bc94-155776ebfcfd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c847842a-29a0-4a0f-9d04-7be056c6ed83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b083897a-c11d-4b4a-b3e1-1cd5f8182417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2bef3-2337-46b9-a26c-dff7f9f0c7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f8a870-d9a9-4a53-a5ab-c6706940bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519a9ad6-8730-4bba-8b58-d37aaa59bea6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b5842b-1670-4a79-a19a-8b2336b06aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd77ace4-fdee-4285-b025-5e8f94e2aac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a26ca2c-10fa-4c76-8791-996fdcb3c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d232e905-da56-4471-b9fe-87257a1c956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e79137c-14a8-4dce-ae71-b3876f0c508c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c761287e-0c5c-481e-aa92-8fb6d8e2b253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31e9d4d-3e0f-466a-b8c1-5ea9096d974f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975191be-8eba-44ee-84ba-4dbc3ba292d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac833faf-67e5-474e-b768-9970b2b8dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef79202f-1c56-4f8b-a116-b665276d7292",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e9cd60-f39c-477b-8e35-3990c4687a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9172ca-0edb-4b59-b685-8403817a0a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16a0c20-a433-4c1c-87c4-8e4b66d9d5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b075576e-4039-4ef9-a350-453f54407d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d72b2-3a08-4783-9368-61afc843af05",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9008e9-5efe-4751-85dc-375dad00cad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5c6bd7-8098-4b23-9c55-02121f078311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b697ba24-ebd3-4139-8c76-bbf1a6595fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e29f9a8c-5753-455b-a40f-16703793ebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7749e607-08dc-4125-aa32-9d9a0799a765",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da09b5b-e83f-421b-94a1-3fdf51fffc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669febb0-7f24-4ac9-a75a-24a9ffae7f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5937f7-a21b-4c17-982c-c9623e03d6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff3e305-a4de-4367-817d-45b29f2b787d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a26b661-1069-4d61-9606-68871a37b644",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adcd7ed-30a6-4371-b26b-4cbaeee46b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edb5707-519e-406f-b260-1fc4cf2845a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45140d2b-e078-42fa-babe-bcf7efbd5095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae7af3d-68c8-47a4-b16b-740961568430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31931042-a09a-423b-b95f-bfd04ee37647",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72549fda-4df0-4bf0-8980-3fe7f0be2ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e404060b-8626-49b8-98a2-bade29010580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3df0cd-3881-40fc-8c0c-8f972422d46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c158ff2-b9f5-4c48-9117-742bf73fdba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d2a086-5511-473b-af88-665f16da4b22",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0e5016-39a5-4826-8cd4-91db5a07b481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21f6242-f176-4da7-8473-e0fecc93e259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af1333b-5c29-40cb-9880-9009f59b1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b5e447-3a0d-4129-8c2c-d7f4eb90d2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4e83c8-b520-4813-b2b2-0e2e1a8cf695",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b92ee3-e1c1-4334-9fb4-ed900c731bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efdb7cac-39c0-4be2-91bc-4e9053748cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fba8e74-d7db-440b-bb65-e9d8a580c0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8300980c-ed70-4fce-8dc5-e69a3c8aec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff131d9c-572f-4718-b9dc-24ddc0f83bb6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97b3eb5-0a48-4acf-9618-c0bdba3d6052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ab68b8-24c1-4bdf-ad89-3f90f9d01725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dc7d38-a63d-4d1b-af25-5dd8175228ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d71f5b-ace5-4d85-b311-e614bc9ee632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342d29bc-74df-46f2-9634-4ce56b74abd0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ab60d1-eb83-461b-aded-764cd7963e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4050950a-d1ea-481e-a7f0-bc6369f0a538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd05dfbf-97db-4503-ac9e-3f83105a1391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "becfe035-7059-41da-b485-4b4362bcb4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7575b44-ca48-477b-bf46-490185d20f3d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929e8e7b-8c8e-4cd9-9709-75b1edd051e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a87006f-64c6-41c3-827d-f5ec5050ab9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b819cb-9d80-49b1-a73c-4dfd2fa5aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef308ed6-4788-4737-b453-e7d784c7c789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c8f080-0264-43ee-9dd3-5f9e63136442",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d60484-c683-464e-a6d3-02470a1b0dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9212f5-8a8b-434a-9c1f-e615fa3b1a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a57a08-f2b4-4008-bd07-9323aa53daab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ef9cc2-e98b-485d-b1cc-008049236f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca40c42-b440-4ce5-9e80-e9e0b6c68c57",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba11c39-209e-4492-8214-64390cb36f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa982eb-728c-4cc7-9818-2e90fb66a98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8778a542-9ff3-4c65-aa14-9a765a5cef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85c7fdb7-d684-4e1e-aa04-6e9f9bdeb0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0888e03-77e6-4a2e-9d6b-2c95fa6e0c62",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ad16bd-977f-497f-b32c-c3ec243edf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289abbbd-db7a-4a5c-9331-de994c20820f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608f4178-0079-4db2-a54c-220f02596672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10436fb7-ea65-4cae-9d19-2994f45f999b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137f8f62-2a65-408f-9e3e-50d68fa9fe19",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c099333c-eba3-4197-86c1-41c7bc8c1e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec1b58c3-6d07-4342-b064-f73fd827f01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66b4b03-1350-49dc-912a-ca0a923227d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "496a47e6-27aa-45da-9cb2-70214d145ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787ac008-b304-4e48-b030-8367a364b13b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4b6ee8-4feb-4ec4-89b7-add63b6147ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e4b00fe-d431-4d01-bbfc-3c75406c3598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ba23d5-ba2f-4e0c-b07c-34c85d7284e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51ecb31e-1ec8-46b6-bb4c-4d8c243d0cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dee4c8-c56b-4913-98d8-c821b722eea6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48529c4-8ddf-4b23-9ab6-5dec0592232a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f92885-7e5d-4d99-b675-6c156a9609cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3fb008-b609-4d48-9a56-539e8123e593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4db2d181-2231-43d6-b38b-47319c3aeebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3545bb-d192-4695-887b-088829eb6cda",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780c2c97-d67d-496c-adda-e89159c9e92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9c3e36-e686-4711-8edc-607f1f125448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0af5954-8bf6-4b99-a600-08dfc541f1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "039ffb16-9b07-4d9d-b489-0d70af188f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f09774-b88b-41bf-b27f-02f9cf804de8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86478a4-e44f-4026-a5a8-a63af3e78bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623f9121-7c45-417c-b757-250e72c92b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eacb379-0637-4f48-b548-824f4d9ef35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a2dc83-d7d8-48ab-a002-8b49bc08d0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb19f60c-7bfa-4fcc-84fc-a6edd31c87ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "198c0615-9ac7-4b6f-b552-c8452a092ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7723f20-8976-4c7b-922b-bf61ae75ed6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4929a76-4bc4-4be9-ba56-ae082d84af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2659bbbd-5777-4ed5-a20a-4d9e30b263b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c3bf17-27ed-4542-8fe7-7d2a8e911f1b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba9b342-b751-4101-a92f-2bb704b6db16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f73bd92-206d-433c-a734-9f18fef63d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f083903-c7d3-4f19-9d38-5227a0599936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768df5f9-c67b-452c-83f7-901c74ad94ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb31b85-b9f9-4d99-a20c-0bb7bff6ce9f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65170df-5bce-45a4-a322-d6f3521dc653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f4db401-1dae-41ec-9a7f-f15e7fe039f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9543986b-2b59-40f9-8ece-133919d138b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8a0f1d-6df7-4579-9b28-6b7ff3995119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a605adb-912b-4365-97df-d9a4ba55d766",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea81f01f-5351-4606-ae2f-a6c5c9efef24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da31160-45cf-4d77-8e58-d7f4cdfe1d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519ec9ad-cb5b-44b9-821f-1d3931f27899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f70057-9861-4d05-980f-4f6262835440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8736a0a8-5a9b-44c3-9501-ed310c165b3c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98104390-224e-4dd4-aa00-2a4fb416bc1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b311a1e-35f9-4e9e-9a44-72b2da3da1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23adb835-6bbe-457f-9292-0f13d8ae4428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "544fe5d5-3378-451d-8f1d-d9ea78399fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17e5321-641d-4f0e-9f00-2de594d29233",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f79386f-9a45-45ce-ab94-d49d3e4ae10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a2de95-3ccf-44c8-9261-5a9166ba1790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01de6ed-97c1-4a59-a666-c2af44ac1ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f6743f-a651-4b84-b533-76506a82d31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b090c29-37ad-44d4-ad7c-fea32633d173",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f01e74-4b3c-4d8a-bc73-06cdb390a26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465ba385-a4be-41f5-aeeb-b604f4384351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9c40d5-3694-4d07-a698-bc15a9812a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd475090-ea13-457b-af48-e3e9f3661994"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "65ef7c56-f8a4-4a0f-8e6b-0c4cb83d47af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b40c669-fb51-4e2d-9020-213d09d3aca4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc8b996-577f-4d67-b805-46e3e0525e3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea0aae1-870b-40bf-9a01-4fa8550e810c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a2c1ed-675c-47b3-b151-39441e0b49e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8bea0f4-e765-41d9-a6c6-f5bfb3554ded"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29fbeb45-acb9-4779-86e1-86bc4b42e8c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5b01000-b19d-4081-9033-d50f0c9ee797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a606bbc-ef8f-4fc4-835b-e43a08f9c836",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f8fcde3-f480-480e-9512-41021fb52019"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20e5dbad-8653-4a1c-83a1-ad0c1ae87bd4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b59fbe8-e575-451a-9bdf-5fa5bd2d0705"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22011298-3922-4e4e-8ae5-438e3d839e3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "305ff974-c010-47ce-8aa7-bece19703229"
            }
          }
        ]
      },
      {
        "id": "3edc8625-f9f6-41ac-b7f1-3002437b7b82",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e3ee99e5-aff6-4a7c-9c32-a25b6303f310",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca638704-6913-4481-a3ea-d340a992cea0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a431a915-c8f0-462b-97ec-ce14347029a8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03b9d0e-4b1a-45d2-8b9c-16f984716b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8650a5a9-e5df-486b-b36f-c6ec7a9feace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8957aca8-12e4-4531-b93d-d6ee0cf9831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "809b6e40-e177-4cd2-8048-26b23f0009c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97e5161-2073-4001-b9e3-cfd7c3beea7b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d6a228-78af-4f16-a84b-3acb1912a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe708e5-c73a-43e4-8c84-6c6dcdad8d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2c6b0b-ae06-4b35-85cd-97c253e83f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a49d4446-d295-4de3-928a-4e8f9ec1473e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4ea35e-2b02-4d75-b17f-ca6206f86112",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3377b596-a138-499d-b31d-4fa8476057c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6b8398-1840-4709-a9f1-0a8b6a5fb093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf92409-b7aa-4c9e-b4bc-f4bdc65c2985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1f7777-382a-43d9-b1d2-b5d3a12d207a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54114c92-a4f3-4a3e-ba7b-9723318b95b9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d133b2-810e-442f-a7af-8f5f80c5b2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349e3aa9-9b79-4dff-be9d-db4f0d120474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cd1902-28c3-4629-95e5-a50a1aca37b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c13323f6-8f6e-4ee7-88e8-1918a19a1b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f3c73b-57a9-4300-b2ab-ac9c8bc65150",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a51d1c-582e-4b49-9494-1f6e4b0759da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fa8756-cc5a-492a-bbaa-4d884be33eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479411f7-1466-4ec1-bbcb-ebba8a5ab61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb29830-a6e2-4428-a755-e06a5d67f431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55447d6-b0e4-468b-81a2-b2e9a8f2f21f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48d81f3-9494-4f1d-a85e-d1649e32a255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7105bb41-6382-4515-89f5-3e38ce2e4422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f1b0ed-6167-46bd-9224-24f30323ae59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbdfccb-5e03-4c18-83ed-183329fc997c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83adcb0-c4ec-4288-8c76-8c2cc24a72d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bc6de8-1ec3-49d1-8b2e-f0bba3561b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4862a2d5-db88-4974-86c6-858480f063a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae1cf2-56e5-4a17-aca0-6feb002ea131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c880c38-e80d-4d11-b077-61c66296ee87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413fee44-92fb-4ab3-895f-4b7135bf34fc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd32cd0-4dda-489f-8f17-e18f66d2160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c780037f-61f7-4ad6-8ff3-168a55d1069a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97df546c-e5b7-428b-b62e-5a612868854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68859c4a-6ac8-4c8f-a4c8-c775cddd1a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdba51fe-3ae7-4906-aa0e-8f28680ba68a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9039e0c0-83de-4c56-ab6c-8d07af5afe67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52632b69-4b4f-4d80-91f5-b8af3d46380f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c91ec6-3875-4f83-bd4b-4fc76a39b750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e729f42-9e11-4d43-838c-62e874c2abdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab11a381-14f9-4048-b887-b3e7e879400c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3a5342-ffaf-425d-890b-bbf8346313ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc49b86-7a60-4512-93c3-b04da687026f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db0e4d6-5599-4af4-9648-45b2fae9aa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa5f057-a863-4a86-8ec1-4462c2d1f31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f0a3b4-04c7-4a79-a6fd-dd13c1a6e1ae",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258b73a3-a6d4-4666-9411-47f627ac8efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff9621f-4d8e-499b-82e9-3a3ca5ef0b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e0f7ea-56f7-4263-9239-ed357e9901bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1159fafc-4dad-4efd-9751-a4e048935858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce9e3fc-cb86-4db1-93b8-48c94c692c42",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b644923-0340-4cdf-b5a0-acf680da4476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db0a4f9-0458-4a55-88be-b028a7492813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0584242-2cb5-41f5-9701-bc6b9aa03587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "127c32d8-629f-4450-a8c4-614d2724a2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe53585-b3b1-48a4-9ef1-64f0943e9e7b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b701a1c4-2dab-4be7-a769-6111aff18f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd3e620-71cf-4c2e-979f-b1471bb11bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e828e5-33cd-48d0-b916-c17af1e64df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d7f38d-4424-4d21-b2b8-47c9e24a80f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c292e252-d535-42e4-b69b-ad5962b00f8f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4c6a2b-7200-4347-aa93-23c1a70d51e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d416c2a-e219-4fac-b17e-57371d2ba6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828817f9-3ca3-4403-9159-fa2d5aa1e4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "47356444-b986-48be-b4a1-4c6f0a194725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55bf307-beea-4461-a4c9-f140a13e2866",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f3668a-e7e6-40d9-bddc-0de9bbd7c497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dba5d2-26e4-424b-9535-485c58ae195d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f528449a-e7ab-4a7a-9068-2e39146a3806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28581a93-aa34-4ee4-bfcb-9442c21588ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94d5f9c-7ba7-47c0-8ab7-d0a74f3bbbf3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c348850-051b-43e5-9059-e227fa55bc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10e9b34-8cfd-45d9-890e-24971a44beec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca50163d-cc56-45c1-830b-f5a43ef085e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa4de33b-09db-473f-9b5d-228ee0a3aa13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500ff299-73b7-40f2-a16c-64e38edb3e6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f7dd64-ca24-4d9c-ae10-bec102ced29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e69467-61bc-4a2d-a23e-a8c5df47ba50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2639179-c6b3-40d4-a2be-e8f8c5d59d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "649aba5a-5424-4188-a32c-225bade07ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b29d358-5b66-42ec-8371-1a17e89b5942",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9902be7c-3650-4f78-968a-c36379bbbb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241aa7db-23a5-4740-aa7d-daaeb4cdbc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb420754-4d7c-4418-b578-3e198cdabadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c87ca678-48c9-44be-beb5-be69f15f0aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300cf707-c0ef-4bfb-a7b2-608b11ebfdb9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c24e390-8c8b-4087-93a1-563f69430bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca262c1-d444-4ff3-9a69-241276f6dd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7a435b-7537-4038-b98f-feac56e75b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73d58032-4da6-4d3d-83ad-b15ec0cf28f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adba8353-c34f-434f-ac70-ac44d1b83823",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4536f2c5-f82d-445a-8cf7-334f6f616ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6b2c3c-d546-46ae-b414-559632b4a892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a0afa8-89d5-4a31-9aae-2fa745907b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb36e80a-0a8f-4132-bc95-35ee86ba435a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4edb8d-756b-420c-8d45-7ade78d9b992",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b012a1aa-52a4-4516-a5a9-b53a2b496dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8358c3-c3e0-45ba-8ae8-98827dcc0353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a2477e-6cdd-47d8-9bb5-0d2928a2362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba323ea5-d560-429d-a730-9c14ca73ee8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3e6cd6-c0f7-410d-851e-91a05f1787d3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442f6c6c-d0bc-46bc-89a3-02079c7a7c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d902ae6-86bb-4b3d-b93b-17aa3cf3737c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1ab901-b48e-471c-a983-34f6b2e27b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7acc3c2-b751-4a56-ad6c-13192ecd45b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2bd2af-7e25-4c3c-a852-a478d18ff5dd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da8ff25-dd4d-4083-a3a5-99d9d56f7079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c30c6e-5c87-4d7c-a5b8-1f6b8943ec6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eddc3e49-826b-4f39-b59a-1b70a9d59689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6009e6e5-0b1e-4e83-be47-4a60907c8a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6cf5fe-1cfb-4bbf-b30e-b4cc10ae2cd1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052ba84f-2b44-40f7-908d-13771d47e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be31edd1-811e-4bc0-8aa1-47a4ab5930b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a128e8d0-0a10-4084-9c71-4ab13158ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfae2705-238e-46ae-b046-3d4dd6fff25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac05d5d-3b35-4168-b46b-efb2ddc77055",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "079a8fec-039c-45b6-9e8d-5ed39f61ab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d124ea-69d5-4cba-8090-2f23c10b7d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0162597b-8562-43f7-bc9c-33f6d59a8f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6135d4e-b2aa-471e-92ea-6cb988432244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca450c7-4a3c-4301-a7e8-d2d780a477c0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4781175-c5cd-4c0f-b305-b285ab3f66aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacf4b48-0687-4715-9973-e27c8e5f6063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e708d6-25a8-4f58-8472-0bfbf35e9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4628b068-d9b2-4dd0-ae17-5e490de5b8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468ab17a-13aa-495a-8325-9d2b2dc6f49b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d23331-ff19-49b9-99ec-6c38c3eae749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb8750c-894d-4cc2-958a-327123168767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2017e80b-6ab0-4d8f-81d9-70f30eaca914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4f24a2-a0f8-4e41-9ff1-8da90d846bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc94e958-f0f0-4d85-923a-4b5ccde34df0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fc9af2-99f4-40b7-862a-0401a21acefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9aef0c3-3eaa-4e35-8b1a-4df66768878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee692a1-2616-4761-8c76-3e6fe28fc94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb4d4c3-2507-4e69-be9f-7b8688c8cac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f7e652-b7ee-475e-b142-2f497b7f38b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7974f0f1-269d-47b1-b32b-aa7158813706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10152d7d-ac4b-4772-828d-a82c184fcb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea2a170-b269-4b1f-b20b-b038bccab567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c6b9e68-c6de-4ade-852c-c07fb67e18e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dbc7f5-cbaf-49d3-9482-2ee750c36d2d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cb90de-49a2-4510-b07f-5759da5cde0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2ac64b-d0bf-4941-8dad-5dfba6f7b923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ee1842-8da0-4c32-842a-b9ad7613e989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0ce2c0-e785-42cb-9c1b-cff7f96917bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe9764-226a-4e91-83d4-40e9a84e9c66",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca9e8c-e99f-4752-8c56-4f41b4836fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ad1c53-0031-42ee-a2d9-5a1d8ed53ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef8cfc-a6de-4ebd-bf2c-f80231480c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df832d62-cf00-4f21-a998-b330a012878c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ff067d-52dd-4e9b-88be-d9e1b3bb9f65",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb349eb-b67e-46a7-8593-cf9b353b247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cd5f82-fbd2-4661-88bf-86d63f55a531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4a54dc-7b9c-4351-83f1-f5a1bb8663cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e54c5c-1179-4c19-8efe-1a1670934054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b2d6dd-fd6c-4a9e-b436-0ae2e58f74ba",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da30228-796a-46ea-9c2f-e7ccd08d5429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cefa99-e4b0-46a1-a56c-ce6164a386ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e36609-30e6-470d-b5a8-4f0d861d87c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0665cbe-a524-4cc0-9c9d-c1729a377a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a15d8b4-6956-4755-aaf2-326c2f2d7f96",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9118da73-302f-4afe-9488-634a0420311f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4267a1-2e12-474c-93bc-81888bc67909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeeee5ab-a827-493d-83f0-0d3e76f80338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "358c8973-24bb-47a8-8a51-f2015e959308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68f76f2-2197-40ac-a71e-6fd5224d99d6",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221394ea-3572-49a3-8155-b43922d7d048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba455d6-a05b-48c8-8d75-0fe31275ca6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d35036-c7c6-4b98-899f-571f597817b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648058f2-0795-4114-9c13-e8788b27f735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cdc30e-2d09-4982-bd12-f16823ef0bf2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2d3d4e-6d89-4759-b6db-e0960b233c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e07f510d-78b4-4688-8dc8-6e9e07600b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ac1f11-104e-47de-a388-35ff9bfee832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6255e647-6129-40e1-9495-318289dc22d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115d3d4f-6c29-47d4-a542-c7597778975f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25b7a4c-b169-4156-b2c1-61c0f2f5194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac103daf-1d51-407f-b105-d21310284474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa92be3-4b4e-4ebf-8627-dad6eed1ce14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97af95b-7e92-44d3-a24f-e5de4bc054fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21c88796-1f25-4ed7-af15-d59c17abf80f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13c3c42e-74b6-4f8e-b1e3-8c86c2247226",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e85fc04-0f11-42da-b8c3-2df2b18ed089",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf7fe06-5553-48e9-aeda-c0d9d3b61a75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f176e03-e349-4e7a-9e4e-79e9063da54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34028572-e44c-4a00-ac90-8819e91c7166"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01aff09f-22a2-4a47-80eb-4a1432352a49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e1d6b55-d779-4770-9963-e2fd8970da73"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c453f3ca-79e2-4e3e-aa6d-8c182001dbf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8d28e6d-b98e-4d98-bca7-ac08a2c424f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b65f0304-bda6-499d-9269-d78f97adb400",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a63dd86-70d5-4b07-b851-03b62817aabc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1485b8a3-4ab7-4371-8f3e-f5cfa20ae372",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1621bf1-fbb6-4f1c-80fe-bc793e176080"
            }
          }
        ]
      },
      {
        "id": "f1e9a550-2ccd-4413-a391-ac1c08e91246",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "697cbb67-a7d3-476e-ad59-67599b43bfc1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "478f8f67-03e2-4850-9d46-2d43a44c6cb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d395804-1c72-4006-a4dd-e3a3916e3302",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b35e9dc-b1e3-4f98-99cf-0017642f0ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9665fc-9ab0-4241-b32d-fe510c73eef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de00bd81-73b2-415a-9cb5-dd88553f17cb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e2f6b8-899c-47bf-9d8a-51b04936453f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7910dd9-5944-4b27-952d-c9bb75173df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ffb238-464d-4342-b517-264b3ab35753",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecaf99b-9a99-438d-8cc3-2ce662433611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606299e0-7aae-4ccc-94fc-458464b02635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b50b89-4b00-4a92-a1fa-4ce79356beb8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f44e6b-eb2f-42d1-acfd-c2674fca11da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184a89bd-2695-4a54-bd4c-38404d839477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d21aa6-2753-4eb7-8608-1587b5b110ea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b9037c-cda2-408e-9452-6680b684785a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a41d796-e1cd-4869-9f44-3c8ce25584f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a981c362-e0c2-4a7c-836a-2e39e1e3f760",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffccc755-73b9-47a4-aa58-48e1e8ff1f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cd625e-1384-422d-9b42-000c3a08d581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7781d8a-2f4d-4899-8ef3-68784573ca4e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003214c6-0ed1-4f3f-ac2d-8897880315bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c5f696-bf08-4a10-af4f-6eb1ce8675ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f12ce-234d-40c7-86d0-17bf1df86777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d339a49b-1e34-448f-bbb9-d8cd92a8ef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d086f93-2b94-4684-910b-e78e3b774ff7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3865ddcd-e090-40d7-9e06-57011eadd4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9819e4e-011e-49b0-a4d7-4a7bc1e91e2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d372b399-4ea8-4521-a983-3a788ae6db28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c5c850-0231-4314-b0b5-5ed687c29359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7527db6-dae3-4666-baca-c1cecf7c5b6c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f36720-82e7-4904-8115-914728b7fc9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1efd4e-cfaa-4d57-b6a0-9d5eb1cd359f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20283a94-1e68-4afc-afd5-847a5f4f33c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e868f745-681d-47bf-982a-086c70240030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08eb1b8-95a9-42c3-b49e-0d1cc6d14fe0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f27b1ed-9f17-4377-a13e-fd4c3d6fb2a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c10b381-6bf5-4e8b-be76-8836a0022450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1a5d50-ce75-4735-a8f7-45ed2e3b6b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a483d768-1d92-4f41-8af4-1b2e81117b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dd6682-f94c-454f-b51c-f903473d39b1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5083c994-837e-465d-8031-f8e7d854323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2652bca-e377-4ab9-b146-2c6253531a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d1d07-2eff-425d-8509-9c7826d2d29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28993972-626e-4e6a-a53f-a38f4a1b623e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f76be-3d93-4851-bd30-25924e9fcb6d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2603a53c-edd8-463d-accc-b0c07419e387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d50cae-b1c3-4079-a501-0df4851ccae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1370b47-78ff-45ab-a791-f0c1390562ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb00219-d764-42a3-a814-4dbd14ea6de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eddbe17-403d-4b0c-83ce-85d8b373f59d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81905dde-c8af-4c18-9263-32bea2ce25bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a73fe59-633c-4ecd-a184-99c3cfe6b477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ceda0ee-0cb7-48ba-9bd8-36491d2631f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7246348-7bee-4040-b3c5-bc96a26891e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7e4d6f-1437-4b18-a163-007f19968d9e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e858c7a8-8ca9-4e34-ab4a-a8914105a17c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f21d22-6f5a-4511-85e4-d15d98118f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ecbf48-398c-47f4-a123-e91e6f13eb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ca3cf7-0e83-4ac5-a7a2-3c047eed4b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1665fe-47bc-4720-bb02-3caa280db90f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d394d793-6c6b-4b74-8bba-ae4d9bed01db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db71b13c-c38d-4d47-b904-89347792fd29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175c5197-237f-407a-af52-f38393b11bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6bd306-6807-4e83-b5e8-a8d9ae98d75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73db3a2c-4d12-4f87-9044-4ad7e02bbb49",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fcea45-7f02-48fb-ad04-d2ad37a6f5ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e52d15d-2e99-42de-aec8-fb65f2db4219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e340eef0-8c29-4a12-9ee7-f40db111ebf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8121b5-b4b9-44de-9d5a-58ee18417028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2b8614-08e6-4f1b-bac5-4bfb70b1019f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86c270-4a6b-433b-8d48-90afaf03d69b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f4085c-515b-4500-b316-c3bedd63d580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6e182-52c0-4aaf-882f-047c5531db4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a158c16-2513-40fa-a4d9-b586d6317500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1c55a7-97e5-41b7-8386-58d942ef518b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e981fd4-d87a-4954-9aa7-28ea7c918da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa0fd59-c9ec-43a7-8910-2dc73f509794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5df17db-626d-44eb-96f4-a53d232201f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29730385-e427-4b10-b049-4ca8db4cf127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cd3d00-0bb6-469a-8452-f7d0f62ad0a6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbf07e3-dc60-47d1-8a04-3e7264adeb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679a06f3-8454-42d8-b2e7-3cc865ae0d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b28e7f-50b2-4a51-b77d-48330066a1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c753e4-ea67-4ff5-8c9f-89f3bccbc699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1392c2-ce45-4043-b8fe-f7bd0f3ae64c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194486f2-3a1c-495a-91b3-90d7f201dcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e794d018-1622-484d-a968-70863506dad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f47c897-977c-4518-889e-697012f6e992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f506b0e7-ea72-4d68-b9fc-b63fcdfcf602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e03f7c7-5aa8-474b-a2b8-2899a6f5e1bf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cdf4bd-1a21-40e5-9661-cb777242a11a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d00a0b-4617-47e7-bbc1-fe682bb98984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286db416-f79f-4650-bdbd-14a58387a731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9e2ba7-5f0e-46f7-8648-a331d884c035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a7fb5d-65ac-47dc-bb70-aa027ebcd787",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1e8865-2338-45ae-bf8e-fdefd49ced26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42bd854-1d4e-46c0-8d88-ff711c8cfc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4417efbe-800f-4c75-ad4c-fcea03c6aa43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7864da-cabe-4675-92ff-8e5d5e08f0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ed0ff1-50c2-4e71-97b9-c4e1bcccc98b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4601a6-8569-4077-a57a-5d5ae0312146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11423547-7888-4891-ad58-853bcdfa869b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7381fa18-b298-45c8-9889-08f2221eef2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6cf083-5544-4fb6-9a63-8dcb43370c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5135de-8d42-4d87-b54c-10458f09d1a1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c4633-99eb-448c-b131-3c1874e18467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27ac410-a005-4229-9f76-4a2a93077ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1772b9c8-9480-404c-99cb-538c82a51abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de8064f-3695-45db-8662-8e13d49ee30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5733468-ea89-4ba1-859d-97a73d64a6cc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeeb0f9-fbbb-41b0-9348-324254b64210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a83d296-1398-431d-9295-b367ea328539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9063a0-5f17-4d44-b72c-6a653197d231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cca4f1c-5dd6-46f3-a9bb-f953d5cc5871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f5408-5e72-4aa9-9481-4d8f49d62b3b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13cf826-7e93-4325-b431-9734887fd632",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b067da35-596e-445d-a3fa-40d1f4c02f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a55ae43-aa52-4229-a6fa-46a3b24c55d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb849496-6638-4ecc-9b5e-1cfb07ece532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfa54b4-086b-40c6-a130-e7dcd5c6a4be",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1758203f-305e-4944-9b60-14ff80f1f82a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222740c7-572a-4265-a5d0-0c234559abe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe83648-0d0a-4ec0-93a2-a5aa3f980d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c89cd6-474d-4585-822e-2e5e70b07f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6602f6dd-a10b-4cdb-8caa-43c4de72ac1f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74a456-ae77-4588-aa39-092db8dc93a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c9f5aa-4fa4-46c7-ab77-f43f4b51592b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05efcf99-3299-4bf1-a4a5-66a1a916de2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "198202fa-6840-41ae-9318-91514005918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02330e12-ca7d-454c-92d3-2548d3ce3754",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b718562b-4a31-4c72-9b17-fc062a209f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5290e550-c1a2-4954-9c75-790371fc5973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410c2a32-da24-45d4-b07c-69c7b0469efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140e313a-ff70-4afb-a3c2-c190a267f127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad671d4f-3970-4336-94e1-54b262d3e1cf",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c337c0a2-435a-4eea-a0ee-b7b8c59eb088",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb709738-8b4c-4229-90cc-ef39c11703e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da8db45-b1f5-44b7-a77a-afe07719d24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df521ef0-1d22-4601-92db-4a8adafbaae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257cd021-2f00-4887-802e-0355bcded5a9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89424bf-ba59-4897-a9af-8ab1a8a47313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7abf43cb-5217-4720-987a-8540c9244849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef04e488-95e3-486b-ba4c-0bef2fbf02d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa72cdfd-90ec-41f6-af83-f92e673eb088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecd0608-f117-47eb-8912-89b481f97e11",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bacd359-1b8f-4d7a-a5d5-8791d5df22dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5bb876-8bfd-4579-b3b4-3612476f724f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8471fc-cc70-4ec4-956d-c821eb90af99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975d252d-209a-466b-bd76-8aa4254b59e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf28999-9411-4d67-b37c-ac7202822097",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7016bf92-76dd-47be-81fd-6efa4a716a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08cfe63f-afba-4dba-bd9b-06430dc8a3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2eb5ff-95cd-4956-94c6-8cc5acc8fbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207a589c-aac5-4f6c-9a6d-7818a0527489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a2bf3e-0b3e-4753-9bdc-8e7a675774db",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf72902-f284-4a42-b9a2-acc91bf9de6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49407368-e346-4f5e-a7a5-3f9d0243734d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b472066-9cba-4e83-bbac-e5ad1b1b15b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9922c4-b8ef-4fa1-89d2-ba47a2f8407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de8ea2-6dc0-4628-b94f-1c3123151118",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d04d80b-fc22-41c6-81d3-4ce8c66759bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2659242a-34f1-4108-86fd-62365042400d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5808531-0e69-4a70-bc0b-ac2684299a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff7fe68-e9ed-4f3d-b2b9-38dc1b00532e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246fa93a-ad4c-47b6-8d78-37681a098ca9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c696dc-a3f5-4c79-8aba-93e91d0367bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e547832e-7ea3-4cdf-835f-6163195c3d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f554483b-3f40-4e20-88a8-2ca51c206875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28195b39-91eb-4383-8c1c-712a4907aa31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663a752f-6b10-4075-bb66-a91397b106f1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5983b1-dd2a-4499-a52f-f21c966aae35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303fc944-84b8-451e-814e-dfda437ab59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6936c50d-f345-4309-a08b-77016fa7df89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f4c3fbc-1688-4e79-83b8-c48843d69b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b885964-0d46-4cea-b948-9cbc19a22b0d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8691d2-8e77-4b51-b18c-b1e248959172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b05dbd9-16e0-40e5-9932-d9029648c386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd3dc4b-8f1b-4b45-a52f-2dd40c551d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beab2387-212f-494a-8688-088f926778ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679ed08f-436e-4096-b3a2-8cd940519a1e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373bd3e6-4846-4aa6-acb0-d4112715bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc2e6e2-7701-42b0-b5b8-6acfcf0abd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d330679b-96f8-4c1a-b81d-e7c2e7f3583b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee35c2b2-b280-486d-a397-6161a6238413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c1cb40-16e0-4d6b-b4da-88ae57c60682",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf038f5d-fd13-48b4-b9d9-c0033e2bcbe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c6a68e-709e-49e2-9bea-cd68dc792da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4364a68a-e462-422b-81ac-50025109bbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d9bcff-3fa2-430f-8052-ad514b071509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93e1018-8894-4a97-a6b5-6216eb9705ac",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa62f18a-8c99-4867-8dbe-48da7519c59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e46e7fe-0d9f-4bc8-b75e-63dfcf70c303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa98184e-4b9a-48be-8913-979291780b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfdc350-1df1-4eb4-8a4e-943ab8d3525c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04113b8e-3990-4798-8f09-278024a26831",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f009aea-5197-4070-a797-bbeefca2f327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625a45fb-e199-4f43-b045-4097236a7adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed5d8be-5445-4e93-8796-0dcaf5b307ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c9d45e1-4ca2-4405-a885-79b773fb7092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da838cbc-89eb-4a10-825c-c94bdb44cf7b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c772d2a1-96b9-4ed2-a114-c00f11599b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad424648-0f56-4e37-abd9-7da6f62a0d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e937682-ec27-4036-8da5-abe8308e919b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab154acd-b7a1-47b3-9ec4-c194c2339ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054377fd-715a-4f3a-bc00-af3f4c8c4e8f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a5f75b-645c-4d9d-9d3b-2d29fe10bcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa5bf72-5156-4831-91a2-92032b3aa257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf566ae-dbad-43fa-8ee5-17cb1846d339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9bb455-db70-4e9e-b53d-2ab87c195c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4869ce-3436-4aa0-8459-a5389456a68c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2eea79-cd9c-4923-ae85-84150cea380d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc1584c-536a-48aa-a121-3a153efffaff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfd454b-fed7-4779-9cdc-d7f82492b272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0460c971-61d6-4ad3-b96f-d1c2bcb0a027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc6e9a2-f52c-4b4a-b279-19b0f12063fd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15cccc7-0916-4258-867c-90d1f81081a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bae5744-11ba-497e-987b-cc24186d4327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "035191a6-0340-4690-ade0-8c60ff811e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd319a49-943b-43b9-86cc-0acd94a24fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5391f94-930a-4e59-8883-9e96b8027812",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a0e465-bbf4-4a6d-9d0e-d0c23d2f035f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07382c55-1a07-46c2-a33f-050e3206a222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a63f862-b8e3-4648-b9b3-51bbf743879e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8735be6d-3e0b-4993-ab3f-8c5924d8f085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4251f48-d132-4bc3-9b6a-bfabf9ad1c29",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6a3e4a-62e5-4d92-bcbc-ec8f1e89b8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f223ffd-fde0-48fc-ae37-32ae33678e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e739e15d-2e2a-4369-8ddd-00d869dc2745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af79d3b-6ff7-437a-a395-531636e3c668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ac6925-eba2-44e6-916f-7a3cf80529f0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f7c80f-a7db-41c7-97df-f799499954f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f232d469-e6fb-407f-ac66-2c37199ebe1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86da0500-a5af-4296-9bbb-8b19929fa635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da41c1c0-9a4d-49d3-81ae-d3e19a80221d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f453c1cc-7551-437e-8791-957618a5375f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a3f2e0-a502-4f1b-8e39-e5cb30f8beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b227d6c9-cdf3-443c-af3c-b5fb0861076e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2429b0-fdc7-49d2-9ce6-4d008c499946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83fa1c5-6e9d-4bad-a512-57ee43da0416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e8806a-c006-4ba5-906e-363984280a86",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a912f1b-9b1c-4fb4-916e-5ae2e6b2928d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2db77c-a690-4939-9e45-a0cf26c05e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45c1b44-94d6-4e22-b30e-37dbb2736c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8817fac-2efe-4bc3-a754-e3aff4b5d868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e795c9-cb7a-46c0-9ebe-304ade5b718b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64f3674-30dc-4f93-a83a-333580fd60b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf5b88a-ddc5-4f76-b68d-c756e6cb8ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5424d8c-f2c2-4385-8f4d-b34eb16db9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7227e3-ca10-4064-880f-8d7e988c7d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a15589-47f6-47a2-a8c1-d94ee83df284",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ad53c2-afeb-4e84-9160-f80a30a13448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8fca8d-6b46-4814-ad88-7a00209efa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d40e93-cd0c-4042-9928-6a5665bcd33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4cf923-64b6-499d-8f03-2677ab11a6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b988be71-94ee-423a-a28a-07c50853170b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4f4035-ec3e-496d-b3dd-5c59172feaa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd09656d-11f2-4126-8081-a9632d2f2e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44348fa-39ed-431a-b069-24b8389fded7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd4dbb4b-4ca4-4d73-812c-604d9c7cd6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9684d748-fdce-4b00-9280-f3298fc2ddff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f577c078-c2c9-45a0-b576-aaeb19493181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eefbb2b-32ce-45d3-8a9b-a1ad63cf2df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee77fc-6353-4961-8c31-e6b29c4c0ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9739ea54-d6d8-4901-b21c-054121815e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08130a3-2f9d-417e-a97f-4873b294b69b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98110316-ed6d-4286-818e-5ce5bacfa918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6acc8c43-ea88-4179-aa80-f157f3f07f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d5db41-c580-43d5-b60d-7e1e91b43672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a67b8e0-57df-4708-8542-8257ff62bde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f493d3ab-fe54-404b-afcb-30b4b2702ac4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b4ba21-188c-4f2f-954d-703cd0572624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99d9dbf-ede6-4014-90d4-c8ac4b1325e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7385315d-10aa-4b18-86b8-eccbd34272b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a3bd716-fe6e-4a2f-b617-0c5af27da719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863fb89e-46ae-4255-931b-4eb636cba189",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f349d51c-5845-4999-8fa6-71dc76d99cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c55dc1b-942e-41c2-a4df-73374d831536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95994ee-9e20-4ca4-a8fc-4b3bf572633e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a676bb62-b8d0-4e23-9f7a-f3b1ffff7dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f986b246-0a8b-4827-8217-141001d50c91",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070e10a9-9b65-4c92-9136-0bfe0510f7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a857a3-db2b-4cd4-a28f-3730d316f905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870716d3-e48f-40a4-bab8-d2b56faa2969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ec5578-ff45-48f2-a6df-4ab3ee44522c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6010e4-65b0-4de0-8397-8a2c761000c6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355fde3e-dccb-4d2e-bae4-4da2546a1a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c56662-6e43-4518-9d0c-a35d42577834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1918c9-aeb6-4b27-8eb2-5d53ebc08d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d98eac-10a0-4e66-a695-cf6782bd0e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50ca19e-0337-4660-855c-4ff1dfe80042",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d2c92e-3480-4f8e-9b61-38b4b7248da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b463dc-99e7-4b7a-a234-4d424f5ef291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e72bb5-ae28-42a4-8c99-57676e13edcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f336f3-8b06-404d-b6b6-03d20a30d07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b5df55-6814-4c1f-b8a8-08ff502222ef",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3aa98d8-eeda-4aed-bec5-25409de7fc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826ac00d-52df-466f-936f-c877638bba08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ff4555-2eda-4b39-b0a2-91c3c1e52b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53483f2-47b3-479d-b65c-b16e5103b60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae72426-1392-4387-8ac0-0498c1f3a9a0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f70cce3-87f2-4eb3-916b-0c9cde800a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6cef7d9-90cb-471c-8520-d5b631dc14b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b552e2c-4929-4feb-bc33-d68228554af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3081612b-8f8a-4f1d-82cb-43b2ea9deb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab13e8b1-17dd-4c21-b9ac-95343f2db906",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec660558-9320-40f2-b5f2-0f53c45401f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68ef6f5b-530a-4257-b1fe-0b7a026f9223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d80732-1cdd-4911-8dd9-52a846a8a1f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65448fce-5bb3-4624-8f6d-5c888e83a439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c858329b-7bb4-4478-97ea-5b75d50eac8b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fc4eb8-9dd6-41ae-9d48-a8e978c0cef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c502c337-3100-4711-b1ac-870d65fc0010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af26f83-7467-49b3-925f-3ac9f1bdace8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb360dc-5098-415f-bc9b-798a48b22cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf70a3c-9d7a-42ee-893c-f6d0527fcb91",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3134f7cb-2ea1-487f-9040-3bd6a19f389e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b903c2-3937-4626-88bf-e22622a78483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0028a-f1d0-44a4-94bd-46bf000b6ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0aa681-07c7-4730-bcd6-cdb8685ecc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03683b9-00a4-42d2-9e58-90dc51bdbdad",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5c8996-b218-4481-a600-ffcbb3fc331d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859989af-c4fe-45c4-a93f-4858143fcd04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fc8f4f-f2b6-4349-933a-9b8cfdfa3a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240fbc37-187d-4e0e-9237-dcf2482e77c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5f2bc7-3b05-4a3d-b972-72718710349f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dac257-34a0-4079-ad6d-96243b0bcb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e98c2231-042a-4f57-8b16-e52bde4825e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a9c532-b5fe-4715-b807-8baa41897abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da79994-cc24-4594-8d4f-a6d9bef61213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2959b85b-c8bf-4d65-96cf-6f0bbc2cfbfb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6565d8cf-afc7-4479-a9e8-65530cc9e875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad5c051-9e5e-4ccd-9e43-2b6b06e80eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "100c3753-9658-4635-a961-a7f1bed46eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a76f6ff-34eb-440a-91cc-bd827232d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a90f8d-c560-4662-bdae-5f38b226038f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b5fcf3-1985-429c-8939-03b1ef0cc0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d202cdb-15ae-4ab2-a159-583d7e9e7fdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13172b16-b35f-48df-acb8-f66a8b9aa994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de62409-626a-4a5e-a0b4-ab128e4ebdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ade03e-ee61-4768-a223-ef7d86ea6d3e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8bcc66-b784-4401-82fb-4df1c10dfe75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f68df64-c1a7-4dfd-87a1-d69c92cdc6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c438e469-9570-47d9-91b9-14207a945418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87e7dbf-6a6e-4065-976e-0cf9c5e1449d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbed7a58-d7c1-4ab8-9554-20b912e9f591",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab13688-8eaa-40d0-b25d-ec2a43b3fbfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e74ffd1-1cd6-45a0-9e6a-d4bf6f133979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78313d5-2503-4080-8e7b-f2970b39e811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad56769-82d1-47ad-8cf4-b86e9f0ed90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d6fae6-c4a1-4a0a-9d60-9b8805325a8b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db50eea0-6e62-48f9-8f82-d1e075613c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a453853-b44d-4c5c-a082-08055afd59d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c921d4-0a09-4942-8862-9b17a90d3d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2792d83a-9f1e-4a40-bd9b-f2d3c4ee7c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370be1cb-5519-4aaf-b24a-92974302ad4c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ec7ff-e1b7-4b62-bb09-60fecdf3f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ac03e9-60a7-42d8-9781-f1b5a31dea36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b4b359-2005-44bf-af50-dd2e66fe8eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4be26d0c-f982-4320-8d23-56fe89e60c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8958e22-93a9-4399-bfaf-7d05884fa990",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc22815b-2bbc-487a-b664-f8bc21cdc080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa40541b-f853-444b-9fad-6d1050465e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0d4026-63c9-4221-9d13-da4f2e5bb4bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b01ef9-ba48-41ee-9e58-dc21e320b374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9c63e1-a99a-4d53-a8f1-d32935ad1eab",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070bef63-df8e-48eb-b3f3-a17badf76990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a5c07a-36ee-4925-b91b-ea4c23901bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f133b-a71e-4a6d-8e3d-e848783d10ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfa4324-b7b6-4a7f-b66f-ee04ffda96fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435e7dc0-5b9c-4026-8d2a-7d752da38f90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac25ea27-c7ab-449e-9271-4b44df713929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e15664-2171-489a-b514-68e974df8581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cc1917-9304-42ae-8112-5717b555f08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5e412b-744c-48fc-b50a-65ab8fc61332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d2d427-9c09-42f7-aa72-c644a8db0bef",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1226fb-ee27-4437-a469-66993b1c1c37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ee78d1-5672-4ea0-9d43-c7e92427d6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef471aac-85ed-492c-8fbf-a1a7e7590d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c5a3f6-3bd2-4e81-9c40-4b2004e183a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5920815-7005-4cd9-b5a5-13d0b03649a0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d5b1bc-9699-4a8f-a847-1f76655dc602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a722230-b95d-4513-b722-7d59c755fd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8587b8ca-0aad-4c09-a220-7d8c4f836532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e42ed1-259a-4d87-a839-e2bc3585d5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f22c642-2752-4419-9eb6-9a25b082d355",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e156a61-891a-47f3-ba03-a1a4532900e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54ce4616-9104-4635-b965-a360ee6cee53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0029b955-7f36-48d6-a6b0-4b6a9a0071d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8828cc-ebcf-41e9-8e73-7adcfa2705ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdc8a04-aa71-4f2b-9f92-b9a7922612f8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f2e9e4-1070-4a4b-87c7-b3345c0c2fd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "152ba82a-feed-4ff7-a994-65fac547e339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57141eb9-0963-4c08-b76d-b27c9fe00559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8722efeb-df4d-4234-8f8c-e1094e2ac43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f8a751-cbbc-4bdf-9200-024c84fac2da",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb3a16c-0b92-4dc9-ae48-07f9377315d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9cea68-6b2a-4d2b-8053-d9252095d744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8f8720-ef4a-4a37-ae76-e4010ba504e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe17100-f620-4584-b452-5e9fdcef48b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe92b72-870f-44c2-a44f-171c762948e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78effba-dff2-4bde-a878-68bb261bea85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f193ce9-13c1-45f5-b7ba-609f18b4afe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bf99e6-046a-4666-8b9b-a4d2387d866a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2bd516-2690-45fe-ad37-a63dcd3bb594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa33514-ebab-4e29-8e4f-cad7bc474129",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e65eb-9f61-4718-bcbb-963ebc76ec70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67288b14-8884-46a7-9119-c1a75f83384b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa57e59a-40e2-44af-a7f9-e07f79857d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d65a84f-a890-433d-8133-81d59088c02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f21ce5-73c5-4d7a-a3a1-02671f388ec3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676a6d1a-00fb-46c0-a658-7b941c9fe6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d575c83-1b70-40df-b95c-e7aec129971c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34152bb-cf6b-4282-882a-a4f7f28620c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b76c9f-4035-488d-8c6c-803e32d82c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1940066a-78a9-46fb-8953-b5bf8fc08d62",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e2ce25-d9d4-42a1-9d15-fb2d424d7252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7111aa71-2276-4d56-aaa7-3e4992185b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cf4f4c-58bd-4195-b3be-95587583ea06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6343c8-a4d7-4a9f-8536-0dda37bb7698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d781bd34-b4c6-434f-82a7-1788e0923fc7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620deb7a-fc24-464d-9411-5f4fc62aacb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa27c91-8cdf-4479-8b3e-528c52a817a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e85388-e60a-468f-810d-055a3ede2be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bf306c-55ab-4c09-aa88-52a7632c25fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dc7dd3-fe4b-4fcb-a3e2-585db3450439",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194347a6-3222-4c3e-9adf-6bbe0466182f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfadacb0-9940-4c5a-a60f-592a2696664d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8014b1de-7a48-44bf-ad1d-a3bc8b692a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f60e80-00c0-46af-9d95-b419a884e264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9705b17e-be5b-4be5-bfc5-7b4cceaef03b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcf535a-0ff7-4419-b2c2-de47743052ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d0193f-fd6b-4f7a-b03a-4c206d6a2b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80433aa1-b864-4a5c-b50c-675986a85a8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ffab42-95de-41f7-8ea7-d67fa0210498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d06b9e8-bec8-41dd-9679-6c14974bdd68",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575d1e47-de81-4374-a0bf-2ae9b22448c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe86e02-02a8-4447-a030-e2485cda6fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a4e1c0-12a4-4481-a7c8-66a9b3c0af13",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50842db-db02-47d4-af4d-ce9d36197bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa4285f-3cf9-4fe1-9501-040a18c50413",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6c35fe5-4f83-4e2d-b4ca-eb217e33d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e66ac747-c8c9-4ae0-8277-af8212fa637f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3f1e98-c773-4ee3-a870-ac77dc8d693f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d812341d-7684-4fa4-9380-5237156081c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82469ffc-a557-4874-8b3b-855297c5ea6b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ad3459-897e-4039-babf-0e6b6a03b68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce62021-eab8-49e3-b153-99ae047bf279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c9b842-5fc5-4a29-a38e-1e931e6bbe7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a482b2-665d-4457-bc99-9edd727e6dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc95171-a15d-4278-9c04-9848d0420b11",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba0fd61-0c50-46ad-883e-1bf66b41d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e60b13a-6cbf-4818-858a-ecbcf434f267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c3fa66-a3f1-4c0d-89f4-25d7133f1f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19de3337-f911-4a3c-be81-8fa9b6f05cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcee444-9105-4d88-a239-c4aa8d6f0ba0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5258a328-0c34-4b74-97da-1ddb7c04f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dedebbed-b5e5-4683-85e6-d8560253119f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6726a65a-e002-43f8-9852-57e830160321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a975dab-7a3d-4704-a09d-70980608b6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a4e1a9-6dea-465d-aebe-fee4011a3cea",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a8d497-d9c7-457b-8097-6cfa014a85d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5261f4ae-cbb2-4012-9c38-b2fb42d9d821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266c6163-ed98-4559-865b-d2203554e624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ae799a-3fe2-4bec-8ca8-9dea1980ab6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ca2d61-d41b-4bb2-9b53-4b0d7f873e33",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c505569-87bd-478a-af97-cfb53b0ef3f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5593ec1-9cb7-41bf-ac2a-453c4e1fb016"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7726f4fb-04e8-4cc5-b690-2c839f583c4b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df12db5-85b0-4990-9a9e-72aa8219e7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b63973-bca1-4a22-ab94-d97b8db166e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aae3871-e5a6-47f8-a03f-18da7ae1f243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2511674-d1b4-4d19-834f-3d8be1215406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edeb6a22-dcbc-4f49-9dc2-d97ddc728474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c4c1d4-d5a1-490d-803d-48939c16c0eb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bdd961b-db39-441a-950e-a3d4f530ddc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0bfffff-1f23-493f-b8d8-440edf32e02e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7e233d8-78a9-4205-9418-80ed63f6aaf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f229ff3-63b9-4985-bc9f-6b9aa3f711a8"
                    }
                  }
                ]
              },
              {
                "id": "4db8dd4f-5184-4cd3-9836-ceff7342dff9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "adf01b79-deb4-4f26-8de0-ceb717494990",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c332cb09-e618-40b7-adbf-634802a16d98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e090bad0-8992-4eae-80e1-8a17be3d29f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e37808-5b95-4aa7-aadf-279896b5a993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "702c5149-30d3-49ac-97ae-bd7f721fc1bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a930135-c962-4d1c-b2d0-acdc6c5d976d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e466fc9-3eec-46ff-91dc-89afd7c89e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "096e708b-db69-4a12-9672-399a2d81dc93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21562b34-6af1-4da4-8bdb-adc08cef4e8e"
                    }
                  }
                ]
              },
              {
                "id": "947750c5-a65a-4643-a323-e15386d5150e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "439fee4d-c776-46e4-9e65-bbac3bf3811a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d96c9a0-cd0e-4bec-9ab1-54df78afc44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0d397330-2bd4-49a0-9a73-ecefc88d2b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027be2bb-cee1-4f13-b0ef-fe31dd130f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05f3af67-8888-453a-a193-7d67f9514762"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6cc9df33-f4d8-41a5-9a56-ce19d5ae7da5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aba75823-f047-4af0-b333-9c8fa6e3a8cb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74d6c9b7-bfe1-455c-b8a0-c574c60cab13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a1419315-c5ef-4070-8b89-91231add1670"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30e6929f-e570-4d91-a14b-5f2d7aadb2d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18175b86-6925-4a2f-8a77-559a746fbe8a"
                    }
                  }
                ]
              },
              {
                "id": "c63e6398-015d-49e5-b85a-818da8922212",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9f9e9ce-4e00-48a5-a8e0-7b72bbe08876",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "115623bd-cb26-4981-ac0d-486d630bcdb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eae2c58-b59a-4890-a523-cb3d6be7185b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1e7820-492c-47bf-9b07-06036dbfeb5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7becbe93-9212-421e-9161-4081fd17426d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "53cc4612-90ee-4b0a-8043-5e87b7093421"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bec317a-a12c-45ba-b4ae-c748bb9a4b00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c91225f-62b9-4d4d-be74-9c6c7ec0bc8b"
            }
          }
        ]
      },
      {
        "id": "a65e71fc-5366-44ca-8aea-58ed47e652b4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b4e744f4-8bae-4c1f-b9e7-d3590e6535bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f219e3-776e-458c-a690-8ae897c83e10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10160626-d693-442f-9ff2-738458788bf1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ca39d4-6550-44fa-9bcb-a2fe5f8c7982",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6bd6027d-cd7c-411f-b0ad-b0d24c729549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461f6732-976f-4ccd-a67a-476830d668dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b813831c-7ad8-4bf5-b129-ca593a92d9f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a007cee-4ad5-4710-ae39-8a77fbed218b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed308fed-813d-4666-aed0-a76e5b6eb54f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "095dd82a-2f44-4a2b-902c-4cb6f34aed23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cdf16dc-82bd-4aa8-a509-28c9ba8a22c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb9fe29a-35e8-47cb-9439-0ac8b2c16931",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6d73da37-0e33-49dd-b072-1a235b2b083d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a9c1cce-432f-4c4e-8c09-f0e25d9ab271",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ac4c59a-9f8e-433d-b613-f89a1fcc660d"
            }
          }
        ]
      },
      {
        "id": "49fe30a0-26ba-49f1-af19-9ee93bc7a5b1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c4f4b2d1-6bcc-4097-80fe-48d24949437f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "846e1159-d2d1-4a8e-a344-0f4dfee65637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a896a0aa-8845-465c-bd70-072dfbc43258",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b985c21-98df-4341-8d13-495ddc7323ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc3f4b9b-bd33-43c9-b192-e1688249706f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fe5205-b852-4b0b-bf87-8403b851de24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc131e03-26c9-4be0-9217-13dee330e919"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c222d51-a180-4a26-9faa-be507a3a38ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4fb07cc-383b-4fd5-a51f-521ccedd157c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99592694-50e4-4e3f-b425-7c0056bf8325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34af1c6e-47bd-4bc7-ac65-33127484266c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "480448bf-2038-4a1c-9405-476a0414ae18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5b12434-b019-4c06-a1a8-d67d974decc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ecf0141-3c6c-4fca-b9cd-3166e4d9b2a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3674ac85-f80d-44b2-bbfa-371529a23083"
            }
          }
        ]
      },
      {
        "id": "b0c52006-c917-41ba-ad75-d38f3511c630",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ee8ed2d3-3e53-434c-bb62-7b2457a4b552",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8186433-1d57-480d-9eb7-980df989d1b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a410143-13fb-421c-9483-5e1ac5f2b23d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6ca8d-4953-460c-95af-efa3714deb6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "619d757a-f2c6-4ffd-bc6b-aec2dc9066dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b90938-32f4-4736-87d6-6bea701685fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67e2aeb4-ad41-4d30-91d1-0bc818c4af07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90e32664-f0a7-4ad7-94e2-c9040fb36ebe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dff78157-d152-48ba-856e-1b9a67f722ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf3d834c-dfdf-4067-ac5b-844690e70cb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3056f858-9874-4ff2-9599-7630d6a55738"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3435712-82b4-46ef-a852-f24b83f73fb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d57ab72-80ac-4aef-a3fe-3ed47cf5af3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57108cc9-1c71-4da4-8349-7ada9cc0d557",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9f350a9-e635-40da-9024-a46d5ad338de"
            }
          }
        ]
      },
      {
        "id": "025ba0d5-5907-4e6a-9e0e-0c3c0048a01d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "905477ac-cee7-487b-9aee-4d15d943e752",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "776e09de-8fba-471c-8c6b-02567ea11777",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af2971a9-efeb-462f-8baa-715c5be7a692",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d26f56d3-04f0-4397-b46c-bde88403585e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "482196db-ba00-42f5-b840-0103443ddd8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.97535211267605,
      "responseMin": 17,
      "responseMax": 552,
      "responseSd": 42.73224973166678,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694651571247,
      "completed": 1694651593844
    },
    "executions": [
      {
        "id": "fd5d96c0-2ddc-488a-a371-9c7b20c62f03",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "53967ad1-8149-4ee8-8e5e-f2b4f32f8e59",
          "httpRequestId": "0e49909d-32b5-4d3c-b608-aadc5d467795"
        },
        "item": {
          "id": "fd5d96c0-2ddc-488a-a371-9c7b20c62f03",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ef80d84c-aeff-462d-8f24-a13c3b19a842",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 0
        }
      },
      {
        "id": "9798d96a-e518-4adb-b07f-27a53c0266f8",
        "cursor": {
          "ref": "ac3e12d6-eeec-4df2-b543-c9215b48a493",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a4e04bf-c7b5-4a0f-9a50-5c70aea3cd2b"
        },
        "item": {
          "id": "9798d96a-e518-4adb-b07f-27a53c0266f8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0cd0b125-2244-44c2-b26e-db6ba94d6228",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "7ddacea9-4b05-4aaa-93ee-1d8d1069026f",
        "cursor": {
          "ref": "e78d93d0-80aa-4d4a-a97f-f126afa19132",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c561d355-ea5c-4c8f-8259-715860f156ea"
        },
        "item": {
          "id": "7ddacea9-4b05-4aaa-93ee-1d8d1069026f",
          "name": "did_json"
        },
        "response": {
          "id": "0a2f0fb5-3002-4782-9bc9-fecca0e6af80",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d705b9-7972-41df-9938-bb294d893bb5",
        "cursor": {
          "ref": "4609506c-6714-44a0-b250-08c43d73b513",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce3c7621-af67-4678-8faa-aa54b3270181"
        },
        "item": {
          "id": "57d705b9-7972-41df-9938-bb294d893bb5",
          "name": "did:invalid"
        },
        "response": {
          "id": "0df15d90-96bd-4a88-9310-0c160f551f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d705b9-7972-41df-9938-bb294d893bb5",
        "cursor": {
          "ref": "4609506c-6714-44a0-b250-08c43d73b513",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ce3c7621-af67-4678-8faa-aa54b3270181"
        },
        "item": {
          "id": "57d705b9-7972-41df-9938-bb294d893bb5",
          "name": "did:invalid"
        },
        "response": {
          "id": "0df15d90-96bd-4a88-9310-0c160f551f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59531e0a-67ac-49d9-8d45-0f593b23fcb0",
        "cursor": {
          "ref": "99c9f688-2f50-43fd-ab45-60c220ef65d7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ddf0d1bc-31fb-415e-b9df-9657f95b20f3"
        },
        "item": {
          "id": "59531e0a-67ac-49d9-8d45-0f593b23fcb0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "260050d8-2767-419f-9705-e9f1076847ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 172,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "672555da-6608-46d8-9838-c64f9fe4e568",
        "cursor": {
          "ref": "e79ce0a8-f53b-47c1-8463-714812cbc591",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ac8e9241-f256-4336-8355-5d9808aa7000"
        },
        "item": {
          "id": "672555da-6608-46d8-9838-c64f9fe4e568",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cef3909e-e3f7-4a94-823d-564de6b86deb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30598555-8d59-4fe6-8dcf-8d8d620068da",
        "cursor": {
          "ref": "a5409378-986d-4c03-bed5-fa44271565a2",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8f6d8562-6fa0-4caf-832c-2c5dfd7002f4"
        },
        "item": {
          "id": "30598555-8d59-4fe6-8dcf-8d8d620068da",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "54e3b1e4-62b5-4a23-a7eb-33d4823ee456",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac5033b-280e-4b9d-807c-ac1d77dd1571",
        "cursor": {
          "ref": "47cb7082-1f6c-4382-bc7f-5d411f76af7c",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a2ab966c-15e3-43e2-aafa-256e1a0919e3"
        },
        "item": {
          "id": "0ac5033b-280e-4b9d-807c-ac1d77dd1571",
          "name": "identifiers"
        },
        "response": {
          "id": "653dc44f-52a9-4b8c-a229-d1c97a744f36",
          "status": "OK",
          "code": 200,
          "responseTime": 176,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2446c9-d430-4889-9820-f04d8f242c2a",
        "cursor": {
          "ref": "e30f425c-7f5b-48b8-9d22-dff96962c325",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aae9175a-5dd6-4331-ac79-c2f462993239"
        },
        "item": {
          "id": "bd2446c9-d430-4889-9820-f04d8f242c2a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6fb90d63-ba20-4135-a605-295104076530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933ae6bc-0647-490f-8785-562084921f7b",
        "cursor": {
          "ref": "da1338d1-b2be-4419-a4a5-56d1cfb0f123",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4dbe4902-f1f8-4df3-824d-8bca714f059d"
        },
        "item": {
          "id": "933ae6bc-0647-490f-8785-562084921f7b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be2485bb-eac1-4aa5-b14c-dc8519494fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfafc80b-1a83-4ca5-86be-502fa5c1c916",
        "cursor": {
          "ref": "cbddef54-bf9e-497d-aa51-db4a2654403d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a95dece6-65a3-4453-ada7-af38db817908"
        },
        "item": {
          "id": "bfafc80b-1a83-4ca5-86be-502fa5c1c916",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "23a4daeb-13da-4da2-b354-16d4d635df8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39668451-7e13-4c94-bc2a-1cc0a6884942",
        "cursor": {
          "ref": "99c63e90-2e52-4159-80a6-80430808d9e5",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a7a80aa9-acbc-44c0-8b72-a8673acc7abe"
        },
        "item": {
          "id": "39668451-7e13-4c94-bc2a-1cc0a6884942",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9822f8f1-8cd2-46d1-9269-5a39ea36e41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab1f67a-2942-496a-b7b5-cc6464a92a13",
        "cursor": {
          "ref": "adcaaaee-bd02-4881-8b3f-72ef8d521de2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "156d535a-5af8-4201-b8f0-00ece4f0d13d"
        },
        "item": {
          "id": "9ab1f67a-2942-496a-b7b5-cc6464a92a13",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fd835b15-8f91-4553-93aa-ed454b707882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3aa460-108a-465f-89c8-0856e930806e",
        "cursor": {
          "ref": "43b826bc-44dd-453d-a89c-ab08a50a6aa1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4d951474-b878-4b0c-916c-13b32966d9e2"
        },
        "item": {
          "id": "ba3aa460-108a-465f-89c8-0856e930806e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f56137bb-5f2e-4f42-a045-cb4a3c914166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c891d93d-1f9b-40a4-b160-bd704c7d012e",
        "cursor": {
          "ref": "8fe2945b-e71a-4328-b41b-0f570f569d80",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce6ddebf-ae66-4b2d-a9fd-bd40b5050d0e"
        },
        "item": {
          "id": "c891d93d-1f9b-40a4-b160-bd704c7d012e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e4a84399-0fde-4edc-8a15-d5bf451b1d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c752657-c1a2-4d3d-a270-5c4f3fc4fcee",
        "cursor": {
          "ref": "25eecc08-0313-43c2-83df-dce9d941fd38",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "713810bf-3924-4640-8ca9-ec391df3000b"
        },
        "item": {
          "id": "3c752657-c1a2-4d3d-a270-5c4f3fc4fcee",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cb5d870-31a2-4316-806c-b6bb033e88e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854a1507-2398-484c-9e5b-47f2727a0605",
        "cursor": {
          "ref": "11eb4422-7490-4858-a38e-dc4d89dccd6d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "50972e0a-b255-40c2-b49a-b5aed24e95a9"
        },
        "item": {
          "id": "854a1507-2398-484c-9e5b-47f2727a0605",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0ceb6516-49f9-40e8-bf06-d2f778b14071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4bda141-ada3-4eb8-ad03-28afef11cca0",
        "cursor": {
          "ref": "30c19b06-5a62-41a4-8039-d50f59a588ff",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d83e5fa-2b02-4871-a19f-3608fe1526f3"
        },
        "item": {
          "id": "f4bda141-ada3-4eb8-ad03-28afef11cca0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e6a60cb0-0c9f-4bad-a4b3-3beec713531e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cafb91-a09f-4bdf-b7a5-45531feef510",
        "cursor": {
          "ref": "19848135-19fb-444f-9003-582556bfc728",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c14067d0-a5e7-46dd-a231-0f3d8a2309c6"
        },
        "item": {
          "id": "88cafb91-a09f-4bdf-b7a5-45531feef510",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2dbf1aa4-8f36-4079-bf4a-8bedbfc95f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd74231-3b30-42eb-a355-1ba58edeff35",
        "cursor": {
          "ref": "98930298-4732-482a-ac85-faec3728d3cc",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0ae90803-4684-4d1f-9c3a-ebe20869fd46"
        },
        "item": {
          "id": "dfd74231-3b30-42eb-a355-1ba58edeff35",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b0e1a8a7-f59e-432b-a9b0-850d431fc9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d150c5-4ea1-4f19-a5b3-954c972793f6",
        "cursor": {
          "ref": "6a650e3c-6278-4a41-8291-2e76fc7a9b9c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ef6c7910-9817-4aa9-b524-fc6f40d36d22"
        },
        "item": {
          "id": "a7d150c5-4ea1-4f19-a5b3-954c972793f6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5ef11d04-207d-4d6f-b5cb-65a2b8ecf93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15655d0-cb8f-4460-bb52-cae8b47fe3df",
        "cursor": {
          "ref": "b26e6323-f078-4815-a94b-4d69f4e2e435",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "39985bb8-8d19-483b-bbe5-6fdd7d8c2d4b"
        },
        "item": {
          "id": "c15655d0-cb8f-4460-bb52-cae8b47fe3df",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6680cbbc-cc6a-484d-b98f-282c50b944ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c165e9b-e2c7-4db8-b810-2076a273b06b",
        "cursor": {
          "ref": "816d58db-3114-4e3a-be05-8c25eaa7b795",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5fcfe3c2-129f-4800-9a2e-4f7150710abd"
        },
        "item": {
          "id": "7c165e9b-e2c7-4db8-b810-2076a273b06b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ef5236de-b80d-497a-9fb7-18bf9d501c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0093081-92ea-40fa-a554-2e7dcd0e2f90",
        "cursor": {
          "ref": "92f30fdb-cf2f-4ea8-82fd-b70eed571e24",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fa5c8d08-aee1-4fcf-b841-13c1b960ef1c"
        },
        "item": {
          "id": "e0093081-92ea-40fa-a554-2e7dcd0e2f90",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "db05e893-aea2-4407-8dec-6b489133e196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad6311-5059-49f7-999b-1a3218e481fb",
        "cursor": {
          "ref": "463d6669-2be0-4c32-98d2-afdecffffd40",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d9a95ad2-3bae-475a-afa9-bde575a32404"
        },
        "item": {
          "id": "e5ad6311-5059-49f7-999b-1a3218e481fb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "632e8e15-ec9c-4d19-b955-89ba8601219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cec2f13-9e6b-4399-9fd8-5a98e81588e1",
        "cursor": {
          "ref": "2ae80300-4712-4412-b8ce-78a460b7d577",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "55c55a17-2ff6-4b11-82c3-599ddcdb036f"
        },
        "item": {
          "id": "9cec2f13-9e6b-4399-9fd8-5a98e81588e1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6fe5580a-8db1-4b2e-a621-c81a5d7090c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5216fd93-31c6-40fa-8c86-6e590d5e14b2",
        "cursor": {
          "ref": "86536c1e-d710-4d78-86bb-99ef12140cf8",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "00ef8376-1c76-427e-ab91-a70f84ffc3e9"
        },
        "item": {
          "id": "5216fd93-31c6-40fa-8c86-6e590d5e14b2",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4962a0a0-a2ed-408c-bac8-30287cbc83dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a03f0c-a9d3-4c0b-a384-dd6d43755be4",
        "cursor": {
          "ref": "9b39a374-838f-4f27-8313-2a438e525bc5",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c03bcabc-a605-40bd-bb1d-9145a5feadb6"
        },
        "item": {
          "id": "b8a03f0c-a9d3-4c0b-a384-dd6d43755be4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "373610fb-1153-406c-a27a-89c412621b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c025e78f-a02a-4ece-8d40-ee72d0dbfa3d",
        "cursor": {
          "ref": "257c5344-1688-4c95-a633-5776a70875db",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fd6f155e-42d6-40a8-969c-6714fc8944e8"
        },
        "item": {
          "id": "c025e78f-a02a-4ece-8d40-ee72d0dbfa3d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3806287b-69ae-48aa-ac5a-08fe3c36fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872ac112-a54e-4c1f-946f-cb5049cab5e7",
        "cursor": {
          "ref": "d8d29869-446a-4afa-9adf-24ac047d2217",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31cd357e-31ec-4811-a53e-ab692db0fa3b"
        },
        "item": {
          "id": "872ac112-a54e-4c1f-946f-cb5049cab5e7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b59217bb-dc86-4237-9d44-4021feef1fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864e7006-73ce-4381-9004-47a93a7f1f35",
        "cursor": {
          "ref": "04f4c3ce-e95c-4484-8ee8-34a0c6144ea5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b3243962-8838-4ab7-a157-dbc6b3c8608e"
        },
        "item": {
          "id": "864e7006-73ce-4381-9004-47a93a7f1f35",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "80c93159-b22c-4988-9aae-2cc66710a4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a2b1bb-d7c5-4a33-b2e9-c6f710e2228c",
        "cursor": {
          "ref": "a541b744-a2f2-4589-9a55-ac05a5d095d9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d226ecc1-ce3c-4fe9-8447-10c6f65682f2"
        },
        "item": {
          "id": "d8a2b1bb-d7c5-4a33-b2e9-c6f710e2228c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f4452a7b-e57f-4889-9467-d970eda1b055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32df01a-00af-4fb4-8f13-cfc69d2214ac",
        "cursor": {
          "ref": "d9b6f190-40b2-45c5-bade-66fa23012b5e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3e5ce224-cfdc-4bf7-a323-978d1f72cfe9"
        },
        "item": {
          "id": "e32df01a-00af-4fb4-8f13-cfc69d2214ac",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1e720a4d-9e3f-48c0-a44f-1f0d63e0d6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5838d64b-c29c-4c7d-9b1a-dc59f40addff",
        "cursor": {
          "ref": "9658a8ad-5fdd-4c6f-bffb-7a34ef4d384c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e131964a-b748-47a0-bb98-d87b041a1b08"
        },
        "item": {
          "id": "5838d64b-c29c-4c7d-9b1a-dc59f40addff",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a0328582-5b36-48d4-857e-25279d08f697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82ac82d-768d-4e05-8769-3c918547a2d8",
        "cursor": {
          "ref": "d654d313-785a-4920-8921-d7d2ffd2d556",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b97acd39-82d8-4254-8cb0-00ffaf9b9435"
        },
        "item": {
          "id": "a82ac82d-768d-4e05-8769-3c918547a2d8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "36ae1369-0b9d-41b9-a5ae-14a6673780a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd0acdf-fdd0-4baa-be44-661abdb3dfd6",
        "cursor": {
          "ref": "862dd049-f656-4a6b-8332-50f1274ce125",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3547ef2a-9882-4003-abd0-6dfa3ce787df"
        },
        "item": {
          "id": "1cd0acdf-fdd0-4baa-be44-661abdb3dfd6",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7bee5f5f-84cd-41b0-ab86-e2b40015d644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d962706-8284-4332-9da2-47cc8e977875",
        "cursor": {
          "ref": "ffe9572e-d589-4474-8a9f-731f7ac7d6b4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ba7bc937-5126-420d-ba1b-0ee500152265"
        },
        "item": {
          "id": "5d962706-8284-4332-9da2-47cc8e977875",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "798915de-862c-4483-93e5-8f8ac5e71c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19c73c1-38de-449d-bf75-e416150a4ae1",
        "cursor": {
          "ref": "4eb0b5e5-b383-4721-be69-371c4b2ca727",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "06f876e0-fa1f-4b76-a39f-63b5cb947728"
        },
        "item": {
          "id": "e19c73c1-38de-449d-bf75-e416150a4ae1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9a3acbd0-c98c-441b-a99f-6d96268fa536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eba0f5-3f92-4905-9285-ae7a31371768",
        "cursor": {
          "ref": "4a864d63-ad54-4ed1-9a3d-3668b67a8e00",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b4bc1000-3530-4125-a50d-6f350eeedc68"
        },
        "item": {
          "id": "48eba0f5-3f92-4905-9285-ae7a31371768",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "182b187a-1ca2-4989-be81-bd48f3cbc607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa78f50-a9e9-4f92-9f6e-f66d82724452",
        "cursor": {
          "ref": "ba1dab00-2525-4799-b422-aba2c6ab3ba4",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9d2cf39f-d5b5-40da-b338-cc70390a9c5f"
        },
        "item": {
          "id": "caa78f50-a9e9-4f92-9f6e-f66d82724452",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "45c33a70-75b8-48d3-8009-3188eab0d191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f4af18-d71a-4ee8-bef7-d204ebcc68e1",
        "cursor": {
          "ref": "c10a8e25-4650-41c5-8db3-d20a5b3cf467",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4f99b2cb-04d1-4e69-b03d-c26bcc601394"
        },
        "item": {
          "id": "b5f4af18-d71a-4ee8-bef7-d204ebcc68e1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "08c8a8bb-ee20-416c-be8d-da18b604c603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3d8bf7-f443-49f1-9304-6dfe3dfcf8f2",
        "cursor": {
          "ref": "fbac868b-503d-4d5f-9159-ba7d9f07ace3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "502070a6-234f-4ba3-b697-01a878854b6a"
        },
        "item": {
          "id": "9c3d8bf7-f443-49f1-9304-6dfe3dfcf8f2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d1d8b76c-d7cf-4c14-90e8-83105e12c521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1e5500-ff85-48d6-a24a-97442322f381",
        "cursor": {
          "ref": "6ba142e3-065e-4bdb-a104-4d804164775a",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4314b2e1-1b54-4e13-8cf6-0c63948dafa3"
        },
        "item": {
          "id": "ef1e5500-ff85-48d6-a24a-97442322f381",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b87a4444-3988-4b32-a00e-07a2743cd853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3210d01-4a62-4afe-ae88-bbd74d3ab588",
        "cursor": {
          "ref": "24a8d114-7936-437a-ba2f-edc2b236db2b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "80ad9baa-d734-473f-9ad6-860ab0e7c404"
        },
        "item": {
          "id": "b3210d01-4a62-4afe-ae88-bbd74d3ab588",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97c9d247-d379-4ccb-8fb5-fd387cc2d2f6",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2487c515-dfbb-4d08-80b9-fe582d2446ac",
        "cursor": {
          "ref": "54c57abb-c1ca-43d9-bcd3-a3225d2574f3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c2f48b3b-2e95-4494-8e8e-4c6b2a50534f"
        },
        "item": {
          "id": "2487c515-dfbb-4d08-80b9-fe582d2446ac",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e6e173ba-c693-4a56-b10b-95daf5b8371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5e74bf-2ea9-485f-873b-9a0496bbae20",
        "cursor": {
          "ref": "1f49f6fa-47bc-4d8e-b107-4f4a924cb39d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8cd314e2-889d-4f37-98f6-8785826b1fa6"
        },
        "item": {
          "id": "fb5e74bf-2ea9-485f-873b-9a0496bbae20",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9454cb25-941d-47dc-8f78-31a2cde9d028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b56a083-e199-4d4e-813a-9cba1c1098fc",
        "cursor": {
          "ref": "0c7764bf-1a41-4246-bba0-252570bae5f7",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5fa418d3-3298-4b94-9a35-7843c87a3317"
        },
        "item": {
          "id": "0b56a083-e199-4d4e-813a-9cba1c1098fc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "33be842b-a788-45a9-8c0b-21ea8a04745e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168483c1-0ba6-4fa0-a832-903d027dfadf",
        "cursor": {
          "ref": "4e27639a-9131-4a0e-99b3-dd036b712f95",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "555d3e8e-ac8e-4639-85e3-e237d9c3a9ec"
        },
        "item": {
          "id": "168483c1-0ba6-4fa0-a832-903d027dfadf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5999d3f6-d45f-49e1-8702-b88d2594afb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c96dcba-9398-466a-9a23-5d48d594945c",
        "cursor": {
          "ref": "28854fb0-e14d-44cc-b608-87210cc58a6e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d65941df-9cc5-4da8-90ac-0d99103c9c53"
        },
        "item": {
          "id": "1c96dcba-9398-466a-9a23-5d48d594945c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "86235612-334d-4320-b9f6-b899d4c6bc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40afa027-c9e1-43e9-92f6-53df89be4a84",
        "cursor": {
          "ref": "8ff32206-fb35-43d4-b256-64759e5d8d46",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8cf7a269-b9f5-4a9d-8c9e-4a8b3f60d3f5"
        },
        "item": {
          "id": "40afa027-c9e1-43e9-92f6-53df89be4a84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "609f5728-3e75-41a3-8215-6fc149bf8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb0fb3-8406-4677-9176-0e1a8004386a",
        "cursor": {
          "ref": "4288326c-f716-49f0-9c03-e5b09bf3bf12",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "db91ceb4-338f-4f2f-b5c4-7c1145ddee2b"
        },
        "item": {
          "id": "cbbb0fb3-8406-4677-9176-0e1a8004386a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f912bb43-09b6-4aa8-93a3-2c37e97befc2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc227ec0-fbf6-453f-821c-7a148fa179d7",
        "cursor": {
          "ref": "dbb6c8f5-bebc-4884-8272-91989013389f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9342bf02-a95f-43dd-ae09-16947d8add70"
        },
        "item": {
          "id": "cc227ec0-fbf6-453f-821c-7a148fa179d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c1a3a44f-129b-465e-bd84-3ff58c8330b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1427bbb9-7806-42f9-b628-0ee473578650",
        "cursor": {
          "ref": "5052d9a8-ff86-4b8a-aa57-5bcaf087a8a0",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "86c164c4-5836-4657-8e3e-bbfaaa4a8c88"
        },
        "item": {
          "id": "1427bbb9-7806-42f9-b628-0ee473578650",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7fda73cc-02fd-4443-86df-f4769f19685a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76f93a2-1169-470c-b59a-f5c20561ffd8",
        "cursor": {
          "ref": "95b73a25-26e4-48cd-93aa-885e2430a082",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9991ee15-649d-4da6-8ed2-abdf5ea657b9"
        },
        "item": {
          "id": "a76f93a2-1169-470c-b59a-f5c20561ffd8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7d326747-f399-4a39-aab2-a57405d814cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370c4ff-9219-4272-bcd2-1f1379d726bb",
        "cursor": {
          "ref": "0ebbe9cf-dc13-4ccb-9ae9-1225b4a41317",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b840a668-0b7e-4fb1-b7fb-8a528cf57c57"
        },
        "item": {
          "id": "e370c4ff-9219-4272-bcd2-1f1379d726bb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f87af6f4-3763-4f0e-a074-87c81ca40e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e197d023-6097-4cf6-a4e5-c61cede27afd",
        "cursor": {
          "ref": "f75bc391-edd1-4de3-bdeb-9d4046f7f620",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "13dd3d7b-48f0-41ec-947d-a9c436e9c565"
        },
        "item": {
          "id": "e197d023-6097-4cf6-a4e5-c61cede27afd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a2c639a8-212c-4b1c-b7f1-cc4e94111fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894dd341-a63b-4ce6-90cf-b22aa96092b4",
        "cursor": {
          "ref": "8a3f6417-beef-4a23-ba38-e7cb4e4d16e6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a4eee2c4-496f-4580-9e67-c695ce7a1e44"
        },
        "item": {
          "id": "894dd341-a63b-4ce6-90cf-b22aa96092b4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "281268a6-392c-4144-a35a-75c18d950aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7254656f-52c6-4e1d-9ab9-e34b3cc5ac5c",
        "cursor": {
          "ref": "e6efa3db-9602-48cb-8922-2d7597487722",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6cdf4f4f-1378-43de-b1c1-71e96c104b06"
        },
        "item": {
          "id": "7254656f-52c6-4e1d-9ab9-e34b3cc5ac5c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "97413cea-1adc-405e-b0d0-62edc375988b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0863f5a-74a8-48a3-b246-847679d0bd03",
        "cursor": {
          "ref": "5e210468-dbd3-4b1e-8d88-98ae187af675",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c5ff1d37-388e-40aa-95ee-30ff00951637"
        },
        "item": {
          "id": "a0863f5a-74a8-48a3-b246-847679d0bd03",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8bbb52df-cab1-464f-bd11-0b55bbaafd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4659e270-85b2-4736-b370-81df7d91541f",
        "cursor": {
          "ref": "5ecb028a-caa2-4568-9dbc-4a7cbae52c02",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "89b36444-ce41-4e93-9f56-d562214f9d3c"
        },
        "item": {
          "id": "4659e270-85b2-4736-b370-81df7d91541f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "54caf81d-a33d-4f22-b985-9b4ce2d24eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845b3b52-6228-4a66-82a8-099dfd44bb53",
        "cursor": {
          "ref": "340e6e95-e5ab-41b9-9a1c-8ff0eaa167ad",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d21b66bc-87d3-4341-bea4-5b8eff8cd326"
        },
        "item": {
          "id": "845b3b52-6228-4a66-82a8-099dfd44bb53",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e93071ba-b85f-4d0f-a22f-3b9178a28151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accf5470-eb9c-4cf7-8bae-33c63d18a50d",
        "cursor": {
          "ref": "dce44d42-ea9c-4b9f-9fb7-e5079bd3a6ec",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3142ba30-19c9-4e8a-b4ba-3df6da14e772"
        },
        "item": {
          "id": "accf5470-eb9c-4cf7-8bae-33c63d18a50d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "54c9f287-ff6b-480b-b5ae-21e7a35a9584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761e48d1-05b5-4ca0-b2cd-0db52657fe2f",
        "cursor": {
          "ref": "835f4175-58ea-488b-9b24-c31e825a6ca0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bbebe14a-4bad-4937-be74-42755b883dc9"
        },
        "item": {
          "id": "761e48d1-05b5-4ca0-b2cd-0db52657fe2f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a8ebd05f-4a74-4ad9-b66f-ccf9061056bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cad94ca-c5c8-4673-85f3-4c211e337ef0",
        "cursor": {
          "ref": "e75faa9d-22bc-4b90-a597-baf6803f517a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f6c1ff54-9e1f-4e1d-b63b-3ba751555e40"
        },
        "item": {
          "id": "3cad94ca-c5c8-4673-85f3-4c211e337ef0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5ad29d4-5a27-4f62-925c-2616cc601404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73330b8b-93e9-41e4-8b70-d903efc1e93a",
        "cursor": {
          "ref": "a25f467b-b7c8-4aa3-b212-05e8f41ded5a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "da9f84eb-b3f7-4aa9-b971-cca539a62e03"
        },
        "item": {
          "id": "73330b8b-93e9-41e4-8b70-d903efc1e93a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "72cbde79-0466-4220-a5fa-96d65d900c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72e633d-a46e-4623-a9dd-2003dbe47d7b",
        "cursor": {
          "ref": "7bd179bb-bec3-45b2-81ef-ef399b8a8e79",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d7142b4c-5010-4ea5-ae0f-5cc142241eb8"
        },
        "item": {
          "id": "c72e633d-a46e-4623-a9dd-2003dbe47d7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9bbaed55-5c9b-48df-8331-257d1078945b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dcf55b-87a4-49ba-96d9-57da141bdfc1",
        "cursor": {
          "ref": "0ca78338-d650-413e-a869-7a1e3eca4d80",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "90046c6f-8068-4427-abc7-103c78ef1536"
        },
        "item": {
          "id": "e2dcf55b-87a4-49ba-96d9-57da141bdfc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "123f14df-e241-439c-81df-1aa85785caef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35352aa5-c2a1-4ccd-8536-56d020cf7309",
        "cursor": {
          "ref": "d3fb43eb-52c4-4c46-bcbc-dd5a60742c16",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a2edc826-717f-4025-8fc0-9276bd76eae5"
        },
        "item": {
          "id": "35352aa5-c2a1-4ccd-8536-56d020cf7309",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd61c09b-f746-4b78-b9b6-93d1ddcdbbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c02623-9a00-4ed8-a7e8-563da5d71e7d",
        "cursor": {
          "ref": "03a32dba-de38-40c8-92e1-91b2e0c3bd21",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "640b6189-eafd-46cc-b8f6-798c5927f45d"
        },
        "item": {
          "id": "15c02623-9a00-4ed8-a7e8-563da5d71e7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9d4c814e-6eb8-4b94-86a4-96dab99fac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1935f2-e75f-4fda-92de-7f714d494101",
        "cursor": {
          "ref": "b81b95fc-f27c-4efd-8e0f-d06f9a25dbde",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e9ecec25-8cd6-4485-b543-8c815bd140db"
        },
        "item": {
          "id": "da1935f2-e75f-4fda-92de-7f714d494101",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "17331e40-b39b-42c1-b66e-49559ad451b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c791a82-ffd2-422e-aa32-ad9398dac82d",
        "cursor": {
          "ref": "3d230551-c385-42d6-976a-c6d22d719881",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ea88a0d4-2595-4d97-bfda-91b192290aee"
        },
        "item": {
          "id": "3c791a82-ffd2-422e-aa32-ad9398dac82d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fe08e9a5-d3e3-4d1c-b34a-2c512b00ec24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2924e881-1e9a-4a0d-b731-5ce9fb520698",
        "cursor": {
          "ref": "f6253d35-70b2-4f2c-98d6-b1c2f0d0ff53",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d5ce1a9d-f028-4758-84ac-b7b7b549f0de"
        },
        "item": {
          "id": "2924e881-1e9a-4a0d-b731-5ce9fb520698",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7fd02322-f7c8-488d-bd72-f046f284c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1fee3b-72e2-400d-be82-f16b94bf8cf0",
        "cursor": {
          "ref": "b6172938-93bc-4a51-8ad7-ac6f078b7c46",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7e719ce7-d878-4ddf-b96d-13e86139bc03"
        },
        "item": {
          "id": "ec1fee3b-72e2-400d-be82-f16b94bf8cf0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5aa7b93c-d876-4f78-8887-cba91c424843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63411ed1-c69d-4dec-a7af-49252a0520db",
        "cursor": {
          "ref": "75810c0f-de51-4f8e-8bc9-bde4b99f6b0e",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b90e8f6-4e2b-4168-af5a-c4771d10cac5"
        },
        "item": {
          "id": "63411ed1-c69d-4dec-a7af-49252a0520db",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "91304638-c9d8-4301-a4a5-4a62392e0e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b37d6b-f80a-43ac-9698-ffe610a45788",
        "cursor": {
          "ref": "d410719d-b246-40ec-8351-a6b37058d661",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fcc72ad5-f75e-40f6-89e3-03d8351a66d2"
        },
        "item": {
          "id": "05b37d6b-f80a-43ac-9698-ffe610a45788",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6421072c-c6fe-4761-b509-42ccd0c49a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5e2452-6075-4551-abe0-fcb5a4ef5a48",
        "cursor": {
          "ref": "6cb4d0a7-d37d-498d-9ae1-3a00f746ccf5",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ec06d6d0-fec0-49dd-8ce3-1595f2af76f9"
        },
        "item": {
          "id": "8f5e2452-6075-4551-abe0-fcb5a4ef5a48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "24ecfda3-f218-493a-84bb-819301ea4c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38e845a-0508-43c1-8c62-aeb0d5b6e483",
        "cursor": {
          "ref": "63efcde0-9559-4ee4-8fa2-35410644258c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4c706c52-35fe-47bd-89ea-b5bb6bbdd572"
        },
        "item": {
          "id": "d38e845a-0508-43c1-8c62-aeb0d5b6e483",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a1b603b-d0dd-4416-98c6-3764535293e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ef27d6-8174-4c46-bdd9-c0157e791ec7",
        "cursor": {
          "ref": "daf3c15b-bc81-430c-8dd6-24e8949e5ff1",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "31d5feba-13b2-4697-9053-30c45a60dd5e"
        },
        "item": {
          "id": "f9ef27d6-8174-4c46-bdd9-c0157e791ec7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ff6e739-fc47-4cee-a18b-952ddc91eb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de8dabb-7acc-4d4d-a9a1-d1e2371eb980",
        "cursor": {
          "ref": "2046e21d-2dfb-4536-ac98-47e3eeee8e57",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4f7a2e28-daba-49f0-9360-38806c81836e"
        },
        "item": {
          "id": "5de8dabb-7acc-4d4d-a9a1-d1e2371eb980",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f7598d72-c198-4510-98f6-a2ae128d7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aeb155-2cbe-45a0-a54b-e7fe8a0dbdaa",
        "cursor": {
          "ref": "d6ff31eb-c50b-4a59-accd-bff6fb8feb69",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e7d04a24-2a31-4a42-ad69-b760933be1b1"
        },
        "item": {
          "id": "f6aeb155-2cbe-45a0-a54b-e7fe8a0dbdaa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d5b194d-8676-4330-859e-34c1d0cd70b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8348ac7f-8ca2-4462-b889-cd98be34dd98",
        "cursor": {
          "ref": "20cc9c59-9247-4493-bb47-0bfac5d71bbf",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8edbcdeb-0ddc-4a3b-83e4-b790cbb7fb9e"
        },
        "item": {
          "id": "8348ac7f-8ca2-4462-b889-cd98be34dd98",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "93005a29-f527-4a2b-b01c-0de7de450b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47484a6-5a59-435c-8af1-5516a657693b",
        "cursor": {
          "ref": "9fc0782f-0a83-4690-99f5-4b737a54d6f1",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "58994912-ca96-405e-9cb4-098d7724405d"
        },
        "item": {
          "id": "f47484a6-5a59-435c-8af1-5516a657693b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "66fe5b6e-9a20-4959-8a5a-eae92df4e23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d71424a-c16e-4828-86a3-35e5db0de110",
        "cursor": {
          "ref": "6f9828e7-a45c-4899-9ba4-43acce796e60",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "269e24a2-5c59-40a9-bf14-f168c9d54287"
        },
        "item": {
          "id": "7d71424a-c16e-4828-86a3-35e5db0de110",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "595d63f8-ac94-4303-8e1e-d9051d8118c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0312e8bb-1688-45dc-b017-35616deef8ee",
        "cursor": {
          "ref": "9da5d1d9-5764-49a3-a28f-a237728376df",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a31c78dd-ed31-4c9a-9d41-a58e90d4405b"
        },
        "item": {
          "id": "0312e8bb-1688-45dc-b017-35616deef8ee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b6e6d78b-bfac-4f22-9d22-ee6f1b05f24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb77a6a5-b193-4e6d-83d2-c609487009c4",
        "cursor": {
          "ref": "6409c244-36a4-4cec-b687-06383d203c9e",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2ef64c56-ddb3-44cf-8921-499919752936"
        },
        "item": {
          "id": "cb77a6a5-b193-4e6d-83d2-c609487009c4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9d82dc17-df77-4132-a7e7-e51666815b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f5aa2-340b-471b-9c45-d255fb8f849e",
        "cursor": {
          "ref": "010a85d7-c218-4f71-b4fb-4adda01844e1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bbc6b9bb-de74-4c9f-9c17-b04018371380"
        },
        "item": {
          "id": "b42f5aa2-340b-471b-9c45-d255fb8f849e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2f1b01cd-53e1-4fa8-be69-54f0a50049f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828d1cc8-ca1c-4b43-b9ec-83d6ea6553f5",
        "cursor": {
          "ref": "e2cdaff9-794c-4abd-a45a-fd66a7691756",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a01761d6-1635-400b-b235-4de097258745"
        },
        "item": {
          "id": "828d1cc8-ca1c-4b43-b9ec-83d6ea6553f5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "95f7f5dd-d1de-4763-8263-acc1c583c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30824b0-b576-4a10-b003-38bca98059f9",
        "cursor": {
          "ref": "4f58f231-3fce-472f-b4a8-545991b7f1d2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1a99f433-877e-4eea-8bd2-279ff16df01b"
        },
        "item": {
          "id": "d30824b0-b576-4a10-b003-38bca98059f9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "535333e8-e310-4538-b1d1-2de73f7c8726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae1b0b0-6407-432f-ac17-ff6a9044bc2f",
        "cursor": {
          "ref": "529272ad-f044-405c-b12a-9e4bd3c085bb",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dc526107-cd45-47fa-b682-81dc86ab79d7"
        },
        "item": {
          "id": "8ae1b0b0-6407-432f-ac17-ff6a9044bc2f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a88ade2-520e-4458-b8f3-ddd2c82561a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97270775-770d-4a6b-9283-076f3bc21158",
        "cursor": {
          "ref": "58a69d61-1efb-4364-888d-fd19066ae4b7",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b826eda7-244a-4448-a0e4-b61d2b70b530"
        },
        "item": {
          "id": "97270775-770d-4a6b-9283-076f3bc21158",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6b72f921-2472-4577-bc20-ee5ce6b33138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640170ce-41b6-45e8-8c71-f0503aed9af3",
        "cursor": {
          "ref": "3297cf6c-3b51-49ad-b9da-00bc2e87bca2",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5226fd72-082a-49a9-9e9f-4e1b55aa5716"
        },
        "item": {
          "id": "640170ce-41b6-45e8-8c71-f0503aed9af3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2dcb55d9-155d-4398-ae3a-3e22a633cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d5c6cfb-5734-4a0d-b8a2-94f7d20b5445",
        "cursor": {
          "ref": "6e4c9af0-6ca9-43f4-87ec-591d945b5e14",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "91f66110-2156-453e-9989-a776f96ce27b"
        },
        "item": {
          "id": "9d5c6cfb-5734-4a0d-b8a2-94f7d20b5445",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "264baac0-020c-4875-9035-3e9081edee56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ac9162-522b-4d44-ae33-1baba0e6cc07",
        "cursor": {
          "ref": "cf5df159-654a-451a-902a-63c39ad827f0",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9247f664-b86a-498c-9b26-15291703a955"
        },
        "item": {
          "id": "46ac9162-522b-4d44-ae33-1baba0e6cc07",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "893d96f0-bf7b-43fc-bb71-65deecfa2003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccb35ff-a1c4-40ba-9c9f-0f0e7f3656f9",
        "cursor": {
          "ref": "cbde305c-dccc-471d-b0b6-49f7a10d9d41",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d1d1bd9d-2e71-4806-8fa9-3cc8471aae82"
        },
        "item": {
          "id": "8ccb35ff-a1c4-40ba-9c9f-0f0e7f3656f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "29649d84-88fe-4b4f-aad8-f3704cd673ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500a73b4-90cd-4267-9bc2-2695d161f857",
        "cursor": {
          "ref": "06bb6de7-668e-4c67-b2ff-ef06f7865583",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "41f6bd1c-d48d-4834-890f-7662f0da95b7"
        },
        "item": {
          "id": "500a73b4-90cd-4267-9bc2-2695d161f857",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c226bc8a-6301-4034-bf01-a01ec0acde3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43118c6-c609-462a-aec2-f692f0d2bc47",
        "cursor": {
          "ref": "361a68b5-51bd-4f0f-ad05-78f56e33baf7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "476a5767-a269-49b6-af07-c2a2364f39df"
        },
        "item": {
          "id": "c43118c6-c609-462a-aec2-f692f0d2bc47",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b5d4ef28-0c46-40c3-9fc5-349bde604320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b104b2-25b2-49ba-b082-74764353602d",
        "cursor": {
          "ref": "7dc05150-1266-4817-a731-b5a977fcf046",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "03974e9f-b4fc-4b29-90cf-7d80f785fc6a"
        },
        "item": {
          "id": "91b104b2-25b2-49ba-b082-74764353602d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4765bd15-a43a-41e3-bb61-35955cfef0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812a669a-3ae5-4b5a-b71c-0e6948bdf651",
        "cursor": {
          "ref": "b6cb29af-6961-4233-a259-29415adbef8f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d5b50531-d055-4a43-80a4-613a8b50e906"
        },
        "item": {
          "id": "812a669a-3ae5-4b5a-b71c-0e6948bdf651",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "247fc228-6d25-4171-9479-ee282933b4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881f1088-b262-4a7c-bbd1-a8ea26e04844",
        "cursor": {
          "ref": "7ad25840-7803-4035-b47b-2ff0b97ce86e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fd758961-31d7-4e4a-81ca-a9be4adb121b"
        },
        "item": {
          "id": "881f1088-b262-4a7c-bbd1-a8ea26e04844",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "17755dd7-72e5-4260-95ef-98f74c22d01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644f226f-cd1e-462c-94ac-c15920bad447",
        "cursor": {
          "ref": "d07d9a98-e81b-4884-86fd-cab946977f79",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb5693e3-a017-44e9-8ef9-171f5d10a9d7"
        },
        "item": {
          "id": "644f226f-cd1e-462c-94ac-c15920bad447",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4a6a3a87-c2ef-4d33-983d-3fb9bd0238a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061d2127-c0a7-49bd-97ae-d9f14d5e7321",
        "cursor": {
          "ref": "a682c3dc-b87c-4eda-bea6-5f8ca16a1707",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d03bacd0-3f88-4903-b9dd-80ce8ce0d426"
        },
        "item": {
          "id": "061d2127-c0a7-49bd-97ae-d9f14d5e7321",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7afc7a9e-388d-457a-a862-d12f51f34008",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc7b6ff-b330-403d-b120-70a38773f407",
        "cursor": {
          "ref": "29250567-e18b-4311-bced-c9577cb8573e",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6ca669d2-63f4-4929-b4a8-2d05c1b9ee64"
        },
        "item": {
          "id": "cfc7b6ff-b330-403d-b120-70a38773f407",
          "name": "credentials_issue"
        },
        "response": {
          "id": "adf315f3-3110-4e95-8c14-6fd35d036519",
          "status": "Created",
          "code": 201,
          "responseTime": 69,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98f9dc1-60c7-4189-a3da-87c20833a898",
        "cursor": {
          "ref": "25707d77-44ef-4b42-8bcf-1b263d32d6a9",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2b933260-2a6c-49d9-915f-3216642ac51b"
        },
        "item": {
          "id": "c98f9dc1-60c7-4189-a3da-87c20833a898",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e64a39ce-9ff0-425e-bd2f-c156ef60f383",
          "status": "Created",
          "code": 201,
          "responseTime": 426,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71ddc43-0017-45ac-822f-03fb04e62f0b",
        "cursor": {
          "ref": "2b1129a6-92bd-4093-9217-ffce0a09153a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b69cdb9a-4634-414f-a869-9ab5c24a1eb7"
        },
        "item": {
          "id": "d71ddc43-0017-45ac-822f-03fb04e62f0b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bca2ae72-9a76-4e5f-aa97-6761e5d6b6aa",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8ddcb0-31c7-4319-8fd1-b8413f57a206",
        "cursor": {
          "ref": "aad30bfd-1c66-4dec-8981-57a58e699376",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8641681b-9544-4383-936a-6698b201aa92"
        },
        "item": {
          "id": "ac8ddcb0-31c7-4319-8fd1-b8413f57a206",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6774a724-0cef-4ec2-b151-5c0c56161f80",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f3cd23-4046-40a1-823f-ec58dda78eac",
        "cursor": {
          "ref": "2744dcb3-b6c7-4320-94ad-be712a149938",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9aeb4990-8d6d-42c2-9fdb-f55f678687bd"
        },
        "item": {
          "id": "74f3cd23-4046-40a1-823f-ec58dda78eac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cbbf7c63-4746-4fb4-9777-72c9757662e0",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1c6580-9c1e-4655-9812-ae1337e080b0",
        "cursor": {
          "ref": "41697573-fd17-4c32-b48f-3d50a4020c9b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5f9f0fed-a178-46b3-a717-2c8171e63aa6"
        },
        "item": {
          "id": "ed1c6580-9c1e-4655-9812-ae1337e080b0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0a74ca0e-d29e-4307-be64-3b7be40945cd",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017fda62-8a0c-4085-9941-60662c071e61",
        "cursor": {
          "ref": "7cadb781-0b0c-4326-9771-53c2a48c3653",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "279110b7-12e3-48b1-aaa0-2e91de4b7241"
        },
        "item": {
          "id": "017fda62-8a0c-4085-9941-60662c071e61",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "35225186-316c-49be-9051-f283a3fb0378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23da3fa1-3798-4a51-b8ce-7f98f2f82803",
        "cursor": {
          "ref": "3e625728-0a2d-4060-9503-cf2e75b48b0f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bce6ced0-cf23-4f90-a673-45701721cc69"
        },
        "item": {
          "id": "23da3fa1-3798-4a51-b8ce-7f98f2f82803",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b6898c62-1cc6-4474-a000-a22989340705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c58ec4-5ad6-441e-8b64-02d394a99a33",
        "cursor": {
          "ref": "2b4e0366-7fca-49b9-b174-4f2278a9e166",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "efb58197-91d5-42bc-848c-5dc53062ea95"
        },
        "item": {
          "id": "c0c58ec4-5ad6-441e-8b64-02d394a99a33",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d009a69-a38d-423e-85d9-b19cf80fa8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0550cb04-a17d-424f-bf84-f203680dcbae",
        "cursor": {
          "ref": "c4420646-1e23-4340-90e3-4b893bd29948",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "83a7516e-db8f-40a0-8d51-abc99164a7a5"
        },
        "item": {
          "id": "0550cb04-a17d-424f-bf84-f203680dcbae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2bde77f1-b8fa-4333-a166-3be591f5624c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f693f6-c3a1-4099-bc94-155776ebfcfd",
        "cursor": {
          "ref": "878de3a7-9cfe-45c8-bc06-be9ad9b6e61d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cea3c70a-2108-4792-ab85-370820792684"
        },
        "item": {
          "id": "73f693f6-c3a1-4099-bc94-155776ebfcfd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e2b17989-7504-4092-bdff-a85319cf8127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519a9ad6-8730-4bba-8b58-d37aaa59bea6",
        "cursor": {
          "ref": "8f17891d-d282-487f-9997-3f398154acba",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5018dff1-5484-4436-9461-b212fc7441e9"
        },
        "item": {
          "id": "519a9ad6-8730-4bba-8b58-d37aaa59bea6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5ad8642b-86f7-4bae-87f2-bd5301899c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e79137c-14a8-4dce-ae71-b3876f0c508c",
        "cursor": {
          "ref": "164b40d8-4dad-491c-9df7-6a1249716c02",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c5f002e5-9eba-4be2-8073-c9e51e54822a"
        },
        "item": {
          "id": "7e79137c-14a8-4dce-ae71-b3876f0c508c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "69649c6a-1a2b-4d64-a836-4b0754cebc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79202f-1c56-4f8b-a116-b665276d7292",
        "cursor": {
          "ref": "141ceb80-4af4-487f-baf3-2009d7324687",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bf57d0df-80f5-4aba-904d-c64cbfc044e5"
        },
        "item": {
          "id": "ef79202f-1c56-4f8b-a116-b665276d7292",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ac556293-db6c-4f60-9865-7d172b072f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d72b2-3a08-4783-9368-61afc843af05",
        "cursor": {
          "ref": "bf16a3f8-8243-40bf-93ae-d540e534c3d0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6c769469-1ed7-4e9d-a6aa-ce5eae9bf066"
        },
        "item": {
          "id": "6c4d72b2-3a08-4783-9368-61afc843af05",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "985ace1a-c998-4f75-9914-a7cd5703168b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7749e607-08dc-4125-aa32-9d9a0799a765",
        "cursor": {
          "ref": "0c4503ef-af64-459b-8725-d73c504e6489",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1a7afbd7-bbda-4f34-a1d3-ba9849a779fb"
        },
        "item": {
          "id": "7749e607-08dc-4125-aa32-9d9a0799a765",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b43cd3a9-9906-4141-8de0-19f9d59d3cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a26b661-1069-4d61-9606-68871a37b644",
        "cursor": {
          "ref": "769b7bec-d730-4bc0-b7d3-d8a537d95379",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "34c1043f-92bc-40c9-ba6f-e0604bdf0f71"
        },
        "item": {
          "id": "1a26b661-1069-4d61-9606-68871a37b644",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a651f070-047b-4191-ab52-511e33210945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31931042-a09a-423b-b95f-bfd04ee37647",
        "cursor": {
          "ref": "4ea2a2ab-59dc-4c2e-b8f1-8f8bf3c0c1ca",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e6463c0d-a9ab-4bfc-96d2-7a69e1647068"
        },
        "item": {
          "id": "31931042-a09a-423b-b95f-bfd04ee37647",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c70fa917-ec8d-436d-9110-79b9419df683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d2a086-5511-473b-af88-665f16da4b22",
        "cursor": {
          "ref": "5724d046-9bdb-42f9-ac02-dc4587501084",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3cb12649-7f8c-4e67-871b-6f3a7aafc258"
        },
        "item": {
          "id": "f6d2a086-5511-473b-af88-665f16da4b22",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "231232b8-d4dc-41b0-94cd-d8ed5e6441c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4e83c8-b520-4813-b2b2-0e2e1a8cf695",
        "cursor": {
          "ref": "a928a67c-dd17-4924-a9a8-3d1449381c07",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5d8d4151-4d04-456e-93d6-05ee3d0b2377"
        },
        "item": {
          "id": "6d4e83c8-b520-4813-b2b2-0e2e1a8cf695",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "88fdf4b5-701d-4abc-8ece-ef74032e495e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff131d9c-572f-4718-b9dc-24ddc0f83bb6",
        "cursor": {
          "ref": "4b8d577f-9c75-4086-880f-fdd99061da3f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2a33b748-47d6-4b76-929b-4cae7e4e4c84"
        },
        "item": {
          "id": "ff131d9c-572f-4718-b9dc-24ddc0f83bb6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9514bf74-e37a-4bb3-8092-4ad9b2a9043a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342d29bc-74df-46f2-9634-4ce56b74abd0",
        "cursor": {
          "ref": "4e0b4b1c-38f2-4f43-83e8-d5682d121eed",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b5ed54b2-89c0-4e72-84ef-f6121ce59f8b"
        },
        "item": {
          "id": "342d29bc-74df-46f2-9634-4ce56b74abd0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "283d6850-631d-45bc-b27e-bae12c5be8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7575b44-ca48-477b-bf46-490185d20f3d",
        "cursor": {
          "ref": "a63d9bd3-a1e3-416c-b9c7-d5f2c2efd546",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "feec905a-f360-4480-a6a7-f32f044768ab"
        },
        "item": {
          "id": "d7575b44-ca48-477b-bf46-490185d20f3d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "459a1402-752d-40cf-9e10-163db150dacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c8f080-0264-43ee-9dd3-5f9e63136442",
        "cursor": {
          "ref": "f88a5275-c6b6-432a-a865-e930c0acd45e",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1f6d8da-6b6c-4403-820a-2d61fdee9d53"
        },
        "item": {
          "id": "f7c8f080-0264-43ee-9dd3-5f9e63136442",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f77dd6e6-09e5-4b44-a3a0-c787adf7ffd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca40c42-b440-4ce5-9e80-e9e0b6c68c57",
        "cursor": {
          "ref": "ff65d09e-8363-4d55-bb81-44b2fe9ea9c2",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "78050a7c-62a7-4f34-88eb-e0264c85e118"
        },
        "item": {
          "id": "cca40c42-b440-4ce5-9e80-e9e0b6c68c57",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3e56748a-3fb2-4111-b776-76c2c1568801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0888e03-77e6-4a2e-9d6b-2c95fa6e0c62",
        "cursor": {
          "ref": "3205aeac-cdd3-421d-8037-72114bbaee0b",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8c5c9707-daa0-4646-8d86-6297a6bff13b"
        },
        "item": {
          "id": "f0888e03-77e6-4a2e-9d6b-2c95fa6e0c62",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a98b1849-33fc-452a-93a8-02bc90a40bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137f8f62-2a65-408f-9e3e-50d68fa9fe19",
        "cursor": {
          "ref": "d6c5f413-deea-4e3a-ac7a-c391bff05b7e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a753bb76-6864-4a44-8a45-db0157747d91"
        },
        "item": {
          "id": "137f8f62-2a65-408f-9e3e-50d68fa9fe19",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2ab738c-c7ad-45bc-9c86-ed42bba38047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787ac008-b304-4e48-b030-8367a364b13b",
        "cursor": {
          "ref": "47928ef1-bfc9-4ec7-97ee-fb895bb9b618",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "727d6295-6fcc-40c9-8de3-93564bb3fab7"
        },
        "item": {
          "id": "787ac008-b304-4e48-b030-8367a364b13b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "43a1e5c4-9f6b-470b-ad31-d1c9e81d8485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dee4c8-c56b-4913-98d8-c821b722eea6",
        "cursor": {
          "ref": "5e2861bc-b2f2-4038-ba4e-ffb0f769e5e1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7174db72-cda3-47c7-96b8-26a54e8dbe2d"
        },
        "item": {
          "id": "34dee4c8-c56b-4913-98d8-c821b722eea6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "073c1713-563f-47a7-a224-0ae6849dbdc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3545bb-d192-4695-887b-088829eb6cda",
        "cursor": {
          "ref": "bf710070-aa7f-47f1-a659-345c97f57b64",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29b00b6a-b51f-4f41-a91c-de251a7ab007"
        },
        "item": {
          "id": "3a3545bb-d192-4695-887b-088829eb6cda",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "34e4509c-96b3-4c83-8987-27701b430a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f09774-b88b-41bf-b27f-02f9cf804de8",
        "cursor": {
          "ref": "c3b3af7d-cde0-43ca-894a-b7a06852ca9e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fb8e93f7-47c4-4835-8b55-606a98a27085"
        },
        "item": {
          "id": "39f09774-b88b-41bf-b27f-02f9cf804de8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0419a737-d6b7-4e13-bb8f-a6fbd2c84009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb19f60c-7bfa-4fcc-84fc-a6edd31c87ec",
        "cursor": {
          "ref": "3fb83da5-3922-431d-8906-4d99f0894736",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ba4aa4a2-2625-4690-84e5-2dad108d6520"
        },
        "item": {
          "id": "bb19f60c-7bfa-4fcc-84fc-a6edd31c87ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "adcc231e-a072-4029-a46a-2048c36ab552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c3bf17-27ed-4542-8fe7-7d2a8e911f1b",
        "cursor": {
          "ref": "d1a48300-dac6-4680-a882-f7447ae591f4",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b36bbe07-dcc6-4c77-bf77-00d0b2404f25"
        },
        "item": {
          "id": "22c3bf17-27ed-4542-8fe7-7d2a8e911f1b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e35516dc-6969-468f-9135-2a017b7445cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb31b85-b9f9-4d99-a20c-0bb7bff6ce9f",
        "cursor": {
          "ref": "a007320d-6043-414f-bd1a-60aedc2f44ad",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a3614740-d4b9-474d-aa5c-49ccce51fc8d"
        },
        "item": {
          "id": "fbb31b85-b9f9-4d99-a20c-0bb7bff6ce9f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4baa3414-cb83-4480-a87d-1a6524dcb8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a605adb-912b-4365-97df-d9a4ba55d766",
        "cursor": {
          "ref": "7699c1e8-7186-4e49-99f4-1a6bd1531441",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26914863-eff1-4b01-bb87-a9372bffcc6a"
        },
        "item": {
          "id": "2a605adb-912b-4365-97df-d9a4ba55d766",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de5508ae-73b4-4e8e-bd0d-d16c3a2c6052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8736a0a8-5a9b-44c3-9501-ed310c165b3c",
        "cursor": {
          "ref": "d08fd51f-442d-4b1d-852c-84073174feef",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a44c0c85-6082-44a3-af11-6338099d5005"
        },
        "item": {
          "id": "8736a0a8-5a9b-44c3-9501-ed310c165b3c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "84bfe7a2-21cf-4c01-9ad5-d8b954e53251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17e5321-641d-4f0e-9f00-2de594d29233",
        "cursor": {
          "ref": "d9fee289-fba4-4616-adcf-840141ed3137",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ba4fa843-ac1c-4210-a45c-31b225a2b683"
        },
        "item": {
          "id": "d17e5321-641d-4f0e-9f00-2de594d29233",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5fa695d9-99ff-4b61-808b-f20cb05b4fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b090c29-37ad-44d4-ad7c-fea32633d173",
        "cursor": {
          "ref": "f53e2975-ea1e-49d3-bf73-a6e1dc2fff02",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a40cb07f-4635-4e7e-ac35-7d521118cf8e"
        },
        "item": {
          "id": "0b090c29-37ad-44d4-ad7c-fea32633d173",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7cb8a8ec-8c93-435f-b259-efb2d448dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b40c669-fb51-4e2d-9020-213d09d3aca4",
        "cursor": {
          "ref": "631f8861-15f3-46bf-80a8-befaedf01c1e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4b7f395b-9f3c-47bf-9f54-272c50479b99"
        },
        "item": {
          "id": "8b40c669-fb51-4e2d-9020-213d09d3aca4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc424cf1-b8e1-4406-a6b7-44440e970feb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a431a915-c8f0-462b-97ec-ce14347029a8",
        "cursor": {
          "ref": "7324f389-8cdb-4bb1-a650-fdd8f6e2028b",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6aeec67b-228a-412d-895a-eac726472aed"
        },
        "item": {
          "id": "a431a915-c8f0-462b-97ec-ce14347029a8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "733dfadd-eac0-4fef-8d68-e7bf161a6669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97e5161-2073-4001-b9e3-cfd7c3beea7b",
        "cursor": {
          "ref": "1e668f3b-480a-4e67-bd59-46427ddc49b3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "17e9632c-6bff-4a2a-a0c5-f248bd3ff0cb"
        },
        "item": {
          "id": "e97e5161-2073-4001-b9e3-cfd7c3beea7b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3746e5a8-73ee-4ef0-b083-986102838a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4ea35e-2b02-4d75-b17f-ca6206f86112",
        "cursor": {
          "ref": "72690f74-de87-4d5d-bbbd-a3a5d5475bb8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cc209de4-84ce-45a4-a363-177c8f2095cf"
        },
        "item": {
          "id": "9e4ea35e-2b02-4d75-b17f-ca6206f86112",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71696091-a8b6-4d0e-8a01-f3b5d205d211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54114c92-a4f3-4a3e-ba7b-9723318b95b9",
        "cursor": {
          "ref": "133de309-ea5c-4231-8a11-8cff790a45f6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ae6e3eb3-8714-44b3-9ac6-ae3e315bf9ba"
        },
        "item": {
          "id": "54114c92-a4f3-4a3e-ba7b-9723318b95b9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "661630d8-57cb-455b-aca8-b54b9c9a0576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f3c73b-57a9-4300-b2ab-ac9c8bc65150",
        "cursor": {
          "ref": "2925d4f9-7575-4fa3-928f-3b27187806b1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9a90af2c-03c9-4bd4-846b-bb52196f04fa"
        },
        "item": {
          "id": "b7f3c73b-57a9-4300-b2ab-ac9c8bc65150",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f9d8738-0c6e-4c7f-a852-328932ae8ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55447d6-b0e4-468b-81a2-b2e9a8f2f21f",
        "cursor": {
          "ref": "58153db2-0677-4caa-a719-f83b9b3142e6",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "52c38802-d392-43e2-806e-91777dbd43fc"
        },
        "item": {
          "id": "e55447d6-b0e4-468b-81a2-b2e9a8f2f21f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b262526f-a6a6-4ab7-8a99-22d6cd7f1ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83adcb0-c4ec-4288-8c76-8c2cc24a72d1",
        "cursor": {
          "ref": "7b4e717e-044d-4d1c-a1a9-2f3a884e0e90",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1c42827d-f494-4e7b-b785-8340f36a65c1"
        },
        "item": {
          "id": "f83adcb0-c4ec-4288-8c76-8c2cc24a72d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d1592c67-b530-464a-a21c-0cf55e4fcd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413fee44-92fb-4ab3-895f-4b7135bf34fc",
        "cursor": {
          "ref": "39479284-079b-4031-ad35-3f6330844821",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6ed8cee2-4ed7-4646-af01-b951f8faf73b"
        },
        "item": {
          "id": "413fee44-92fb-4ab3-895f-4b7135bf34fc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7ed1e180-8457-4391-b567-718d6676d2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdba51fe-3ae7-4906-aa0e-8f28680ba68a",
        "cursor": {
          "ref": "1a249b62-5374-48fa-8d9d-323b1abe0ad4",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cb71a78e-47f8-4a22-983a-8831b3eed483"
        },
        "item": {
          "id": "cdba51fe-3ae7-4906-aa0e-8f28680ba68a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9beba970-09b4-4db7-8442-7acba9d97312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab11a381-14f9-4048-b887-b3e7e879400c",
        "cursor": {
          "ref": "e7b6a5a7-f6bb-4c75-8468-bc4ef171f5cc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "480da5cd-af39-4142-8d36-c9507f73463a"
        },
        "item": {
          "id": "ab11a381-14f9-4048-b887-b3e7e879400c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "664c758e-df37-4fb6-80eb-6b773200f838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f0a3b4-04c7-4a79-a6fd-dd13c1a6e1ae",
        "cursor": {
          "ref": "d15e7ff4-d62a-4b43-a7b9-ab9279dd122f",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c3146272-0c9d-4bf2-a076-236ec41c0bb1"
        },
        "item": {
          "id": "17f0a3b4-04c7-4a79-a6fd-dd13c1a6e1ae",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "66e1d974-ecaf-47b4-855c-0ae577e8070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce9e3fc-cb86-4db1-93b8-48c94c692c42",
        "cursor": {
          "ref": "c1b231dd-846a-4a08-8214-bc1e3ec6460d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7147d2a4-0da0-4a1e-84b0-cb53e0d1234a"
        },
        "item": {
          "id": "cce9e3fc-cb86-4db1-93b8-48c94c692c42",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2f2fb0d-b6a5-4cdb-af66-1336043ffd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe53585-b3b1-48a4-9ef1-64f0943e9e7b",
        "cursor": {
          "ref": "6d337219-4335-4cbd-8ccc-2f28031f9f6c",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3ac075c5-a728-44d2-9964-f53c3aa137c1"
        },
        "item": {
          "id": "ffe53585-b3b1-48a4-9ef1-64f0943e9e7b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a767472-d6d8-449f-861b-aa1146d163dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c292e252-d535-42e4-b69b-ad5962b00f8f",
        "cursor": {
          "ref": "fa8f9af4-6e6e-4622-abf8-82c803fc3ce0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fcc21569-4cb1-46b7-9a1b-86367179e515"
        },
        "item": {
          "id": "c292e252-d535-42e4-b69b-ad5962b00f8f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4917d4a4-b31d-447a-8940-d2c8f7af5c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55bf307-beea-4461-a4c9-f140a13e2866",
        "cursor": {
          "ref": "794b5013-2f20-4d65-bdbd-79a1c146723d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "49895df5-c174-4468-a58a-4e8b451d41f9"
        },
        "item": {
          "id": "e55bf307-beea-4461-a4c9-f140a13e2866",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ba2337ca-daad-410b-a8c2-857cf47c6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94d5f9c-7ba7-47c0-8ab7-d0a74f3bbbf3",
        "cursor": {
          "ref": "1b5914f5-489c-471e-a1c6-05c64c539eb1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "379b082e-726c-4f76-9dc0-108eff357fb3"
        },
        "item": {
          "id": "f94d5f9c-7ba7-47c0-8ab7-d0a74f3bbbf3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "59e7a59d-9b3d-4ae2-9216-16c6ba656af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500ff299-73b7-40f2-a16c-64e38edb3e6f",
        "cursor": {
          "ref": "011c1705-099b-4389-ba30-0b61b32a08fe",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c697cd94-3690-4715-a285-33f65f5720ff"
        },
        "item": {
          "id": "500ff299-73b7-40f2-a16c-64e38edb3e6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "66d600e4-b4f4-4b1e-addf-38c931b1f7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b29d358-5b66-42ec-8371-1a17e89b5942",
        "cursor": {
          "ref": "396355d6-5fc0-4383-b8f2-9fb4a98950a3",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c2494ee1-129d-4626-8db1-3d89a77c23ee"
        },
        "item": {
          "id": "9b29d358-5b66-42ec-8371-1a17e89b5942",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11ddc49b-cb1f-4b2d-bdac-9a3070a84000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300cf707-c0ef-4bfb-a7b2-608b11ebfdb9",
        "cursor": {
          "ref": "70c05c12-1db3-432f-8836-b754b935b646",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2413d635-b0ed-4720-9dda-bc3a84de582b"
        },
        "item": {
          "id": "300cf707-c0ef-4bfb-a7b2-608b11ebfdb9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c0b7a0f5-ea48-4a0c-8286-9f77ac1f6aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adba8353-c34f-434f-ac70-ac44d1b83823",
        "cursor": {
          "ref": "20a4bc10-89f6-486f-a661-05a93b21e9e5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "417e7cae-ecdf-4c3b-ac48-12f19bf704d0"
        },
        "item": {
          "id": "adba8353-c34f-434f-ac70-ac44d1b83823",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4961c977-ee7c-4897-a43c-b1d86da73941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4edb8d-756b-420c-8d45-7ade78d9b992",
        "cursor": {
          "ref": "2180b79a-6735-44f4-9a59-260098959c75",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "215fb63b-0bb3-4d80-a7c5-c9a05787f23d"
        },
        "item": {
          "id": "0e4edb8d-756b-420c-8d45-7ade78d9b992",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "77994949-2fa6-443e-be9d-0e80eb4b0b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3e6cd6-c0f7-410d-851e-91a05f1787d3",
        "cursor": {
          "ref": "7d278509-bd69-4443-91c3-b27131a71584",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "76419f6f-b851-4c96-9204-b62751b40325"
        },
        "item": {
          "id": "9b3e6cd6-c0f7-410d-851e-91a05f1787d3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4850e494-a884-4d62-9944-2f5f1e011539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2bd2af-7e25-4c3c-a852-a478d18ff5dd",
        "cursor": {
          "ref": "e696d955-d90c-4c89-bd14-8957bcc3f502",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7945a0e0-ee15-4591-bb8c-7d3b31ff38c9"
        },
        "item": {
          "id": "6b2bd2af-7e25-4c3c-a852-a478d18ff5dd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "672eee13-d6cc-433f-ab10-2d2cfacd631a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6cf5fe-1cfb-4bbf-b30e-b4cc10ae2cd1",
        "cursor": {
          "ref": "659c09a3-4196-4da1-afca-617f36ac0697",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a840aec-938a-4b32-8145-6b358ef05363"
        },
        "item": {
          "id": "3b6cf5fe-1cfb-4bbf-b30e-b4cc10ae2cd1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d6c3ffcf-83af-4e7b-8640-d32cdba21e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac05d5d-3b35-4168-b46b-efb2ddc77055",
        "cursor": {
          "ref": "45e5f088-12e8-4434-abdc-53a42fec2be0",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1a18fbc4-3372-43ae-b37d-16a2016c6bc1"
        },
        "item": {
          "id": "7ac05d5d-3b35-4168-b46b-efb2ddc77055",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ef9a9f56-fcfb-4515-8c18-3fe17975da57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca450c7-4a3c-4301-a7e8-d2d780a477c0",
        "cursor": {
          "ref": "162c0a4b-50f4-43ea-8738-a659d7402129",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f82da468-cb81-4f30-952f-0ee3fd0d1b92"
        },
        "item": {
          "id": "3ca450c7-4a3c-4301-a7e8-d2d780a477c0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "12758bfd-b840-4677-84bf-0c0fba6f12cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468ab17a-13aa-495a-8325-9d2b2dc6f49b",
        "cursor": {
          "ref": "7b6f33e2-117a-45bb-b16c-4b6d3fe5601a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cbc6eeb0-2e7a-4106-a152-36f15fc321cf"
        },
        "item": {
          "id": "468ab17a-13aa-495a-8325-9d2b2dc6f49b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "73b1244c-578e-4a7b-9b3c-6f87b4426b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc94e958-f0f0-4d85-923a-4b5ccde34df0",
        "cursor": {
          "ref": "9a501cf8-de56-4f8c-a495-ae188212f667",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "703ee29b-09fa-4a8b-b515-ee28f6c60e25"
        },
        "item": {
          "id": "cc94e958-f0f0-4d85-923a-4b5ccde34df0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "80d2dce5-5e04-4c45-a583-6eb0ffb73c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f7e652-b7ee-475e-b142-2f497b7f38b5",
        "cursor": {
          "ref": "1ec4e10d-8de2-4c42-b64b-926b2848151e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "81288916-55ec-4c12-8466-d853e3a24df0"
        },
        "item": {
          "id": "99f7e652-b7ee-475e-b142-2f497b7f38b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b72f183e-f93d-4205-a224-77b0937be314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dbc7f5-cbaf-49d3-9482-2ee750c36d2d",
        "cursor": {
          "ref": "76f0c91b-735d-43fe-9a98-e3218e3cc8c0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "75778df4-b6b6-468c-b65f-232c9a8e319b"
        },
        "item": {
          "id": "83dbc7f5-cbaf-49d3-9482-2ee750c36d2d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4040aa75-489f-414a-a007-bf7e7f02b9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe9764-226a-4e91-83d4-40e9a84e9c66",
        "cursor": {
          "ref": "95635d58-4d85-417b-86b6-5c664ece6598",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4e5fefdc-c052-4e7a-868f-40ad8b0b2faf"
        },
        "item": {
          "id": "c4fe9764-226a-4e91-83d4-40e9a84e9c66",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ffb51edc-e748-4948-9348-b275b81c3e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ff067d-52dd-4e9b-88be-d9e1b3bb9f65",
        "cursor": {
          "ref": "c710b4b4-89df-4824-a5f0-bc8b7ce92fcf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3ffa8fe4-c8b3-44be-9920-3c2bb6adfe31"
        },
        "item": {
          "id": "99ff067d-52dd-4e9b-88be-d9e1b3bb9f65",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "07521067-b2ca-46bc-9827-b804a12308a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b2d6dd-fd6c-4a9e-b436-0ae2e58f74ba",
        "cursor": {
          "ref": "a09ade7e-37c6-4917-ba7b-203d02e15401",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "099436f0-f416-4de6-8b8e-ef326ff261e7"
        },
        "item": {
          "id": "14b2d6dd-fd6c-4a9e-b436-0ae2e58f74ba",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f86cedf2-b5a6-4723-8a50-87a8ed2abc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a15d8b4-6956-4755-aaf2-326c2f2d7f96",
        "cursor": {
          "ref": "3e5a7509-0266-4747-b275-a50d875ad143",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2c9a4109-afa4-4b97-9600-bf53d3261a47"
        },
        "item": {
          "id": "0a15d8b4-6956-4755-aaf2-326c2f2d7f96",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3d921139-ac66-47b2-ab78-0d10cd43b036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68f76f2-2197-40ac-a71e-6fd5224d99d6",
        "cursor": {
          "ref": "42a1d87b-adaa-4db3-9596-373f2994b9ae",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "40113ced-4978-4240-90a7-fbff63457f83"
        },
        "item": {
          "id": "e68f76f2-2197-40ac-a71e-6fd5224d99d6",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "948747d4-fbda-4bfd-b153-3767df60b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cdc30e-2d09-4982-bd12-f16823ef0bf2",
        "cursor": {
          "ref": "175c64f9-12a6-4a29-bd5e-cb9e643b98ce",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa6cd8a4-5191-45ba-8965-df47a2172e4c"
        },
        "item": {
          "id": "f5cdc30e-2d09-4982-bd12-f16823ef0bf2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ebe6a34b-d3ef-41eb-b72c-5d5b8bdf5779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115d3d4f-6c29-47d4-a542-c7597778975f",
        "cursor": {
          "ref": "5f022373-bfd7-4bae-8779-2f54bc00e760",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d36702c7-6df7-4061-ad20-24ae3c0f6725"
        },
        "item": {
          "id": "115d3d4f-6c29-47d4-a542-c7597778975f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5923ba83-3ad7-4292-8111-b7f1a53c723d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c3c42e-74b6-4f8e-b1e3-8c86c2247226",
        "cursor": {
          "ref": "ffd0260d-018c-4743-a4fb-ef5e83a1484e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "84e967da-bc68-4689-b3dd-ccf3ed8ede2b"
        },
        "item": {
          "id": "13c3c42e-74b6-4f8e-b1e3-8c86c2247226",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2762ac3-32d9-4171-8700-1eda9967d79f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d395804-1c72-4006-a4dd-e3a3916e3302",
        "cursor": {
          "ref": "bd8ffe93-237d-4f56-afdb-60f11ee00ebd",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d5d4381b-c08f-4156-bfa5-b58cce805eba"
        },
        "item": {
          "id": "2d395804-1c72-4006-a4dd-e3a3916e3302",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9e1c6658-0acc-4ec9-b9c4-a73f04e11399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de00bd81-73b2-415a-9cb5-dd88553f17cb",
        "cursor": {
          "ref": "8bfe708f-d64b-4a9e-b0ac-036d772ff066",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "723af1ce-03c1-440e-b6f1-2a6c42a4b45d"
        },
        "item": {
          "id": "de00bd81-73b2-415a-9cb5-dd88553f17cb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7f2dc4aa-48ea-4795-8372-6b6f9c6476b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ffb238-464d-4342-b517-264b3ab35753",
        "cursor": {
          "ref": "2bed1086-1559-454a-af84-ccd043511bdf",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d4e77be-f389-4583-a95f-7363e32ba727"
        },
        "item": {
          "id": "c2ffb238-464d-4342-b517-264b3ab35753",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a21c957-3da2-4992-bf98-0fef8d77ad32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b50b89-4b00-4a92-a1fa-4ce79356beb8",
        "cursor": {
          "ref": "ac981326-04a7-4e1d-8cc5-5ad0bb3f6a8d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "76cd9828-4586-43ae-a4ae-22b18a919821"
        },
        "item": {
          "id": "b8b50b89-4b00-4a92-a1fa-4ce79356beb8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "da374d14-88c8-4362-952b-02d76155c547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d21aa6-2753-4eb7-8608-1587b5b110ea",
        "cursor": {
          "ref": "86bf4d9f-64a8-4fe5-9b58-70669b6a747f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6bee34fa-0ea7-4467-a6c9-724b4336c2b8"
        },
        "item": {
          "id": "90d21aa6-2753-4eb7-8608-1587b5b110ea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a17f22ac-427f-4094-900b-f7402030f03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a981c362-e0c2-4a7c-836a-2e39e1e3f760",
        "cursor": {
          "ref": "b70c8e59-1c19-4261-805a-7b1fb09f0a47",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22ac802d-da93-450b-89da-53a467c5cc77"
        },
        "item": {
          "id": "a981c362-e0c2-4a7c-836a-2e39e1e3f760",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2f6333ce-5271-4818-9360-50bcfb014c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7781d8a-2f4d-4899-8ef3-68784573ca4e",
        "cursor": {
          "ref": "4b5ac072-dd08-40a0-a770-66e679559943",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d16551e8-cb4a-45b0-988b-6d67211310d4"
        },
        "item": {
          "id": "b7781d8a-2f4d-4899-8ef3-68784573ca4e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0240acb9-5ca3-4ae9-85dd-2fc1d45b1e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d086f93-2b94-4684-910b-e78e3b774ff7",
        "cursor": {
          "ref": "6557b97e-d3ed-4a5b-92ed-26c4ce7318f9",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f6183d4d-e00a-41f9-a966-fb3196b800e1"
        },
        "item": {
          "id": "5d086f93-2b94-4684-910b-e78e3b774ff7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "33646259-d40f-49ef-a80c-29174f6834e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7527db6-dae3-4666-baca-c1cecf7c5b6c",
        "cursor": {
          "ref": "5ca72d4b-c87a-48a5-b10a-13daf38c5b12",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "24e44908-7400-4f3a-8ee1-04883f8cf542"
        },
        "item": {
          "id": "d7527db6-dae3-4666-baca-c1cecf7c5b6c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e557770f-c8a4-40aa-9791-aa01899cd69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08eb1b8-95a9-42c3-b49e-0d1cc6d14fe0",
        "cursor": {
          "ref": "2f2529fb-7323-47fc-a453-4bb6881f3998",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "69b1e67a-0db5-4df2-9a83-7a02d5ba68cf"
        },
        "item": {
          "id": "a08eb1b8-95a9-42c3-b49e-0d1cc6d14fe0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a1f1f134-71d7-46ca-a13e-98251c8f3296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dd6682-f94c-454f-b51c-f903473d39b1",
        "cursor": {
          "ref": "a1fb8272-36e0-406b-8df3-900bb791bb39",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9beda05c-b88b-47af-b6da-b4c7a8425f1c"
        },
        "item": {
          "id": "a8dd6682-f94c-454f-b51c-f903473d39b1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8b36d8eb-5bfd-405a-bd9f-77fe1d0f86db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f76be-3d93-4851-bd30-25924e9fcb6d",
        "cursor": {
          "ref": "42889ce5-89c2-42d0-8b7d-2d17635e0b58",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4534214e-280f-4fc8-af0b-546d10a0f157"
        },
        "item": {
          "id": "9f5f76be-3d93-4851-bd30-25924e9fcb6d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d5b37fe2-1fab-4ce6-8505-50484107b27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eddbe17-403d-4b0c-83ce-85d8b373f59d",
        "cursor": {
          "ref": "06f0cd6c-d530-4684-973c-c3b540e7926f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4906ffb4-3328-4091-a10e-fa8e0387142b"
        },
        "item": {
          "id": "2eddbe17-403d-4b0c-83ce-85d8b373f59d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1235ec2a-1dfc-4f64-8805-b0b690c205c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7e4d6f-1437-4b18-a163-007f19968d9e",
        "cursor": {
          "ref": "5b70a7e0-610f-4ad9-9168-9897337cab06",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3782cc72-a09f-4f2c-993d-7e13993d95a8"
        },
        "item": {
          "id": "9d7e4d6f-1437-4b18-a163-007f19968d9e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d46e0227-7ece-4419-a652-9d9ca6c9c63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1665fe-47bc-4720-bb02-3caa280db90f",
        "cursor": {
          "ref": "0b053d0b-1e76-4159-bfc2-775b20e9ce81",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "061b4680-0425-4983-97ca-0af8e5de844e"
        },
        "item": {
          "id": "da1665fe-47bc-4720-bb02-3caa280db90f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "14e988e2-1a2c-4597-b65e-9d842e22b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73db3a2c-4d12-4f87-9044-4ad7e02bbb49",
        "cursor": {
          "ref": "fcbf16ac-c6e4-4477-a639-966b745a0012",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "957f552a-4657-4533-925d-8164e4d876de"
        },
        "item": {
          "id": "73db3a2c-4d12-4f87-9044-4ad7e02bbb49",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7cf99fa2-e5af-4fd8-b6ab-655e917c2280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2b8614-08e6-4f1b-bac5-4bfb70b1019f",
        "cursor": {
          "ref": "a32cce27-f063-4150-b952-f9e640ebc272",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "60f3f953-1b36-4f02-8beb-1dd5b813c784"
        },
        "item": {
          "id": "eb2b8614-08e6-4f1b-bac5-4bfb70b1019f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7ed6109c-61ec-49e3-be33-df2a54123d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1c55a7-97e5-41b7-8386-58d942ef518b",
        "cursor": {
          "ref": "2c68c4f8-d95a-4690-8684-8521bf8a9b03",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a2f58291-3b59-46d2-b567-7536a526f9f2"
        },
        "item": {
          "id": "ee1c55a7-97e5-41b7-8386-58d942ef518b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "d227f1c6-eeb3-4e59-b5b2-7229209ce4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cd3d00-0bb6-469a-8452-f7d0f62ad0a6",
        "cursor": {
          "ref": "fcf06be0-0a93-44e8-ae78-f39a04f3b3e4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "eee04005-ae54-43f1-a547-f08cf3b3f22f"
        },
        "item": {
          "id": "77cd3d00-0bb6-469a-8452-f7d0f62ad0a6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b86bfe1d-c7c5-406d-b254-faa273b448ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1392c2-ce45-4043-b8fe-f7bd0f3ae64c",
        "cursor": {
          "ref": "8e3c2022-35ce-4aa3-88af-0024468ae745",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "288739ee-f4f7-4b09-8d26-bfae3acac613"
        },
        "item": {
          "id": "1b1392c2-ce45-4043-b8fe-f7bd0f3ae64c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68918700-8223-4822-9b7c-e56c457ff4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e03f7c7-5aa8-474b-a2b8-2899a6f5e1bf",
        "cursor": {
          "ref": "2da5c2e4-066a-4a2c-9db0-b7e239eb06b2",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "556d2a0d-6f9d-4c8a-8e5d-369185e3d5f1"
        },
        "item": {
          "id": "5e03f7c7-5aa8-474b-a2b8-2899a6f5e1bf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3089f4f-43af-4123-8bc6-4ae2358d561f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a7fb5d-65ac-47dc-bb70-aa027ebcd787",
        "cursor": {
          "ref": "afe2c2fc-7135-4209-beee-3b2548637f38",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "69dcf0a8-c8f4-4afc-9f0e-1d2da185c92a"
        },
        "item": {
          "id": "61a7fb5d-65ac-47dc-bb70-aa027ebcd787",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "15423484-0925-4663-a9a2-bffc20404e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ed0ff1-50c2-4e71-97b9-c4e1bcccc98b",
        "cursor": {
          "ref": "0f43501b-b979-4de3-8d5d-fc661d656ecc",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "91bbba67-4033-4a6d-b2f3-c26f486f5bcf"
        },
        "item": {
          "id": "41ed0ff1-50c2-4e71-97b9-c4e1bcccc98b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c4b1228b-cc3b-407e-b5dc-1a6c9fce0738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5135de-8d42-4d87-b54c-10458f09d1a1",
        "cursor": {
          "ref": "2010b491-a2ee-49c0-8cd7-38e0dc0791f5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f65b19bc-0680-4033-b761-a1ea7a957f74"
        },
        "item": {
          "id": "fd5135de-8d42-4d87-b54c-10458f09d1a1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "576b1f09-f657-4c6d-8c37-ee57c1a45057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5733468-ea89-4ba1-859d-97a73d64a6cc",
        "cursor": {
          "ref": "8c0abb9c-66a4-4e70-99da-5adda62f2b67",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "783c2628-7494-46d4-ab9d-8e26fe867123"
        },
        "item": {
          "id": "d5733468-ea89-4ba1-859d-97a73d64a6cc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "020ac3f5-a8eb-4c3b-bc9d-da6f0b575b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f5408-5e72-4aa9-9481-4d8f49d62b3b",
        "cursor": {
          "ref": "c6e1295f-754b-4eb5-8f5b-fafa53d21406",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b7e91095-9d55-48af-80f4-5aabfa772156"
        },
        "item": {
          "id": "256f5408-5e72-4aa9-9481-4d8f49d62b3b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec1b3b43-3754-48c8-996e-00e95603b127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfa54b4-086b-40c6-a130-e7dcd5c6a4be",
        "cursor": {
          "ref": "8ced776e-421e-4d81-b1d7-5752dfe5e304",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9449e700-fb8b-421a-ae05-8d7fee4ecc57"
        },
        "item": {
          "id": "0cfa54b4-086b-40c6-a130-e7dcd5c6a4be",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f2bb13da-57f0-4b12-a10e-3531147f41a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6602f6dd-a10b-4cdb-8caa-43c4de72ac1f",
        "cursor": {
          "ref": "ffd951e3-73e7-4386-abdc-2b1f98f11e8d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "944ba6fd-6778-4144-adc3-7573d51201a5"
        },
        "item": {
          "id": "6602f6dd-a10b-4cdb-8caa-43c4de72ac1f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "741ef3ee-be35-4e17-92b4-27ff7a95dcdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02330e12-ca7d-454c-92d3-2548d3ce3754",
        "cursor": {
          "ref": "0b552ea7-5934-470a-901f-538a72af3070",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8dbfe24e-229f-4d11-b0da-7c36e030353d"
        },
        "item": {
          "id": "02330e12-ca7d-454c-92d3-2548d3ce3754",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2df7cfee-7a6d-4219-abcb-d02069417e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad671d4f-3970-4336-94e1-54b262d3e1cf",
        "cursor": {
          "ref": "8202e686-2ea3-47ec-9e45-80e48db1e0cf",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8e0f1c77-5965-4957-af90-d27f2dd2cadd"
        },
        "item": {
          "id": "ad671d4f-3970-4336-94e1-54b262d3e1cf",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fe391a2a-b8f0-40a1-b6ae-866dd5c56c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257cd021-2f00-4887-802e-0355bcded5a9",
        "cursor": {
          "ref": "5f38379d-89ae-43a3-bf00-fd0585d5089e",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "109c3a56-b8f6-4195-b5de-4a2dadeb32f5"
        },
        "item": {
          "id": "257cd021-2f00-4887-802e-0355bcded5a9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "06964333-52a6-4e09-84bd-bc4128188532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecd0608-f117-47eb-8912-89b481f97e11",
        "cursor": {
          "ref": "968ec756-19a8-4fa9-a6b7-782c4fe76ac0",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5daa8df0-bc6b-4ea4-89b6-b706033a507f"
        },
        "item": {
          "id": "4ecd0608-f117-47eb-8912-89b481f97e11",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a204e6d5-ccdd-4019-b5cb-6c00f20cbf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf28999-9411-4d67-b37c-ac7202822097",
        "cursor": {
          "ref": "74174ddd-b015-4013-9763-b95cbb2ca55f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ecea0f70-2915-46f7-bbf4-c418079bcee4"
        },
        "item": {
          "id": "4cf28999-9411-4d67-b37c-ac7202822097",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b4a6ca7f-3cee-4c62-8de2-f0527e5a0d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a2bf3e-0b3e-4753-9bdc-8e7a675774db",
        "cursor": {
          "ref": "d842e23a-6f01-4fd5-a41c-5c0cbc766cdb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d3f6c280-6109-4e56-a127-1a2e71d94098"
        },
        "item": {
          "id": "f4a2bf3e-0b3e-4753-9bdc-8e7a675774db",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "df645b47-7dad-4c90-b004-584946b8b5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de8ea2-6dc0-4628-b94f-1c3123151118",
        "cursor": {
          "ref": "84fa3b9d-8549-4ebc-8d87-23b1c77f4cb1",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4beded16-76f9-4c28-bad5-c50246a9e0fb"
        },
        "item": {
          "id": "57de8ea2-6dc0-4628-b94f-1c3123151118",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d467c1a2-aeb7-46d7-8727-74fab0bcde6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246fa93a-ad4c-47b6-8d78-37681a098ca9",
        "cursor": {
          "ref": "6b318d7d-8a35-41f3-a20b-08dd2ff0caf0",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "152caf2d-ddae-4d7b-98ed-e13d51e43b7f"
        },
        "item": {
          "id": "246fa93a-ad4c-47b6-8d78-37681a098ca9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e6703d58-b9ba-4235-bd6f-933b039d08d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663a752f-6b10-4075-bb66-a91397b106f1",
        "cursor": {
          "ref": "fde5bd68-1c62-4268-9fa7-faafb08cb78e",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d3c988be-94f3-49e0-947a-cd39d4a19511"
        },
        "item": {
          "id": "663a752f-6b10-4075-bb66-a91397b106f1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "906b956c-0fbc-423c-b3a0-b535bbfe162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b885964-0d46-4cea-b948-9cbc19a22b0d",
        "cursor": {
          "ref": "448e1d1d-c8ab-42e6-90f4-283eb8c46a6d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "169f02a0-f76f-4970-b02e-ef39b3d7c912"
        },
        "item": {
          "id": "7b885964-0d46-4cea-b948-9cbc19a22b0d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0e112d50-09d8-4e68-8a93-f8512c938f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679ed08f-436e-4096-b3a2-8cd940519a1e",
        "cursor": {
          "ref": "44439326-0330-4d48-a6cf-7d17219c04fc",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "106b5155-9591-4c29-9102-3ab3ce680c77"
        },
        "item": {
          "id": "679ed08f-436e-4096-b3a2-8cd940519a1e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3a6c8a7a-2ce5-4c23-8267-966f6317437a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c1cb40-16e0-4d6b-b4da-88ae57c60682",
        "cursor": {
          "ref": "e5966717-b43e-49b9-afc9-dc57fd6d9fb6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0af459d9-0e8b-46e4-aecd-c6d7872fe387"
        },
        "item": {
          "id": "74c1cb40-16e0-4d6b-b4da-88ae57c60682",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4d3444a5-71e8-4f6c-b79e-4f82157a021f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93e1018-8894-4a97-a6b5-6216eb9705ac",
        "cursor": {
          "ref": "0756095b-dede-4a9c-8a44-da63a639b1fd",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cfc2b575-8b69-4410-a922-92eef18f559a"
        },
        "item": {
          "id": "a93e1018-8894-4a97-a6b5-6216eb9705ac",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a42f7b41-eb63-4b36-8104-e7b1fb1f48cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04113b8e-3990-4798-8f09-278024a26831",
        "cursor": {
          "ref": "11e74a48-2fff-4335-a6e0-d00aa7fff520",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0df4ffde-79fd-447e-9148-793df73df81f"
        },
        "item": {
          "id": "04113b8e-3990-4798-8f09-278024a26831",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94e3e59d-be64-43b8-98f7-74888315fcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da838cbc-89eb-4a10-825c-c94bdb44cf7b",
        "cursor": {
          "ref": "2e03520f-240e-4d73-8234-b1d1be337b7c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c9e98342-db52-4ea1-8f54-4b8e1845523e"
        },
        "item": {
          "id": "da838cbc-89eb-4a10-825c-c94bdb44cf7b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d7a623dc-daa4-479f-b620-5da744dbaa98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054377fd-715a-4f3a-bc00-af3f4c8c4e8f",
        "cursor": {
          "ref": "589f733a-989b-4496-9263-caa768b2bfa5",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3c1ee6ba-a99b-40de-a060-2fab763d39c2"
        },
        "item": {
          "id": "054377fd-715a-4f3a-bc00-af3f4c8c4e8f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "51b52b83-ed27-44ed-9e0c-5eaa318e9acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4869ce-3436-4aa0-8459-a5389456a68c",
        "cursor": {
          "ref": "6b6c0996-2e1a-4ba3-af2b-1060e734e20d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d902e359-e254-482a-abbb-6b793849aa07"
        },
        "item": {
          "id": "5a4869ce-3436-4aa0-8459-a5389456a68c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d13f2bbe-a4c1-4a52-8107-cfcbbad24d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc6e9a2-f52c-4b4a-b279-19b0f12063fd",
        "cursor": {
          "ref": "9d40b83a-f4d9-46b7-a5df-36494e37c8f6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "27f7bf9f-1fac-42d7-a11a-0f083fa3855d"
        },
        "item": {
          "id": "acc6e9a2-f52c-4b4a-b279-19b0f12063fd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "787af7b9-f266-4335-8a49-9dd29fb6e19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5391f94-930a-4e59-8883-9e96b8027812",
        "cursor": {
          "ref": "71c96c02-9eb2-4655-a4a8-4418b4b21af9",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2e800d6b-b8ff-46dc-850d-6027c72f7252"
        },
        "item": {
          "id": "d5391f94-930a-4e59-8883-9e96b8027812",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a558718d-9958-4352-86f2-6296b2bd7376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4251f48-d132-4bc3-9b6a-bfabf9ad1c29",
        "cursor": {
          "ref": "c1cad0f3-e953-4f8f-a871-7a1e42f35c0d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f5542dbe-95f9-4d16-86ab-7a892273fda5"
        },
        "item": {
          "id": "e4251f48-d132-4bc3-9b6a-bfabf9ad1c29",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "694baeee-5f5e-4a41-8265-61da00488382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac6925-eba2-44e6-916f-7a3cf80529f0",
        "cursor": {
          "ref": "e74f6f07-9fb3-454e-9d28-09873d389830",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1394dcf-c20f-4fad-8681-e115b1dcec77"
        },
        "item": {
          "id": "23ac6925-eba2-44e6-916f-7a3cf80529f0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5efd20f9-3dd8-4aeb-9f1d-b74fe0ea4132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f453c1cc-7551-437e-8791-957618a5375f",
        "cursor": {
          "ref": "254759fd-d33f-4385-bf79-d6e6c6074ae7",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "27b40b58-460b-43e6-b377-d51b0e9b9548"
        },
        "item": {
          "id": "f453c1cc-7551-437e-8791-957618a5375f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6eef717d-73f4-40a5-8eb7-d286d44b4a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e8806a-c006-4ba5-906e-363984280a86",
        "cursor": {
          "ref": "7d62d045-5523-4a38-9ebe-b45cd7916dcf",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "76ea4825-ce04-46fa-8480-844c7c4e7220"
        },
        "item": {
          "id": "c5e8806a-c006-4ba5-906e-363984280a86",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3bc27f69-9ece-4b1d-bbc1-a48e1a912002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e795c9-cb7a-46c0-9ebe-304ade5b718b",
        "cursor": {
          "ref": "1df6bd96-1226-44cd-84db-19bd06acd97c",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1458b625-0be8-4715-a077-651402f8982f"
        },
        "item": {
          "id": "20e795c9-cb7a-46c0-9ebe-304ade5b718b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a287aa6f-ed21-4844-b61a-c33322a0762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a15589-47f6-47a2-a8c1-d94ee83df284",
        "cursor": {
          "ref": "f934daa9-7b5b-4c50-b346-2936146e104f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "22b50638-256f-4d1b-9fc3-e08759c1bcbc"
        },
        "item": {
          "id": "d6a15589-47f6-47a2-a8c1-d94ee83df284",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c5ca1df-3e4c-4e3a-a929-0821c239faf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b988be71-94ee-423a-a28a-07c50853170b",
        "cursor": {
          "ref": "6f5a77f9-99a8-482e-aab9-853eea36fcd9",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a62bfc5e-1242-4c3b-bece-5682444e7ca8"
        },
        "item": {
          "id": "b988be71-94ee-423a-a28a-07c50853170b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "db6478ca-2a32-40ab-a54e-daa60a675065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9684d748-fdce-4b00-9280-f3298fc2ddff",
        "cursor": {
          "ref": "b45c20b2-5a78-4b0d-992c-9fe5b8b084de",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dc7b1f63-8023-484e-83a0-bf81c3a556f2"
        },
        "item": {
          "id": "9684d748-fdce-4b00-9280-f3298fc2ddff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d316610-80e3-46f4-a270-3514fbe943ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08130a3-2f9d-417e-a97f-4873b294b69b",
        "cursor": {
          "ref": "3d547e22-68d6-429d-9016-8052248efc3e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc15d890-5b8e-4ac4-880c-5d42f9fddb95"
        },
        "item": {
          "id": "d08130a3-2f9d-417e-a97f-4873b294b69b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2136fdbb-01aa-46d3-87d7-a20193206b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f493d3ab-fe54-404b-afcb-30b4b2702ac4",
        "cursor": {
          "ref": "f4ec1fd8-9f4c-4d3b-bf5c-bdc7a2aee602",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a2964611-624f-47f5-aa17-6eb567921c59"
        },
        "item": {
          "id": "f493d3ab-fe54-404b-afcb-30b4b2702ac4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "eb5700e4-9bea-475f-b7c3-6811f39dbab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863fb89e-46ae-4255-931b-4eb636cba189",
        "cursor": {
          "ref": "d4edf2e0-2a4e-422f-8287-d27fe4d6ed71",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "65d49fb5-e471-4d57-816e-4b49aee516b7"
        },
        "item": {
          "id": "863fb89e-46ae-4255-931b-4eb636cba189",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7c59c5c6-48e2-44eb-a442-ddb8ecde3d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f986b246-0a8b-4827-8217-141001d50c91",
        "cursor": {
          "ref": "805ef9c4-67f6-4da0-8edc-d569bf6ba961",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "09b7cb17-1ca2-462c-a2a4-08aebaf533a9"
        },
        "item": {
          "id": "f986b246-0a8b-4827-8217-141001d50c91",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6d3c1cf6-e3cf-40b4-b2c2-591ff250e689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6010e4-65b0-4de0-8397-8a2c761000c6",
        "cursor": {
          "ref": "b2cd6e28-88a8-469e-8ce3-f54971957d57",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "90e61f55-e3c2-4eed-8306-830e9a8a9932"
        },
        "item": {
          "id": "2b6010e4-65b0-4de0-8397-8a2c761000c6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3d3a438e-45c4-4899-80b8-6886d93e8e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50ca19e-0337-4660-855c-4ff1dfe80042",
        "cursor": {
          "ref": "fff7754c-361a-44e2-ac64-9a5c2264fb4f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8649e3a8-77d6-45ef-afb9-2490440bdf49"
        },
        "item": {
          "id": "a50ca19e-0337-4660-855c-4ff1dfe80042",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f08a24b-ddfc-4659-8b58-eb6ae8d1661c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b5df55-6814-4c1f-b8a8-08ff502222ef",
        "cursor": {
          "ref": "4a5b3f53-75dd-4324-9ff9-8c598fcaba8c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "be84f63a-124a-45b4-8476-d58c05aebbb0"
        },
        "item": {
          "id": "19b5df55-6814-4c1f-b8a8-08ff502222ef",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "00cd6ece-d654-4bc8-ba87-866decf7ac44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae72426-1392-4387-8ac0-0498c1f3a9a0",
        "cursor": {
          "ref": "18d631ec-b2f9-4b3a-9a14-0eb7878f574f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c5b8c03-e3e9-41f3-969a-59a2d03cf6bd"
        },
        "item": {
          "id": "5ae72426-1392-4387-8ac0-0498c1f3a9a0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f700f00b-3cf8-4509-97b5-1023dfca76d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab13e8b1-17dd-4c21-b9ac-95343f2db906",
        "cursor": {
          "ref": "6e9c5a23-4d3a-4a40-bddc-d26af494aa0b",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ae449143-763e-4451-afea-6c97d3e2585d"
        },
        "item": {
          "id": "ab13e8b1-17dd-4c21-b9ac-95343f2db906",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "32edf1c6-5df8-46fe-8eb8-b80b5d8eb057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c858329b-7bb4-4478-97ea-5b75d50eac8b",
        "cursor": {
          "ref": "b89ee19b-b498-41d0-b1a2-6058379ae039",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a15d3418-73f5-41f6-b13c-73f44b5a011c"
        },
        "item": {
          "id": "c858329b-7bb4-4478-97ea-5b75d50eac8b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "54679962-1e9f-47b9-995e-4f0282aad094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf70a3c-9d7a-42ee-893c-f6d0527fcb91",
        "cursor": {
          "ref": "99539251-61b9-427e-ab6f-9e57e0ef9c77",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "522d3f9b-3cd7-478a-ba15-91548b30574b"
        },
        "item": {
          "id": "fdf70a3c-9d7a-42ee-893c-f6d0527fcb91",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "68319e5a-59ba-4931-b500-8489c7158bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03683b9-00a4-42d2-9e58-90dc51bdbdad",
        "cursor": {
          "ref": "6aa25cc3-96f9-40e6-9790-1710e335f540",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "625023f9-b809-4a7d-84a3-050da613421e"
        },
        "item": {
          "id": "f03683b9-00a4-42d2-9e58-90dc51bdbdad",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "65361b31-6f88-4fe2-acfe-78a8a6fa02bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5f2bc7-3b05-4a3d-b972-72718710349f",
        "cursor": {
          "ref": "1adff5b3-76f9-4114-ab14-a0abb01821ea",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "507e88ce-e5ac-4a47-a7e4-74d78bbdc913"
        },
        "item": {
          "id": "bc5f2bc7-3b05-4a3d-b972-72718710349f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1c6b8b3f-55a4-467d-86f6-599b9a5e5e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2959b85b-c8bf-4d65-96cf-6f0bbc2cfbfb",
        "cursor": {
          "ref": "bc74b5e1-df6a-4459-adef-9b88ea02b65b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3ff43a5d-4822-4872-9c87-f8113f341891"
        },
        "item": {
          "id": "2959b85b-c8bf-4d65-96cf-6f0bbc2cfbfb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0bac8ce7-fb4b-4bba-acf3-910d0f12450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a90f8d-c560-4662-bdae-5f38b226038f",
        "cursor": {
          "ref": "6e93646c-2468-4689-97c3-f19b645c08e5",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "478bfcb9-74bb-401e-80b8-19d6daa3f9a0"
        },
        "item": {
          "id": "68a90f8d-c560-4662-bdae-5f38b226038f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d6790c94-b98f-4726-b9ad-ab404e79f21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ade03e-ee61-4768-a223-ef7d86ea6d3e",
        "cursor": {
          "ref": "4a1da559-fdd8-4da5-98db-252ffb678765",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "85ee4777-e8e4-401f-ab55-c45dafdd1ae5"
        },
        "item": {
          "id": "09ade03e-ee61-4768-a223-ef7d86ea6d3e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af78b030-8f28-4d00-ab40-3382c89d4868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbed7a58-d7c1-4ab8-9554-20b912e9f591",
        "cursor": {
          "ref": "bc2ff1ba-13bc-45d7-a0ce-d5959c037b53",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6daa3f78-3978-4023-85ca-619e16e583ea"
        },
        "item": {
          "id": "dbed7a58-d7c1-4ab8-9554-20b912e9f591",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "48c0b60b-4c9d-42c3-a863-05644109f135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d6fae6-c4a1-4a0a-9d60-9b8805325a8b",
        "cursor": {
          "ref": "99cd1710-da21-401c-83ce-7069183f77dc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8af17697-c191-4fc7-ae08-d7c2dc60520a"
        },
        "item": {
          "id": "e2d6fae6-c4a1-4a0a-9d60-9b8805325a8b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7512dcc9-3e08-44c1-855f-565540d4d956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370be1cb-5519-4aaf-b24a-92974302ad4c",
        "cursor": {
          "ref": "93f91641-135f-42b2-b9bb-ec2ab3e2c0d3",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e731a27b-9bbd-495f-b820-3a0e77f26487"
        },
        "item": {
          "id": "370be1cb-5519-4aaf-b24a-92974302ad4c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a5f14715-09ff-4567-8e09-762ade83b86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8958e22-93a9-4399-bfaf-7d05884fa990",
        "cursor": {
          "ref": "b40fef8d-1806-4879-ac7e-230911e06ff9",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "bb02c198-a4f8-43b1-87c9-05f3a5ef36c7"
        },
        "item": {
          "id": "b8958e22-93a9-4399-bfaf-7d05884fa990",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e232334e-0281-4702-924a-8aafb610375f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9c63e1-a99a-4d53-a8f1-d32935ad1eab",
        "cursor": {
          "ref": "7f69f511-93fb-48ac-b021-db23f1594446",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "66664c12-7aa1-4e7c-bbc9-2a4219c6dca4"
        },
        "item": {
          "id": "4a9c63e1-a99a-4d53-a8f1-d32935ad1eab",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6b7eacd1-24a5-44fd-a7e9-670e2c408400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435e7dc0-5b9c-4026-8d2a-7d752da38f90",
        "cursor": {
          "ref": "079401c0-c8cd-4082-bf25-41d38ea39cc3",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c06438d5-0816-40f6-bff9-905d25f47227"
        },
        "item": {
          "id": "435e7dc0-5b9c-4026-8d2a-7d752da38f90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "136e0474-0db3-4ce8-a4e9-84598d23de77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d2d427-9c09-42f7-aa72-c644a8db0bef",
        "cursor": {
          "ref": "74caf3ae-0556-47c5-ba77-612d387231e8",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "27db211a-2cdc-4c5e-b0e9-d9be60e518ed"
        },
        "item": {
          "id": "a4d2d427-9c09-42f7-aa72-c644a8db0bef",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fc33a405-23d9-44a0-ba23-6d049eb19c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5920815-7005-4cd9-b5a5-13d0b03649a0",
        "cursor": {
          "ref": "65ebfb30-6308-423e-a4e2-6e20b9d032ef",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "87fd453c-fd7f-4ab2-8b3a-8ae3d377e137"
        },
        "item": {
          "id": "c5920815-7005-4cd9-b5a5-13d0b03649a0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7b70b9d1-7e7c-4101-ab59-3d007a76833e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f22c642-2752-4419-9eb6-9a25b082d355",
        "cursor": {
          "ref": "5ae13cbc-961f-44fa-b4a5-38613520e560",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "04014f88-997f-4f58-a11e-a40d16ca6e90"
        },
        "item": {
          "id": "1f22c642-2752-4419-9eb6-9a25b082d355",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4fc3852c-bb2e-42a5-a0d4-85b4cd4c7cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdc8a04-aa71-4f2b-9f92-b9a7922612f8",
        "cursor": {
          "ref": "58d70b54-579c-4415-99f0-bd225d9ac0e3",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "64862b13-308c-4e69-af30-a4fb4e037968"
        },
        "item": {
          "id": "efdc8a04-aa71-4f2b-9f92-b9a7922612f8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d88bd824-c3e8-4ea8-a10c-1ba038f92bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f8a751-cbbc-4bdf-9200-024c84fac2da",
        "cursor": {
          "ref": "bddfe9c6-5f08-4d39-b850-631c22e5e79a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cfa5e685-923a-4c34-8ee4-0c20b36770a6"
        },
        "item": {
          "id": "74f8a751-cbbc-4bdf-9200-024c84fac2da",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ba7d1eb7-fa84-4363-99c9-9595cfa833de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe92b72-870f-44c2-a44f-171c762948e2",
        "cursor": {
          "ref": "70c1fb16-3d9d-4226-a8a0-34aadff12da5",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "05c38cd3-9527-44bb-aca4-1087838f7a50"
        },
        "item": {
          "id": "ebe92b72-870f-44c2-a44f-171c762948e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "af6be801-eb54-43be-a442-01b025219ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa33514-ebab-4e29-8e4f-cad7bc474129",
        "cursor": {
          "ref": "e04c038a-6a6e-4c6f-ba8c-c9f8815981dc",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6039acc4-bf7d-4d2a-9834-b2eb8163021e"
        },
        "item": {
          "id": "7aa33514-ebab-4e29-8e4f-cad7bc474129",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3e99dc3e-05ac-4848-8c3b-23e64db35b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f21ce5-73c5-4d7a-a3a1-02671f388ec3",
        "cursor": {
          "ref": "3b6f7b6f-689a-4de0-86e7-26bf33c6a6f6",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d45f9e77-55ae-449e-b020-c0e095b67183"
        },
        "item": {
          "id": "41f21ce5-73c5-4d7a-a3a1-02671f388ec3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fce98061-751a-432e-b42f-0b6037e74e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1940066a-78a9-46fb-8953-b5bf8fc08d62",
        "cursor": {
          "ref": "95fa3ea1-5a22-4f29-a5c2-60398ed67caf",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ed5d3feb-63f7-4b03-a3f3-b80c70f043e5"
        },
        "item": {
          "id": "1940066a-78a9-46fb-8953-b5bf8fc08d62",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "237c428a-1f9f-4734-8ab0-156a3b684d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d781bd34-b4c6-434f-82a7-1788e0923fc7",
        "cursor": {
          "ref": "afe5e7ac-231a-45bf-bb37-19bc2e470a79",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6eaaee0e-3d0c-4dd9-b0a4-4b0f77c34c80"
        },
        "item": {
          "id": "d781bd34-b4c6-434f-82a7-1788e0923fc7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "39d3c783-ddd5-459c-8ca4-06bb7a8bbbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dc7dd3-fe4b-4fcb-a3e2-585db3450439",
        "cursor": {
          "ref": "594018cf-fdc9-41a9-ba50-daa0e1f32698",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8ecec28b-e163-4499-a95d-92a648acfdf5"
        },
        "item": {
          "id": "e3dc7dd3-fe4b-4fcb-a3e2-585db3450439",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ce95ff7e-fde1-4a85-808f-acd85ca7ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9705b17e-be5b-4be5-bfc5-7b4cceaef03b",
        "cursor": {
          "ref": "60054133-8a8b-4d08-9299-3486edb14869",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5bbf57c5-3f97-4368-a025-3cd63e018306"
        },
        "item": {
          "id": "9705b17e-be5b-4be5-bfc5-7b4cceaef03b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "df1c69b7-22f0-45c5-a4ae-03510ab9aea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d06b9e8-bec8-41dd-9679-6c14974bdd68",
        "cursor": {
          "ref": "66839caf-68a5-4b90-93f8-cef37fddb1bb",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d655be6d-f245-4523-b848-8ba5c5a5512f"
        },
        "item": {
          "id": "8d06b9e8-bec8-41dd-9679-6c14974bdd68",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "640e978a-ae18-43ea-9fa5-6ce81ef9175f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa4285f-3cf9-4fe1-9501-040a18c50413",
        "cursor": {
          "ref": "dc916f0f-fee2-425b-8bae-e1ac82e993f4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3fbf3e7c-18ed-4715-98eb-694a2dc23cad"
        },
        "item": {
          "id": "1aa4285f-3cf9-4fe1-9501-040a18c50413",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4984b402-8646-43bb-91c4-3d4a5ac7d90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82469ffc-a557-4874-8b3b-855297c5ea6b",
        "cursor": {
          "ref": "32d7425c-1258-46b5-b3a0-f8fd88017893",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "21220cad-8d19-4cfa-9447-8649fb2d8039"
        },
        "item": {
          "id": "82469ffc-a557-4874-8b3b-855297c5ea6b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "55847727-a2f5-448f-bf7e-46722e7831b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc95171-a15d-4278-9c04-9848d0420b11",
        "cursor": {
          "ref": "06013e8c-9cf8-42aa-832d-d94e96fa3f08",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c9158dea-e48c-4ec8-87de-691947a87843"
        },
        "item": {
          "id": "6cc95171-a15d-4278-9c04-9848d0420b11",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c30bf7a1-f2d4-4988-9aff-d20304dfdff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcee444-9105-4d88-a239-c4aa8d6f0ba0",
        "cursor": {
          "ref": "4fee1777-7ba8-43c8-82f7-8458bedd551d",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e8d78d4a-d1b7-47c9-bfdb-836af3b2b098"
        },
        "item": {
          "id": "6bcee444-9105-4d88-a239-c4aa8d6f0ba0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2542cccd-8089-468d-b15d-228f5e00ec07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a4e1a9-6dea-465d-aebe-fee4011a3cea",
        "cursor": {
          "ref": "f4336541-fb2c-47f1-832f-600cbb3f9940",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "097dcb72-a6a7-49a6-8226-1d4440d9296d"
        },
        "item": {
          "id": "30a4e1a9-6dea-465d-aebe-fee4011a3cea",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff1a8e11-9d79-4a42-be2f-ba2d1a11c9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ca2d61-d41b-4bb2-9b53-4b0d7f873e33",
        "cursor": {
          "ref": "c3ecbb37-3232-4b40-ad01-e441725d9e61",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5291443a-c14c-4ac7-8e36-655b989aa0b2"
        },
        "item": {
          "id": "69ca2d61-d41b-4bb2-9b53-4b0d7f873e33",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "351d2753-e7ca-474d-9741-c49c6e418657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b63973-bca1-4a22-ab94-d97b8db166e5",
        "cursor": {
          "ref": "2b63f89a-b3c2-4278-b864-0ed423a641f6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "88484b2c-bb0c-473a-910b-266c1eb5018b"
        },
        "item": {
          "id": "47b63973-bca1-4a22-ab94-d97b8db166e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "08a00451-986d-4b0b-8166-d51a31e43ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf01b79-deb4-4f26-8de0-ceb717494990",
        "cursor": {
          "ref": "54aace99-43d0-4cb8-8b5b-8319a6ebd760",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "fc0b5c89-314e-4541-996c-b13e2f301f5f"
        },
        "item": {
          "id": "adf01b79-deb4-4f26-8de0-ceb717494990",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e656181e-b064-45ed-9b0f-201713a5c0d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439fee4d-c776-46e4-9e65-bbac3bf3811a",
        "cursor": {
          "ref": "7152ea9c-1d40-4133-b4db-edf0dee0f2eb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "0b6f4d22-fd4f-43ac-98b0-d9912e25ef6a"
        },
        "item": {
          "id": "439fee4d-c776-46e4-9e65-bbac3bf3811a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "155a0c84-01ed-46ab-80ea-cf8d482dfe09",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba75823-f047-4af0-b333-9c8fa6e3a8cb",
        "cursor": {
          "ref": "575743a0-6507-4a89-92da-c318bbdb0d82",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "35a5939e-76cd-4b52-a34c-b40ca222ae27"
        },
        "item": {
          "id": "aba75823-f047-4af0-b333-9c8fa6e3a8cb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fc57df13-7d50-4ded-a2b3-bc0a50891550",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63e6398-015d-49e5-b85a-818da8922212",
        "cursor": {
          "ref": "634866b9-b1ac-4130-8363-033f13819136",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a1842ae1-cfa3-4832-981b-b612dbe5c272"
        },
        "item": {
          "id": "c63e6398-015d-49e5-b85a-818da8922212",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "03d74279-8f03-4422-b88e-8e76e898a837",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "10160626-d693-442f-9ff2-738458788bf1",
        "cursor": {
          "ref": "9a4d8442-5b3c-4a8a-b465-02ec6f33efc1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1e3dfd8-d7b1-4358-a589-0b73bba7d3fb"
        },
        "item": {
          "id": "10160626-d693-442f-9ff2-738458788bf1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c68261e-85b9-47d4-8841-d9e2e7f14cd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10160626-d693-442f-9ff2-738458788bf1",
        "cursor": {
          "ref": "9a4d8442-5b3c-4a8a-b465-02ec6f33efc1",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b1e3dfd8-d7b1-4358-a589-0b73bba7d3fb"
        },
        "item": {
          "id": "10160626-d693-442f-9ff2-738458788bf1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c68261e-85b9-47d4-8841-d9e2e7f14cd7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a896a0aa-8845-465c-bd70-072dfbc43258",
        "cursor": {
          "ref": "ca042572-363c-4f81-a312-5ecbfb625984",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "320a529c-fcca-4118-bd9f-f317b05201c1"
        },
        "item": {
          "id": "a896a0aa-8845-465c-bd70-072dfbc43258",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "68b99c3b-7475-43cc-b373-63c0ea15160f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a410143-13fb-421c-9483-5e1ac5f2b23d",
        "cursor": {
          "ref": "37b7e218-a81c-4b8d-b9cb-eefb26a6db0f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8db4604d-d2b9-4a1c-a8ba-bcabb6eca67e"
        },
        "item": {
          "id": "2a410143-13fb-421c-9483-5e1ac5f2b23d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1e0e31a-57b0-4793-8c01-0b5fd10f57fc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}