{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d7f98fa-4298-44a1-97ac-970aff50fed5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4bea1451-0e74-47e3-8c95-0f9d5014f81b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3fc2d88-36bf-461a-a412-3ae723c32445",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d753bdcb-9740-492c-a1f7-460766e32ca0"
                }
              }
            ]
          },
          {
            "id": "fa14aed7-ba15-4a59-b195-07199f263bd1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d33fce8e-0b84-434a-b995-283335bf5ed7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d00442c1-cb46-4772-88aa-6f5dad9694f5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe1dd784-6e6c-4e3f-a182-16728afbd0be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a98af4fa-470d-4b12-bcbe-c19e0603ab01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f695c09-abd1-478f-8db7-9093d059525a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbd05762-9e3e-4721-8783-5a94a8a82b81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b2b2d43-971c-49e1-8243-39cfc1911d3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e97b94a5-b62c-4028-8f5d-a8f950235c21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7e7173f-9259-400a-b553-f0b9e84c9321"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "097afd11-7eb5-4954-b0ce-1b60887d5d3e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55f94ed1-84e9-43c6-b60f-64faaef713bb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca2e85b7-ec88-45c5-998b-94aa987454e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59cf96b8-dbb0-4e32-88d0-79421c36a671"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4424a77-2bde-4270-a402-af808e59ebd0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1eea70a2-9aab-46fc-ac3a-d35fb6d709ca"
            }
          }
        ]
      },
      {
        "id": "90a0d923-9fe4-4d9e-88d4-10430ececb7f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "566dd143-606c-440d-8f19-a392763e9fe9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fac050b-75ff-4f58-bfce-31ca1e41ea8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf43b18b-e39f-47cd-bbb2-42fc1065fcce",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9974701e-368f-42cb-aa11-b4e568304e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54d49299-32d5-43fc-aab6-bd4a15edaa43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ed6b9-70a8-41cd-b2b2-9f547fb30fca",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "800b459b-af33-40ce-a1b1-decd34888524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3d56add-ebdc-457a-9553-af8ad675d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac9b24f4-cb0b-4c7f-9226-bedd0d7a88b0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d18e34f-5d10-4265-9369-fb823ee3bad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d0c512b-7fe1-4505-a867-2b124d97bb53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "524c696b-0f6d-4a3c-9529-2085e7eb652c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "474c6532-5f5b-4a15-8494-b30b9e44ad6f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6341e7-1a85-4f1e-bdfa-f0a5b8cf43da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "921abc41-4974-4434-84ef-b24559a0063f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8854db83-5227-40b9-bfd4-49243111afd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b1d22f-70a6-4cc1-b839-355cb4f00645"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "aa87580e-05f3-43cd-a117-e9fb7a004a5d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a95a0e93-5999-4dd7-b4c6-0b58d64acedc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77528a3b-89e2-480f-9dfe-c6753a7ea156",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "865a6eaa-794e-48ef-9a83-71995e772d4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dc6e24e-9080-4f27-817a-d9ea5cf1dd6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "090d2b76-7ab4-4ac3-80ef-f850067d21c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b2b0d54-09d5-4a57-aab4-ec543fffe8ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8164dab6-f835-42dc-a68b-3c8f039ca3bd"
            }
          }
        ]
      },
      {
        "id": "0572b76e-d403-4c35-84cf-f8cde1315388",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b71b8a57-0f0d-4d7b-b9ab-aef828b0467c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e93bdba-1a93-4c3c-ab5d-d1a18be9435c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8212a70a-0ff0-4ef5-9641-8f5956cffd32",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6453e6-f4b8-408f-a862-554e2e712b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9138de8b-5744-4b31-bf99-911e37ca886f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46f2350-be48-459e-baf5-015472a4f0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cfc44fd-8e04-4c7f-8249-c679b8c6185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fe949e-1075-4b69-8f7a-4a3a6bed9bb0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb0d6b9-4aba-4ee2-b3ca-373d74c98819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e106d29-62c7-43ab-b0e1-f5876f00b284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3929aa08-1469-4bb8-93da-46f83d6737b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ee8f1b7-b0c2-44ba-9e57-1840e0bf0106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5835e72-60b9-4e80-b6d5-6a4d23bc9cbe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419488ff-4a03-411b-b775-7504022601af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d1d370-0fb9-4ddc-9c9b-26faef5d9bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e83ce1-16c4-4067-8c45-3beb5bbf15a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "656ec890-6867-4913-8e22-b3de3c62ebd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f0475f-a9d9-4697-9f94-bc65462456f8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1754afa4-0ae7-41a7-8484-3815848df859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43102bf3-8b5e-4978-a4cb-bbe1ec442715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c4bda0-7416-4654-84ee-c0c753fd2d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "005087e1-d6bb-482c-aaf6-78ef71cb3561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b48c2-d99d-43ed-87ff-2cfb0017685f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799f3e7c-5000-43c0-b7a2-e5b396dab0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8df7a72-2579-44f5-96d3-ea282e602983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328a3a6c-6327-46be-9d31-bdbf5b359aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8228f3-b1e7-402e-adb2-6be313b2f4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf281b8-d31d-4126-b16a-b5bd911c9295",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7f0e9-99a3-4072-a86b-785090e60ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44ce9fb-d338-46ec-8197-d6f0f860e916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef3e09e-8d51-488a-bc5d-e904c9f047e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0643f9db-3e73-4dea-948b-19bf10a14964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee62508-63cd-44a4-a79b-548cf61c580a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc70202-7ad8-4d4a-8c41-df4e0f3da607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bcfc3aa-94d3-4f2c-a827-528e3cc5f33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9818b68c-388c-4166-af90-661b8011727e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0074e1f0-254f-45bc-b889-46cba7291a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ab1a8e-37de-448d-8514-ecf1c9cdb20d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f3d545-87b6-46a1-8885-fc59a49cc1eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7bd2f3-ae74-4925-9d78-ce8c6be4670b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60551a08-493a-4ed0-a2aa-9d7badcd932d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dabb80e8-4a43-4021-b99e-88cf70338a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70403b77-9036-4337-9417-7281f428a43b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40612df1-93bf-4e78-ba95-dfdb330be593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6425c4-bf28-4a5c-ae93-6411d10a40d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffac1bc9-49f3-4424-9980-524a7bd76f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57640ed2-1414-4542-8cdb-0f7aadf83346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9c148-ca59-4b2f-b969-fe6f84afbfae",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74923b42-3597-4d7e-8366-63b8fd31ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63dcb01f-892f-413c-bf34-ab7fe43eb5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35d7e8c-5537-470d-96be-90e7dd88921f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143d90b9-9ad2-4ac3-a237-ebd301a08693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2551d59-0dbc-4c4b-b33a-7ad848dfffaf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37747fc2-9e1e-4534-b294-87257e11cd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab410b2-46b0-4986-be2f-1a19db21cd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490c3671-8308-47ff-9232-7e251bd167a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6d89b56-b8b0-4849-ad58-40b389d7f3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f34d3b-89b0-4331-b8ee-8a5625fae25f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b0fd2-24c1-43a7-934f-8cf9fd2a0389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e86268-7975-4ab7-a1d1-f08297e64a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7ca745-9a6b-4c6c-8428-8bcc0b8b9cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fbc19dd-714d-4dd9-b6d5-7c0eaf833b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0c704b-760a-4641-9707-b0ef8551abba",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54de0758-97d8-46d8-8dfc-0106344c47a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aeb1bf-58c4-4e06-b482-826505342189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895fafff-5fbb-465d-9c5d-c3a9c29e1a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d99de26-bce4-425d-b2e8-58415bcef1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ba56a-2c2e-4b99-a877-632e9904fc8e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be3518f-4982-428f-af28-f57faa79ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f528506-e9bd-4cb8-a102-8c6f66a8c899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ed3d45-f0a8-43cf-9d1a-2320048dabf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1237a0ae-9d76-40c9-a916-50f102cd0f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3803a0-77fa-41a6-b23b-dd75497a2730",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50ca795-2070-4c01-b7b5-77fd60b0baa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e0eacf-217c-48cb-99eb-5ac6ff2062b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb932d-336e-4b7c-b377-9dac47023c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecef18e1-dbd4-4e7a-8d52-f500daddc38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d59feb-cf04-4865-bda4-00e7ff82f717",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b618b802-9241-4efb-9afd-f83d83eedf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd0049e-e587-4d59-88a4-3a59ec086e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d4d173-359c-43f6-8845-f411c507de49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "568db693-c048-4fca-b9ff-0c06bafb289a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3686c579-89bb-4c7d-92b3-954c719ab939",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a247e6ef-adac-426a-a82c-9e55c200076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235fd90b-2b14-422b-a6da-ffb0ab5cd651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c879fa83-69f9-49b9-9f7e-8eb1872e909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc9498c2-cd0b-4450-8045-8b534ef830a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b2f554-a3ee-49c0-80a8-1590c5372b69",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecfa419-2072-41e6-ab4d-8b4fb70d0018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7136523-1cf3-4c15-b73c-5eb05e0b21cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b4ac44-a3b7-4cfe-9e20-0721fc6d983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee13001d-4ef9-45d5-9f2e-501f6571fd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e9556-fb0f-478c-a7bc-807f6118b896",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27383205-07ff-44be-b820-f865b0c7952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c9c07a-31c7-4a64-af31-c4dfa1d5b5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa2688d-6569-467d-80ac-c524b9b8be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbec963-8eae-4c9f-9a65-b951df1e7b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff95783-34c9-4072-a093-5d15ba662b54",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68314380-955a-4e7f-8f85-828235346992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50934594-1c01-4c50-8cd1-3c134eaa052b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5c4b5f-f3e5-4476-8b04-6f0ae0e86287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "567a7dc8-ebf0-4a3f-b711-1237c368ea0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ac2d99-5dca-451c-ab4b-95e7baeac56b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf4e245-03fe-4423-b714-752692defd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80db7d52-8b95-4a87-bf1b-8ec356fe49bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b849aa5b-84f2-496e-a11e-e7806ac48974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85be76a4-b6d2-4da0-a749-bb72217b1d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90d704f-a2d7-4728-9c39-a6db18388ea3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ac54de-45c7-49c5-9363-ac79ced3a1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3286cece-2678-495f-adec-29abda87443b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09cbdcb-8673-4529-82a7-0bb4e3651e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b58ddaa-3054-413f-b015-520dc9dcc4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19e8c20-5a01-4fa5-9c84-7889ad1a53db",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ff3cac-3948-4360-b3b9-e179e606610d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c99e6e2-644a-4411-a203-36dd76476e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05613076-0218-4199-a832-1ad15fd72399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c13161e-b2a5-406d-8314-b3dbaa65fc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9dfb80-2417-40f4-a25a-f4c73f57648c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7013c9ef-01d6-4bc4-9b03-fd45b3077100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a0a9c2-d51f-48aa-a3d5-b2aeeeeb3794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f448ad89-3546-42b1-8cdc-f91cb0c640c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "acdc9a9c-8507-4b16-94fb-4a963bd81b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79aed3a-e850-4fbe-8a73-f49793409933",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb84517-ec83-44d4-bb28-89cae16fe72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121a7996-309f-4969-afde-d403fe097f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dc9b89-fdf0-4cbf-b0ef-363a325fc7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6684fee-afe8-4a31-a8b1-09bd8e575f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41c701f-dc2e-40b0-8764-d95ac9a3f900",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bf247b-7cf0-4bf9-ae3e-90b68825b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c981ce52-68bf-4822-9e18-8cce5637f40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af17e47-4f17-4cf7-bc40-1bf63c0d9396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80d869b-0489-427e-80b1-d0a37d04e837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa6bde-6d65-48ad-9736-f7c95b1df6f3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c2351d-6602-43e1-a6cb-09fc5175ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69eff35-e682-4433-bc65-dcf3111162a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9812c4e-b97b-4bfc-b435-588edbc4f67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed77e234-3cf8-4829-8e9a-5ccff9fe9431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faad7312-ebc2-4a69-82f5-d9443438e6bc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dcbeb6-88c4-481a-8fbe-78dbd180af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bcc912-45af-45c5-b6d0-7664499eb49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5c9a9b-0e5b-4cf0-b03d-ab07544d1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "348e7a63-9bb9-41ae-8d46-8a36307ff0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fbc8ee-6652-415e-93a3-7505881e0114",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bc4a38-8789-4dad-9d5c-23cb2fda7734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc15b83-bc1c-4130-8698-ba0ef4a69930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3e4bde-9a44-4614-af86-d44cf13a3a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b76c405-35fe-4201-a3d5-b597b691f9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88e97a0-759a-4cf7-8b4a-bba43c2b78c8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48996453-adea-4dda-9e61-6cec0567c6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5ffdee-260f-46d0-9057-33c1a6e86eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f45e0bc-7218-493f-a0e7-b2222dbb8c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "85d6f718-4111-4325-a074-d94efe8ea1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfb667e-9d1e-4fae-acb0-8ad31b1e3e0d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3daf5067-fbf4-49db-96ba-23cd8b064153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a80e0d8-a6b5-479a-807f-5dac8fd2d385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efc55ef-f3ae-44a6-ade9-fd28f1294466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe02cbf-81de-4346-bbae-5db249b5af03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96abe6f4-32b4-41d9-83f5-f2af495c810b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665d6d25-126f-4726-ab65-75ff432529fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3d56e6-06a2-421a-b6e5-f54ead94e934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5ade04-e9dd-4fe8-b13d-fb9dd0a97114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f93cbef-d638-41e5-a8d1-f2f288fd7256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7a759a-75c6-492e-98df-1afdda24a9d9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4442e61-4542-46e1-b8d3-ab4e01a56ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b58be96-f1d0-47f9-873a-59fe19f6fa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743be40-35cb-4b33-8962-c658c4e72970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e774be-e783-478c-b3ed-26940e568c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fc0520-90fc-435b-8062-6cc2e6c8605b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4532d66b-63b5-4d6b-b622-811263e0b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33145c5-a92c-4631-a286-2509cc8cf780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07ee9fd-4a89-47e6-8d88-5bdd2384dac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f64ef6-8742-40fb-a423-e38eb7948ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b34698e-fc34-4286-b5c8-bb4006fb3e27",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b1aa10-cd5c-48db-9cd9-21bc6887da24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f016d53-9522-4065-b580-2111bc4d8e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df81c80-6eb7-4612-8a07-200d4cb12c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bd411850-71f5-4923-934d-19a882458a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d2bf4b-611b-4912-bcb3-1b0be5c13ad7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3890cafc-3111-485d-823d-48b03d588cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cadb1dc5-f03f-4e20-8839-f67eb98dc4b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd132bb7-01a5-4bfe-b084-fa68afe1083a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c3ebf53-a726-47c5-811b-084f517bd546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bb8386-0163-4062-a357-dd5dc8248713",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239f4aee-625f-4a6c-b7b0-fce9aae4a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a76c42c-e1d2-4267-a62b-80f687776120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86792740-198e-4c8f-a518-02dcec93b323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "950f61fb-e485-4a7f-9054-8571edfee123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c0473-15be-4c1c-8cc9-b7bea302c83a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4e5081-53aa-48c1-834c-f5ec65b02f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ecd553-9da6-450c-a307-e36c7606741d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96624b-a9e5-4099-816a-1e12240ee8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd18713e-bf97-44b8-80d2-d0250754cc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adc42fd-8165-4224-acb0-61b5287a2d94",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fece0c29-2d57-49d6-9ea0-aa255b777909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71299ec8-ed62-4666-8f76-92a57bf251da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3c091a-1e11-4963-a4c6-beeea0c139db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "abd73757-8de4-4bb1-a3ff-cd4b073f2480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c21dc0-6292-4e3d-a92f-91ca534af886",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bf9a10-eb07-4be6-bec6-e5fa9663e787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4edfba-1094-4d56-ba4f-6b04a3a9c763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e69426-74c4-41d5-9ca4-460604aff3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d61f7a39-644a-4d26-9143-046a99c754c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407d48da-862b-4a23-be1b-653ce142b742",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2e55ac-5081-4f97-8f6b-3507395693b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5aaf4f-431d-4d13-8df8-b932771ed661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b501ded7-e8c7-43d8-8e33-b5fc1f47eae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "04b44b74-7440-4d87-a791-d35b7d747918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1165cf-5e95-448c-9946-5804f9f0d610",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f55c38f-68d0-4898-a4fb-a8acfc0c6066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef4877d-92cb-49df-adfc-a821f606d2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f1df86-a451-4cde-9d5e-b31ed8172450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "54b19f6e-5071-43a7-ab4b-775ed985b1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dd3224-0a0c-4094-a94f-dd71323c2e87",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985bcfb1-f629-45f0-906d-5af6d7da1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b58310c-61a1-44b1-ac6f-9a08842badc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfd0582-af47-450d-a17c-262968f54627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2122742b-8c70-42de-bb2b-f16bd7da3ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90311ca3-518c-492b-9209-d2eb1b01ca5a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297bac2-2e66-4ca4-bce1-e0e104501725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5ff8d1-ad15-4f56-8ae8-48d2667cf386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7332b3cd-ad29-49a6-8e9a-e49352a917d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5baacb-0d23-43c1-b759-07927e34c3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b74fb0-6c79-4f2e-b42d-4a62db8d5248",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1affbafb-415b-40bd-a745-ef8fbd5c6584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cbef7f-3766-4145-9a33-a6eeae911b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e911dd-5d32-416f-bf29-df9aac92a1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6fd588-e8d3-4c09-9380-8f91501e0028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275e1a40-66e1-4c9d-8b54-25c999082b03",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca0365e-2130-4180-aa43-8690a6a4fd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31f71e2-ff25-4c97-9a2b-9caddec738b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ddaef5-6288-479a-b22a-d4888c069ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b677a9-16c4-46b6-b81f-8997a0c2f00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa8ae7f-9107-4326-88b9-0bacab3159e3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33b5c27-ce71-495a-8019-3c08616d5da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cbd997-41fd-4afd-bda3-35bff9b5ce44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242d6ae5-3097-4d86-a455-f6066aa200a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb129393-f19d-44e6-a262-cbf4420aba2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de6567d-3154-410d-bff2-5ceef5fb279d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdddf67c-ce20-4c2a-a062-294f25664769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96c6389-2de9-40d4-b3f9-b31cdb840dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62be60ec-ab1e-4794-8589-26f706a200dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "158363fb-738b-45c1-9e75-60f145548091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7334cdda-4b23-48e1-9edd-65308c18c515",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50891237-ca54-4eee-9ac4-8adf476f6bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b843e5d0-235b-4127-bcee-fc577e6abe79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270718f4-aadf-4dde-a407-0db1dd90944f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5b873a-387f-4d2a-bd04-2b3cd406efff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b83ee2-70e1-439a-b496-28dc98c56637",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce4a443-89b0-4842-8e00-dd33ea7bd683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65767ad-b50e-4bdc-b91a-4c37f2b8e912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b22b7d-6a4a-48a9-919d-ec370461e5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f929550b-6bdc-4d8c-8b77-ed3532fc8788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7190002-0063-4648-a723-3377852799af",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac38961d-aae8-49a3-8fe0-6fe18027830a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63acb9c4-ce82-4280-bff5-dcc58aa74987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de6e2d4-0b93-40cc-9e7c-f75ac1945c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a6be50-7d99-42fc-96fb-26f6706e938b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60660e5a-69eb-49ba-a04f-6634ff5a5fd9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5addbadf-6006-4787-bce4-3a64d5e70402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81741ecc-a752-4251-83b5-432dae312f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845d24f-6652-465f-9356-f0a1560f9a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b607fcb9-a364-4cb1-95b6-15a067d94505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b193b-9820-4304-bee6-baf7850b808f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccec1e6-1f86-4ece-ab2d-d35ac93d175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c091941-d2ff-4cc1-a50a-1448dbfb95b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6c5e82-1b64-47f1-a97e-1a91f5fadb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d781a927-aeda-4ac0-b3e3-a84762514bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf1be7a-ac32-4315-b3e5-ff13fb069e18",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82cbd3bb-de6d-4acb-b802-618d3b51765c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a30862d-d0e7-4252-bf9b-4d57b26612f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e589ab42-2d13-4b97-b1a5-83c8c20c02dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7594c7-3cbb-4536-a6dc-b39edb4f2ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17fe1e4-de75-48ac-9ba8-02cad15c09aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3cf40f-3647-478f-9ad1-2f5681d74018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e7c635-722e-453f-9b47-7c1e91dd3c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb24ebf-2bfd-42ca-8b13-275ae1d8d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d8866a-da1d-47cf-b637-f5eadc2b3c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382a333e-2b54-4d51-b402-32290d25881a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "273dad6c-0b58-4caa-888e-79a952934a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fcdfbe-995f-4573-9745-8bcb5e0a7018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5a05cd-1aba-46c1-9172-b3ec9fd28620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cf0dfd-2cf7-425e-950c-ccf5f9be5f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90b775f-73fb-4a78-855c-17de5dd09553",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac0e2d4-fd82-43c0-80f3-24998367d8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837efd89-0bda-4164-ac15-3a09b062ad80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f311ba65-598e-44a4-bb61-ef47daf23d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d429ba45-eb7d-4400-bb80-4b2b1b241eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f98f22f-e504-439a-b20d-21fa914847ce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3180204c-b9da-4077-b4a7-56d9d10b1a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc43983-1c98-4eaa-b3ed-366e9a790b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9078b72d-4f9b-4df7-9baf-8f93664757f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "18cbfc17-5583-4215-b1cc-d1fa8103fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01135e13-792d-4eb0-aad9-4ec5a971f60f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1d8a35-5e5c-4ce9-a697-c87091d0810d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75068686-aca0-4fa8-b475-0d3c826f5b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f763824d-3145-4aae-b0b6-b3bdf396a133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c215af17-44b5-45db-b9ab-7cdeb4dde9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d498fa5-0200-4981-b32d-9818f35e4c1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a407514-4449-42be-ac13-effd0dd675ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726d1907-5971-4422-8a4a-14fe1dd4bbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9fad66-e06c-4dfa-8426-b98ed9547dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1429426-d454-4436-b807-8a1b3c2a91b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccfc078-5828-4acb-81d7-298a2a228db6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529b8565-90f0-4408-a44f-f3149e41a44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46486da8-cdbc-4169-876e-d27bdecdb334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758be12-c4ff-4b97-b40e-8bb96904baf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b55c30-5b88-4dc0-a93d-2e2e73070733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1320b6fb-3566-42dd-94a0-4bceecbd4c1e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde30539-d89d-4f5e-a98e-54a6f430d770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a6e674-d660-4051-a06f-5f7edaffd631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8b60a8-dd7f-442d-88b3-a45d1375fc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88658ca9-5bba-4122-aabb-3d22f4d56749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5b353f-bdcb-4854-8edf-ea6796a5abdd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57626bb5-3e1d-498b-bc0d-d6003d65303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f371aa-1c4b-42e9-aac6-430e1828b07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6a515f-e572-4f8d-a6e8-512cd3e52b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "656517c5-a45e-4016-b66e-3e2c6eeef9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ceeae4-4d29-4abf-9d67-25c3c0e28576",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ddd081-bfad-4ea4-a5e8-632499c325b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9a55db-c183-4fd5-bc8a-f02a4dfcb9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238457d4-a18a-44e4-ab1a-b30685fdef61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9057ab65-aaf0-4b23-8814-a3ee4e6575f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c24f0-e2f5-44fb-9d20-659f050c0249",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e60a6b5-3ecd-458e-8df9-a720b8bb9131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ebd4a7-9542-4f88-93eb-7ef2bf14ff3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c4593a-b136-4c16-9a9f-b879650cf1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2fb1987-4ad5-4932-bef4-4c54fac03bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c212f455-d0d9-45a3-91b6-1130e704c816",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9cb460-6457-4377-9a15-ee0d1ec64ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06463a88-9904-466b-9998-f1697fd34063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b52c38-5bda-409a-b9b1-579069d757ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19dd3243-c65e-42f5-8c05-41d0a7905318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7d20dd-ef64-4e71-9be2-a8093d1961f7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b170323a-fa9d-4acb-a423-551c0bb721f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd2081f-4e35-4d12-b480-0451a5f1bad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfa5664-17ba-4bee-8cf7-0f69def70a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7c5d71-5a1f-4bb1-96ba-122da284c4b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b931d117-60a9-48bc-888c-fd2c4680caa5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b993839-f3de-45ed-9d56-c33fe7f2d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06acd23d-cd5d-4d34-8b26-dc89914e2634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a768b-aa81-44ad-a926-8aaf998215f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a10615-25f5-487f-816b-6c7f37ab8dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8fc93-6d5e-48e7-86ef-65a01af01a96",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e55378-4c5d-45a0-bd60-4867b2a7d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d041e9-46c4-4e36-bf13-9961a1602442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e314c8-de2b-432d-8d9e-dc9884f87f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f765ed-a864-4675-b320-f3ee86963c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dfeebd-fd71-4452-985c-12e3b22d54cb",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8fa5c6-14af-4900-a064-a080238d531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23cefd3-7d47-4147-bdd8-551664f1e896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cf45bb-4529-4706-a6fc-36a1cba07997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e999402-c377-46a7-ae08-e6628bd33894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e706aced-86e1-4ede-9522-a9cef34578b7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6688d14-54ff-4d6c-8eff-107463eb9592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b70d4b0-eeb9-4821-93cc-3695c5e03d09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb78f9f6-d5b7-4704-a212-c3907bb962f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5454e59-3611-4403-9419-1cb326c8460e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8afb5ce4-2f48-471f-a17d-a66279dd98fa",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7784c50d-1cb4-4fa6-a132-0618192117f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abde626d-83fe-4301-ac3f-86fbaa27663d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d4dcb8-bd8e-4f9f-9e0f-3cb071d86f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5740ec-f509-409c-88ee-7cfe1092554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53c74d8-81b4-48fe-a834-47de9d37d7d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7115be-8303-4232-bbe6-7bd4e369f7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6543b862-bd75-4be4-a24d-4fdad1715866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22932281-7686-4c29-a241-230814a8d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4cdf6b-fad2-4c57-850e-13ac19fcc08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c525770-31ad-4c17-9a24-1a736776a502",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcdd9ea-78cb-486d-8a4d-13419e658de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca06837-9a6d-426a-8b85-4dc0dc4830d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77de333-8db5-4f93-a19b-d17badb25a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a7633e-e11c-4c2a-b41a-f1dd05a631ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc4a1a0-9238-489c-b982-8630f3a207f1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2033073b-bd1a-4fef-8e86-c34a1f9366fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e164ba01-993b-4d00-bd8c-ee6c1f054239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5ca5b5-4205-4a1d-936d-8ca837b677e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a2eaa9-d441-4011-bd73-896caf46f26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78500b5-02bf-4dc4-9b04-c3773abd09ae",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3846aa32-12c7-482c-814e-2b98aa3408ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7fd79fb-e0da-4d70-8134-4a98b999df55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90642110-0f43-4372-8158-90d3f72d8f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f260604d-9847-4b2a-9b56-a88132eda901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b030dd-dce7-4cca-ab38-ea2cef2dcb04",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93873e03-d8b9-4d97-8981-7c00b4caafda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f61b3a9-a0f8-4b0c-883d-d1188de2f5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80812bd5-7a59-4fa0-8c44-e61eb4273b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bb1989-9d33-4127-8ef1-835dc9083fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bc29cc-dc51-4780-af8a-ad26588619c4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f85e912-8af3-4dd4-b9c0-13be7fda062d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0742150-a3a6-42aa-9d06-1c9b58d1f356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2eb3d8b-5775-4a4c-8d15-8c49f20b2440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aff16f0f-e724-4b04-ae0b-aaadf8de769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e06d3a-9446-4f23-876a-61a2106eb3ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a127fce6-6aa6-42c7-9545-fd7f44a956c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fddbdfe9-0005-4243-a8dd-c31151d7463f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c1da73-c52b-4009-a098-eddf9f96d814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99faca66-94f1-4e72-ab0c-098ffb7b2ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da32b93-ccc4-4b84-a4bc-b745f9fcc286",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0582a25-72d7-4721-a547-a04b4c6c2ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77053424-c201-4f98-b345-3eedb99967aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2bf650-b6ec-460b-a634-2f47a8fe6ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d42640b-094a-4690-bddd-e8a5a1e2eff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e5b265-523b-4052-b8c0-1223ee0dfa63",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29be4e9b-a3f8-48ad-900b-7d9726511cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22a33ce-8a20-42ae-9c56-606dfdc02cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2512b58a-799b-4fc6-8860-c676df4acab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ed2f3c-ff69-48c6-b96d-83d3beefeb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f6240b-cd46-4d61-95bf-b07bddc6a053",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b53a85f-2cf2-4c9c-abfc-f6a221165393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "414f8e7b-394e-4a12-921a-322dcebe4767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79676ab3-24d2-4dd7-aa70-4c589574945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5632bab-8514-4259-a0ce-92421e9d674c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5673ac-bf7e-4174-8782-56d86af67554",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33588388-8eb1-4eff-9b4d-3bfdf442e2b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7371795-8f50-4028-b14c-b5a6586a4aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724d1ec6-0ea3-4a4b-9975-949de9c02df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3e9b5d-bb3a-4e4f-89e5-a87fcafebbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b44081-0061-4ca4-a80a-d44c2ea9b169",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83330d3-6bb7-4595-a632-e4109de66389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb20428-6b43-4fa6-9084-9053b3588414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8e6f3e-7a5d-449d-84db-e24b3bb79eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8af3bc6-e8f7-4d9c-956c-b422c088c4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e98fcb-635d-40cd-80bb-0440bac32470",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08097b0d-7d17-4c86-a7ca-8a90befd6d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dcc853-0bf9-4a4e-9e0a-1447f43543a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70effd87-d7cf-4938-b60c-a1bc52388276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a05644-4c39-4714-b53e-69b1bb18fec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f9f37f-0f35-47d0-93eb-46bc786dba38",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc786a26-b965-454e-9f43-5e9aba4aacb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cd9ea3-e679-4877-9569-1664eefce97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24424ff7-9240-4882-910f-da5245b50e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eec9e22-b6b2-4a5d-8838-a596c5a5f54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1930f8-29d1-4d88-9286-0f7760aee579",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6859bcba-ffca-4b07-9662-56c391475388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcba4fb-9215-477d-af34-4041b0193f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761a44ff-7dd2-4ad8-a8cf-3a799ffa0f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "210bfddc-4d3a-4c26-8041-a32e67c7e964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60acddd3-76f2-40e2-85f0-2cd60fda2293",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf12e259-9db4-4d51-b319-d934651cc50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4c185d7-1b41-43cb-9a43-9a51d98cf9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f33da1-7b4d-4eb8-aea3-1fc9a18d5323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f917ffe-3aa0-4c76-bc1a-1df2f5100cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63a9578-7233-4a50-8ca2-97cfe7c53523",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f307c3-25a7-4da7-9895-7e68e70a0a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08287b44-07a0-4fc8-991c-f14a62faa9e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef42f02-4ed8-40af-91c1-89d48193dfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "343be6b8-6b34-450d-aaa1-30dfc8a0681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c42d94-97f9-4738-a12f-23841f2f7144",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79daf768-8953-4953-b6fe-afdc19da06e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e450ebf9-f3a8-47da-a94d-d35fa8237285"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9908f04c-84c0-4517-a62b-5396bd42ae6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "941fb07f-4c26-44cb-9c66-7216620b58b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b05f6f4-d428-4bf9-91af-96357dbf324a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d2ca31-b4d1-47fc-a26d-1b95af7bb90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee8e8d-8884-4a96-abf9-2d96cc696f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b0d31-6ffd-437c-827d-2e65c81c2df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fcd283-08e1-4345-8c23-6484ae1a909a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feac405a-578a-4889-a7bf-588bcfb25456",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ff7ebe-9490-4531-a883-0a1ca7f99273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3408eac3-8918-4075-9e2d-9cfc21bd0790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9aa24b-0762-4625-aad0-eb91525c955e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd1f3ca-27a8-4947-97cc-f9d80e001e77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63c965ca-cbb9-4d4a-bba5-2564aa3dd7ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87024975-b27c-493a-a5af-c7ce0acd5873",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc64d483-304d-4c59-8b3e-efd795d4006a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3c9f6a3-2a34-4a24-91dd-1ca13e8ab9bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7124466b-100e-4291-8856-017a1f022eee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6279af4c-6627-403c-86fa-163ffd9c4bed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8189d9e1-6bcd-4f51-997c-c4c39be1af75",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4257266a-15b5-44e9-b9c0-59930bb774b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49377e4a-c513-4de7-b7df-3ecde021db70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49e8c4da-c1a6-439f-b4d2-c045f9207526"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33a5464b-4be1-4055-bf18-9c3d393fd685",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "38cbb921-a357-4c2a-b25b-d25ce818c650"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22adaaf8-29b1-487e-a6a4-7f721a4e4321",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "70400a57-b5b0-4459-a490-235bdf09b7db"
                }
              }
            ]
          },
          {
            "id": "f5d5b6e5-477a-448d-8ca7-d60393359702",
            "name": "Positive Testing",
            "item": [
              {
                "id": "952ffb17-6a7a-4fbe-9034-1122a707a34e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e4d0ca22-a00c-44d7-8a96-503c89ffe5d3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c89755-cac5-4f37-8276-70037b660711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba861dc6-ea41-4ce0-98c3-dc394f43856b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597f32e6-4d4a-497a-8fd2-10dcecef1def",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903a6ec6-8901-4f77-8c6a-4e2ef677a00f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1755dff4-66ed-4dd0-895b-d77b1a92dfd5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd86c15-ec5d-4d83-9235-c901e63694ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57e4dad9-2a95-4dec-831b-edf5c4ef79ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e794f969-30a4-44b4-ab95-919898cbc71e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84b0599f-610b-4446-ba50-5374953bba4b"
                    }
                  }
                ]
              },
              {
                "id": "b0b00d23-d65a-4c1d-835e-41e5c6743946",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "250c0f12-8da7-44fd-871a-35ac81ac3ebc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fca878e0-2256-48ef-b132-a7d6fbc89e33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9deac115-d9c3-4cbc-837e-c681d0d46e76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56b97a5d-d80a-46fb-a154-0cf947fd6bef"
                    }
                  }
                ]
              },
              {
                "id": "01c7ee19-933a-47d8-9298-b4a8d76d602e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24867558-d1f4-41d2-a761-391605368316",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55825f8a-24fa-40a9-8092-5a0d04a7d1a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97f5e8a3-b77e-4909-b438-ff505eab6c1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b95834d5-4c1c-4d54-b971-78c0eb894859"
                    }
                  }
                ]
              },
              {
                "id": "9c43462e-1b16-4d3b-8fd6-6dd5e56745ce",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "869cdeb3-fd4f-4497-87a8-7a133ab78a12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a829f9d-b189-410a-8945-5e028874c23e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfb01fc0-739a-48d2-8586-b1d9c131f41e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "658fa08d-60da-4051-8885-5c5410b33d07"
                    }
                  }
                ]
              },
              {
                "id": "9f480c51-eb1f-45c9-9bb7-553b0bb8f947",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99b71b59-03ca-4810-8850-ebd0efadb15a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9276f6db-a095-471a-99a2-245867d1a796"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d41dff2-16f8-4f4a-b242-62aa65a3b2ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "680fa37f-17b3-4bbc-ad5b-378588792f7f"
                    }
                  }
                ]
              },
              {
                "id": "6c180108-dc13-4793-885d-b87ab13a7f26",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b14bb16-b31f-46d2-bf4a-ba7d77f2bfcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e7ad933-fdfe-430c-8ef4-f3ca7a233d0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8420caea-0c62-46e7-b245-0016f9c6134a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "674b07ed-b393-481d-8981-8e173836382d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbe77fc2-eb01-4612-a104-8ace8f8fa1f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd793b07-b606-4366-8401-6e54e70b5a32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ebf547ef-a0b3-4326-825d-50105b8d1624",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1083562-268f-41fc-a58d-13d0fad5d927"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0881ebfb-f930-40b2-af78-f855e69e81fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "42f67251-1532-4205-a420-6856ea7d580d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee906278-51b6-4442-b111-d138c28d4f60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a2779ab-c043-4414-8922-3c734929c6a7"
            }
          }
        ]
      },
      {
        "id": "a82cb08f-630b-46d0-a638-46ea0f6d37b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ebc14894-4ba3-4253-8efe-f86bacd46075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4139155d-1452-4082-a0fb-0d464c1c864a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "55521df4-1909-499f-bbb7-6379408e8c9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0aa50-7c3e-4f3c-8c76-490256cca0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5390c8b0-bc90-47ee-a3ab-fd92704d5b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf209d-8fce-4af0-9081-127103783b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "590a92ba-6298-4744-84a6-c7e5dec496f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccd63ef-11cd-465e-8f67-cb892229ea9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c3c3ea-035d-481e-818f-c1c443483b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf62441d-9327-42c5-8a9a-67ba43389c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613a5c2c-6b2c-4ebb-95bb-15b4cc6df7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a41246f-b4cb-4bed-9cff-b53fdc844072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc3fec-9f44-487a-baa5-88ac8cf50e69",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa903f87-a02b-474b-8119-84b5f416bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e2d4dd-e508-4b8b-ba99-293f3f70f3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb5623-77d1-4538-9764-117bb6c2fd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b70e036-9a0d-492d-898f-4bd776fa3d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aadbaea4-68a4-48b3-ab03-045597d00cd1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f86e4e5-235c-4090-befd-372b196540ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6e9f61-d700-4d88-afbc-e313e06ab846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7a295e-b063-4d2f-a3c3-08dce8bb4ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6544466-f75a-4e6f-990e-dc7e57dbfa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575be8d1-4232-4eb3-9edd-7ffb272d9d18",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed97243b-3b94-400a-bdd1-2036772bb39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a005c559-2a4d-4f59-9f7c-e039ac167d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b242ece-31fc-4f4c-8d5e-bf3eb0c7de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0182321-c4e1-49dd-a226-d3753674328b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dccd10-9361-4ebe-a38e-c1fc32759498",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47b146a-4c9d-42d1-ac41-b9282c08e004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc593ece-0d95-4f4a-b63a-60067a6f338f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435705cb-0df1-43e6-a2a6-1f9897907dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "253cbe23-5373-4e92-8c9f-a1fe0d404dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e372be-8e92-4c59-84f6-a433a03e1454",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c19be8-13eb-48b2-adbe-b1587327b5f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba322e55-407c-4d6b-9354-cb9435f88a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4afff9-53c1-441b-9652-1c0a3464b4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0780d8c4-ed7d-47f5-aa8d-694002eaba38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a587f4-40fe-4223-bd59-92320b9c340d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2228960-5cb3-45d2-98c7-68bc74c409ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2152f2-e16e-4329-92e9-098ddd62820d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0609574d-5d81-49f6-a7c9-2b791f842f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dad299ca-df8a-4080-8e96-f9a5a35bc1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f768382-b984-4ff3-b596-9101554c492b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf5c86d-deae-4c88-bed6-7d05f5c977a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f08175-e00b-4233-83da-16a3703a29f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b133ee-7ffb-4eb9-acc9-b20916da930b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6eb3b6d-b8bf-4fe3-9299-5cc594f52f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29348c29-b25d-488e-bdd5-5cd6c87c9ecb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a41bbbb-ffbf-42fe-a907-cbba8736525f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4112c802-3940-4487-8607-a196587586b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16911f5-db97-43a5-9345-cca5c2405e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2f22fb7-4324-46e9-aeb3-9cfa1b5f918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb200c03-0b12-47c8-b355-7f8701452063",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed772427-4667-41f4-9f18-41f02691cbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a627a125-a626-4062-85d0-2b5f3b463678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcc30a0-a9cb-44cc-8986-886686215b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0845538a-5a4e-4137-a531-4646266ed7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0dae8eb-84a1-4b4c-bb13-b27114426bf3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3321a93-6b86-4271-a3d4-796611b0378d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2daebf6b-c3b3-4b06-9b19-dc089c61d572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eeed5b-592b-4406-93a6-7f78139de020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f74f05e-ae8c-4f79-a7bf-cdacaa407e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b448564c-8131-4a86-b29b-1af9cdd61132",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e9f904-2677-4ce8-b8b4-e1f982ba8878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc2bf25-11f0-4060-90bf-4c0812b4f005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1a9af0-e327-4456-a7f8-309f52be0a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74b43f82-ab6c-463e-82bc-c29df3251d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8fd43e-17ed-4ed8-bcc9-50995d517829",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a1dbc5-43b6-46ec-a4f7-4491029e50a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec7d000-d82a-4be4-b6a3-ebd7c1c11c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b18dc-5046-461b-8dec-6f78198c3dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27de53ba-04d6-4a7e-a170-c74fe6f70296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14f4689-d2ae-49b9-88ef-25d3b37dd8f3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931bb12f-83de-4b9a-af78-ee157ac74ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36c4d36-1b75-43bd-8ddc-13174e20a0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11dfd76-a168-47ae-97e4-5d814ed2fabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "593e506a-223c-455a-8ded-d3b2fadd07ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5325f9b5-2867-4694-a18e-ee5ddf28f402",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f1312c-5309-4269-b4e3-8b91a2c6e554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa5788-9b91-422e-bcee-c3c383e3a209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095fe46f-96d1-4519-827e-505c9271e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea112d8-0200-4594-90dc-aec30bf0c33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9037b1e0-4da4-4857-937f-42f84f258d02",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e874842f-7b76-4422-8688-d1fbaf0adb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02a2d01-a42c-4951-8144-879546e374dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6cb86b-fbf1-42b4-a539-de2a7bb35ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fff8e2-5633-44a0-9a07-37f0449c629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cfc418-f4cf-48e6-8e15-74903ae654b6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922d99b5-7712-4986-a4aa-f4b1e7321e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba990be-607a-4d67-9f05-150e77a0c130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a401ee6-8187-4acd-8aa9-3c20636a685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf37422c-d906-4881-b3e5-0a077b516da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cadec5-ff28-4506-b429-0951c5dcb8a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b680e7-2c60-4731-879f-37d397ae82f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275b9084-8633-4ac8-950c-0132b3e0fa3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b1a4e8-23c4-4563-beb4-62ff86e2ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5716ea0a-7c9d-41fe-8452-fc1d00c6bb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9183918c-c41e-448b-9d7d-7918f95d11c3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba98045b-dacc-4f5c-a941-3decada7ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaeb94d-0d45-4d6f-b1b7-c38b41094308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ffb70d-ee5a-484f-9e5b-ab578907d7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee2eebc-445d-41f7-af3d-81cb396e29bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793195c5-8dd6-462c-9299-0df226f5012a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a6c5a8-ff8c-4ef5-845e-0c537e7f62ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00d3219-876f-4d01-9075-da9a6d75087f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360528ae-9bed-45bc-8018-0b58813abc9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3c9753-9b11-4541-b4c9-c5186dc93676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8350a0c2-b2ef-46f1-a7ac-0d60da55c617",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7049ee8-b5bf-4c7a-91b3-16489b546e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c6ab0d-48c3-4c23-b257-645b4c2df1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb218a96-37dd-40a9-bcc7-8f11f2251f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e3386e-a233-4e03-861a-d7cbaa33e462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5f9b2d-09fb-47f7-b256-12dfb6efd3cd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285684d5-7cd8-4a1a-9645-ed2a5176206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15129c85-a47e-4a23-8d31-0ff980f53b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab962cc8-f549-403a-8c02-ad8233adc2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a18d039-2007-42d6-b87e-bace2404be36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e5226f-e23b-493c-8d04-906179b8aa79",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909790a1-a833-40f1-80f7-8f4d6806cca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc07c91-8b02-47ad-bef3-c7887a36cf0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30d44fe-7f03-424e-bf99-51d3cd251b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06b66d58-03e9-49cb-b7a5-0d35f6c4cb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabaaf66-6a72-4c22-be99-b821a4b9e31a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446b9c29-7052-494b-a746-475cbe92ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747ce115-3949-479f-8788-b2f6100ffbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43f553-321a-498e-b070-033d41fb6d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f36642b-7982-447a-9e07-a27cce238eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0a1e62-7da6-4bfe-bd3f-6ab917eb314d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd5a822-fde7-40bb-bad6-62e22d323543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b8406-0915-477d-8b4b-2dc23bf33eb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567c4a7f-0b3c-42db-8971-b0eba3d7b693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abb9f3c4-e6a5-4ebc-8fbe-9f5fc5ce8bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9323c35-91f7-410d-afd0-96075fe19c3c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89024adb-df13-4995-8341-40d06e2dcd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01337ebf-337c-4402-b845-6b436fb0f9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a0adb6-1a3b-494d-bb2b-3648b667382e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb624a8-1b33-47fb-88cf-a2e4fed7d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c563a3e2-b489-4f5c-9582-810159522b61",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a548c514-3566-44dc-ab6b-85966156febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aa710e-c2d1-4eb9-821a-0dfaf68be41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166340e2-d4b2-48ff-8579-30eda1a7361a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10bab20c-8324-455d-8a2d-c7d736c1f862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f850af-40c3-4d5c-b962-23c0f230136f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6543d2b3-98b6-4a93-a69d-f6569e24cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cad278-5170-4d31-9e9f-8a4a24aa16b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5032d7dc-7967-490f-952c-4aba426ca524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b747223c-e9ac-4d3b-a82b-28773852740a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11b1953-7472-44ab-8a05-01c002933043",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a294a8-dafd-4321-afae-79120576a8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220b8cab-3af2-40b9-9ac1-da4fa29ce3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7eca4-2a5d-412b-bbbe-4c269f01e291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a06d8c-08f3-4b33-8c1f-d414fb18344c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05542207-1a26-4835-af43-892fac12a4f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b40ccb-483d-4ea2-991d-dce5eebafd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd7c1b7-ed23-4605-9aa6-756ab5024387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3815f365-b010-4ee1-9d8c-26d1baf24317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5292062-5797-489c-b055-229bb6a80a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4948c6-781c-4018-8393-6efd6ff5cfc7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ea02f9-20ea-47c0-8770-6b960bac6878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a40e03-f9d6-4bcd-9b23-81398ddc41e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781fc52c-058b-468b-a065-25978c5c5cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4cccae-9c19-4675-917f-3de24d5682fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79ea5f68-344c-4f50-9a90-6765e49a7759",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c34ab1c-e0f0-4ef3-9b44-1411539f0652",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84381fc6-81e8-4b44-a397-5f4b94354637",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "993fe9d6-35bf-4713-a345-5c0e3c064ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257e8395-ffcb-4abe-9255-eed8dca0e3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aab23c6-9a07-4698-bd4e-b70058989f48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "125cd5f3-8fe1-4f8e-a0ab-3d71571cc3cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7baa3dd7-8ff8-4568-aade-6b5b63bf7169"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52947391-536b-43e9-83a9-78546f63a331",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ef276fd-3094-42ba-bb6e-38c741a8a3f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36a574de-2035-4818-902b-33d59766355c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c70b1073-a852-41bf-a163-557ad4379979"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "051c44ac-b083-4f04-833f-500bb786bdf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9c291cf-ce62-4b7f-9cca-8096d41b075d"
            }
          }
        ]
      },
      {
        "id": "d7c13fa7-6ea7-4dba-9606-1c3585c0b4d1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9a6e7d11-9894-4dee-9295-8e8be45a1633",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d70df712-7f49-46b3-b6df-33f02f71eedc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0114d29-2b6c-4747-b7b0-249094b80e5c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df47c8d-ba80-42cf-8fc8-469f6f74074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec74bf27-e6e1-4dfe-aca1-12084981d109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9430b3-fe02-4686-8fd5-f1c858def038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc0d989-552d-4bea-a98c-d360c81e7139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0953f8cd-31a9-49ad-9aec-095906739d97",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8684742f-a04a-46a2-93f5-37de4eb4a297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0a88a7-d923-436e-b2e7-d9f6b2791f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c563ea8b-9e4f-4274-b272-302d21db96e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbad2200-467e-459d-80de-affb8c81c760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27de577a-95fd-48f6-8e08-9a112d500cb0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a7f21c-9614-4585-ac8a-f3cdc9a828bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f543a438-c394-4fa7-9dd3-a4e68b796d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e2ad2c-ee88-4b32-a665-fdec21d203ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7c8e72-33a1-450c-908b-2e7bc0a6dab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429fa55d-0d8b-4eaf-b9ac-b6957390910b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5e2bde-0dbb-4935-b6c3-16167fa93f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "104c8e9f-5aa6-475c-89af-86b57645ccf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a46eaaa-2031-423a-bbf2-f6358c8c8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9233c59b-c3c7-4a30-b3bb-747d080ad5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148cafde-5926-49f4-b77c-b3e0fddbc868",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964dae49-aadf-432f-86fc-5777605bb566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee85d920-ce52-439e-8ff4-45e81034e361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e1974a-3998-4008-b0d3-3fdc9766f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a771fd-f512-429b-beea-e9c019a3680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39977e82-3f12-4e59-a793-085cb1a44f5b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb3a044-6379-4427-9c4b-a2ff4d8151e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8eb161-69c2-4dc8-86ec-fee6fa1801f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14b3361-76d0-4279-bf8f-59a0198708f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b19c0fa5-0666-4fa1-9b5b-7176b683adc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d46dcf7-b549-4657-8950-345d69bc3874",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e796f599-42d8-4d17-b419-80e10eb261e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4370db-d745-40c6-8eb5-fc5974443156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234ffa9b-d7d9-493c-b7d1-ca4fdf033a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfdabf9-13ff-43a5-8fb1-1e9e227c30f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06bd79f-2aad-48a6-990d-ff9b3c7b9a52",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacf1261-702a-4b17-8436-4d948d7dd1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d58cd1-0c5a-43c7-9ce7-c3c1d58d40a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8561e4-16e8-4ed6-9224-42d9b4068523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "313ac733-cc79-46e2-8dcc-6229c787058a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf2d724-cb98-479c-bf30-cf7692a99703",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edde8148-1dbb-42e4-b1cb-5269becf10a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa7a8e4-6c78-497a-9abf-b02a14f60abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d46342-ae85-4b8b-a108-06ee94523462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcea456-be69-4fad-ba0b-ff0839f4df2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d7ad71-fb24-4d13-870c-434339fa77fa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0cd640f-818b-4384-afe9-a3b516d351e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb75d125-0e72-428b-91bf-b10d9f2105de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93798838-6f79-459f-8a3f-5de9cc8dd5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fe1262-bb6c-42e7-97d4-713e639626ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c9165a-78b8-4a78-b950-22c953a8041d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b41f641-686d-40b4-8b4f-816dee94e0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81e43fe-04c4-4d0b-82ac-181ff7c11f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761df07d-f7ee-4239-85d4-a9e04755c32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "59aa6724-9a58-4451-8e7d-704ea26ed1ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483d9fff-89f6-4f4c-b5ba-60eaa29dbd9f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815177dd-b9a0-4b38-8479-ea39c47e8860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edb3efa-3e10-4a47-93ea-aa926b1193a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee198051-3e9f-42a1-bd82-9da37a13d40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58a01810-73d1-4d74-9a6f-f1cd9655223f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050ff60e-dca2-467b-8eae-e46c03e89118",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0979d8f8-0003-4b18-bd37-b37ac417473d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d3a477a-9325-4e43-bb29-1271ff46cac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7de8367-c8b7-47ad-ac85-6200f97781d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb81aee-9d49-41a7-9cbe-ff3d708fa025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef66dea-ac0d-4c89-9fc4-977926066905",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bffa5e-12e2-4156-89fe-af027c380532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be158f8a-bdbd-49a4-b39a-55b7719dfa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1d9433-72fa-454d-acb2-84fbc14d930a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea4ee37-d426-41b6-8962-42e6c7dea42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e853e12-e752-4351-b36d-0e7bb96a90a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb49739-fd80-453e-8882-5788618c8d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a586aa04-d875-4554-92d4-a9b504de9c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e631578-3aa7-4e61-8826-a3b56ca0a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a6779b-f3fd-4c54-bdc3-e4232e4a898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1130a6b4-9b12-4ee2-97af-8b400deea821",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "443983ef-5153-4d89-acbd-2f23f8d3df53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f562e0fa-5d75-4a79-a267-5136cf31ebac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6049272c-6123-484c-b7e1-04137d7c3234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b658f3c-d3c8-4652-a1ab-d2613bf58dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a546f5b-af3f-44a0-9d69-310762268343",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e440139d-e62d-4974-8b49-6ad0455be6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84bc9046-3ca6-4e8d-baa1-2daa29d3c041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a06d9f8-ee6b-48b3-9366-b2c571ece7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c4d7a7-630d-4d7b-8b89-365e57805e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c233d3e3-fc2b-4483-b844-2a23f0a0a0b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4681830-8c20-46b8-bf28-2ee5ec28a3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae666040-b215-4d38-98e1-77bf1bfe95e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d8b0e1-2867-4dc5-8b00-1050818fbfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "31213529-9180-43f4-94ea-b4b383d116a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e738fa-415d-4ea8-844b-c0b638b2306d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1c5a80-0ec7-444c-bbc6-4df0cebac967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d851a81a-4116-4d2c-b7ab-0852e0cdcde7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9f70fd-8903-40c3-b6ac-ce598fdf6e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31803bf6-9236-4a09-a22b-2feba653f5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11174e51-23b9-40e6-9ce1-a86b19c85010",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c6f99e-ff63-43d4-9a0c-42ccec72ab76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb05265-5b7c-4ce1-a6ef-ea31a92bbc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52d1a9d-5622-453e-8f5c-fc8b11ced721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2980c1c-c940-4421-9b7c-3fbb4a29d7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25583fa-d0fa-4345-95e0-df7419e9c3d4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602129e5-1d01-4490-b68f-ff5d328ca56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "703a1797-66c1-47eb-a19e-d64502cb7541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7973fdc3-1d30-4904-821b-5c9f3f2ed873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3381a98e-24de-4e01-b6b9-b631b00a146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c328c0c-8b6f-4cb3-a102-cf7709d85f1d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0f05b-e1f4-4e4a-a6d2-b0bdd8d631d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b82c393-dd42-4c03-a515-196f1e312f37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88935e30-dd8a-4afe-9939-b16cc93a8d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a52ffdd4-8d7e-4e4b-ba5a-e17c051e221a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380facdc-ac10-4c12-b029-bb3251d01917",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033d47e2-c4fe-4e8d-a63f-458d1e43214d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2135bb58-3453-43e1-a279-f0e59acda9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd62796e-2776-4c20-8a9a-fb6913fa678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd17c902-9dce-46e0-be5b-6114ace44690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f49c2-2c7f-4e80-a06b-985d95548dda",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef71191f-a3bf-4a19-853c-3b482ba49023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2746f41b-b030-4f78-bd44-6ac7d25cd7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83bb5cc-741b-4fe4-9bb6-1cc1f8aee543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab850341-9a8f-44bd-9e25-5ac2d7371819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17c1924-57f3-4830-ad06-8ee59a6509cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d4935f-253f-4f28-b062-9d814cb4ff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafd37d3-905e-4b40-9e0b-8ad298269748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44ab8bb-cceb-444c-8e8b-4db47c380d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b97f7f5-89e0-4f8b-8c96-ccf525fd7c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76db1d3-2f62-4658-94e4-04f51c06c271",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336120f7-a067-42ec-b767-e55dcbc67187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055ac249-3ef5-483f-8b0b-de01235f160d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1be96b-fce0-4904-8fa2-8310fe7dd2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8e121d-efa7-4316-8e21-17de4ca87e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbafc56f-c49a-434c-a4cf-e17c8c129395",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "802b2889-1532-4209-94bc-3dfc02fa48a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8949d6a9-da0b-425c-b461-84f5285583c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28941c09-94b4-4a2a-9e00-7104feb6cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdc18c1-e883-42ec-bbfb-c7db8175945e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1093c6-b739-4b73-a465-ef5b2c7b2a8c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37bf946-c8e3-4f81-972b-77992210cbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7289c3a-672e-4b0a-b230-64bd9ed3fab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1453633-9f03-4b14-9336-f75bcc3c33e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48149500-bfd1-470b-a0f8-2c86885b1717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafe4ab4-0ff4-47f3-8033-ff5ba8481ffc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95392cc0-5186-4ad4-9180-89f3d120086a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49aa78d0-616e-4a27-8d13-c08488af2522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df807e5-6265-481c-ba4e-2ef3a963ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecedb25f-26ff-43aa-81de-1d1363839326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c3df71-3776-43a3-a908-a42b7b0aebf2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c81fc5-44be-422d-9450-cd873f3bbca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92511062-c912-491a-8d5b-f3964a7debd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596464ad-47d2-4775-87a8-8f4ac4ac362c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bbda70-f16d-4962-b385-975b336f3a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05ade07-16f0-472b-8a88-185da9bbfb70",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9035bab2-cefa-417b-b26e-0a21ec685b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a111152-b079-472e-b243-cd8d7f4987c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93d9091-ec55-4210-b507-5c00b5c40ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cece1c54-577e-45c0-a22a-0e085c10e454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d68276-0e1c-4b3c-935e-89f126b8c44d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abab951b-366c-4f9e-adf4-f37761f31898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aec66b-96a0-405d-8c16-a6055712360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7973a8cf-744d-4b49-8897-b1b2dc82816f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e92800f7-bc8f-45fa-b2af-99b4494c4635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623596f1-e078-460a-9a64-4828ee1d0954",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c530349-0688-4956-9672-34b967b46601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ab8f0d-5947-4864-9082-515bd6b7c510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7add01d4-87bf-402c-9901-c54f790622b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "980a2c57-68de-447d-ae4b-8350fa1e3c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1e457f-7245-4861-821a-67d1a20100bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49c86ba-f75f-4d54-af15-ed703984665e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d6bba7c-c7cc-4c21-ade2-b93f2b2c2bed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a5abf5-661c-4dbc-b6b5-e3394ac1875e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a6a9e2-3430-4c18-8b3b-3a956a758d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b364ed-787e-4ba0-9956-946b6d904d23",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c2ca53-215d-4278-a889-d04da392661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d877056-3cce-4464-9581-438916384b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea58019-b220-4c6a-bcad-0f863efeaf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "710fac8b-562b-4f6c-8604-9f458767d1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ee1613-c943-4b35-881c-93975f649e10",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef9803d-6b1a-4749-ae6f-31eda5ac842b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa2f061-4456-4644-a9db-1b5b8c527c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9716b05d-6fab-4961-b8ab-3b8bcfb8aeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f30bdb4-79f1-4fdc-8b91-110cb7d8aac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440a2ac2-4e13-41c7-b76b-94dadf135c9a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb3036-ff4a-4c7b-9e34-153dfe036faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430edddd-6c02-436b-b4cc-b61390ec2bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437500e3-f6bb-47d6-9a26-48ef48f910cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8ebf68-cb3c-451c-b8a9-147eba4a4da6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7972fb68-f6a1-4e38-a7bb-e05863c24b10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dcd335a-de93-4880-b24a-eb9a6f979990",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a87101e-2f3d-4dc5-974b-d99d11cfa984",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5db1a779-82b1-479e-91ab-b55726bd7a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d686b5da-309e-4f11-bf7f-fd53a818b3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afd42b48-ff4f-4b1a-8526-4e6d83030e8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b568745-448a-444a-af95-aa9c211c074c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7bad8f-9285-4d67-98a3-34f2d820e27d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d779dcf6-deb7-4943-b07c-da7e920a6d0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f36ebc7-370e-449a-9690-b1edd213dfdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fd646add-9f56-488d-908b-ca86c08bcd94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d8d7e1e-c1ca-432e-bb94-683046633735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cbbb88e9-af3c-4e1f-b06e-802b79e4c515",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32cceed4-aa06-417b-bf8d-d6db6b3abb11"
            }
          }
        ]
      },
      {
        "id": "aeddc392-25f2-4600-bd88-9f41aa6e2170",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18856d29-2857-4154-b24c-1991b4551588",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d5c543a-3750-400a-b4c8-02f8cfba3b97",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2792a442-3779-4467-9693-69135ee2c55b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0188db-095a-4051-9336-dae46b957e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9a7bfb-aeeb-4116-be5f-9cf53a9e68aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7447716b-690b-49b8-a42a-4683e886010e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafea43e-a91f-4ad2-838a-71d7c3abca3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f54146-f20b-4384-937b-df05279d3d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c0763a-91f4-4edf-81f0-d2cfd384b535",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660a6003-95c8-443f-9618-227dea9f59de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4610526b-9522-4b13-ada7-14c9e64efae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ff60c-ec86-417e-8c63-29465417feee",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547baf55-96f3-4e54-84f3-179fafe4e5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44323be0-5dbd-476c-80b5-407358f0c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63128a7-75c6-49b3-bba2-bd981d33afc9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a1c4e7-c4dd-4153-b1c6-8820972d7123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027a28b4-78c6-4879-91a3-abe962bf18a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c598501f-7a7c-4dba-9cd4-e7cc003fbc2b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1877c-73c4-4b3b-8e1b-d5b47618fb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d51b078-4b3a-4dcf-829b-a7cf9c52ac3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5a964d-d70f-463c-939c-b8e3a01b9655",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de369308-800b-46a7-8e1d-38f3c8a654a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594455ca-1481-4ab7-8633-f10725736c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaabe4d-5739-46c2-9b49-3375270d801d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "479fefd4-7015-42e4-a818-abdbf4bf8285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3268d5c-ee72-4797-9b9a-90334353b621",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c6705-e6c0-4d67-8a8f-33b84e9d0003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deada95c-7ff5-47e5-802f-c203ecc5446f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db3295-0240-4021-8d48-8345881e6f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0eff60f-b548-4868-aa69-6d4667e6fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90aea30-f42d-47a8-acb2-b07d02f71611",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74fe09d-8a1a-419c-aaf9-2fe1b32ce2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b29f70-1c38-4d1c-9e14-a910ffc8eedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2931a32f-d605-46af-96a6-3a2007efc894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2759d4-85eb-44ce-9f4e-8b4d5756c6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c356c6f-bbb8-44d8-a671-be789bc055ee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3037ce6-e335-4030-8ceb-efcb0b36331e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bde5037-f5e7-41e9-b0b2-09b2488e27e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2f6831-337b-4e9e-9734-2859d5d162cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6a3778-6e80-43af-a6cd-bc0e89becab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b2c73e-1a9e-4a80-8a9a-30d2d22d4c20",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4315580b-1267-4909-ac89-ce0f09aedc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e728efe4-ba70-4ea3-b82a-afe5cb968745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2590110-ddce-40b1-b069-cab394ddf0cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889a8aa2-772f-41d8-a030-0e5dccf9febf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fa8a42-1d1e-4d22-8857-8c7649a42c47",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136fb93c-fc1d-4fc9-90db-a6b4f2b1be63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ed93de-970b-4f24-8c5d-e51123036e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75274590-0b44-406b-934f-8a5f448ac285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bde1302-2185-40e5-bdee-e3fa89d1f8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a4b2cf-b305-4086-8611-cc98182acb53",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e0cc4-6236-46be-b3c5-4ddc3dd56c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34fcd196-2ff0-4507-a6f1-7c614d372d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057d1f58-a9e8-44e7-85e8-2ce25f6053ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15d2d1d-a006-46ca-b45b-6b05651fe650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf77e9c-cb98-464d-9032-1b4eb27483a5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce10e9e-3e4c-4e8e-a58c-d21486774bd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89ab837-8711-49b9-8915-9e7f3329eab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fcb33e-01ef-4f0a-9351-c95babbc0df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97e846a-f42d-47c8-b48d-14dd9c1fe0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbb23fe-aeec-41bb-83da-7270033231ab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd18aa-56c8-47c2-83da-720c8c5e0564",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4adbd2-f3d6-4ec2-9d71-40210c83cd9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d516bab9-6a7c-4620-b2c4-e5130d5e4085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48139b54-62b5-4097-b4ef-115d73f73433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392da357-7db5-40df-92e2-ebf437b31587",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0fad0f-6094-475c-90d0-327fc3d86fb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff77598a-3735-47c4-881f-1fd2bafa078c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d33fa58-a89e-41bc-a515-381543c55815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5152ee2-e7a2-4200-991f-318a41ef3d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b644e0-491d-4a09-a83c-87d914fe4f05",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f85aa52-a477-4b9f-b62f-367ee61ac1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3ef3d5-400b-4baa-8f74-19267af67403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0590bf0-a8a3-42b0-9e4e-1944cfbe6bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650771a4-d125-4a7e-9cd0-9df2e8bb3635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de9465a-9d40-4f0a-a9f6-5efd269c0cda",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e501b3-6be5-4f5c-9d5f-59097d2d9bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ff7872-d8c5-4f34-8fe1-86c6692847e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af1e916-b28a-49e3-8390-07eacb9dabe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3a6002-3e4d-462c-88d4-27f5d8ae2b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdfc933-f241-46bf-b53c-8b5ff4a081de",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dc5853-f0ff-414e-8d4b-7d78befe8f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b63b4ca-8942-4ee6-a573-283b06b733e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a8e45a-fe5f-4e0d-8fd0-934fea4ccfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2de6660-19b9-4152-affd-c392ab450078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8db3475-1b7b-4516-8c52-7adcf04aa7e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4669a4-06d4-42a6-986b-5e3ea4fdb531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0892355-c8aa-4da3-810f-ac3dc79ba737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3dd8a3-e034-43ed-b349-bf8723205135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9c2676-43c4-426b-b67f-8be4f8f4cd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149f1fa-9248-45ed-ae23-b90a64d41115",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e22e0f-e8c9-4e59-abd3-49c0833ff8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32538d7-0e8a-4a7a-9937-1aae0bc14372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75e633e-db4e-484a-8c9d-3337b8e4130c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a9e3eb-e3a0-452d-b5f7-97a68f700e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2227af5c-dee5-4886-be26-3a025c555bd9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c204f684-9017-4cd8-9738-e6d4f91d20d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e07d967-2b8f-4f12-846a-8f759b29f7f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc88e92-a8f1-451e-bbcb-9dfc781e964d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e064a9f7-5d2f-44ef-ab5c-e6bb18fdebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e682095a-83e1-4b66-b9a8-9c1d4e270c04",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79806575-b9dd-4c5c-a78c-97a7a18ba17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ef1bc9-bd2a-45fb-b1eb-cbad5688d8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38668ba9-9d4e-4084-b253-c0e1a4e1dfc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c6056e-e16f-4141-baa3-4eeadf835430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fbc630-548e-4d8f-bd06-f8de5785b03d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f81f1-00f0-4df6-af88-bf1ac2cada98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899d6fe0-4a6c-440a-8f09-557614a9c644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1330b4f-3031-4b98-bf8b-b28878994326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619f1217-59a8-40fd-8076-f3afa8eae5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af9d706-2dc7-4321-9aef-af5b3b596875",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946861b7-78b4-47b6-9d31-ff1f04a0f731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4937798-287d-4090-b016-76869ae5ca60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1970a2e4-98c6-4771-85a5-2f5937d18002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d28f07-e178-46c4-a73e-89c9466bd9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c730cfa0-aa7c-445e-8e2c-afa94d936c07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99b57b0-7524-442d-8ffc-025fd9ea37b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7add5f8e-6365-49b5-ad23-29fc8cda576f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f24ede-5b4a-46f9-b309-7cb01c5e89cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb44a451-6c15-4233-94b6-5fefbe337f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21d51a3-4738-4e98-aea9-568247e20dc9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c27b0-2d8e-4b82-a41b-0318717129d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3c895b-624f-4eac-bcf5-13a245fbf748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2347b2-326b-440a-958c-615c75764b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c30037c-ff90-4cd0-9f55-0ba0e211fbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3defaacf-90aa-4367-874f-66b9e0a0910e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf7bd91-a2d9-48a9-92ec-bdd61756058e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dddbb8a-cefc-4016-9bf2-595c127ae70a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30ae1c9-e8f2-49d4-a5e5-d2085583cf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74abf2c3-a8f1-4c83-ade0-449e80177923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca42667e-8afc-478f-adf0-68c11e7f4572",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39865eb-448a-40e9-9df2-ef98f31ff7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd2f3a6-174a-448a-9abd-94319d7c4fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a03d9-7190-49e7-a44d-e4110a92e62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2743b19b-3769-44cb-9f4f-be798cd2f340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98f9fc1-453b-4037-8be4-f5e44d11389a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59aba4a6-a61a-4b9a-a585-77c445030801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6adde7b1-9281-43c9-a3ef-47fea367e606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7860d81-a70d-4e0f-ae3a-f4364941a095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2315e813-5483-4eae-87f1-f947553cd789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c358608-1873-4671-ab26-7b122babf0c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50d8e43-32fa-4834-9bbc-0bb5e07eefab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c0c2f4-953e-47c1-8c20-3a722a583bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9326f53-89a9-42d9-9e34-c5cb97d3727c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea2349a-5692-4ac2-bc9c-22c44f37f21d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604735e5-c088-4303-9672-a12ce16880a9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9431c12f-eef8-43ee-a3dc-b38c58da3dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c828c540-a446-4ddb-b053-c64b6aeb8212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dac05e1-1c6d-485e-b2ca-7add2fa1da0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9f9dad-cb37-45de-8a91-3d718b9d115a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8e2fe2-14c7-4eb7-a44f-36cda0a41f07",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecd2dfc-86df-4a90-9a0e-920b2a8176d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bba6aa-8a21-471b-943c-e2f9866d89b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6f127b-edad-44e0-bca1-a545daad3f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010b00f6-b201-46b7-a63f-b1d9b9c6f6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d33deb5-256d-46eb-a6a5-66f5913dc7e7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ee70ae-74b6-46d7-99ee-bc95f862ec81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e64cc55-a9f6-4dd9-bfe6-0db67ca3004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b20783e-8ca4-4c11-a301-473cf24a23ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f86eab-6cd2-4c9d-93b5-41084381bfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca02978a-f132-4c37-9717-f4f70bbc615e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4f0691-ce90-451e-8b2b-8eda00826daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39920fb2-08cc-4625-af10-0ee2fad7e4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de0c34-174f-4b6f-995d-65e5f5a23f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9650d09e-87d0-4d10-bee4-cb5f05a4c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4287d9fc-1cf7-4200-b6eb-138da47a2078",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b157fbac-9e2d-4ea2-98ba-d45ecbb9a7a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84c9270-fc1d-484c-9086-fac6e622a353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509323b3-81c4-4307-9f49-87c1cc400e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a273c94-56d4-4ef9-a0de-b885a6c100ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0f041f-65d8-45d3-ae91-d62800d5fa63",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8174f7cc-89d1-4782-9dc7-a8031ec9df18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a82dcd-5fba-4677-aeca-62e0d2feaf12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "384abf90-c7ba-48b6-b2d3-0ceda75f6366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a98976-1ca4-4dee-a097-e7afc2f24efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fb1a7c-f4d6-4456-8f87-881ade055ea1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12078f-3a4b-4b32-86f0-99c7f871c7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa31091-ce36-45a0-b7f4-7b9e8817874c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db6e0b1-0ede-4f35-82c0-5cf0b39c3272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f32d344-2eec-4a03-89be-a9eebde2a42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927faedb-4e21-4c37-a598-b2ec78bc669f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5af0c3-9b5b-4ced-a669-e33c1e7b97d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caeced1f-cb74-4979-9a23-bfb3cbb205b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6a61cb-147e-461a-847a-498a10fcaf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9f7f04-ebef-4fb2-9933-0629c75b3469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b65ad94-7dbe-467f-a1bb-d616e9379b96",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33624783-2847-4ee2-9254-74cbe56ecfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d822801-d55f-4edc-82dd-e79c9cf26d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9bbe76-a2e7-4283-96e0-35e692dd3915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f96bb70-61f1-4f3a-ad8f-111d5b3fc95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba7cf1e-b490-4d01-b59f-d330c3e3eb6f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a7f10a-ce1c-4b68-bd14-2f2d5b81209d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9456b159-8a04-45cd-a1f6-49f18dcb1454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5343ee86-d674-4ef2-b305-044d828c2048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5185d60a-8ce5-4fb3-a150-85292d9f0ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f9c01a-a9fe-4b1c-8541-4f2ff51c75c7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2f4b38-a79c-4ad7-a8ad-0d946ac18ecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9059a719-7de8-443a-8a0f-226a28d07281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de6eca1-23b2-461e-8092-c5f28fc7861c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758b4315-63df-4429-bce6-575056dad35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def9fbeb-da47-4dc4-9420-5cae356a780b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5049930-c608-4853-8226-2c803b8f0a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb108664-5c1e-4866-8776-a91caf2e2856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9176a025-4f95-458a-bad9-e5ccc8559bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8d8b19a-cd15-40ff-835a-81efbce88e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a641de22-54ec-4077-bae1-55ab04effede",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fab733-a871-4dc7-bed2-1dcaa81c7867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc2d1a4-c660-4666-8788-86b635d7f7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b3d4f9-05c9-41bd-a3da-46997808b363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1666120d-69e2-4150-b78c-ad04391cc245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c485ff82-cd90-4e69-ab1a-1e381149e9b3",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27af17ba-083c-48e7-b56c-f551a02fd30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faea19fc-409b-44e8-b6fa-bd33a406842f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dcd5f9-3c62-4b2c-855e-8db32d897611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1f2945-2ad2-44d3-81e4-2bff5bea2132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b3a89-cf01-47e0-a635-f996a6ab3e73",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c47830-93d8-4eee-84d0-4b09572e93c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088e4f32-121b-4a04-b6b7-79c7c241577c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c8cd12-0008-439a-bbdd-84386228b214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ca7048-1acd-4ec8-9d6c-a6833ce38e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5af546-50a4-4776-898c-0007c190fb56",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a228a91-ff6b-450f-9bd2-addf3e19f0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d79eb51-8974-442f-bc0b-32bd6a772977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40449600-9461-4741-ae9c-ce37f6eba91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898987dc-907b-47e2-a58a-8b029725f8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec69629-57a7-4182-a43b-8df0e6613e78",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60da349b-d906-4a7b-9287-28eabbeb0c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d039fe80-49c7-40fb-ad7a-c99e3f4918ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca9bffd-49e0-4a06-8234-8ecbaa756e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960114e5-20a5-4ff9-be68-8466cc4f6551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b54d68-007c-42e9-a97e-8bdf0d81b966",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b023acb1-63ef-4fb8-acaf-7865e0c12e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047a13ec-7dad-40ea-8d88-a9e6e46e4070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7dd62-dd9a-4239-9f24-eefb81b91b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcb7ee4-9642-435e-a27b-6362eb6347e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7bfec8-8723-40af-90ea-d816dfcd5959",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06523350-2270-492e-957b-44ef82400adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f517fa0d-3620-4756-8d49-af3189831d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4deb4bc-2cd4-4c8c-a6a7-1ccc175a588e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174d7bc0-ff30-48ee-a0b2-3c4e1a16420f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b995eca2-9300-44a6-a85c-ae23638b4855",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e05eb8-c22e-4a72-91ff-fbbef54f12fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d479ee95-034e-4139-8f8b-e5d4df276f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0b7d1d-7d06-4629-b4cd-52db570e9b87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6b8824-59ea-4e5c-a61d-5b02f02dbe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a259d0c-aef4-4bd6-9b28-c36c102c90e1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52cbcaa-0619-4711-833a-7dff518b8fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc71beef-1efb-43c5-9dae-0730e6db341f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacc4d1b-05cf-4790-8e4f-0b95502bb86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc3e5bd-878c-44d9-9d73-df11e0dd6117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0675ff-c680-41a3-a046-32382b6c0393",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a82ea3-aed8-43de-8e73-ebd29a1543d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226708fa-f9cb-4541-ae05-c8b3f9f34844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d3d715-9632-4a1c-a609-8ca8b1badeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e50ded-fa45-4302-b647-d30f1297ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61142dab-72a6-4344-aab9-4efea6f33094",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921e99ff-f9ab-4b68-a76c-ad67cae1d1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d0a6c1-ea46-4345-a5ef-0796e5d35812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86c677f-ed10-4d6c-bebf-ee488d9e73cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d7bef8-d521-4d58-8903-93cfb99405b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f871a9-e266-40a4-81e5-efc2336a8715",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b5c326-dcd3-436b-96a0-d23c235cfcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1116f876-652c-45d3-8679-94fb78ea985f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5d4080-d445-4e28-961f-14fb54747512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ef9700-8765-4ce9-add5-d55007e9c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aec30f-a6b7-44ee-a7a8-5de7905801e1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3460bfa-b969-4ccc-a349-ceec244cb211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8658859-78d4-4207-8dcc-8f5b85389121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481bbcec-7edd-4c4c-a3d3-39055429c6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e227d14c-ce0b-468b-ba84-af3ca526bdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829033d7-09dc-46af-9a20-0f77c30bd9d5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf2632e-58d5-449e-bb09-ebf1e6bd6bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a294eb70-d7c7-43c6-9bee-70391b9608b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47b2215-83ab-497e-a175-a056a64220da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555519b1-3824-4721-8bb8-0bc19d76736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0577ee8-a4a9-4e27-91b9-903ae952407e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd216f2-9390-42fa-b211-3ad0ea101adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12282562-1969-488e-ba12-38ffe5b2a722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ba12f1-4ee4-4ded-a135-563964e3699d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06df0b24-207d-44c3-9614-39643d61863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ab9b22-a297-4ab5-8a44-39baebbab483",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfc48b-88b1-4727-ae99-1ca942b7b677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8771a37c-6554-49dc-89e7-2ce92014ed4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407e32c4-9bb9-407d-a99c-728cf9b5987c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5962940-a299-4c2e-98bf-b3bd7cff3d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dede96-5932-4465-9abc-43a2b81564ee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4587fa8b-4681-498b-a114-0ac79fd93ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50eba1c-630a-4c1a-8ebc-37350407982f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d340a3-966f-442c-8253-6e752614ccf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f69c7a-3b6e-49cf-aec1-6b32e8e42521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3f6e78-3a95-4953-8c74-dff2d1f92030",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1491b3-2a94-4332-9800-6ef2fb0d6723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1196b3e0-4c05-4a9d-8103-29eb1eccb601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d89132-b792-4471-a101-a0c247676bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928280c1-b7c5-4a20-b8a9-8d0fb4a309fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866e185f-16c4-4114-8931-6ebdde458e27",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266d45bd-d5e0-4f19-ad12-6405b0aed254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d886c02d-0ab3-4fc4-b731-1aefe85833a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5f03b7-5512-44f3-80c9-33560c5989e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afb8c3be-4e19-408a-a4da-06eb788f4aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b3f1bb-8a6e-4c8a-b9cc-00b15c07261e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bf98c7-724f-4063-9c3a-1130ff94b524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dae3818-7598-4a44-8840-3a86b0fcab10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd0ef49-b3c1-433b-8b5a-7f8558cbe4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ce1f94-5ca9-4869-a132-f06a6fbb04e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2cef44-54b0-4af9-aa6c-4e3eda01689b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f8b4be-87f0-4d95-aaaf-5a793c7c7daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0164f29-714f-42fb-bc9f-adfac6dcfbf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75e0c09-f7f1-43e0-bc12-3704ec975078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe6f2d5-ee84-4bbf-8c66-60ceef247614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1931cb4c-4bf6-446d-82f1-17870aaa142b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b719711-748d-4093-bf08-d494568b6b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f6819b-d532-4a23-9817-af212ffa12c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fe4201-d89c-460d-bd8b-cc7a3692af4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba65bf23-bb9b-42c5-a704-fe45cd6f5ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2350e09-0021-4714-bd32-37ac24eb48bc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d91194d-fa4b-4d3d-8651-e3610c656e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65c735fc-b4e8-4dfe-9eeb-ec0ed4fd62d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99079c31-8b67-4808-a1b9-49375f8c4676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674c4568-6e2a-46e1-aa9a-75911af9fb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e750ff49-76fb-4c7f-bb21-979894ef4baa",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b0ed2-c5f0-4380-bd2e-588d767dfe3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90370c6a-2fac-4755-b218-a283e07f6a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d68660-0bd1-43a6-a142-061b50034430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b094251-2a33-430b-8b85-c76889fcafbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfea6b82-8e1c-43ec-bcdc-ae5117d87ee2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0520088-079b-4a8b-8dda-fe6b4be188fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88626996-4399-45a4-a086-e4b883682ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7ee0fe-f913-4733-907b-6b63d889687d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772a0935-7e98-48df-bd61-a32d953fff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62ba695-b369-42bd-a19d-e2b57995e528",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d1b5c-9b15-4979-9393-9365e5982192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ac1fce-954c-4afe-bde6-3ba4d814f8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac979c0b-0cfa-47f5-9cd7-77abd844bf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6868bbcc-162d-4d66-a3f4-5e936bc83a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082e4082-c596-4408-b41b-27e1c74dc006",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eacd716-2bf2-43eb-a984-ced9d1302bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750e2f14-fd32-44c2-aff0-c9d662530ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c07e68-d01e-4a4c-95f8-c1664818ba79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7c1609-39a1-4732-a237-9f044cfc69dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35ccb59-2ee3-4e19-ac25-1f54a4d04107",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97af3508-10d7-40ff-9376-1dea9719a6af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c26461cb-bfad-4667-8fce-20af48b1951b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e12f21-db7a-4b05-b1e5-e2a43c2c534c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122d6b73-c724-464d-9deb-26988aede082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fd954c-00d8-4aad-82df-6cb98b6dafdc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ace81-c931-4f77-bfad-f589916c08f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0581c8cf-9aca-424d-9159-26cc377cff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d9d8a5-e380-46f6-b30d-b7b5f49fb655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdcd2e2-a087-4a23-91bf-cb87d345e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c586452c-5e0c-4f55-abc4-5f932ef70d7d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615abba6-f6a5-42c5-b92a-269763a97fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ddea77-b3cf-4e9a-8cc0-e6d0719d2369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267f8c60-725e-4db3-b4c1-beb472bc4b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9f5bd3-da43-4295-8121-da72cf7cb0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c728c9d-022a-4d24-a27f-040d43026176",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868e435a-96d4-4fc8-a0fa-4b8b231125a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6678380e-a6ff-400b-9bbf-feafc445c33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9194c9d9-943d-4ef2-b07c-f78078976a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d4a60b-bf9b-42c9-80f7-630b6fe7df90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e82ef68-1e0a-481a-9663-27715206b88e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d795c565-4368-4f79-aea6-825d3c81fa3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102adcb5-25e6-4dcb-878c-7f9f5ecf4566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "832c3a87-031b-4de8-9fc4-77f1596032bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fff7bc1-096a-47f5-b7f5-486029dc29bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec135103-9451-4407-8505-6f98ec5a43a6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63408631-7622-4ed6-b8e4-d060d850c06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2c0633d-346c-4f2a-998f-bfc5bf088e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef33f5f-0eac-475d-9c6b-ede7f34864bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3228de1-bad3-49ad-8235-6936f6b88556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b26437a-3f1a-4940-b332-28cbb2d0f542",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3874035-57b7-40be-880d-3f8cea3123d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756a6884-89e2-4b32-ab9c-ad6ab849e202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16138e8-ba1d-4134-a524-fdf98d1fd82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba3e8e1-3ca9-4239-a099-3ca2a0ffd2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb38184-14d3-4bf3-a5cc-40701491ecd7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bc3a6e-9ba6-423a-94c1-d9542f8d10a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60a0fb5f-6240-4e27-9d6d-9c8e78c72b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "181f2d37-efae-426e-ac39-fb37f6f79b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4936954e-9e6b-4a05-aa86-8782aa01f886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277fdd8c-8588-4cc1-9d11-913555121557",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a5604-e21e-4470-b760-3065fe3100b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39b5dd8f-2457-4b44-b4a4-09b200d5c18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80a0aad-db44-4a8e-a536-76f207d5a9bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc0d908-1479-4c81-820a-ce71c15599af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842aa83f-79b6-4384-85e7-8e27676f9d72",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bb9003-bee1-45ba-8647-480633429eb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebebe8f-aee7-49c9-a6d5-08e741025d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1cd0d28-82ee-475a-be74-b5f9e94da3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b758390-68fc-468a-870a-96a461b9c5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee43ad0-f84d-4967-9c49-4d2367e71fe8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb4d34-5a31-438e-9063-f7841ca08550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "745ad24e-e8da-4bcd-a903-bb737f433183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f1b9b-1c7e-4252-9804-827f4b1ca32c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b619ab-05da-44ce-9a8f-3bd5c917c706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91f9878-501e-4e9b-b59e-1913fb9fc202",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac74c2ba-22a3-48c9-92c5-1fc070f46bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b04c14-f345-4fc5-929d-7c4184c1fe72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ad4827-1943-4fc9-965b-c5d2f7d7963d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686cd8a0-4bb6-4877-824b-8705ab99020a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f495b8b3-e04b-4571-995d-1420ea067ef8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6925179-1f6d-4bce-b272-1c1eef2c33e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d23a08a-53fd-45c2-8ad0-a93859ffd431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b32287-3526-4157-87b7-611c6ac65f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b0f32-0777-4706-9cdc-a2c3cfe7932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b0f516-fa7d-451d-82c5-5e6bafe1a148",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c8a482-4ded-4b42-94e1-4f65d839324c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f1a67e-3392-4eec-9011-b15115181a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9144388b-61fd-4391-83db-1e94062e900c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d3f52b-65c3-48b5-ac06-18fd135f855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd82ed6f-c67a-4e2d-95c7-630080f95563",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e9909e-8226-4561-8bbb-d372e974c090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5f589d-8fd5-4d0f-8107-762cce4b7f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96aaaf02-0f40-461f-9f5a-a821abac90da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720f6183-997f-4308-a2dc-bc0ee4f499e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7014d61e-355f-47a4-8a2f-6a7c4892b052",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328181cc-d4eb-4e81-bfc2-6c53c5695c25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bab6b065-371f-4de2-952e-d60b7afe385f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90fbb3d-14cb-4f35-be5f-d97659cb4026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d944e14d-a2c9-4890-8af4-209da41df170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e9b20-52ac-4b84-b09b-22adf12d8903",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d5a1c8-93bf-45bf-9bf3-2fa4f5d7b5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f9308f-cefa-403a-8d0d-42f85334d558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3fbed1-f0d8-464e-a451-bd990125de2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890c1a6e-a05d-4036-be72-1f186e6d4a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6008a750-910d-45cb-9509-f7199e876386",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67081701-f953-4db2-babe-6d1351506990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc7a9c7-843e-4be5-9983-a309fd80151d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f455d9-ce57-4269-86a7-41117b7d144c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd0b8cc-96c9-4c0e-9ff0-5972951e7c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b9c781-060f-4df5-abd1-24cdb48f6aab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf41eab-8a74-477f-ba55-a2a3a9592ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d7e890-bead-471d-9d30-ade360f88b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc350096-48ac-40de-a926-c5a59e32ea8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75bc934-e89e-40b6-a609-726310996585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5aaff24-f582-46d4-aeea-b84dec468df2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1cd279-b969-4741-a6b0-b9dd0356c54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2003b8ab-a8a1-44c7-8545-8de93cf7ecf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05ce0c6-0205-438a-a488-398c5e583d42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e508f50-cd7e-46ec-84de-833ea992ffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f89351-02f6-4899-9cb4-eca76b750807",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5adee2-99d5-404f-ada2-e3b8bb1de099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7223b01a-a68f-4c35-8751-ea30ffd70d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f9b438-4668-4e08-8185-0e65d6cc8806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ffb8c5-09d8-4a1d-83e7-ecf1d322fd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab896bcc-4441-49b0-8e63-e9e7eb9016a2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf732fd-7ace-4072-93b0-bdc403c4dedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d118cf0-81f5-44e6-84a8-2f2754f7c3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31ed0a7-70e8-4738-a2cf-25f888b76f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654a73a8-d048-4dda-abbe-e26922fc6608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0325268b-3e63-4a83-a224-98ce57b6bc2f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88585b84-7a71-47a7-b1d6-3714ad417f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0edf99-94e9-421a-a74b-31da4007c0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c814a3dd-0f47-49bb-b64a-ba0fb8de4432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2184c5-a3a8-4d57-8b0a-f9e8b1b4e3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c746e19-4e58-4c45-9694-85f49c38a1ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688942b2-251d-4414-93ac-d3d616cf5456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b99983fb-041c-4f8b-ba3a-3080dfebdd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ccdc11-d86c-432d-896a-6a508b79f9b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "438ec6ed-5f7d-4a36-bcd6-90bf40efa42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1babab34-de5f-4d63-97aa-969dae3ce7f8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdc1f51-4f2a-4ef6-8bfd-42c0978869c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff112b5-e961-4d28-9cdd-29bc9ff94d56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc199151-890e-4960-8bc3-d457012b2f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "affa819c-455a-4351-a797-f50a629add08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a2069-e796-4dc6-990a-96c6956287d0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2041615-76da-4349-8ea0-7582dc58a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e33dfbb7-06ae-4ef7-81a5-a249bf19af05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e937c47f-f4d1-437a-8bb8-74d301af86c4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593c68f2-6688-465c-8bb9-88b661e684e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8face719-785f-4578-b467-09c73820a4f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c0b558-5027-47b9-bba1-3909229d005e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86d9def4-e77c-41fe-886b-774e8ccc52a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a057918-e933-4bff-af35-766cf40e5094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b8ce90-04fa-4cf9-a058-52a763d62b46"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eacf01aa-c5c5-4404-8c4f-c4beb5c28137",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d7bddda-f793-4576-aae1-5c2299238403"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1636c11-8d86-45d1-abcb-3ef1a2839e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "17f79535-ae04-49b9-a178-1ce043da2655"
                    }
                  }
                ]
              },
              {
                "id": "7914b0a3-79cd-4916-b317-f45a98c7ae12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0327d8b-e459-4c8e-b769-bbd19268a297",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956583cf-c724-46a6-85d3-4bc7f0ecdc57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e284a40d-90f3-4e35-a1af-4ac23dffe299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78f6602-7138-4beb-8ace-1000b17012f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a0cae69-38e9-42b5-968c-e1db1d31daf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e12d9203-6a62-43e3-b2ae-7b579254c6e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f68331a0-cbd5-4a8b-be29-e5f40df5f7ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cba73587-f688-4984-a952-c3687359a65f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bec7a1c1-a266-4f22-8f5c-9ba770eeca7a"
                    }
                  }
                ]
              },
              {
                "id": "cf5445bd-3ec3-49fb-9642-3465971de051",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4d3eb8fd-4438-4283-b144-935f682e5cd1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb175935-e2fd-4a76-9beb-a8f3eb6644be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ec0997d6-69f0-4600-8bf8-378d96e7800a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e2cb48-b8bf-45b4-9963-3b9fe98413aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f94295-9e2a-44c3-be0a-9ccf2694d485"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "930c9d78-eee6-4417-b40b-b3ed5be84e1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a530901-ce64-40e9-8865-538cd9e84334",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75225c30-8709-4293-a76c-37cad56a9b23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96bf24c8-ae10-40d7-abd5-e796060fc4d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7af17df0-7ee3-458c-a8cd-3baf94426e9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a30dde1-9b46-40ad-94bf-bef24a931d63"
                    }
                  }
                ]
              },
              {
                "id": "316173b2-dc9f-4bfe-a788-01272cdb06a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffe0b3b2-ff40-47fb-a24b-8b989dfd8c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a41a7a8-4790-454a-885e-75ebf77a7f48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a0c932e-da79-4099-9546-14fb1f7b0d8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffaa11a-ea18-47f9-8516-1cd595b74627"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e5acf6f-e95c-4b5a-a722-e23955b6c267",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "17e22365-a163-431d-82ff-c0b5738609dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22d03913-a92b-4532-b45b-6d3d69b17d0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "35c10241-0287-4272-be3a-7cd2fcb0293c"
            }
          }
        ]
      },
      {
        "id": "92cc5a20-3cac-4ac6-88de-fb6d26e6551d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e287a18e-9553-4b62-86c3-b4501c9e7645",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbc33819-f589-4d94-aa41-496f921144f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35fc2124-b7bb-43f0-9fb0-32b7438015a5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf645ca-5e06-4250-bae1-9b34ad1dc532",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e5050ee-433a-4e63-9302-ad9f59b78d81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bcab8b-758c-4c83-9e85-e64da166892d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cd1bb23-d07a-4b54-a3e1-297ccb11d189"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ed72ff6-03f5-46d1-ac15-3d828d495cad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d9ba9db-7a20-4274-b4cb-ae97fc5521ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dda6bbc2-d2a9-4e7f-9b1b-fb85f62127ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58109c62-0e1a-47e9-aa39-e8db7c5c824a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51b97e2c-d5b0-4fe2-a16a-c28bc26bd4ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a3d595d5-23d3-49e7-8362-982062aaf82c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2cdfe07b-5e7b-459b-a46f-bf2a33f96347",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bbcaf0a-54c0-4a5a-ba83-6d270e937258"
            }
          }
        ]
      },
      {
        "id": "6aab9167-5dcf-4904-b1ad-a42e6c4b0321",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fc615a03-69c3-4834-a371-04cadeedef8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e92232d5-95c1-479e-9e8c-4afc4898801b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b0cf451-05f3-4012-ab9f-064644576f7c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c619dce-34b2-4409-b749-a4280afae164",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90288754-3717-4d94-b7ce-9c5ec793dccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad738aee-a7a9-4575-821b-9e20a78fd9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17fb0db9-a242-42c2-b977-2804ca74549e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9d582df-1638-42a2-bb7d-dd83925b3acc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3100ae7-dfc4-4305-a7b7-14a5084aa3d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a5a0f93-177f-47ba-b2b8-1e56bc05d310",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e33ab543-ac73-42cb-b8c1-0adccbcd1e97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d5f66da-377e-4f13-be8d-20d70fb119d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e9886a7c-37f6-4084-8900-77b189238fa5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c8bfb1b-77d5-410b-a680-0a55cf1f278a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "738ef095-5308-4f18-b602-a3125109049f"
            }
          }
        ]
      },
      {
        "id": "15ad9026-ce7c-46dd-bce1-acdf247da036",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "aef04f5b-2d1a-49d7-ad72-f7b7776af347",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdb71e3f-c26d-4b78-9967-d9f55fa7dbc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d0878bb-863f-4969-9967-66b35583ce5d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe7c70c-fd7c-4265-8654-a4602421331f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3010c8e-30f8-47f7-9fe4-6dcf0072d1c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4d5490-ad12-4e48-9c0f-05282e7388c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "405646c2-e0ac-44a2-a5fa-61a45da4de04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b782ad7-557b-4caa-a176-33a555cda8d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f687bb2-27ac-46ae-ac9a-b843a9f0b25b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f997fda-aac3-4f79-ab03-a50b86b1f1f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87bdfec4-45dc-4b91-b2e1-119c66828074"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dd3018a-d940-4353-bedc-906ae6448d40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15e7ab4a-1c44-4910-b6a2-7bcedda9c497"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b260540c-3d66-4d02-9edd-512200667cb6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0c79a5ef-bd26-4c8f-b723-12220eef200c"
            }
          }
        ]
      },
      {
        "id": "7bb91a5e-09cf-42da-bc0c-93699745f934",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fa65397-e0d7-4f0a-ae19-d7f1c8fcf253",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95ee9f1f-5f3a-456e-9c23-9500a747e465",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8aff640d-2822-42f7-8b0d-7ad3826a76bf",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c152f83-0a8a-472a-973b-f2845c8f211c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bda3932-b41e-4121-822e-c7e388cfed76",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 73.51228070175436,
      "responseMin": 6,
      "responseMax": 280,
      "responseSd": 21.962903893382986,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707265951865,
      "completed": 1707265981868
    },
    "executions": [
      {
        "id": "4bea1451-0e74-47e3-8c95-0f9d5014f81b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8d37aee1-abce-411f-9c08-23a8396a285f",
          "httpRequestId": "c7d2bbd5-8269-4871-bafd-5c874c545d38"
        },
        "item": {
          "id": "4bea1451-0e74-47e3-8c95-0f9d5014f81b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a29b9175-e085-4718-83a6-8ce1d8a721e3",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "fa14aed7-ba15-4a59-b195-07199f263bd1",
        "cursor": {
          "ref": "9350c742-f82f-40e7-b8e7-e884f63b6b4f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ecb40995-06a7-4917-8111-436986ac554a"
        },
        "item": {
          "id": "fa14aed7-ba15-4a59-b195-07199f263bd1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "342b5c68-b73b-4670-be44-68beebad4088",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "0f695c09-abd1-478f-8db7-9093d059525a",
        "cursor": {
          "ref": "3c98b16f-2f15-4ff8-8d2b-3b4d31c79d3c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7380cd75-67a8-4dcc-bd64-b450db16fec4"
        },
        "item": {
          "id": "0f695c09-abd1-478f-8db7-9093d059525a",
          "name": "did_json"
        },
        "response": {
          "id": "157750c5-bcf7-42d4-92cf-9261c5627767",
          "status": "OK",
          "code": 200,
          "responseTime": 243,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf43b18b-e39f-47cd-bbb2-42fc1065fcce",
        "cursor": {
          "ref": "588d13a0-186a-47d6-a4db-0da651e80195",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a2d12060-112f-4f1a-9c6d-17ea974586e7"
        },
        "item": {
          "id": "bf43b18b-e39f-47cd-bbb2-42fc1065fcce",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a7d7de0-5709-4cbb-bffc-2189065639d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf43b18b-e39f-47cd-bbb2-42fc1065fcce",
        "cursor": {
          "ref": "588d13a0-186a-47d6-a4db-0da651e80195",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a2d12060-112f-4f1a-9c6d-17ea974586e7"
        },
        "item": {
          "id": "bf43b18b-e39f-47cd-bbb2-42fc1065fcce",
          "name": "did:invalid"
        },
        "response": {
          "id": "5a7d7de0-5709-4cbb-bffc-2189065639d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ed6b9-70a8-41cd-b2b2-9f547fb30fca",
        "cursor": {
          "ref": "a521cf6e-d283-4606-b590-bd3e8671e8d9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ce3993e2-0c07-421e-81bb-015f535f1b8f"
        },
        "item": {
          "id": "175ed6b9-70a8-41cd-b2b2-9f547fb30fca",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f0770277-0ac8-49c7-92d9-9a6180426825",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac9b24f4-cb0b-4c7f-9226-bedd0d7a88b0",
        "cursor": {
          "ref": "8f998335-9cb6-46a3-9915-5e390e79a41d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "657357f8-2c8f-49e7-a8dd-9957769978e2"
        },
        "item": {
          "id": "ac9b24f4-cb0b-4c7f-9226-bedd0d7a88b0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6242f1aa-5b1a-4e37-b575-d3fd3cc64db1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474c6532-5f5b-4a15-8494-b30b9e44ad6f",
        "cursor": {
          "ref": "b3604fbf-8856-409c-aa20-da4b89059ab8",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a7e7f19f-54e5-48d5-86ab-af260d695abc"
        },
        "item": {
          "id": "474c6532-5f5b-4a15-8494-b30b9e44ad6f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d00ddb48-02ff-47c0-b0a1-be2c8c315b09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a0e93-5999-4dd7-b4c6-0b58d64acedc",
        "cursor": {
          "ref": "9f577a65-e7bc-497e-8655-aed2bd22c380",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "419dc926-9bab-414f-854e-f766c8ceb39e"
        },
        "item": {
          "id": "a95a0e93-5999-4dd7-b4c6-0b58d64acedc",
          "name": "identifiers"
        },
        "response": {
          "id": "7f19d4bc-d6ad-4ff3-a61a-0d8932b34e36",
          "status": "OK",
          "code": 200,
          "responseTime": 280,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8212a70a-0ff0-4ef5-9641-8f5956cffd32",
        "cursor": {
          "ref": "542c960b-74e5-40be-b43c-0e17ca63eff7",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d088a0d-0b68-448b-9ece-834c79603512"
        },
        "item": {
          "id": "8212a70a-0ff0-4ef5-9641-8f5956cffd32",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "690c1b94-22d1-43ac-bb16-d513cac3ef66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fe949e-1075-4b69-8f7a-4a3a6bed9bb0",
        "cursor": {
          "ref": "9f4eff06-8e8a-4289-862c-56740c4d8bec",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d8d7d44a-a57e-4243-8f7e-8da5e388c704"
        },
        "item": {
          "id": "a6fe949e-1075-4b69-8f7a-4a3a6bed9bb0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "14c88c12-43de-4515-8354-810a0d78ae5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5835e72-60b9-4e80-b6d5-6a4d23bc9cbe",
        "cursor": {
          "ref": "e13ae120-de93-42c6-82c8-f216d5bf44e1",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "424c30d1-4a99-4e8a-ac22-014377d319a0"
        },
        "item": {
          "id": "d5835e72-60b9-4e80-b6d5-6a4d23bc9cbe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f343bb7-1dff-4047-9818-5547c0e8fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f0475f-a9d9-4697-9f94-bc65462456f8",
        "cursor": {
          "ref": "86b2fcc6-7f7b-4650-b9a5-817176ae8723",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9797c50b-5713-4a8f-8dc6-6ed801efc77b"
        },
        "item": {
          "id": "13f0475f-a9d9-4697-9f94-bc65462456f8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b0f25e7-bb2a-420b-8e15-78ce71284ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b48c2-d99d-43ed-87ff-2cfb0017685f",
        "cursor": {
          "ref": "866324fd-52a3-4751-998b-d5e75faaf26e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "133befef-89fe-48fd-86ce-17f0054befec"
        },
        "item": {
          "id": "ed1b48c2-d99d-43ed-87ff-2cfb0017685f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1612e176-91a2-46dd-8267-8a125010f66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf281b8-d31d-4126-b16a-b5bd911c9295",
        "cursor": {
          "ref": "1860a97d-032e-4527-b038-eb2e60ddebf1",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e166339-1b3e-421a-8ecd-207abb4ac79d"
        },
        "item": {
          "id": "7cf281b8-d31d-4126-b16a-b5bd911c9295",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6c190dc8-e1db-482b-a969-0d57d1c0644c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee62508-63cd-44a4-a79b-548cf61c580a",
        "cursor": {
          "ref": "db553995-ec7c-4925-81eb-79beea594206",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8b6191d8-48ac-41bb-b77a-551026cf39d8"
        },
        "item": {
          "id": "9ee62508-63cd-44a4-a79b-548cf61c580a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8b37460-0005-4365-9c10-8f36bd4cee23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ab1a8e-37de-448d-8514-ecf1c9cdb20d",
        "cursor": {
          "ref": "0b6eeffe-9be5-4399-9d83-7a58284e5808",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a8b0459f-bc23-4612-99ba-61a2f9f4c177"
        },
        "item": {
          "id": "98ab1a8e-37de-448d-8514-ecf1c9cdb20d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "90e474c4-5424-446c-8d64-141f8ccf0bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70403b77-9036-4337-9417-7281f428a43b",
        "cursor": {
          "ref": "f10bf9d1-8492-45c8-b0ab-4158f0b52fd7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "77fae858-8d05-4a2e-8344-cc11bae8f7d3"
        },
        "item": {
          "id": "70403b77-9036-4337-9417-7281f428a43b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "629d058b-8f1d-4804-99af-ceda74c74467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9c148-ca59-4b2f-b969-fe6f84afbfae",
        "cursor": {
          "ref": "b2c11d7c-3f38-4991-a53f-30c412e7ec7b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2b2a6668-a6a4-4dd7-a79c-5eba457c0610"
        },
        "item": {
          "id": "6db9c148-ca59-4b2f-b969-fe6f84afbfae",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "754220e3-f5aa-4b4d-8e43-467931b5f849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2551d59-0dbc-4c4b-b33a-7ad848dfffaf",
        "cursor": {
          "ref": "39b4ecb6-2b0e-4660-be59-0fe048b59f71",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0423d83f-fc46-41c0-9bf0-845a71cde88a"
        },
        "item": {
          "id": "b2551d59-0dbc-4c4b-b33a-7ad848dfffaf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8fca1256-fea7-4c59-85a5-2a35dd9f93bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f34d3b-89b0-4331-b8ee-8a5625fae25f",
        "cursor": {
          "ref": "3fb306e1-e0ed-40ac-813c-16905e51816e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "782690e2-233b-44ed-818d-309357d6baff"
        },
        "item": {
          "id": "d9f34d3b-89b0-4331-b8ee-8a5625fae25f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "182f28a5-70df-4e5e-868b-7a77d67aea08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0c704b-760a-4641-9707-b0ef8551abba",
        "cursor": {
          "ref": "e68fb237-6de0-4b7d-95b3-4ea7184d25d9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "03339e8e-dc79-4fb0-9255-596180b2d426"
        },
        "item": {
          "id": "9f0c704b-760a-4641-9707-b0ef8551abba",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "094524db-8c2f-4a14-b079-47e3e8d08200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ba56a-2c2e-4b99-a877-632e9904fc8e",
        "cursor": {
          "ref": "75e16be0-e5c1-4059-9a7a-6a0ba58e4f86",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "80dcd2e1-796d-41d9-87fe-461512a70676"
        },
        "item": {
          "id": "660ba56a-2c2e-4b99-a877-632e9904fc8e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "43841770-556c-456e-be29-e6b57ccc3706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3803a0-77fa-41a6-b23b-dd75497a2730",
        "cursor": {
          "ref": "9696beaa-33ab-4cb7-818b-735847a9b5cc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e848d41e-120b-4e6e-8282-b448fed43372"
        },
        "item": {
          "id": "db3803a0-77fa-41a6-b23b-dd75497a2730",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dbbae939-6990-4d88-805c-5d4654b38247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d59feb-cf04-4865-bda4-00e7ff82f717",
        "cursor": {
          "ref": "930f0dcb-8a1e-47bd-b128-e0ae0070b952",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bfea6317-f460-4eac-b2e2-cb726605cf94"
        },
        "item": {
          "id": "20d59feb-cf04-4865-bda4-00e7ff82f717",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "de5b2f1b-4be0-4433-a80d-3adcd82fe0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3686c579-89bb-4c7d-92b3-954c719ab939",
        "cursor": {
          "ref": "327cc949-80d5-4d54-9714-97fa6cda2302",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf424738-536e-4011-a79a-8f8f653eb620"
        },
        "item": {
          "id": "3686c579-89bb-4c7d-92b3-954c719ab939",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89157ac0-82e9-47d9-abd8-adde498e4fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b2f554-a3ee-49c0-80a8-1590c5372b69",
        "cursor": {
          "ref": "efc8fede-8db9-4b42-b9fb-c1da9cd4d53a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "324a2382-64cc-44aa-b813-173d68d48699"
        },
        "item": {
          "id": "b0b2f554-a3ee-49c0-80a8-1590c5372b69",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d46f45e9-9506-425a-a50d-63b5321cd805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e9556-fb0f-478c-a7bc-807f6118b896",
        "cursor": {
          "ref": "7b63d101-d66d-4759-b373-7bc910af23b2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7ca4946c-2142-4dfe-9e6b-f1961bc355d3"
        },
        "item": {
          "id": "ad9e9556-fb0f-478c-a7bc-807f6118b896",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "68147a1b-22aa-4726-940b-81a562f2e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff95783-34c9-4072-a093-5d15ba662b54",
        "cursor": {
          "ref": "f349f8a5-5be4-4460-b720-257df91c9794",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "250af255-164a-4ae9-b107-77538e9a9897"
        },
        "item": {
          "id": "dff95783-34c9-4072-a093-5d15ba662b54",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b48f5b52-b57a-4544-96db-c52226304f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ac2d99-5dca-451c-ab4b-95e7baeac56b",
        "cursor": {
          "ref": "44e07bea-7309-4733-b682-9284b8626118",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1338ffe2-3297-4fcd-971c-1c9c4352b4e0"
        },
        "item": {
          "id": "a8ac2d99-5dca-451c-ab4b-95e7baeac56b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "460df036-2e4c-4bff-8bdf-a09ae18d0c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90d704f-a2d7-4728-9c39-a6db18388ea3",
        "cursor": {
          "ref": "54178277-3e5a-4507-a197-cbbf00a48871",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2ad481d8-ef67-44cb-a258-4583c0ee9945"
        },
        "item": {
          "id": "c90d704f-a2d7-4728-9c39-a6db18388ea3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "471f7821-f786-4d16-84a9-75dd279a2655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19e8c20-5a01-4fa5-9c84-7889ad1a53db",
        "cursor": {
          "ref": "5d6adc2b-1eed-4f18-b1ba-844a9d568253",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "545aa87e-b807-4aae-8f04-3b368ae77f2b"
        },
        "item": {
          "id": "e19e8c20-5a01-4fa5-9c84-7889ad1a53db",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "43379619-26b8-4173-8778-fb69090a9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9dfb80-2417-40f4-a25a-f4c73f57648c",
        "cursor": {
          "ref": "1d31a58a-4cf8-47e6-abd6-4b5c1a6d6562",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3915d68f-e4d1-4e77-9358-44d016dda155"
        },
        "item": {
          "id": "ee9dfb80-2417-40f4-a25a-f4c73f57648c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "86d6fb6f-6aa7-4bae-b805-61ea75cf4b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79aed3a-e850-4fbe-8a73-f49793409933",
        "cursor": {
          "ref": "dc2a2474-1dd5-4807-828d-775356370cef",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "20732f40-a67c-4281-a262-f2f7530ac995"
        },
        "item": {
          "id": "a79aed3a-e850-4fbe-8a73-f49793409933",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e4a06e34-22e3-4614-a9be-06e34c3ea0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41c701f-dc2e-40b0-8764-d95ac9a3f900",
        "cursor": {
          "ref": "1deeddcb-2a80-4141-af5e-9d1ccf772f13",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f316f46e-3c1d-4477-9c9a-5a1958295a46"
        },
        "item": {
          "id": "e41c701f-dc2e-40b0-8764-d95ac9a3f900",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "845d0df6-e8f0-418e-a467-d218d3a5c081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa6bde-6d65-48ad-9736-f7c95b1df6f3",
        "cursor": {
          "ref": "3df379b4-8fa4-47d1-8b2f-7685c593e217",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5579a87-7ea6-4998-8b6a-213d8c603f77"
        },
        "item": {
          "id": "32aa6bde-6d65-48ad-9736-f7c95b1df6f3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "df86b24b-5bad-4ec5-8868-47a0c87146bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faad7312-ebc2-4a69-82f5-d9443438e6bc",
        "cursor": {
          "ref": "e8e7cbab-1436-488b-9abd-9da1953be765",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b588cbf1-4253-4fbd-869a-0d7f26d4f074"
        },
        "item": {
          "id": "faad7312-ebc2-4a69-82f5-d9443438e6bc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7f1234e9-e7f3-49ac-89f0-9892d3b4910a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fbc8ee-6652-415e-93a3-7505881e0114",
        "cursor": {
          "ref": "07d7e8bc-dcf9-4007-8d67-4062e63efd57",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a267fab3-b20e-48fa-9ace-ee0225c116ca"
        },
        "item": {
          "id": "92fbc8ee-6652-415e-93a3-7505881e0114",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a83bec03-ad64-425d-8450-ad2fc9f07f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88e97a0-759a-4cf7-8b4a-bba43c2b78c8",
        "cursor": {
          "ref": "b386e90f-5b9e-44d2-97ea-b23fce596723",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e10b9339-f004-42cd-b331-08b0d48c3df2"
        },
        "item": {
          "id": "d88e97a0-759a-4cf7-8b4a-bba43c2b78c8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e8fbf293-fdaf-42c2-956e-f5263bdbc973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfb667e-9d1e-4fae-acb0-8ad31b1e3e0d",
        "cursor": {
          "ref": "ffdc03fc-4ce0-4741-9e85-9b4117203953",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d976fb11-fb9f-442d-b063-3f125bf21146"
        },
        "item": {
          "id": "3dfb667e-9d1e-4fae-acb0-8ad31b1e3e0d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ef206a49-692c-418d-bef4-28cb79a16fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96abe6f4-32b4-41d9-83f5-f2af495c810b",
        "cursor": {
          "ref": "cd230db4-5ebc-487f-986b-e6ebe5ba2099",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0b0b5f7d-4585-49a8-9dda-969c911fef3c"
        },
        "item": {
          "id": "96abe6f4-32b4-41d9-83f5-f2af495c810b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "85903755-dff0-4798-bd2b-a3dc98917a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7a759a-75c6-492e-98df-1afdda24a9d9",
        "cursor": {
          "ref": "2b1a588b-85d2-4800-bdfa-50f3ab4f64ad",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c686a2c-ea02-482f-b990-ce771bef7b6d"
        },
        "item": {
          "id": "8d7a759a-75c6-492e-98df-1afdda24a9d9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6d568e20-455f-4cee-9a5a-d275498a954a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fc0520-90fc-435b-8062-6cc2e6c8605b",
        "cursor": {
          "ref": "9b91c31d-cb30-4ab2-8d4e-987f763223fa",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "576b747b-c0fc-4bf6-a96e-3e13f5bafaf7"
        },
        "item": {
          "id": "77fc0520-90fc-435b-8062-6cc2e6c8605b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0bcff665-2a8d-4ba6-83fe-6503aba323fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b34698e-fc34-4286-b5c8-bb4006fb3e27",
        "cursor": {
          "ref": "d8f7aca9-7d24-490b-82c1-f925157420f8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6bd045ef-0cb4-4808-8c2a-0728e58e7e35"
        },
        "item": {
          "id": "6b34698e-fc34-4286-b5c8-bb4006fb3e27",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d8febf9-d648-4e0e-ad4d-af9af0e3ab29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d2bf4b-611b-4912-bcb3-1b0be5c13ad7",
        "cursor": {
          "ref": "ec730c7c-6f47-428b-8610-547c94641f1a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7d211e31-c915-4218-9c8a-a05e2deb4531"
        },
        "item": {
          "id": "e3d2bf4b-611b-4912-bcb3-1b0be5c13ad7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ea37f490-ea2e-4207-864d-3f48e34d4d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bb8386-0163-4062-a357-dd5dc8248713",
        "cursor": {
          "ref": "65982433-bbb6-4115-87aa-a5a8ba970c5f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e9c20c8d-75a2-460e-b45c-1240fc1d10f5"
        },
        "item": {
          "id": "79bb8386-0163-4062-a357-dd5dc8248713",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5bd9b162-8442-4e99-a91b-5c989eb04fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c0473-15be-4c1c-8cc9-b7bea302c83a",
        "cursor": {
          "ref": "5374c7fa-367d-4483-9472-5326c2597801",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c1457034-5ed8-41e4-8609-25696bab20b1"
        },
        "item": {
          "id": "767c0473-15be-4c1c-8cc9-b7bea302c83a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3128ed06-f5d6-46e7-9415-6686b5ff67e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adc42fd-8165-4224-acb0-61b5287a2d94",
        "cursor": {
          "ref": "6789a2c6-0561-4b03-b228-27acdbcbc582",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7d228539-c589-4422-9a5b-8bd8bf1c7be9"
        },
        "item": {
          "id": "5adc42fd-8165-4224-acb0-61b5287a2d94",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3665dada-20bf-4ed2-b475-4c44fda1f574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c21dc0-6292-4e3d-a92f-91ca534af886",
        "cursor": {
          "ref": "3340c72f-84a5-4d57-b1f1-b994a31130b0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f2a341f6-eb1b-4238-8551-0bfe0533490b"
        },
        "item": {
          "id": "54c21dc0-6292-4e3d-a92f-91ca534af886",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "270b82ba-81ea-4cfc-aefa-3dd9540728a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407d48da-862b-4a23-be1b-653ce142b742",
        "cursor": {
          "ref": "617b26b5-836b-4393-b7d4-fa1153bc1baa",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d7571bfd-48d8-429a-b982-9071184ebb3a"
        },
        "item": {
          "id": "407d48da-862b-4a23-be1b-653ce142b742",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2f8bc8aa-6dec-457d-a017-2078fdf2239f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1165cf-5e95-448c-9946-5804f9f0d610",
        "cursor": {
          "ref": "05923a96-aa7f-4cbf-b544-1b7a8e3fda68",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "73ca0fb5-8cb9-465b-8d9e-e440b5264702"
        },
        "item": {
          "id": "ae1165cf-5e95-448c-9946-5804f9f0d610",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "83c3f565-ec47-4013-8323-640f9a25928d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dd3224-0a0c-4094-a94f-dd71323c2e87",
        "cursor": {
          "ref": "03b715ee-5d15-4701-b7a9-8fa4e712c76e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "82deff74-8563-4d60-96a0-4498a9fc6103"
        },
        "item": {
          "id": "98dd3224-0a0c-4094-a94f-dd71323c2e87",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6d65f8ab-d3a4-42d6-b555-b3d940850e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90311ca3-518c-492b-9209-d2eb1b01ca5a",
        "cursor": {
          "ref": "b13891d5-0f95-41a0-9605-da74e56f79a9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7b635566-15b6-4420-b27c-72c0dfe9e9d4"
        },
        "item": {
          "id": "90311ca3-518c-492b-9209-d2eb1b01ca5a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c8cffeb8-dd57-4b0c-8a35-90b0fd49fc8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b74fb0-6c79-4f2e-b42d-4a62db8d5248",
        "cursor": {
          "ref": "cabbc0e4-effe-4a5c-84a5-c46dbe451368",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8b50faa0-0dc9-486c-8685-79c2aa8e5860"
        },
        "item": {
          "id": "97b74fb0-6c79-4f2e-b42d-4a62db8d5248",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5d0fb5c2-46a8-4965-b143-b617c0687b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275e1a40-66e1-4c9d-8b54-25c999082b03",
        "cursor": {
          "ref": "b51fceee-98bc-47f5-a0ed-e470e495bd95",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "147b2eb9-3fd3-4247-a183-1a794d9b06ab"
        },
        "item": {
          "id": "275e1a40-66e1-4c9d-8b54-25c999082b03",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "57649897-b376-414f-a92f-8b283f403a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa8ae7f-9107-4326-88b9-0bacab3159e3",
        "cursor": {
          "ref": "c155d37e-a887-4e1c-a84a-8e263e8830c3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7179e7c1-d4f2-4ff0-a836-21adb43e22c9"
        },
        "item": {
          "id": "efa8ae7f-9107-4326-88b9-0bacab3159e3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5273f18b-6b52-4509-9ff2-e671787cde5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de6567d-3154-410d-bff2-5ceef5fb279d",
        "cursor": {
          "ref": "db9f183f-f09c-4c25-ba74-7b9e03a28b80",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "84461235-a293-4fa4-81e2-51041c1ad1e3"
        },
        "item": {
          "id": "4de6567d-3154-410d-bff2-5ceef5fb279d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e4e56ea7-5511-47d9-a4ff-afc0c22c62db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7334cdda-4b23-48e1-9edd-65308c18c515",
        "cursor": {
          "ref": "840f641b-4177-452b-917b-a55e15ab24be",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9cd4a7c5-30ff-49cf-917a-cb194655535b"
        },
        "item": {
          "id": "7334cdda-4b23-48e1-9edd-65308c18c515",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0c6baf58-aac7-47ca-843e-0381492caf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b83ee2-70e1-439a-b496-28dc98c56637",
        "cursor": {
          "ref": "2cd0b528-82f8-427f-aa00-8ae9b6c5ded5",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0efab9fa-a113-46f3-b3e1-bfaeb2045b06"
        },
        "item": {
          "id": "16b83ee2-70e1-439a-b496-28dc98c56637",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b61984eb-529e-42cc-8340-991c0c43d13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7190002-0063-4648-a723-3377852799af",
        "cursor": {
          "ref": "5b1bcc23-aad9-4688-b5be-760ebe008048",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "945712f0-9d4a-41b0-ad51-e532384d9f2a"
        },
        "item": {
          "id": "c7190002-0063-4648-a723-3377852799af",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5c4984c3-e792-4363-a63d-1b37da747faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60660e5a-69eb-49ba-a04f-6634ff5a5fd9",
        "cursor": {
          "ref": "1e9828f0-4698-4f64-886a-0883ce3c2026",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "44bad6cc-418f-4da1-ad95-de71f400a95c"
        },
        "item": {
          "id": "60660e5a-69eb-49ba-a04f-6634ff5a5fd9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "158879ae-a5b5-45a4-a15b-15189f2b2a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b193b-9820-4304-bee6-baf7850b808f",
        "cursor": {
          "ref": "1d77643a-676e-4e08-88ae-5263698718d6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "282ac340-549d-4700-9caa-b99ffdee5248"
        },
        "item": {
          "id": "c00b193b-9820-4304-bee6-baf7850b808f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ff081522-841b-413d-9682-d9a7f1a0b4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf1be7a-ac32-4315-b3e5-ff13fb069e18",
        "cursor": {
          "ref": "186c45ae-418d-4370-8c0d-259a7a1d1691",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6aa50dd0-06d1-449b-84af-a730c0cec661"
        },
        "item": {
          "id": "fdf1be7a-ac32-4315-b3e5-ff13fb069e18",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "92a98284-82e5-4823-9feb-a48adb46b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17fe1e4-de75-48ac-9ba8-02cad15c09aa",
        "cursor": {
          "ref": "58faf6f1-f5bf-497f-9d1a-7332e5f9dc23",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8276efcf-af14-4403-a54d-cecde501def7"
        },
        "item": {
          "id": "a17fe1e4-de75-48ac-9ba8-02cad15c09aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "694e6c46-580b-4749-9074-53d656c33369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382a333e-2b54-4d51-b402-32290d25881a",
        "cursor": {
          "ref": "7b72074b-f5b3-442f-ae3f-853b568cac11",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "926a07d0-b3b4-4095-b20e-bf894f5c0e7f"
        },
        "item": {
          "id": "382a333e-2b54-4d51-b402-32290d25881a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d7b3b02c-60b7-4d7f-bd25-4a04868514d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b775f-73fb-4a78-855c-17de5dd09553",
        "cursor": {
          "ref": "fe8fa1a5-7bac-4dc9-aa6f-5d8b743b868c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "514caf18-8b83-4b9b-a23f-8b5cb5e1d3ea"
        },
        "item": {
          "id": "d90b775f-73fb-4a78-855c-17de5dd09553",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "972b3439-f138-4e44-a661-0c01c2314f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f98f22f-e504-439a-b20d-21fa914847ce",
        "cursor": {
          "ref": "dbcc1c56-e882-4ceb-824a-727fee4ee8c2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "702ede2d-d1be-4c3c-a752-9db4f1a9e12e"
        },
        "item": {
          "id": "5f98f22f-e504-439a-b20d-21fa914847ce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "86c09c8a-cd96-41f5-b442-575a8ea8dece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01135e13-792d-4eb0-aad9-4ec5a971f60f",
        "cursor": {
          "ref": "f7006d9e-dbc4-49ca-ba6f-0148dfb3e9d2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fd2b4c69-4257-4a56-a03c-46fd5cc11576"
        },
        "item": {
          "id": "01135e13-792d-4eb0-aad9-4ec5a971f60f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "65dd5e3d-bef7-4d26-a5ba-d0f888e4f78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d498fa5-0200-4981-b32d-9818f35e4c1c",
        "cursor": {
          "ref": "d4c91ba1-625c-4425-9259-d53f592a15fc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "52a538ac-fbf1-4dae-922a-83c9d571d06f"
        },
        "item": {
          "id": "7d498fa5-0200-4981-b32d-9818f35e4c1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6e03f4f3-663b-4579-8d2a-12f2fae1e186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccfc078-5828-4acb-81d7-298a2a228db6",
        "cursor": {
          "ref": "e3e3b293-a540-4677-9814-1df58d590e0c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "81137e0f-afb8-4e22-9ebc-bf1d6e53a4e2"
        },
        "item": {
          "id": "fccfc078-5828-4acb-81d7-298a2a228db6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fd425921-f7ab-470d-b89d-31cd3f9e9c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1320b6fb-3566-42dd-94a0-4bceecbd4c1e",
        "cursor": {
          "ref": "ff48cd0b-13f7-4042-b1dc-611372a0f7cc",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8a9050f9-e391-4a67-9849-b1b6303ce7e5"
        },
        "item": {
          "id": "1320b6fb-3566-42dd-94a0-4bceecbd4c1e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dafc512d-76c7-4861-bec6-e95d9d930291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5b353f-bdcb-4854-8edf-ea6796a5abdd",
        "cursor": {
          "ref": "5306595a-67a9-4a13-a073-a918830ec299",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d043b377-2ebd-4bad-9dc1-50c4020ac343"
        },
        "item": {
          "id": "6a5b353f-bdcb-4854-8edf-ea6796a5abdd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dafd32b3-3402-4573-b6e1-e68435ae1927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ceeae4-4d29-4abf-9d67-25c3c0e28576",
        "cursor": {
          "ref": "823b290f-bfd3-4b75-bb70-8bf4cb0af660",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a91ce5e7-5b1e-44b5-91cb-1af8ddd1ad9e"
        },
        "item": {
          "id": "32ceeae4-4d29-4abf-9d67-25c3c0e28576",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "30cb5efd-62f6-4cc3-9c6f-cb1563e05859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c24f0-e2f5-44fb-9d20-659f050c0249",
        "cursor": {
          "ref": "689d8e00-5a76-4de4-88b9-83b9fb4c9196",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0d7bd087-d8df-4996-8bdd-ffe93355009d"
        },
        "item": {
          "id": "f85c24f0-e2f5-44fb-9d20-659f050c0249",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bd254b04-d0e5-44df-af6a-ab87ab5b49c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c212f455-d0d9-45a3-91b6-1130e704c816",
        "cursor": {
          "ref": "512abff5-fdbf-42f6-a3a2-91aaf73886b2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4d1ea9a9-d444-4be4-8dd7-142d61c99350"
        },
        "item": {
          "id": "c212f455-d0d9-45a3-91b6-1130e704c816",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "08d22546-b732-4873-9874-2c6b88deecbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7d20dd-ef64-4e71-9be2-a8093d1961f7",
        "cursor": {
          "ref": "6feb4f8f-a336-4d2e-91ad-832a76c8e0d1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "884a3aeb-a84a-43e5-9e52-c9be3b43e7dd"
        },
        "item": {
          "id": "cd7d20dd-ef64-4e71-9be2-a8093d1961f7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a6db0d45-5a57-4168-bdd0-37c55c359253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b931d117-60a9-48bc-888c-fd2c4680caa5",
        "cursor": {
          "ref": "1d1a1cf6-3ec0-4afa-80cb-780ed651fa4f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8af7e010-c4cb-4ddf-8836-ebb6d31257e2"
        },
        "item": {
          "id": "b931d117-60a9-48bc-888c-fd2c4680caa5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1712166f-42b3-4a65-b6a1-a2dde3ef7397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8fc93-6d5e-48e7-86ef-65a01af01a96",
        "cursor": {
          "ref": "fef61aa1-619f-41fc-b5a8-ee9b3339a391",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8b33d413-ff45-4bd3-a6ee-1a51f6c09211"
        },
        "item": {
          "id": "e4b8fc93-6d5e-48e7-86ef-65a01af01a96",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9c6465af-6b4c-4ac1-8a4c-ee3485754174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dfeebd-fd71-4452-985c-12e3b22d54cb",
        "cursor": {
          "ref": "a658fa75-5b60-44ce-a9f6-875847612323",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "93639792-0ed2-4b58-ba42-4de6f2563abb"
        },
        "item": {
          "id": "79dfeebd-fd71-4452-985c-12e3b22d54cb",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5e76cf2f-a95a-4e4b-afc2-7b5f5d09cbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e706aced-86e1-4ede-9522-a9cef34578b7",
        "cursor": {
          "ref": "95578597-7da9-4b39-939b-cce01d500ff0",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9018ce4f-cbd5-48e6-a2ca-727474a555d2"
        },
        "item": {
          "id": "e706aced-86e1-4ede-9522-a9cef34578b7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b430252b-1b78-4091-8f62-d86de14f97f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8afb5ce4-2f48-471f-a17d-a66279dd98fa",
        "cursor": {
          "ref": "f65b7d87-ab5f-4a9a-9bd2-f8ae2e45e708",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f1911b9e-b3af-4d8a-838d-6e767fc8359d"
        },
        "item": {
          "id": "8afb5ce4-2f48-471f-a17d-a66279dd98fa",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dea0be23-c7ed-466f-b438-e7598ba784dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c74d8-81b4-48fe-a834-47de9d37d7d6",
        "cursor": {
          "ref": "9e4fea2a-1fbc-4824-921f-155607362413",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04a102b2-3082-4ff2-a554-4523b78e21a4"
        },
        "item": {
          "id": "f53c74d8-81b4-48fe-a834-47de9d37d7d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "22b94008-8b72-464d-9bdf-7d34f98c0bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c525770-31ad-4c17-9a24-1a736776a502",
        "cursor": {
          "ref": "de7c2f45-9563-47e7-a326-4b2d01c8afbf",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3ecf4c04-d9dd-4d2e-8351-ab55b1451273"
        },
        "item": {
          "id": "2c525770-31ad-4c17-9a24-1a736776a502",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5fbc160d-e6dd-4807-b89d-d891262fc536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc4a1a0-9238-489c-b982-8630f3a207f1",
        "cursor": {
          "ref": "7478f618-58a9-4337-8292-ed1149c0c137",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "350737c7-7399-40cc-a070-9cb738b9d686"
        },
        "item": {
          "id": "ecc4a1a0-9238-489c-b982-8630f3a207f1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "67935a30-54d0-4d9d-b5f8-fec4b37a9f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78500b5-02bf-4dc4-9b04-c3773abd09ae",
        "cursor": {
          "ref": "6b095366-0883-4cf4-bd1f-067ad0e95bcc",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8e9036db-cfd2-41bf-9c70-599397b10ac9"
        },
        "item": {
          "id": "a78500b5-02bf-4dc4-9b04-c3773abd09ae",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d3e0c0cf-9974-4d4e-8697-eaf5e2ad1312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b030dd-dce7-4cca-ab38-ea2cef2dcb04",
        "cursor": {
          "ref": "1fc7cc24-756c-43f0-acf6-0767d7501f82",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4fb8dbb4-1c1d-46f6-8dfa-deb4f7ba47ea"
        },
        "item": {
          "id": "d3b030dd-dce7-4cca-ab38-ea2cef2dcb04",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d7b0044b-0772-4cbf-8a57-0e44579d6e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bc29cc-dc51-4780-af8a-ad26588619c4",
        "cursor": {
          "ref": "71b39f5f-85de-4716-b3ff-4c401181c151",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "490090d1-7fca-420e-97dd-5357db9608aa"
        },
        "item": {
          "id": "a0bc29cc-dc51-4780-af8a-ad26588619c4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "be750c98-dd37-42d5-9947-2370594929d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e06d3a-9446-4f23-876a-61a2106eb3ba",
        "cursor": {
          "ref": "6329ac36-da7b-44f5-93bc-33760a80c462",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "88fca13e-e08d-4784-8066-71ea6a760b80"
        },
        "item": {
          "id": "d9e06d3a-9446-4f23-876a-61a2106eb3ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5255708b-bbdb-4d38-a82a-9965a9a2f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da32b93-ccc4-4b84-a4bc-b745f9fcc286",
        "cursor": {
          "ref": "86d476ce-013e-41e3-9fdb-feab8777777e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "242de4ed-2595-4d53-9eba-b88005d38e3e"
        },
        "item": {
          "id": "6da32b93-ccc4-4b84-a4bc-b745f9fcc286",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "961d3131-76de-475d-aff1-b4906ddaab9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e5b265-523b-4052-b8c0-1223ee0dfa63",
        "cursor": {
          "ref": "404d8e63-3394-4234-aaef-d071c8e27d7a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "44ffe114-9db8-4678-a535-100c78472f5e"
        },
        "item": {
          "id": "46e5b265-523b-4052-b8c0-1223ee0dfa63",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "33634e83-82d8-4d2b-af75-a729916d46b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f6240b-cd46-4d61-95bf-b07bddc6a053",
        "cursor": {
          "ref": "65168942-09ed-423d-85ba-a5152b480b68",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4d288e02-3be3-4195-b0de-70b47e5c36f8"
        },
        "item": {
          "id": "55f6240b-cd46-4d61-95bf-b07bddc6a053",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "279da757-e619-4b28-98c4-f70305ff8aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5673ac-bf7e-4174-8782-56d86af67554",
        "cursor": {
          "ref": "9a4050f5-e92f-46e6-b873-f96e393d52df",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "de2b8ac1-db98-44dc-a281-5a14d4642b75"
        },
        "item": {
          "id": "bb5673ac-bf7e-4174-8782-56d86af67554",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "13074593-3ee8-4d56-9e1a-32c8370984fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b44081-0061-4ca4-a80a-d44c2ea9b169",
        "cursor": {
          "ref": "02d88f4a-ad82-477c-992e-b3711d2dcffd",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4e79ff87-7fcb-4813-843b-de4670af4a2c"
        },
        "item": {
          "id": "66b44081-0061-4ca4-a80a-d44c2ea9b169",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9696ec25-4f1a-4e0e-9a8c-6dcfc5b7f183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e98fcb-635d-40cd-80bb-0440bac32470",
        "cursor": {
          "ref": "90ca793b-5810-4335-9c03-cad8e84be7dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "be698b6e-e7b9-46a1-b803-e09536af506f"
        },
        "item": {
          "id": "73e98fcb-635d-40cd-80bb-0440bac32470",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ab0982f6-6eb5-4221-84ec-78375ef2eba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f9f37f-0f35-47d0-93eb-46bc786dba38",
        "cursor": {
          "ref": "207a699b-287f-46c8-8a41-d895ab4c0c33",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "19d9072f-5801-489e-98e3-91998b5d80ec"
        },
        "item": {
          "id": "f4f9f37f-0f35-47d0-93eb-46bc786dba38",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8fea17fa-e94f-4084-94f1-3f1aa999cb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1930f8-29d1-4d88-9286-0f7760aee579",
        "cursor": {
          "ref": "6f84be32-0b64-4ed8-91f8-0cfed27bb227",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "945dc7f7-5b77-4d7d-ae61-8cc749e57018"
        },
        "item": {
          "id": "9d1930f8-29d1-4d88-9286-0f7760aee579",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b322d892-2bc7-4466-ae4f-2d3b97f8ce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60acddd3-76f2-40e2-85f0-2cd60fda2293",
        "cursor": {
          "ref": "954fb40d-cf94-4543-aedf-dfc2d99cc8dd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05898787-dad1-4097-a84f-cfe07c893860"
        },
        "item": {
          "id": "60acddd3-76f2-40e2-85f0-2cd60fda2293",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a929092a-4eab-4aef-a090-696b9d854f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63a9578-7233-4a50-8ca2-97cfe7c53523",
        "cursor": {
          "ref": "edadfefe-ffce-4797-9844-489ddaa130ef",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "41da5317-8b83-48bc-a79e-c5cc201df457"
        },
        "item": {
          "id": "a63a9578-7233-4a50-8ca2-97cfe7c53523",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "cc9a6c5c-52c2-46c7-9ef3-769544e19761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c42d94-97f9-4738-a12f-23841f2f7144",
        "cursor": {
          "ref": "541feb79-a2de-48ac-9daf-e92e3f369ddd",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "85212803-11e4-45ea-9d7a-31dbbf3d9442"
        },
        "item": {
          "id": "45c42d94-97f9-4738-a12f-23841f2f7144",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ee924a63-508d-4aae-8732-01701d1a65ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b05f6f4-d428-4bf9-91af-96357dbf324a",
        "cursor": {
          "ref": "4ed6c218-2016-4286-b776-96a6731b969f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c32d1552-9c3e-4d1b-9280-048b171b0ebb"
        },
        "item": {
          "id": "5b05f6f4-d428-4bf9-91af-96357dbf324a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "478d349e-b165-4768-bdd9-c09ef01db3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feac405a-578a-4889-a7bf-588bcfb25456",
        "cursor": {
          "ref": "e6df691d-4425-47de-be60-a50ed6ab50eb",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e55930b3-0b53-4255-a5e0-318de5df95a5"
        },
        "item": {
          "id": "feac405a-578a-4889-a7bf-588bcfb25456",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a2a64139-e954-41bd-b078-c829b9cc0895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87024975-b27c-493a-a5af-c7ce0acd5873",
        "cursor": {
          "ref": "51b2ea4b-5534-4850-a427-357885d4f4c0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2bb98e4a-27fb-497f-9121-b6b8e2b67a14"
        },
        "item": {
          "id": "87024975-b27c-493a-a5af-c7ce0acd5873",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a63ee37e-a250-48e2-892e-5de61acdef45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0ca22-a00c-44d7-8a96-503c89ffe5d3",
        "cursor": {
          "ref": "27a1d227-edba-43f9-9d71-681b6c436275",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f996a453-ba0c-4193-b902-9efc9985a58b"
        },
        "item": {
          "id": "e4d0ca22-a00c-44d7-8a96-503c89ffe5d3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bf7437ab-2a78-4d07-94d8-6b1effb9ddc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1755dff4-66ed-4dd0-895b-d77b1a92dfd5",
        "cursor": {
          "ref": "0ed8f16e-eb8a-4e04-a58b-12bd7d4705d7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c96f824a-442b-4ece-b5e5-6dc828153691"
        },
        "item": {
          "id": "1755dff4-66ed-4dd0-895b-d77b1a92dfd5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6be702bf-7a4f-4e21-ba6e-6ca3c396c077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b0b00d23-d65a-4c1d-835e-41e5c6743946",
        "cursor": {
          "ref": "b02258ed-a52d-475d-aef1-6c96dfac78b0",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1698842f-6c31-44ee-80a2-6627073e78ca"
        },
        "item": {
          "id": "b0b00d23-d65a-4c1d-835e-41e5c6743946",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4f239783-2471-44d9-acf9-77539930f753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "01c7ee19-933a-47d8-9298-b4a8d76d602e",
        "cursor": {
          "ref": "4fdb81c2-17d6-4c7a-a2d2-248b11af9f9a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fdeb55ae-0bbd-4d90-8517-fd997883dc0e"
        },
        "item": {
          "id": "01c7ee19-933a-47d8-9298-b4a8d76d602e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "02338c75-a295-4327-be43-f7c1ae970808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9c43462e-1b16-4d3b-8fd6-6dd5e56745ce",
        "cursor": {
          "ref": "b9a6b7eb-352f-4457-9f76-06e1e32b5ee3",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7d42a023-3409-47b9-853a-c6b315d4f298"
        },
        "item": {
          "id": "9c43462e-1b16-4d3b-8fd6-6dd5e56745ce",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bd71a7fb-d19f-4dc9-99ad-26ad61f58732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9f480c51-eb1f-45c9-9bb7-553b0bb8f947",
        "cursor": {
          "ref": "ccc84ed1-b68c-4922-b02a-dd9865d55397",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b06f9980-0df9-4d76-bbfb-fbf4150501f2"
        },
        "item": {
          "id": "9f480c51-eb1f-45c9-9bb7-553b0bb8f947",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f8fbe191-8d4d-4ec7-81a9-7bab30b59f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6c180108-dc13-4793-885d-b87ab13a7f26",
        "cursor": {
          "ref": "3f8dd4a9-91e1-443d-8ca9-2d574e39e8e1",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c299bb38-da70-466f-a9ab-0cb369bd0f14"
        },
        "item": {
          "id": "6c180108-dc13-4793-885d-b87ab13a7f26",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ebcdb921-1df3-4f87-84ed-a90c83d364f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "55521df4-1909-499f-bbb7-6379408e8c9a",
        "cursor": {
          "ref": "61f02a30-c484-4139-8f60-3f066c47ebed",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "26fddac0-3223-44a5-9b25-609b37ff81d7"
        },
        "item": {
          "id": "55521df4-1909-499f-bbb7-6379408e8c9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "590f9985-1c21-44b2-b41b-01bacc052d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccd63ef-11cd-465e-8f67-cb892229ea9c",
        "cursor": {
          "ref": "8f65753a-1998-4e07-9b27-ffa5535c9927",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ded3bde5-0457-4359-ae53-e3cccb759c54"
        },
        "item": {
          "id": "dccd63ef-11cd-465e-8f67-cb892229ea9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f3c45d5f-332a-449a-8311-57a09240d16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc3fec-9f44-487a-baa5-88ac8cf50e69",
        "cursor": {
          "ref": "18581918-b8b3-4436-803b-14d45858c53a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c5d56e0d-63bc-499a-a0c5-965580f79861"
        },
        "item": {
          "id": "5bcc3fec-9f44-487a-baa5-88ac8cf50e69",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "63ad4efc-58d5-471b-b95b-10e60e0f444d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aadbaea4-68a4-48b3-ab03-045597d00cd1",
        "cursor": {
          "ref": "416c42d3-783d-4cf9-8f25-15dcd63b05b3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "930b12e9-ebf6-469d-8439-b886da12344c"
        },
        "item": {
          "id": "aadbaea4-68a4-48b3-ab03-045597d00cd1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fcb6f469-23ec-4104-8825-e94131a390e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575be8d1-4232-4eb3-9edd-7ffb272d9d18",
        "cursor": {
          "ref": "e4e291da-ec94-476a-bb59-abd02cf73c05",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "811d10df-10f9-4d76-9396-fccf77fba04b"
        },
        "item": {
          "id": "575be8d1-4232-4eb3-9edd-7ffb272d9d18",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3c13f735-e890-40f3-b93c-3c2f35eac4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dccd10-9361-4ebe-a38e-c1fc32759498",
        "cursor": {
          "ref": "b041a9fa-8289-49b8-a11e-8869873b56b6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "09c664ab-616a-48db-acb3-3a3e7b5055bf"
        },
        "item": {
          "id": "b2dccd10-9361-4ebe-a38e-c1fc32759498",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0a23a6f8-6e43-4122-a5ba-5c8ccf869d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e372be-8e92-4c59-84f6-a433a03e1454",
        "cursor": {
          "ref": "63f902f2-1adb-44b6-95fc-214fd13a20b6",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ee66671-68af-44c6-88d3-41bcb783b1e9"
        },
        "item": {
          "id": "e7e372be-8e92-4c59-84f6-a433a03e1454",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3c2b73b3-4376-4100-940a-3b05267ac38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a587f4-40fe-4223-bd59-92320b9c340d",
        "cursor": {
          "ref": "ffd33ddc-fbf6-450f-b50a-2efe691ace78",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "92771448-2845-4e43-b0b0-0a8f82e392c1"
        },
        "item": {
          "id": "d0a587f4-40fe-4223-bd59-92320b9c340d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6b55bdf-8001-4ee9-ba0a-78d638ea3d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f768382-b984-4ff3-b596-9101554c492b",
        "cursor": {
          "ref": "dc837580-df9f-4d41-aa25-90559d856eed",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "025db60b-e7ba-48d7-b87b-b2b9c2417504"
        },
        "item": {
          "id": "0f768382-b984-4ff3-b596-9101554c492b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d2f1869e-37dd-43c5-ae40-2c0401e5d92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29348c29-b25d-488e-bdd5-5cd6c87c9ecb",
        "cursor": {
          "ref": "67b61d32-dd8c-42ef-9571-3a55bf4ddf93",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "435c5f63-8b68-4744-940d-7cfb1613c11e"
        },
        "item": {
          "id": "29348c29-b25d-488e-bdd5-5cd6c87c9ecb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f7a68ec6-1302-4168-9328-0c6c58459e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb200c03-0b12-47c8-b355-7f8701452063",
        "cursor": {
          "ref": "006189f8-f71c-456a-af9b-3b9d6bc6e307",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5cda87db-b414-4c27-845e-35fa762e62ad"
        },
        "item": {
          "id": "bb200c03-0b12-47c8-b355-7f8701452063",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "be8955b0-fee1-4091-92f4-d097d86f8b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0dae8eb-84a1-4b4c-bb13-b27114426bf3",
        "cursor": {
          "ref": "c07d83a0-c0c0-4be2-b083-ea6993d0e9c0",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5bd03212-e8f0-422c-b666-5ae4ccdd2da0"
        },
        "item": {
          "id": "a0dae8eb-84a1-4b4c-bb13-b27114426bf3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "01ddd9fb-b7e7-4137-b024-9534964dd286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b448564c-8131-4a86-b29b-1af9cdd61132",
        "cursor": {
          "ref": "1d6bf236-fce4-49c7-badf-a5e3eeb4fbd0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4c677e09-edd8-4b57-aa69-912c594c879d"
        },
        "item": {
          "id": "b448564c-8131-4a86-b29b-1af9cdd61132",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "48bf49b2-7c1a-4145-bd49-f3d7ac2d1b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8fd43e-17ed-4ed8-bcc9-50995d517829",
        "cursor": {
          "ref": "831c069c-2714-4ef0-a3d9-9a7142295df1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "56172418-988f-423a-b874-07ae1cf7ed86"
        },
        "item": {
          "id": "dc8fd43e-17ed-4ed8-bcc9-50995d517829",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c6de13ca-1b1f-4117-84f3-d6eb0d1eb937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14f4689-d2ae-49b9-88ef-25d3b37dd8f3",
        "cursor": {
          "ref": "40146cf5-5a6a-4998-aa87-382f68e97639",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e39b3fd0-b51f-4f96-a168-8e4405ba31a5"
        },
        "item": {
          "id": "f14f4689-d2ae-49b9-88ef-25d3b37dd8f3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "91d31212-4f83-45fc-b7a8-cfac8ef311bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5325f9b5-2867-4694-a18e-ee5ddf28f402",
        "cursor": {
          "ref": "ad557f4c-8ba3-4120-a917-7300071d8b91",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "09a0faf1-db6c-4ba7-aaaa-0d89770626ae"
        },
        "item": {
          "id": "5325f9b5-2867-4694-a18e-ee5ddf28f402",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "467a6050-c2b2-4086-bb45-c8198e454f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9037b1e0-4da4-4857-937f-42f84f258d02",
        "cursor": {
          "ref": "6167e621-4d5e-4fa0-baa1-91637ed48954",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "075eefab-0352-4281-9615-938037c89178"
        },
        "item": {
          "id": "9037b1e0-4da4-4857-937f-42f84f258d02",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f9717552-1b8a-4ece-9ebe-2c98fa3f300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cfc418-f4cf-48e6-8e15-74903ae654b6",
        "cursor": {
          "ref": "cc0d4e84-9759-42fa-be02-e2a19cf76427",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea98d4c1-584e-4737-92cc-736bff997473"
        },
        "item": {
          "id": "05cfc418-f4cf-48e6-8e15-74903ae654b6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11d14ec8-36b8-4d97-9539-879f2b21989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cadec5-ff28-4506-b429-0951c5dcb8a3",
        "cursor": {
          "ref": "200d3bd6-406f-4b4e-b426-a71ce381c7be",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f4914754-1129-4495-b1af-f6b2949435c3"
        },
        "item": {
          "id": "58cadec5-ff28-4506-b429-0951c5dcb8a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "961ae87c-b56c-435e-82f0-a99734f11c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9183918c-c41e-448b-9d7d-7918f95d11c3",
        "cursor": {
          "ref": "b30aa5c2-0187-402c-b611-245fef98ff91",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4da374c6-8a1b-4934-b390-6676a73bed22"
        },
        "item": {
          "id": "9183918c-c41e-448b-9d7d-7918f95d11c3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "42e2317e-229a-492f-9bf7-2d2a77e99c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793195c5-8dd6-462c-9299-0df226f5012a",
        "cursor": {
          "ref": "64b8f7fd-6fcb-4c0f-96ed-1f940cb30a5e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a34ddf3c-19c3-4fd3-8e05-f1f69762ed98"
        },
        "item": {
          "id": "793195c5-8dd6-462c-9299-0df226f5012a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a8688472-53aa-4e53-b432-707fbeaf670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8350a0c2-b2ef-46f1-a7ac-0d60da55c617",
        "cursor": {
          "ref": "5a974664-a1af-4e44-bc1c-16ad993740af",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7468cea2-0c57-4594-982a-3240313d328a"
        },
        "item": {
          "id": "8350a0c2-b2ef-46f1-a7ac-0d60da55c617",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "724d87ad-2ffb-4b7f-b80a-03431e1a52e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5f9b2d-09fb-47f7-b256-12dfb6efd3cd",
        "cursor": {
          "ref": "a82bfd8f-8668-4e99-bd53-2dadf12b6e62",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b12b6d3d-2444-4efc-a028-4df3cff7d48b"
        },
        "item": {
          "id": "6b5f9b2d-09fb-47f7-b256-12dfb6efd3cd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c5eeac3f-72e1-408d-a19d-69b64f63e74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e5226f-e23b-493c-8d04-906179b8aa79",
        "cursor": {
          "ref": "94c628a6-8921-447a-abae-e052acc810b6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e6d43ef3-84c8-464b-994f-d1b59a595171"
        },
        "item": {
          "id": "72e5226f-e23b-493c-8d04-906179b8aa79",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "555b5828-9a85-4504-90bb-f8d2a54a196d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabaaf66-6a72-4c22-be99-b821a4b9e31a",
        "cursor": {
          "ref": "66a7a5f3-1517-41ff-83a4-98c879530922",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8eeeab17-8ba0-4ab3-8ce1-f7f95b2db73e"
        },
        "item": {
          "id": "fabaaf66-6a72-4c22-be99-b821a4b9e31a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5295f57d-a0ae-4c1a-bc44-741439ac380e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0a1e62-7da6-4bfe-bd3f-6ab917eb314d",
        "cursor": {
          "ref": "c4cc1960-df76-4fe8-a291-8e6a1cf865f0",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b66e1177-9caf-4269-a260-a1963f2c0d20"
        },
        "item": {
          "id": "bf0a1e62-7da6-4bfe-bd3f-6ab917eb314d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6c9326b-d75b-4df0-aa13-63172eacbb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9323c35-91f7-410d-afd0-96075fe19c3c",
        "cursor": {
          "ref": "8251e92f-ff8b-4041-83f3-021a69cd6706",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e7bdbd50-69da-4544-b0cd-44a428c4c011"
        },
        "item": {
          "id": "c9323c35-91f7-410d-afd0-96075fe19c3c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "77b50471-2b14-4558-90d0-c020ae00a0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c563a3e2-b489-4f5c-9582-810159522b61",
        "cursor": {
          "ref": "39952f7c-f3d1-4fb1-aea7-200606c1d3af",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dd12e751-7d92-4095-ad09-c71a447b56b2"
        },
        "item": {
          "id": "c563a3e2-b489-4f5c-9582-810159522b61",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9b5934bb-1ea3-45d4-b6ff-981f35db794e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f850af-40c3-4d5c-b962-23c0f230136f",
        "cursor": {
          "ref": "817f3ad9-1987-4318-bf3b-b9b0472c5696",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f675ed4-823e-487b-948a-354bd1cd3c7f"
        },
        "item": {
          "id": "68f850af-40c3-4d5c-b962-23c0f230136f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b5e18054-cac6-4dcd-81d8-fb9fc03b9547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11b1953-7472-44ab-8a05-01c002933043",
        "cursor": {
          "ref": "408ee1d3-89b8-44c2-8c9e-b690e81731f1",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e3bce0b8-04e9-49fa-a8f3-a1976b5c35cd"
        },
        "item": {
          "id": "a11b1953-7472-44ab-8a05-01c002933043",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "794dd99f-0e27-414f-baf6-2b141ef9ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05542207-1a26-4835-af43-892fac12a4f3",
        "cursor": {
          "ref": "c7df03bd-2cbd-4bd9-b2b7-621976994422",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "242f898b-36ac-4b36-9b02-71528d0e77bb"
        },
        "item": {
          "id": "05542207-1a26-4835-af43-892fac12a4f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f334cc94-dd06-4166-a155-5c76778a51e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4948c6-781c-4018-8393-6efd6ff5cfc7",
        "cursor": {
          "ref": "68eeeb14-5c76-4431-b8db-2a71f5cc658f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cbba0985-2591-478b-b46e-ee521eeb9dc6"
        },
        "item": {
          "id": "af4948c6-781c-4018-8393-6efd6ff5cfc7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8bf468c4-f9d9-427c-9614-c2691ce9ea7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c34ab1c-e0f0-4ef3-9b44-1411539f0652",
        "cursor": {
          "ref": "154d6a44-7578-4c2f-afe7-e1ca361eb776",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9f0f7a3e-be15-42f1-8cdd-2d005df0311b"
        },
        "item": {
          "id": "7c34ab1c-e0f0-4ef3-9b44-1411539f0652",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "769cbcc4-5d9d-4209-9236-fdaee3cef20b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0114d29-2b6c-4747-b7b0-249094b80e5c",
        "cursor": {
          "ref": "cc0bcd0c-36a4-4d48-bfc3-7a4acca26d6d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd1b0e4b-6d59-4611-aa41-50d1359c6dcd"
        },
        "item": {
          "id": "c0114d29-2b6c-4747-b7b0-249094b80e5c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0e43eac2-3078-490c-bdbe-ea3ad911af30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0953f8cd-31a9-49ad-9aec-095906739d97",
        "cursor": {
          "ref": "1ca52e6e-079f-486d-a531-a91263375967",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "250bfb85-8a94-459e-a0f4-859ddb82d67a"
        },
        "item": {
          "id": "0953f8cd-31a9-49ad-9aec-095906739d97",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bf44318b-5233-4a8b-8e97-edeed386f4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27de577a-95fd-48f6-8e08-9a112d500cb0",
        "cursor": {
          "ref": "a18404ec-c333-47e1-a599-7e14aeb39985",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e13edd1b-e9f2-4b7c-9b0a-0ee9fb746637"
        },
        "item": {
          "id": "27de577a-95fd-48f6-8e08-9a112d500cb0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "097e7e13-91f2-432b-aa0c-c7aaf5c6b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429fa55d-0d8b-4eaf-b9ac-b6957390910b",
        "cursor": {
          "ref": "b4f6834a-4e15-4ef3-ae6c-8946d693825b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ab5042d0-75e2-4c06-8e05-4f27d062e508"
        },
        "item": {
          "id": "429fa55d-0d8b-4eaf-b9ac-b6957390910b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4dcf440a-5e65-4d9b-9f00-07933e8b2de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148cafde-5926-49f4-b77c-b3e0fddbc868",
        "cursor": {
          "ref": "1c651eef-18b6-4feb-bb5a-c6695109f28a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "77642788-0347-4262-bbe6-0546136f3b02"
        },
        "item": {
          "id": "148cafde-5926-49f4-b77c-b3e0fddbc868",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "42937e1c-ebf2-40e2-be46-2b6ea4c86d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39977e82-3f12-4e59-a793-085cb1a44f5b",
        "cursor": {
          "ref": "e7c7b852-c923-44ce-9d2a-e5f901e0279e",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "55b1f9e3-bf91-4efd-b054-3f856b9ee7c1"
        },
        "item": {
          "id": "39977e82-3f12-4e59-a793-085cb1a44f5b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9edc5edd-395f-4de7-b729-a0e49a656770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d46dcf7-b549-4657-8950-345d69bc3874",
        "cursor": {
          "ref": "2c42ac40-c823-49d6-80e4-54a72bf620cf",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1f74f515-be12-42e7-acf6-c2deac49b647"
        },
        "item": {
          "id": "2d46dcf7-b549-4657-8950-345d69bc3874",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fac3deba-e95c-4969-a929-19658bd92c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06bd79f-2aad-48a6-990d-ff9b3c7b9a52",
        "cursor": {
          "ref": "ba5b26b2-9687-4b4a-908d-b985fcd2c1c8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e8e52e86-dbb2-4ef9-9ede-07a19c337f3d"
        },
        "item": {
          "id": "f06bd79f-2aad-48a6-990d-ff9b3c7b9a52",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e20449ba-b7e7-4a18-9f7a-b878711df454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf2d724-cb98-479c-bf30-cf7692a99703",
        "cursor": {
          "ref": "39697bdc-14e6-476d-b36b-93a32105aeb4",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4252676f-9153-474d-a034-08a8ce1bc356"
        },
        "item": {
          "id": "2cf2d724-cb98-479c-bf30-cf7692a99703",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0d75e85b-9d4f-48aa-b70c-9b5e92307b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d7ad71-fb24-4d13-870c-434339fa77fa",
        "cursor": {
          "ref": "41047e52-4896-4a1f-8758-bc6400746acb",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cd202d4e-aaf7-4ce3-9fe1-9545cf7466fc"
        },
        "item": {
          "id": "75d7ad71-fb24-4d13-870c-434339fa77fa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f89a41b4-a009-4a57-9947-d93d34ee52e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c9165a-78b8-4a78-b950-22c953a8041d",
        "cursor": {
          "ref": "4d76526e-dc02-4784-9e81-46c704fe01fa",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "089f7104-c4b8-493d-9772-197cee8f4085"
        },
        "item": {
          "id": "d8c9165a-78b8-4a78-b950-22c953a8041d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1ef6882e-aac9-4c62-b755-b2d341b04b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483d9fff-89f6-4f4c-b5ba-60eaa29dbd9f",
        "cursor": {
          "ref": "da7f75f5-a416-4b42-8ba0-804b4d538fd4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ceaacea4-7892-4cea-8333-5ad04e2127c5"
        },
        "item": {
          "id": "483d9fff-89f6-4f4c-b5ba-60eaa29dbd9f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "997add55-cd0a-43ba-b4e8-bd98c9e26873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050ff60e-dca2-467b-8eae-e46c03e89118",
        "cursor": {
          "ref": "8625b287-8ce4-4ed1-bac2-90713b25929e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2daa02e0-32f2-4c07-8947-419ea068e477"
        },
        "item": {
          "id": "050ff60e-dca2-467b-8eae-e46c03e89118",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09576249-d6df-4e3a-9fd7-2dfd4fc47d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef66dea-ac0d-4c89-9fc4-977926066905",
        "cursor": {
          "ref": "b4f37ea0-9b21-42ba-983a-d1ba145a68bc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0e5e3734-e3d3-45d2-90f5-d5240c47b5b1"
        },
        "item": {
          "id": "5ef66dea-ac0d-4c89-9fc4-977926066905",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a03b6947-c809-4f4e-af99-b8adac975ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e853e12-e752-4351-b36d-0e7bb96a90a3",
        "cursor": {
          "ref": "6370f7a1-ffae-48f6-8f3c-814c58451c15",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8c4d6e1f-4008-4d9c-a30c-5b05319a510a"
        },
        "item": {
          "id": "0e853e12-e752-4351-b36d-0e7bb96a90a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bc67942-5911-4aac-809b-3a6bec4f3fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1130a6b4-9b12-4ee2-97af-8b400deea821",
        "cursor": {
          "ref": "4237ea6d-85a7-46e1-ae34-03d8ad249dfa",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "de629639-29fd-4a6e-a15c-e581b4f2d727"
        },
        "item": {
          "id": "1130a6b4-9b12-4ee2-97af-8b400deea821",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "525cb0e2-ccf3-425e-a26f-ce68345af4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a546f5b-af3f-44a0-9d69-310762268343",
        "cursor": {
          "ref": "c2189f8f-6a9d-4a02-b222-d9114a758d7b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cb49130f-1c05-4f0a-945c-3cb8009d73a7"
        },
        "item": {
          "id": "6a546f5b-af3f-44a0-9d69-310762268343",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cd63dde4-0eee-4b62-8cf6-1799d2e6cb6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c233d3e3-fc2b-4483-b844-2a23f0a0a0b3",
        "cursor": {
          "ref": "b52ca6af-4e64-49ac-a6d3-5a155b5b2a4d",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7f5a7cbc-87f3-4593-9bcf-b90b8e536007"
        },
        "item": {
          "id": "c233d3e3-fc2b-4483-b844-2a23f0a0a0b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2e646921-5377-4480-b481-ad83a50bcf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e738fa-415d-4ea8-844b-c0b638b2306d",
        "cursor": {
          "ref": "6d3d4221-5b12-4e1b-8354-1b3ddfa0a07c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a29d1c41-d6f8-4315-9712-07a833fbcc7d"
        },
        "item": {
          "id": "c5e738fa-415d-4ea8-844b-c0b638b2306d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5187c7c3-9ef2-4213-9cd9-f0b0b44777eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11174e51-23b9-40e6-9ce1-a86b19c85010",
        "cursor": {
          "ref": "54156c84-600d-4601-88fb-265c4f3f3868",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5ab58378-7e2b-4603-bbb5-cb853b89e52b"
        },
        "item": {
          "id": "11174e51-23b9-40e6-9ce1-a86b19c85010",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa168413-2d1d-49a7-a161-3a9cd276db0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25583fa-d0fa-4345-95e0-df7419e9c3d4",
        "cursor": {
          "ref": "ab274f61-209c-44ae-b8ce-2e5527712fa9",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "67230040-1abc-403d-a5f0-331590c84ac3"
        },
        "item": {
          "id": "f25583fa-d0fa-4345-95e0-df7419e9c3d4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dbbc5da1-b1b1-4e75-8c0d-223c756cd10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c328c0c-8b6f-4cb3-a102-cf7709d85f1d",
        "cursor": {
          "ref": "1951a224-efaa-41b6-9eaa-703f06d39701",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5d6bc52c-8771-4487-a829-1c004c9c2c4c"
        },
        "item": {
          "id": "9c328c0c-8b6f-4cb3-a102-cf7709d85f1d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b12d4b89-4a23-4271-8091-48ce6cbde666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380facdc-ac10-4c12-b029-bb3251d01917",
        "cursor": {
          "ref": "7ab36585-1dd1-4a1a-889c-1c7809c563a3",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b4de843e-17d7-4099-9a50-63078b6ccefe"
        },
        "item": {
          "id": "380facdc-ac10-4c12-b029-bb3251d01917",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "57c9541d-3fff-4bb8-beee-f9deb318f640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f49c2-2c7f-4e80-a06b-985d95548dda",
        "cursor": {
          "ref": "b4cecc2d-e31a-4264-ba06-29d735e9e34e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e0330e04-3905-46ce-afe0-e354c3b81191"
        },
        "item": {
          "id": "5d9f49c2-2c7f-4e80-a06b-985d95548dda",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ebaa758d-6123-4859-aa08-899d9ab75bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17c1924-57f3-4830-ad06-8ee59a6509cd",
        "cursor": {
          "ref": "b34b6be9-fa6b-43d2-a41d-e5448fd44943",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5c095af6-9538-43d9-9e6e-19c1ae06edab"
        },
        "item": {
          "id": "b17c1924-57f3-4830-ad06-8ee59a6509cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6444a60c-cf89-4ffc-a605-f8d862264b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76db1d3-2f62-4658-94e4-04f51c06c271",
        "cursor": {
          "ref": "88280e43-b1e6-4e54-847c-1f748aef6590",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67bd9350-1ac6-423b-8f88-1e2b50d8ba9a"
        },
        "item": {
          "id": "f76db1d3-2f62-4658-94e4-04f51c06c271",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6490f90f-e338-429d-b75a-fe574e0e27b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbafc56f-c49a-434c-a4cf-e17c8c129395",
        "cursor": {
          "ref": "aab9795f-84c4-45d2-92e0-9653be3a63a0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d5e6a740-f8be-4879-b784-7ce63f5717cc"
        },
        "item": {
          "id": "cbafc56f-c49a-434c-a4cf-e17c8c129395",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3244f796-5c15-4218-b053-d864c9121222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1093c6-b739-4b73-a465-ef5b2c7b2a8c",
        "cursor": {
          "ref": "ceba14b6-a0ce-47c1-91e7-ce09f986f758",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ebfaf978-23b2-4768-a6b6-cd5d73783de2"
        },
        "item": {
          "id": "dc1093c6-b739-4b73-a465-ef5b2c7b2a8c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c67065b1-a95f-44e7-a1b8-8f96879871fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafe4ab4-0ff4-47f3-8033-ff5ba8481ffc",
        "cursor": {
          "ref": "a80f9210-0fd2-4a42-a387-476fa0e240f0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9885b47d-8331-415f-99b3-447b15a5e8fe"
        },
        "item": {
          "id": "bafe4ab4-0ff4-47f3-8033-ff5ba8481ffc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0aee248-4bf7-4f3a-abfe-ef94448f768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c3df71-3776-43a3-a908-a42b7b0aebf2",
        "cursor": {
          "ref": "ffa6b8ee-818e-424d-9997-6bf8c40b01d0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2eae5a0e-e888-447b-a32a-f161f48fcec9"
        },
        "item": {
          "id": "01c3df71-3776-43a3-a908-a42b7b0aebf2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1c47349a-aec1-4248-af3e-df88bdb4f558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05ade07-16f0-472b-8a88-185da9bbfb70",
        "cursor": {
          "ref": "c73d3eb8-d822-4495-8ed3-ae7e2e65627d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "408d1e01-d915-47e5-a7f3-9966a4ab2b2d"
        },
        "item": {
          "id": "d05ade07-16f0-472b-8a88-185da9bbfb70",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ea6279c-5028-4b32-aae0-b5bf5112c980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d68276-0e1c-4b3c-935e-89f126b8c44d",
        "cursor": {
          "ref": "62c14eeb-23eb-4cf0-852f-77a987c3e1c3",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "207bfbfe-a0a7-4272-a76f-790f0e7b53af"
        },
        "item": {
          "id": "99d68276-0e1c-4b3c-935e-89f126b8c44d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8ea31ae8-8e62-4158-a101-ba53a4a4a309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623596f1-e078-460a-9a64-4828ee1d0954",
        "cursor": {
          "ref": "c155c34e-efbf-46e3-9084-6d60cb13666e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7d7a3e3e-3be9-45ea-ade2-628cad8cea4b"
        },
        "item": {
          "id": "623596f1-e078-460a-9a64-4828ee1d0954",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f550ba36-87f7-4adb-89b1-5989d2879dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1e457f-7245-4861-821a-67d1a20100bb",
        "cursor": {
          "ref": "75633d1e-4673-4d26-8cd7-f987af2489bd",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52903382-cbf5-44a1-8552-4a9ce4cfb852"
        },
        "item": {
          "id": "fd1e457f-7245-4861-821a-67d1a20100bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7c43ac80-d19b-4ce1-bd73-c9882c7139f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b364ed-787e-4ba0-9956-946b6d904d23",
        "cursor": {
          "ref": "01ac204a-98ac-43b0-88b3-3396dac1670b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c8e91d56-b834-4845-9c3f-cf92ac3af929"
        },
        "item": {
          "id": "94b364ed-787e-4ba0-9956-946b6d904d23",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "51813aa3-82e2-46a8-824a-6ad9fa8596e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ee1613-c943-4b35-881c-93975f649e10",
        "cursor": {
          "ref": "df4b6b83-42e8-4347-8051-e04abb2fdc5c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ade08ba4-af56-411e-a350-9a008a7b3d40"
        },
        "item": {
          "id": "93ee1613-c943-4b35-881c-93975f649e10",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "52057e30-d0c2-4100-b306-d26f16abad13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440a2ac2-4e13-41c7-b76b-94dadf135c9a",
        "cursor": {
          "ref": "1bfefa21-952a-4088-84b5-254e87e7f939",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "10d945b4-db29-42a2-93e7-06bafe9ecd2d"
        },
        "item": {
          "id": "440a2ac2-4e13-41c7-b76b-94dadf135c9a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "652e4243-1041-4483-9ed3-1b8185772cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcd335a-de93-4880-b24a-eb9a6f979990",
        "cursor": {
          "ref": "10d3d215-79be-4741-a375-a321a9a2fc0b",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4181288d-e9c1-4444-8ab1-cdf6b73a2245"
        },
        "item": {
          "id": "8dcd335a-de93-4880-b24a-eb9a6f979990",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "652faff2-b9c7-4d22-a58e-71ec25a27ab3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2792a442-3779-4467-9693-69135ee2c55b",
        "cursor": {
          "ref": "fb30df17-46f1-417a-91e4-0255ad9946d6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1adcb436-08f9-4f3e-98b2-9326121faeef"
        },
        "item": {
          "id": "2792a442-3779-4467-9693-69135ee2c55b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8bc2b276-2532-4f58-ac38-1af351c5ce84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7447716b-690b-49b8-a42a-4683e886010e",
        "cursor": {
          "ref": "16fc6c7c-49d4-4531-ae82-2ddd504f7a71",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5b525269-785f-42b5-b540-f881e11f6ec5"
        },
        "item": {
          "id": "7447716b-690b-49b8-a42a-4683e886010e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "01fab76a-458a-4e5d-a5ed-d8d5fea5ee71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c0763a-91f4-4edf-81f0-d2cfd384b535",
        "cursor": {
          "ref": "2755374a-7af1-4494-b358-491deb5f1600",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1089d897-6e9b-4f6a-99da-db1056152e2f"
        },
        "item": {
          "id": "04c0763a-91f4-4edf-81f0-d2cfd384b535",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3890e0e6-795c-42cd-bd71-bde8cfa92348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ff60c-ec86-417e-8c63-29465417feee",
        "cursor": {
          "ref": "8fc63244-cbad-452f-bf82-0299367bfd3c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78decfc1-91d2-48d2-a481-ad55b6cd3b90"
        },
        "item": {
          "id": "c96ff60c-ec86-417e-8c63-29465417feee",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6dfdc829-ed7a-4e1a-b83f-09dc4f9834fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63128a7-75c6-49b3-bba2-bd981d33afc9",
        "cursor": {
          "ref": "84d7da6f-47b0-4604-ab59-618c220ff195",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a81f977-c0f8-4d0f-9fdb-d15dd443fe37"
        },
        "item": {
          "id": "b63128a7-75c6-49b3-bba2-bd981d33afc9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a3c28b28-e8d9-475c-b00c-d17f1ff3316c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c598501f-7a7c-4dba-9cd4-e7cc003fbc2b",
        "cursor": {
          "ref": "b23b213e-8719-4276-b8f4-efd00ecd5515",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "95330a51-02bb-4abd-8798-3743cc541251"
        },
        "item": {
          "id": "c598501f-7a7c-4dba-9cd4-e7cc003fbc2b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "22e3272e-d405-4ec6-b755-66964617b431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5a964d-d70f-463c-939c-b8e3a01b9655",
        "cursor": {
          "ref": "7f6053c9-9c54-4bba-a41f-a1164968285d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "95096008-5f40-46be-ab59-7ff5b0e9d6fc"
        },
        "item": {
          "id": "2b5a964d-d70f-463c-939c-b8e3a01b9655",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8d949b24-95e9-4514-9b6a-7551c4950ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3268d5c-ee72-4797-9b9a-90334353b621",
        "cursor": {
          "ref": "dd874bf4-02f0-4fa1-b10a-15edf9d9ede1",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "202846f5-e3ad-40b3-b810-7a957e8fde95"
        },
        "item": {
          "id": "e3268d5c-ee72-4797-9b9a-90334353b621",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cad01b33-c8ad-4fc4-8ff8-479a4d2c3823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90aea30-f42d-47a8-acb2-b07d02f71611",
        "cursor": {
          "ref": "bb6bf8e4-06f2-4c3d-bf8c-d0b2ed6f7e92",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e431c18-b1e7-46bf-b60f-68368bdb101c"
        },
        "item": {
          "id": "d90aea30-f42d-47a8-acb2-b07d02f71611",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "99256887-8975-4e32-ab89-7cceb5384df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c356c6f-bbb8-44d8-a671-be789bc055ee",
        "cursor": {
          "ref": "daf74ec8-a2af-4e9c-92d5-5415f8901c3c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a441641e-e3e1-43be-b52b-d3eba0dc089b"
        },
        "item": {
          "id": "3c356c6f-bbb8-44d8-a671-be789bc055ee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b6fa7762-6ff6-480b-8082-a028f3d3c4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b2c73e-1a9e-4a80-8a9a-30d2d22d4c20",
        "cursor": {
          "ref": "92b6a578-239d-4cf7-bd02-f5cb8cc5677f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ac5879d4-5d17-4633-b60f-15a7f12d7b78"
        },
        "item": {
          "id": "85b2c73e-1a9e-4a80-8a9a-30d2d22d4c20",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7985ee81-d63e-4533-87b3-b610af052546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fa8a42-1d1e-4d22-8857-8c7649a42c47",
        "cursor": {
          "ref": "f5a606ae-c142-4c4e-8afb-7c969ba6d142",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c48ab555-3101-4000-82d1-0bdad1b08ab7"
        },
        "item": {
          "id": "16fa8a42-1d1e-4d22-8857-8c7649a42c47",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b599aba-1442-418e-b53a-0ed121ef98ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a4b2cf-b305-4086-8611-cc98182acb53",
        "cursor": {
          "ref": "134f32d9-c71c-4721-9465-33d9f94b1637",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7d83e42b-1e61-4f2c-9edb-4e848e40b499"
        },
        "item": {
          "id": "a3a4b2cf-b305-4086-8611-cc98182acb53",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "185ee36c-24a1-47d1-a54a-ccd893f5b041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf77e9c-cb98-464d-9032-1b4eb27483a5",
        "cursor": {
          "ref": "51acd617-41e1-4f33-81f6-b4134dab5a11",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "97036c7c-de28-4594-8923-dd2201ff8e19"
        },
        "item": {
          "id": "eaf77e9c-cb98-464d-9032-1b4eb27483a5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0bb46cd2-97e9-485f-9ab1-17562084cc08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbb23fe-aeec-41bb-83da-7270033231ab",
        "cursor": {
          "ref": "29149c8b-dcee-4ce3-b811-19d6a5113676",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e2933848-812b-4922-a35a-19b041ed7642"
        },
        "item": {
          "id": "9dbb23fe-aeec-41bb-83da-7270033231ab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d5b5001-edb6-476b-9668-1e30c52c7ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392da357-7db5-40df-92e2-ebf437b31587",
        "cursor": {
          "ref": "87022e70-28d5-4fcd-8776-e4ed75c236f1",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aa01f495-6597-464b-8e78-730734bd8a2a"
        },
        "item": {
          "id": "392da357-7db5-40df-92e2-ebf437b31587",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dcf2bca5-7ffb-42d3-a7f2-2444be4aadc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b644e0-491d-4a09-a83c-87d914fe4f05",
        "cursor": {
          "ref": "b9d0a2e0-385e-4414-9180-5dd3a43aff53",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5ec8b063-5729-4da7-874a-e72dc04346c1"
        },
        "item": {
          "id": "67b644e0-491d-4a09-a83c-87d914fe4f05",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c4561750-38cf-4eb4-ab01-b481adc23098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de9465a-9d40-4f0a-a9f6-5efd269c0cda",
        "cursor": {
          "ref": "42431873-9d5b-4a4e-83ad-355841b7f48d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "5964a954-e80e-4bab-804e-ed22fff0126d"
        },
        "item": {
          "id": "6de9465a-9d40-4f0a-a9f6-5efd269c0cda",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5af93167-d496-4d90-a055-4447497e3495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdfc933-f241-46bf-b53c-8b5ff4a081de",
        "cursor": {
          "ref": "a339532d-4cf3-4e3c-af07-ac0bdac4d79a",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a9a04e9d-4c90-4232-92de-b1fcdf0f5683"
        },
        "item": {
          "id": "0cdfc933-f241-46bf-b53c-8b5ff4a081de",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e67860bc-62ae-4f2d-8a4c-b52e0eb30ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8db3475-1b7b-4516-8c52-7adcf04aa7e7",
        "cursor": {
          "ref": "44fdf9cb-291f-4871-ad6d-bf34da16b842",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "13e49c40-6716-4c73-9d8f-959c4ca96011"
        },
        "item": {
          "id": "c8db3475-1b7b-4516-8c52-7adcf04aa7e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3cc1902c-7c91-4b9e-b867-876d4ea40df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149f1fa-9248-45ed-ae23-b90a64d41115",
        "cursor": {
          "ref": "7ac8131a-805f-40df-a2f6-c3fd51acd979",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7f3e56a9-64f0-4ac8-bb25-e25b269524ed"
        },
        "item": {
          "id": "1149f1fa-9248-45ed-ae23-b90a64d41115",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "814e338c-e199-4edd-8605-475a3cdbceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2227af5c-dee5-4886-be26-3a025c555bd9",
        "cursor": {
          "ref": "7a507c09-e7be-438a-94e6-69d93331ebd5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "28be425d-4e15-4b17-ad9e-a591c164213a"
        },
        "item": {
          "id": "2227af5c-dee5-4886-be26-3a025c555bd9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2c0a49e8-ed59-408a-b12f-c96c32e9ce99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e682095a-83e1-4b66-b9a8-9c1d4e270c04",
        "cursor": {
          "ref": "aff85e4f-1477-4563-b07e-c8410030a15d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "47f31428-2514-47b2-8f7f-623df0a972e9"
        },
        "item": {
          "id": "e682095a-83e1-4b66-b9a8-9c1d4e270c04",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1a684e21-7a6a-41bc-a9f3-235a9dd35828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fbc630-548e-4d8f-bd06-f8de5785b03d",
        "cursor": {
          "ref": "a587da78-b848-4408-aea2-f535596ebc7f",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e090771f-4526-4d84-96a5-8a4801cd2691"
        },
        "item": {
          "id": "75fbc630-548e-4d8f-bd06-f8de5785b03d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1cbb4b2a-0c11-4a47-a500-6f592f35f6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af9d706-2dc7-4321-9aef-af5b3b596875",
        "cursor": {
          "ref": "365b6eb8-c5d7-4e1b-8142-821986e0c494",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dffa060d-8747-43e7-a580-418ba5a3dfb4"
        },
        "item": {
          "id": "1af9d706-2dc7-4321-9aef-af5b3b596875",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "110ab4a4-60ff-47af-b289-a0cb8719d4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c730cfa0-aa7c-445e-8e2c-afa94d936c07",
        "cursor": {
          "ref": "313143ef-5216-4bdc-971f-f67ee3aca21c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6bfec0be-6f8b-4cc9-a87b-510f342a86f4"
        },
        "item": {
          "id": "c730cfa0-aa7c-445e-8e2c-afa94d936c07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a67c14c3-c923-42f6-8a2d-56ba7e912815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21d51a3-4738-4e98-aea9-568247e20dc9",
        "cursor": {
          "ref": "19bd1bb4-01ff-403a-a5bc-e86c9c573c0f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "86e79588-d8e6-47a4-abc5-c5108cfd2d7d"
        },
        "item": {
          "id": "a21d51a3-4738-4e98-aea9-568247e20dc9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0d6786ea-c7ee-4eeb-a8e3-24b0a50b8358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3defaacf-90aa-4367-874f-66b9e0a0910e",
        "cursor": {
          "ref": "14bb31b5-7f38-4307-aed3-c2b873a76d14",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d4773eb0-1e6e-4811-af09-fb7a7e9645da"
        },
        "item": {
          "id": "3defaacf-90aa-4367-874f-66b9e0a0910e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "329a2003-e6d3-470e-849a-fda259b4e09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca42667e-8afc-478f-adf0-68c11e7f4572",
        "cursor": {
          "ref": "2b0f26f3-97d1-433b-a518-06dd30aebdcd",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "96884376-13f3-4929-b22d-329e42082677"
        },
        "item": {
          "id": "ca42667e-8afc-478f-adf0-68c11e7f4572",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "824017bc-6f6d-4b98-ad2a-4fa978b68b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f9fc1-453b-4037-8be4-f5e44d11389a",
        "cursor": {
          "ref": "66584afd-3631-4f9e-8299-c3f0a74bf1f0",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "08657ead-5596-4804-bad5-aee1b246ba60"
        },
        "item": {
          "id": "f98f9fc1-453b-4037-8be4-f5e44d11389a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "73151e16-6b5b-4717-9300-cb0d18cb42ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c358608-1873-4671-ab26-7b122babf0c5",
        "cursor": {
          "ref": "f525be3a-4c64-4871-903a-565c8743b4e1",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0920608-9069-4fd7-9584-4c9142150f0d"
        },
        "item": {
          "id": "4c358608-1873-4671-ab26-7b122babf0c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9baf5606-9331-422c-91e2-591ca2007c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604735e5-c088-4303-9672-a12ce16880a9",
        "cursor": {
          "ref": "2643b6eb-d405-4513-9bbf-ec177548bc5a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dd047136-27c6-485e-a830-4a714241c18b"
        },
        "item": {
          "id": "604735e5-c088-4303-9672-a12ce16880a9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0a8337a-4ff2-48d9-b3a3-3e0c287c2c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8e2fe2-14c7-4eb7-a44f-36cda0a41f07",
        "cursor": {
          "ref": "d952f3ed-d147-4d37-85ea-dedb21613f86",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c3f4c490-8025-4dbd-8ddf-c18a9e90b0ea"
        },
        "item": {
          "id": "9f8e2fe2-14c7-4eb7-a44f-36cda0a41f07",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bef71cda-6dc7-49e8-88da-8fe0e0c4da3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d33deb5-256d-46eb-a6a5-66f5913dc7e7",
        "cursor": {
          "ref": "b1f5f4c2-9e7b-4cb5-82c0-b33e73d96372",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "84b40807-1094-445c-a7c2-0fdd58fa7362"
        },
        "item": {
          "id": "9d33deb5-256d-46eb-a6a5-66f5913dc7e7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d3f9f7dd-2520-4483-895f-7e830edaa05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca02978a-f132-4c37-9717-f4f70bbc615e",
        "cursor": {
          "ref": "8638aa69-ccf0-4bff-bdc4-fdb63f6be5f7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "71aa96a5-9427-4d29-a321-c71d3197940f"
        },
        "item": {
          "id": "ca02978a-f132-4c37-9717-f4f70bbc615e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4b8a2206-b22e-4162-900f-1bf72d60b807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4287d9fc-1cf7-4200-b6eb-138da47a2078",
        "cursor": {
          "ref": "eca5a8a1-4be3-4482-bd9f-8c8e4eda1c80",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "08fecaa1-7a3d-4fb5-98cd-8d4db2b8411f"
        },
        "item": {
          "id": "4287d9fc-1cf7-4200-b6eb-138da47a2078",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6aa29062-9957-4ff8-a84d-e3842cafcac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0f041f-65d8-45d3-ae91-d62800d5fa63",
        "cursor": {
          "ref": "813d316a-e3a6-4d40-bd72-376d0841fa3a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "00c228f5-5eea-44e5-a431-447e0dd515a4"
        },
        "item": {
          "id": "fe0f041f-65d8-45d3-ae91-d62800d5fa63",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cadd6c2d-fd1c-41f8-9fd3-5b71942069bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fb1a7c-f4d6-4456-8f87-881ade055ea1",
        "cursor": {
          "ref": "1e8ad4e7-5162-4bc2-bd57-9fa78ac79031",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0c6962cd-d560-474a-b76e-35b933270b18"
        },
        "item": {
          "id": "07fb1a7c-f4d6-4456-8f87-881ade055ea1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e2067a27-807d-421b-afa3-b0ff6a138c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927faedb-4e21-4c37-a598-b2ec78bc669f",
        "cursor": {
          "ref": "9134f96f-8071-4577-b140-298090a231b6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b01421cb-842b-426a-a650-9af3d388d4f0"
        },
        "item": {
          "id": "927faedb-4e21-4c37-a598-b2ec78bc669f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "27a0e39a-55da-4589-a9a0-9118f7c24917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b65ad94-7dbe-467f-a1bb-d616e9379b96",
        "cursor": {
          "ref": "be8fbb21-2b08-44a2-a195-ec9fd3ca4b51",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8a463d43-40b1-436f-a5a9-740d59e15716"
        },
        "item": {
          "id": "1b65ad94-7dbe-467f-a1bb-d616e9379b96",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "89df490a-31cf-47ac-965e-e46caa83895f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba7cf1e-b490-4d01-b59f-d330c3e3eb6f",
        "cursor": {
          "ref": "e2a8fda3-a226-4081-bcfe-7ef6fb57d30c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d8559885-6efa-409a-ac99-a3de0af53487"
        },
        "item": {
          "id": "bba7cf1e-b490-4d01-b59f-d330c3e3eb6f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8cf8b9bf-25fc-4e74-b204-dc8354e7acc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f9c01a-a9fe-4b1c-8541-4f2ff51c75c7",
        "cursor": {
          "ref": "714f4c14-7d55-4e5e-81ba-53604d2e6b6c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ec4af2d2-ee7e-45ee-896a-f6c9142f15e7"
        },
        "item": {
          "id": "48f9c01a-a9fe-4b1c-8541-4f2ff51c75c7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "de8f2d28-4edf-4212-88d4-66b3a55247bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def9fbeb-da47-4dc4-9420-5cae356a780b",
        "cursor": {
          "ref": "2c85f634-1273-41f1-b211-7ed6c6078a88",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "92ab69f7-d2eb-4979-8144-147d8531131e"
        },
        "item": {
          "id": "def9fbeb-da47-4dc4-9420-5cae356a780b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ca28d50c-6a58-4a2c-b1fd-9131453ab264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a641de22-54ec-4077-bae1-55ab04effede",
        "cursor": {
          "ref": "da4f927b-e63d-4532-b23a-571b99f2a70e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "de6a7615-a183-4ff0-9dfa-e4f4966d1a03"
        },
        "item": {
          "id": "a641de22-54ec-4077-bae1-55ab04effede",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e39edcb-9354-4bff-b224-3d38bfa26c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c485ff82-cd90-4e69-ab1a-1e381149e9b3",
        "cursor": {
          "ref": "d7a47de3-c157-4e62-8937-0f1cc180bf60",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dd230071-5b35-4ff1-8a7b-380162436e96"
        },
        "item": {
          "id": "c485ff82-cd90-4e69-ab1a-1e381149e9b3",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9c18edac-686f-44cc-88e5-4806e31a1368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b3a89-cf01-47e0-a635-f996a6ab3e73",
        "cursor": {
          "ref": "c7554dc4-8a53-46fb-b768-8a8042e0d4ef",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ae65ffcc-140f-4079-b979-6563c30ea616"
        },
        "item": {
          "id": "978b3a89-cf01-47e0-a635-f996a6ab3e73",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "56e846b2-8e4b-4438-924c-ed89b9ab87f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5af546-50a4-4776-898c-0007c190fb56",
        "cursor": {
          "ref": "5c0522c4-3ed2-4ac4-a922-5241dafc2e8c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "00468d6d-55c9-40a9-9f5a-11f6bdb62771"
        },
        "item": {
          "id": "3a5af546-50a4-4776-898c-0007c190fb56",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "683b9c89-0d4d-4b47-9d57-af17b4781f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec69629-57a7-4182-a43b-8df0e6613e78",
        "cursor": {
          "ref": "ae6cd536-3387-4965-b741-905463c2fda3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f82c647-b20b-44a7-8d0e-0dee8f93d821"
        },
        "item": {
          "id": "9ec69629-57a7-4182-a43b-8df0e6613e78",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bc926805-a46d-4a45-a7ed-2a3297484446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b54d68-007c-42e9-a97e-8bdf0d81b966",
        "cursor": {
          "ref": "bf148eb0-5500-49a1-a812-ab67b77d6cd2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e078c43c-ad2f-4d80-bc9a-d8f1e63a08d3"
        },
        "item": {
          "id": "32b54d68-007c-42e9-a97e-8bdf0d81b966",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1f78bc72-c773-41fd-8e7c-3abefe96f26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7bfec8-8723-40af-90ea-d816dfcd5959",
        "cursor": {
          "ref": "0755aaf9-8190-454d-aaf5-9a3372348a2a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ccf28dc7-becf-4514-ad76-78d3ff513247"
        },
        "item": {
          "id": "ad7bfec8-8723-40af-90ea-d816dfcd5959",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "31c4d941-5583-4413-b094-21a4b96b8e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b995eca2-9300-44a6-a85c-ae23638b4855",
        "cursor": {
          "ref": "1660d359-7aff-472f-b769-1accb76fbcdc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1651dab1-5716-438b-a5f1-016d007f29e3"
        },
        "item": {
          "id": "b995eca2-9300-44a6-a85c-ae23638b4855",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6b36437a-fa19-45a3-b40b-4f15c57afdd6",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "9a259d0c-aef4-4bd6-9b28-c36c102c90e1",
        "cursor": {
          "ref": "ea02921e-382a-429f-9850-e761e300f40d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3d242fd7-434f-43fb-82f2-15075fc25c6b"
        },
        "item": {
          "id": "9a259d0c-aef4-4bd6-9b28-c36c102c90e1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b729b82-cd7c-41a1-8337-9727aff36a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0675ff-c680-41a3-a046-32382b6c0393",
        "cursor": {
          "ref": "0923614b-36e3-4520-a0c1-799713a7ffb8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "25368982-5f51-4b3b-88da-800e29707501"
        },
        "item": {
          "id": "dc0675ff-c680-41a3-a046-32382b6c0393",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a729f6ea-e0ea-4b52-aac2-002452c7a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61142dab-72a6-4344-aab9-4efea6f33094",
        "cursor": {
          "ref": "7b2140d8-7a47-43f5-b9ef-a90fdcf837ea",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0a19c0dd-7dd1-48f0-9317-7ec59052d030"
        },
        "item": {
          "id": "61142dab-72a6-4344-aab9-4efea6f33094",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2eacf431-7422-4809-a4dc-609100c03573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f871a9-e266-40a4-81e5-efc2336a8715",
        "cursor": {
          "ref": "2575537c-9ff8-43c1-8f5c-beb2938426e5",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8bb6d595-d045-419d-a78e-f93e408a80dc"
        },
        "item": {
          "id": "e0f871a9-e266-40a4-81e5-efc2336a8715",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fb63360c-aea9-49e5-9550-28e075365add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aec30f-a6b7-44ee-a7a8-5de7905801e1",
        "cursor": {
          "ref": "3434b0a4-d716-47b6-bead-2d746f0ee374",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1e69f6ff-ba74-41e0-b720-8f9bb3594f47"
        },
        "item": {
          "id": "a5aec30f-a6b7-44ee-a7a8-5de7905801e1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "80432b21-0c4b-4308-90e2-c838cb5e2488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829033d7-09dc-46af-9a20-0f77c30bd9d5",
        "cursor": {
          "ref": "dde7c529-b514-4540-85b8-adc62888650f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d33e2dae-8959-4d18-ac3e-2a944b718bc5"
        },
        "item": {
          "id": "829033d7-09dc-46af-9a20-0f77c30bd9d5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0a34380d-7824-4e86-9b5a-de20216c33bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0577ee8-a4a9-4e27-91b9-903ae952407e",
        "cursor": {
          "ref": "79a05986-4706-4c61-b6d2-97394f45a4e1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d600451e-1295-48ce-821a-a91cc54739e5"
        },
        "item": {
          "id": "c0577ee8-a4a9-4e27-91b9-903ae952407e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d0d07f88-fb2b-4fbc-a2f5-7e72e75f210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ab9b22-a297-4ab5-8a44-39baebbab483",
        "cursor": {
          "ref": "b8b285d7-2178-442f-ba69-05a949e45375",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3549b274-2ab0-40d0-bc81-2b1ab7f2074b"
        },
        "item": {
          "id": "56ab9b22-a297-4ab5-8a44-39baebbab483",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "38b20e6f-7e94-49ab-8bd7-c034688b8d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dede96-5932-4465-9abc-43a2b81564ee",
        "cursor": {
          "ref": "ab28b9dc-23f0-4ad4-8a50-57acff5b62ae",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "95612105-cb49-48ce-9c2d-70f3ae8b549e"
        },
        "item": {
          "id": "36dede96-5932-4465-9abc-43a2b81564ee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c8b57376-4066-4d17-ae62-696e4a6ea60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3f6e78-3a95-4953-8c74-dff2d1f92030",
        "cursor": {
          "ref": "cd9de005-06e1-4ca7-95e9-cffb0bd8fbb0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b4fa889b-34f8-4e99-8ebb-f92d7131d9d8"
        },
        "item": {
          "id": "6a3f6e78-3a95-4953-8c74-dff2d1f92030",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3d31b13b-722c-4373-b3a8-bab19ba7b644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866e185f-16c4-4114-8931-6ebdde458e27",
        "cursor": {
          "ref": "2792f8d1-3b80-4ec3-8d03-266ccb4b4a47",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "17e56854-04af-447e-8bc3-322399f87924"
        },
        "item": {
          "id": "866e185f-16c4-4114-8931-6ebdde458e27",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d0402af9-6463-4ed9-8c6a-7d8757ed8a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b3f1bb-8a6e-4c8a-b9cc-00b15c07261e",
        "cursor": {
          "ref": "69fe18a2-1ce1-4cc3-82bb-8a7e5347e9ea",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9de92114-7c12-43ef-8b15-050ee4b36c0a"
        },
        "item": {
          "id": "c6b3f1bb-8a6e-4c8a-b9cc-00b15c07261e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c949fc06-e6cf-493f-8f3d-e344fae08d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2cef44-54b0-4af9-aa6c-4e3eda01689b",
        "cursor": {
          "ref": "30a93c38-3760-4224-b9e9-64b7099e99ae",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "28544f33-e7c5-4351-81d0-e82ae672a8a7"
        },
        "item": {
          "id": "cb2cef44-54b0-4af9-aa6c-4e3eda01689b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6895064a-395f-4491-8769-da10128bb2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1931cb4c-4bf6-446d-82f1-17870aaa142b",
        "cursor": {
          "ref": "cfba0fb1-1b37-4ff6-9721-74e32db9fbb5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4456627f-8e26-40b4-8080-04c65b99ee37"
        },
        "item": {
          "id": "1931cb4c-4bf6-446d-82f1-17870aaa142b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d013e711-7548-4807-b693-fc5830c14c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2350e09-0021-4714-bd32-37ac24eb48bc",
        "cursor": {
          "ref": "c7974c9a-dab2-48cb-8c62-69848c590225",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8cd548d9-6a1b-43d2-a86d-65887a7db1a6"
        },
        "item": {
          "id": "b2350e09-0021-4714-bd32-37ac24eb48bc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "577de212-1491-41de-a6e1-5bf53eb63d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e750ff49-76fb-4c7f-bb21-979894ef4baa",
        "cursor": {
          "ref": "42f0e0e3-6d16-4eed-94ce-d7b65774ec92",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ccd0d392-f34f-42ee-9c5b-8a91b9d124f7"
        },
        "item": {
          "id": "e750ff49-76fb-4c7f-bb21-979894ef4baa",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1d2c0a37-468b-4da0-9af5-65e195fcfdd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfea6b82-8e1c-43ec-bcdc-ae5117d87ee2",
        "cursor": {
          "ref": "8eb96ba1-b1e7-48ca-aedf-543a9c3d5db3",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f944e858-6789-4a6e-ad85-bbf66cea5224"
        },
        "item": {
          "id": "dfea6b82-8e1c-43ec-bcdc-ae5117d87ee2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fd3774e8-5510-4933-b5d0-5aebcf57105b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62ba695-b369-42bd-a19d-e2b57995e528",
        "cursor": {
          "ref": "048d4114-04fc-49bf-af43-623371941096",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "37ba6b04-6fd5-47a0-af0d-d693784e4a33"
        },
        "item": {
          "id": "b62ba695-b369-42bd-a19d-e2b57995e528",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dee3c6b6-9ad4-423e-9115-65b8e3ccfbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082e4082-c596-4408-b41b-27e1c74dc006",
        "cursor": {
          "ref": "e68d090f-a67b-4d13-b0fc-570dee4d9a2c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2e4607e8-bb25-450f-a585-cf553338087a"
        },
        "item": {
          "id": "082e4082-c596-4408-b41b-27e1c74dc006",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "464e6fdd-ab59-4506-b407-a9b30f84038f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35ccb59-2ee3-4e19-ac25-1f54a4d04107",
        "cursor": {
          "ref": "b5c1f014-64cb-4be4-94c0-0e8a567ed5c1",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "927c4096-0a8f-419b-95bb-137d51e8257c"
        },
        "item": {
          "id": "c35ccb59-2ee3-4e19-ac25-1f54a4d04107",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "70a9875b-47d6-471d-9fef-8dc99b6abe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fd954c-00d8-4aad-82df-6cb98b6dafdc",
        "cursor": {
          "ref": "6964db1f-850e-4d3f-aac4-61091bee2404",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5c5d4ac3-1f89-40f9-bbeb-ee38febcd87d"
        },
        "item": {
          "id": "20fd954c-00d8-4aad-82df-6cb98b6dafdc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c88b181f-1a83-4d44-8f3e-266abfbbb4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c586452c-5e0c-4f55-abc4-5f932ef70d7d",
        "cursor": {
          "ref": "e9d63896-332c-47e6-9785-66062edbc95d",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a6f4b8a6-d2a5-4260-9e4e-2a75354cb068"
        },
        "item": {
          "id": "c586452c-5e0c-4f55-abc4-5f932ef70d7d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a8f3e5cc-e537-46ee-81cd-a3cfcf04ac47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c728c9d-022a-4d24-a27f-040d43026176",
        "cursor": {
          "ref": "52893ea8-9e63-4839-bbb4-95f8b3da9535",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1fe2f506-dee4-4f7a-a93e-a4f24ee02056"
        },
        "item": {
          "id": "1c728c9d-022a-4d24-a27f-040d43026176",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a9d5e3bf-c11c-4b8f-a672-b4595ea92044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e82ef68-1e0a-481a-9663-27715206b88e",
        "cursor": {
          "ref": "03e3a9c6-ca36-4ccc-a442-cfc600ff3542",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "48d82133-d8b4-4322-a9d5-f0fb88c57e9a"
        },
        "item": {
          "id": "6e82ef68-1e0a-481a-9663-27715206b88e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6089cf0c-c23f-4295-8763-3b562046f76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec135103-9451-4407-8505-6f98ec5a43a6",
        "cursor": {
          "ref": "8df0ff65-5c15-45cf-ac27-e9f550eb99e7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a0d1517b-9d64-49f2-91f6-3c4d6afed6a4"
        },
        "item": {
          "id": "ec135103-9451-4407-8505-6f98ec5a43a6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "81ec53fa-30fe-4633-97a4-ec52237b9b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b26437a-3f1a-4940-b332-28cbb2d0f542",
        "cursor": {
          "ref": "6666d006-8c5e-4a09-bff8-95ac64e081e1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "42db0545-f20f-4af1-a338-72da2ad71766"
        },
        "item": {
          "id": "8b26437a-3f1a-4940-b332-28cbb2d0f542",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "2c38da3f-73ba-4de6-a87c-53e60994a522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb38184-14d3-4bf3-a5cc-40701491ecd7",
        "cursor": {
          "ref": "d07b6ba4-cd67-444a-b2ac-02b7355cb285",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d1cd02ca-25c5-4723-bf27-c79880c9140e"
        },
        "item": {
          "id": "2eb38184-14d3-4bf3-a5cc-40701491ecd7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fb460708-8b69-4f62-9ca4-96784cf2d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277fdd8c-8588-4cc1-9d11-913555121557",
        "cursor": {
          "ref": "b86fb5fc-6cfb-4a3c-9dba-2eda9e6a78f3",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9684093b-a4af-4567-8a57-6f4ea167c3fc"
        },
        "item": {
          "id": "277fdd8c-8588-4cc1-9d11-913555121557",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e77923d7-f3f1-4c15-b05b-fc688feb90f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842aa83f-79b6-4384-85e7-8e27676f9d72",
        "cursor": {
          "ref": "340fb733-05e0-465f-b204-e9252d308d9f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d4669d83-883f-4bbe-bb52-d949a2758464"
        },
        "item": {
          "id": "842aa83f-79b6-4384-85e7-8e27676f9d72",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "83c8eba5-0575-4990-a207-fe7581f54540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee43ad0-f84d-4967-9c49-4d2367e71fe8",
        "cursor": {
          "ref": "4bca28aa-a631-485e-807e-28f9fe2231f4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d699fe0c-b8f8-4772-8335-4cf464c294b9"
        },
        "item": {
          "id": "6ee43ad0-f84d-4967-9c49-4d2367e71fe8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ca87ad62-eba7-4af0-b10b-80df8d318e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91f9878-501e-4e9b-b59e-1913fb9fc202",
        "cursor": {
          "ref": "663c9183-8ac5-4e22-8e7d-208720df6b7a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4244be87-5ad5-4027-9538-088eae2c5479"
        },
        "item": {
          "id": "f91f9878-501e-4e9b-b59e-1913fb9fc202",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ab0493aa-3ef3-436b-96a3-93f737e9b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f495b8b3-e04b-4571-995d-1420ea067ef8",
        "cursor": {
          "ref": "c643eb16-2723-4f3b-a784-756e2a3411ec",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bcac91c0-34dc-4220-bb4f-f21a803fa81d"
        },
        "item": {
          "id": "f495b8b3-e04b-4571-995d-1420ea067ef8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a17672f5-6460-4731-833a-997e21cb4237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b0f516-fa7d-451d-82c5-5e6bafe1a148",
        "cursor": {
          "ref": "02985680-6f92-433c-911c-732f80a74cc2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a79be75d-03f2-43b3-9090-257559af2f3a"
        },
        "item": {
          "id": "f5b0f516-fa7d-451d-82c5-5e6bafe1a148",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6cbdd8b2-0235-4837-a354-263102d3e8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd82ed6f-c67a-4e2d-95c7-630080f95563",
        "cursor": {
          "ref": "c73b0350-bedc-4a25-bc22-4482c9ca0902",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "9e7cb61e-dc49-4ab6-a1a6-286c366a3b6c"
        },
        "item": {
          "id": "bd82ed6f-c67a-4e2d-95c7-630080f95563",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "71b396bb-fae9-48a9-acf8-e92fe980eb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7014d61e-355f-47a4-8a2f-6a7c4892b052",
        "cursor": {
          "ref": "6185f20d-5d2a-4c44-8fce-90cc729bed4b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ef01a4cb-45e7-40fb-a9c3-2435621ff05b"
        },
        "item": {
          "id": "7014d61e-355f-47a4-8a2f-6a7c4892b052",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "629aff83-70da-4079-a3e4-27cbcf3de1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e9b20-52ac-4b84-b09b-22adf12d8903",
        "cursor": {
          "ref": "7fba4515-b06b-400c-8c81-ae87e0c66940",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "91955f8a-e87a-4191-9dad-dc06eda8d5e8"
        },
        "item": {
          "id": "670e9b20-52ac-4b84-b09b-22adf12d8903",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "61be4aa0-8735-45cb-8dcc-c3d09ca6c7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6008a750-910d-45cb-9509-f7199e876386",
        "cursor": {
          "ref": "70e0b6dc-1bfe-41cf-acd5-19e3957a5103",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "57a66005-9971-4b91-8721-d8699d73dad2"
        },
        "item": {
          "id": "6008a750-910d-45cb-9509-f7199e876386",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b56d25ae-1089-461f-acd7-f3e863e1686f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b9c781-060f-4df5-abd1-24cdb48f6aab",
        "cursor": {
          "ref": "a330d0b9-4b1d-42ae-b907-062a261be8b0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5b40fb73-cad3-4d6c-9c89-752e3629b28b"
        },
        "item": {
          "id": "e6b9c781-060f-4df5-abd1-24cdb48f6aab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ec5ed7b-a6c5-455f-8fd1-586d9f71f50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5aaff24-f582-46d4-aeea-b84dec468df2",
        "cursor": {
          "ref": "06de7656-4e78-4d59-8d0f-48b70eb432da",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "00cd1d05-7307-42ff-958c-984b8d1e6c0f"
        },
        "item": {
          "id": "a5aaff24-f582-46d4-aeea-b84dec468df2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "818a3fc6-4dc8-4327-afe0-88301a1781f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f89351-02f6-4899-9cb4-eca76b750807",
        "cursor": {
          "ref": "d41767b9-219f-4f87-98a2-88b62b296552",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "61c78fe0-9d30-4d38-8885-dbad598b95b6"
        },
        "item": {
          "id": "60f89351-02f6-4899-9cb4-eca76b750807",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4e28f4aa-c589-4f3f-9b02-096346705efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab896bcc-4441-49b0-8e63-e9e7eb9016a2",
        "cursor": {
          "ref": "9ee56c31-0df3-4132-b9f8-b1d33c0a7b34",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bb5513a3-0da2-44df-b5f5-be98164366af"
        },
        "item": {
          "id": "ab896bcc-4441-49b0-8e63-e9e7eb9016a2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a16d7ae6-7b0f-4bc5-a473-e8931a6d09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0325268b-3e63-4a83-a224-98ce57b6bc2f",
        "cursor": {
          "ref": "8bfd4afe-c69f-4254-9edf-7ef8974cdc4c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9a148be0-9d82-41dc-aacf-bb4aa063ca2c"
        },
        "item": {
          "id": "0325268b-3e63-4a83-a224-98ce57b6bc2f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cf74087a-0f7c-4a14-9bac-5e0547b2910f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c746e19-4e58-4c45-9694-85f49c38a1ce",
        "cursor": {
          "ref": "55084c0a-c100-4979-8cea-c93eef25b54b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0012f2df-29fd-4634-b621-95c8ceba05c3"
        },
        "item": {
          "id": "3c746e19-4e58-4c45-9694-85f49c38a1ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "447f908e-f8a1-4ee0-a2f9-2d8dfcc3ab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1babab34-de5f-4d63-97aa-969dae3ce7f8",
        "cursor": {
          "ref": "c46769d4-5a45-460d-bf6a-3909780c28e6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ac472f50-b58b-4554-9077-a86b55efb752"
        },
        "item": {
          "id": "1babab34-de5f-4d63-97aa-969dae3ce7f8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "179652cf-e17c-4bd6-aba2-51a69cf5161a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a2069-e796-4dc6-990a-96c6956287d0",
        "cursor": {
          "ref": "c1e8ca09-0a92-4599-b2a8-c28bb093504b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ee4fe1e0-4d68-41a7-86e0-3705ad0bdb50"
        },
        "item": {
          "id": "fd9a2069-e796-4dc6-990a-96c6956287d0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c2b23e08-d585-489d-8efa-620f6df59aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8face719-785f-4578-b467-09c73820a4f7",
        "cursor": {
          "ref": "349e6456-2021-4745-95a0-7152d071eb92",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "65747b43-9dab-413d-b411-dbc18e8f1e0f"
        },
        "item": {
          "id": "8face719-785f-4578-b467-09c73820a4f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ae4b5023-bb68-4544-8c8c-b32db7f46a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0327d8b-e459-4c8e-b769-bbd19268a297",
        "cursor": {
          "ref": "c77390ea-2fc3-48ca-a179-b2cca6fc3719",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "08dc1f53-fbe4-42ba-b859-76442b3d58f7"
        },
        "item": {
          "id": "f0327d8b-e459-4c8e-b769-bbd19268a297",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0a0c7274-2cd5-4b59-a537-fa167f26b687",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3eb8fd-4438-4283-b144-935f682e5cd1",
        "cursor": {
          "ref": "59427021-7cac-4469-af5b-17515115934c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e0cb4d73-0489-40fa-a657-c9503b4d640d"
        },
        "item": {
          "id": "4d3eb8fd-4438-4283-b144-935f682e5cd1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5efe5ba9-fdbc-4522-a0b5-bcd1525fa762",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a530901-ce64-40e9-8865-538cd9e84334",
        "cursor": {
          "ref": "9ee7112f-a856-4d50-b08d-bba3bd6dab51",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1192351e-cc54-4c49-a7a0-c2839ed6609b"
        },
        "item": {
          "id": "9a530901-ce64-40e9-8865-538cd9e84334",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c328a9d8-1ccc-44f6-953f-1846d1c21520",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "316173b2-dc9f-4bfe-a788-01272cdb06a0",
        "cursor": {
          "ref": "60fe7a19-cb87-4aab-8605-2507b66e350c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8da038ce-6c87-480e-be9d-30c176d8fbe6"
        },
        "item": {
          "id": "316173b2-dc9f-4bfe-a788-01272cdb06a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d0744679-f982-43f7-99cf-4c4c16aeac4f",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fc2124-b7bb-43f0-9fb0-32b7438015a5",
        "cursor": {
          "ref": "8aaa09b5-9368-4e55-8f1d-d6588bd2d6cf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1568ef4f-28fa-4968-921d-d5ba40e4ec0b"
        },
        "item": {
          "id": "35fc2124-b7bb-43f0-9fb0-32b7438015a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9207258f-a2df-47dc-9b78-10465c35bf89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fc2124-b7bb-43f0-9fb0-32b7438015a5",
        "cursor": {
          "ref": "8aaa09b5-9368-4e55-8f1d-d6588bd2d6cf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1568ef4f-28fa-4968-921d-d5ba40e4ec0b"
        },
        "item": {
          "id": "35fc2124-b7bb-43f0-9fb0-32b7438015a5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9207258f-a2df-47dc-9b78-10465c35bf89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0cf451-05f3-4012-ab9f-064644576f7c",
        "cursor": {
          "ref": "e224f08e-fb68-4355-9784-e3e8bf04403d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "c56f2838-fe20-4f9a-9998-4b53840f9669"
        },
        "item": {
          "id": "0b0cf451-05f3-4012-ab9f-064644576f7c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f9fff99f-2923-47e0-8b46-9f62f8e7136c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0878bb-863f-4969-9967-66b35583ce5d",
        "cursor": {
          "ref": "7f5b42c5-3eb0-4f2f-b564-8be07074112b",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "50c44705-6fa7-4fff-b7c3-8a6e49f2936f"
        },
        "item": {
          "id": "9d0878bb-863f-4969-9967-66b35583ce5d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e9c69ad-2b11-4573-8a19-1b3a0c5938d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}