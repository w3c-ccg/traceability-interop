{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c40ab68d-00e8-436d-8465-1ddc4040be9e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b11ba9da-2475-4697-8eaa-910c520fbec6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d977487-92b5-423f-87ab-b564f9d9c805",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04e88bf8-6bf0-4fa8-b7b3-afb8025a3b25"
                }
              }
            ]
          },
          {
            "id": "acc3f76f-391f-497f-a2e9-20cbf514f08b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "605e5fc9-3c3b-4518-abe4-ef0cffa30096",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9dd66a14-c40e-44d4-9dec-c10e8b43eb53"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6d58952c-2f5a-4b4f-a8dd-2e7916542a30",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e9482158-d0fd-4ec3-9d0f-cccac14e4117",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1fa5914-0e2f-42b4-92b0-3d4dff108a1c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e0ad605-d791-4ceb-83d9-d5b47c7180df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7890bb4e-4dc4-4902-a141-ca02eed2a94c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "297cd0b1-664e-4b32-8717-d2e4d0b41913",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b7d205d-709f-4cd7-8fbd-a67f00cfe654"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "633fc788-c812-496a-a29c-f47d44ab06da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec28f950-11e3-4c95-af78-a39f7df83e96"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4edceb7e-4fe4-4798-902c-856b696523a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "063e7eec-4be7-43fb-b72c-d525d661957e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "640b4d03-718c-410b-842a-8fe8540229e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4634e538-a43e-4405-8f0b-2604b9672e8b"
            }
          }
        ]
      },
      {
        "id": "c793e675-c428-4c35-8d8c-3382f4d2d265",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9448768b-daca-4160-9c21-a3211d588ee4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e9e0acb-d4a2-4190-9349-b4ed41e2585d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19770088-759a-4846-bc0d-4b5dbd13731c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f82296-0a68-4351-b0a0-ce34aaf3deb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3a3ce7b-0f26-424a-85ce-f359c93e0d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45daff83-4b0f-43b8-8273-12ca5eb624ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08418f41-0671-42df-8b82-1ec601fa469b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6907c56c-c3ac-4063-906f-b0bb6ea6895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123f30ba-3b7a-4456-8434-8ee45cb075fd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353db58e-6e9f-4dcb-b35c-2de601dccb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "918faf18-4472-4a86-968a-737ae0d0ddd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55fa38df-5eef-49ac-ae67-8d640f48576b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "422c040b-0a75-4485-8f06-19b42a8cdf38",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072b2708-476b-494c-ba5d-379a74ac44dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82976f52-8f2b-4d65-abda-4a92de6b6394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286afdd3-b357-4c0b-a1c9-7dc7d42d3393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661f75c0-8e3c-4080-9312-f26df9e4250e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "24f86935-5b39-46cf-bf75-e3ec25349dd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f780d58-36c7-40ce-9e94-2bfd4388d28d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b92dde48-efc0-48ec-bed1-b68f1a400b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ecb53420-f460-4277-93f6-9638dad40637"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3e3e491-62cc-4bfe-b494-38f19b740720",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ae2d6a06-fd6a-49d5-9474-04c29da884bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8e32bf07-0567-4579-b5fe-b20ac73d4ebd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0fe782a-1c5d-4a32-b217-7783679b7b7f"
            }
          }
        ]
      },
      {
        "id": "acba2e81-1309-4b3d-9e32-34525ae35d9b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3056a7b5-f4ba-4e16-823b-f7732c1a1301",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ba0112a-0c95-43e1-9d2b-23e4df3faf27",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "47fc5af6-c580-465c-b8f7-8222c404effc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ead22ca-bdf2-44c6-afe4-53ac8a0c7588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0006aa-cae8-4334-836e-b1b92979a832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd88873-0301-46f2-9965-e26592e6fa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ae8a8d-7f80-4fa1-b89f-ee30de448930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b99179-def3-44b7-b856-4bfcbb80a97a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecd5d6b-e2a2-4ddf-906f-6b4f34ea031b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47882f43-ef0d-44f1-a3d6-b3c2d461606e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c3aea8-37fe-473f-878c-cc952df98f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93e1e671-fb69-4cdf-8c33-755da573811c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6c361d-f4af-4957-8af9-1d66b5cd0dad",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6d38e-2716-4f6e-9c4a-38b48b2e9ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29d3ba3-c1be-4779-b9ba-c2c98308bf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1888301c-5a3e-4c71-84df-78596c0f5c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a8354d1-5bd8-45e2-911f-acb21ce660cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4628a0-0cd5-497a-81c1-959c86d9ed57",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1099cd-9bec-4e5b-a97f-3975e2d4a982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0a8525-c233-4254-b1fe-664fd479b750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c99364a-13eb-44ec-95d3-109ed72bfce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51850418-5ac4-46f9-a19c-1550ada30cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c44792-a877-40e0-8d88-7f2edf2eb382",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb290b5-36e2-4cc8-a863-15c72a39bde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335f1fe5-0bf9-4316-8a9a-ad40a5a6873a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ac4daf-1f9e-4361-8074-b19b2da97490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d40b1d27-6646-4054-ae52-237888a0d437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0646e79-e3c8-4194-93fd-5297f17b19e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2bbc3e-cc01-4fb3-9776-1150931f2949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef567b07-9b15-4ebe-aea3-cffbc59f42af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf29a2a-500e-40ac-8aed-2d66635d56a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eb3117f-09cc-46b4-9f63-ec35e2c09564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9b20a1-edea-4335-8c5d-d5e3eb31b9ab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d009879-3dc2-46de-88e6-634ee730233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4915c42f-b4ae-4621-b771-83754d0fe1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4be52d-38e5-4444-be18-8a4b8cea83a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3ea36db-05bd-4cc7-9131-6c0a3731b190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8438c89-eb84-401b-967f-358460d96139",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae2919-0a3b-4f56-b4cb-a8dafa0f612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe23d27-4f7e-46a1-8370-a184cb7ea5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc7b20b-0065-48c1-97d6-649d5edc17bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9dbc97d-4ca8-43c1-9d0a-8df7b6cd69a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d91bb9-bdc1-49d8-89a1-f5bb3fb1f417",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1d6c27-3cdf-4a6d-8a75-acbadf5b98d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a25083-4bf2-41a2-9aca-7390b20452d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a96632-a177-44b9-b392-dc8d68bf4b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "842c9484-3449-4d23-ad2c-2ceb657d1197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d879eeb9-8873-4a4a-894e-5d388fe3b375",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a519292-acd8-4af0-8748-4a7046fab03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0b4d504-4853-4fb4-9a71-c1f5147d2752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c6c30d-1b44-44b6-8044-663cd2b00c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59e15e6-b2af-40e4-974c-42d5d6fd9d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc0fe4b-2e30-439f-95cb-784faaee01ac",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fca2e6-76ac-4b51-9e34-997f40f8f97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57271cd-77c3-4126-a4d4-968d942bc026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866e1a6a-e17e-435a-a53e-27a1a1f5eab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d2878b3-9c0f-4de1-a038-029251049a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6c2c3c-3d0d-4bdb-a777-a4365cb8cf57",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cffcf95-fb8a-48d7-8ffb-ebb7235211fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605f091b-b8c0-4dfb-9b7a-f63992076cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033599fb-bb47-4bf3-94ed-8f77cf9976c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97d51d34-4086-472a-ab97-c25e03717936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d6b635-1d04-4422-bf52-fa6c83bacb0e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7041707a-6060-4938-8fdf-1aa514681b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4254d1c-8c65-43be-bb27-eb2275790a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c59413-b40e-4b0b-a29a-40f58d3f6e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "039fef97-3ce2-43a1-9d06-ad73d424fd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8023c18a-9c87-40c9-911b-e93d08858f7e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0f9fe-7165-4379-bd48-f6ee81f32778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed95890-6c2c-4f5d-82cc-0cfd88376382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1a106f-786f-4af6-b947-7490adccb527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87b950b5-d77c-4459-bacf-a03dd90f0da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa25a7-435a-4f73-8635-58f3168926e7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba9063b-a2b3-4740-a89a-6076780e3e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498e24c3-4879-462e-881f-d6f93cd0b7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa682c41-8436-4fbd-acb1-e0f7f4431f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "729df208-80f3-40ba-b6ad-47170da85f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035daf15-33e9-44e1-a842-1e33bbcaf070",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd400799-54bd-4f43-885c-1ae4bca0843b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a80a49-220f-4093-8346-efddb84d7f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c31f10-08cb-4ea6-8203-21db55667926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3a67bf2-f18f-4a9e-a92d-fdaa75314b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06b8052-0a01-476e-911c-63ced53f0ea7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364b9fe7-0c16-456a-96c1-641929f922ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7c8e87-6f9e-420f-b3ab-7c52ab600aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024873e1-777c-4559-94cd-984bef86c770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ffdd4ab-8f1e-4f28-99bb-a66fc70c5d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7690979f-e12d-413b-b96f-0b4683f55b3d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2282d20-3e6e-4a47-ba7c-b658b43b385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00321eb0-f6d4-4558-8874-24eae8ae68d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a44ef9d-cab9-4978-bad1-d2afd6f431ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "120fc506-4bdd-43a4-a23f-7305121ba8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a7661b-8f45-4f09-b1ed-47a7959f67c4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c9d6aa-d046-475b-960e-3583b0e13176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66c03f3-773b-4ba9-9aa2-9e7bd839f6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2078692-d2e3-4630-bb17-0a1ae63b5bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "299b31f8-38a5-4f46-8967-2758569f00ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d9aab9-1e13-4945-b3f5-455d768f7554",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6181b6-6dac-4f39-9bd0-5511cef1583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9313a47b-578b-47fa-b566-52759b21a887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3996c95c-80e4-4dc5-a3b8-6154e9fe7a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e90d0e6-415c-417b-b5dc-61e255bc6ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6998c4-8818-4ee6-b6ef-368409d2bf5a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d703be-0b16-446b-933d-bc691073e748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4521a868-822f-4968-aaec-305e675682c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0dab75-629d-4bcf-822e-20cb81156502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d7f1ff-9496-4b2b-bff1-93409cc09ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2d7fdd-8fcb-420f-99ec-dcee4ace523b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2850b005-80a8-48fd-9518-73ca9ad37f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8da5908-668e-4703-82df-53d162fd03e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca78c9f-860f-4db5-9bf0-e76f39c82ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8aa2bc4-eb03-4642-a7cf-84c578c965db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7a239a-4b93-44a1-826d-8ad0d3286893",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681e5e55-05d2-4218-8c2a-848980186d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9595f8-b4b3-4449-a8a0-4ac2ba528e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179dd13-74a8-449b-9820-b2c199d025e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36891efe-3fc3-402c-9c28-8dfc7e4eef6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3cd096-0855-4e94-8f35-a095f841a2a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c4e3e9-815b-4a66-82d9-4a6cb06a0d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50ed9af-7d1d-4cc1-b557-f1b3b5bda2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e3ef1e-3be7-40f2-b2f9-ec09abe16fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "219a0ccb-a84f-4c17-9664-92e32c6d87c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a53106-d3df-4df3-8257-307292392726",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb5f903-d107-4ed4-a205-547b7c284e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d80015-41eb-465e-8f3b-8f5e5985f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2daeddd2-4fd6-4c9e-9fc5-a6a41aaea7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda7ecfb-e733-41e7-85ae-610c33c27eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a4b986-52f4-432c-969e-479af1dc35d1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c167cd3-3012-4274-b984-1d94797038cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81396e9d-d279-42a3-a5ef-8041c8d28b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937edcff-5665-4383-929a-36796ec3488a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e489565e-4194-4df1-9145-06dd76687d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735ad7cd-826e-4306-838b-0d630407ea40",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d932175e-70c3-4a8f-81c2-75178cd611e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b8a77c-8717-4a84-9635-851cb8733dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2c8da8-3749-49cc-bc12-bb8368adfefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c318415c-a5c5-4980-afca-18e82823f35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03258f02-efa0-4a64-8325-1864a32f99de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2703ac5-1196-4bbb-9650-8ed6120b77f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8daff6c-3c37-4723-abc5-1e3dcc082096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d85eeb8-56d0-408e-974f-b5507e85c22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50235ed-94c2-4023-804f-59f1715d9a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a6917d-9ed4-4058-8f4e-7be3b6e44617",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fab317-a66a-4387-9432-ca5d15e045e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedb7176-70be-41be-b89e-30285123fe34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2419e-4d1f-4f4f-86cf-43bb3607c485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93dcda16-d3b2-4731-9887-352ac669421a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f796a28-d564-4fee-8c4d-e609dd8bddb0",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1102f023-bb9b-4e50-a0b7-e5d0083dab1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267febaa-5862-4a95-a0b4-373e3e0b3dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b158ac-4cc0-406e-a3bf-842e7eda7348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ff0697-cf08-40fe-9874-cfcc170a3ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bfc627-4ffe-4aab-9305-8486eb1013e4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0289ecd3-4aa7-4da8-b07e-326a30c1726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c25702-220a-4e5c-a18c-2da7cd4917f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9de837-bf8a-41ef-a80d-32aee902f6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb1fead-f59d-497b-a3c8-43ad204ebe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd53eba-4258-48ba-9d90-38249467eae1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eeb80e4-4e19-4d62-b90c-aea44db2155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc137d97-e716-48aa-a11c-d00459e07eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8e99fe-7121-4b64-9536-1aaff71b6290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74d70064-ab27-40b7-9d0a-be667782abf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1616c8e-5b27-4e1e-a385-7704927081b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3fdb73-ffb7-4e53-9dcc-1c430bc2b780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0654a7f3-45f0-47eb-98e5-396590011c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679d2653-ccd1-4972-be71-6d3917b4d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a078db1f-2f94-4915-b49d-01290f2980ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1672d0-4a90-4b5e-bcdf-4c9c621204d8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bcd4fa-bab9-49d1-b4a0-f9b59558bef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed41fa6a-29d6-4428-a655-0a136ddf3660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9322c383-1bef-40a3-892f-1d7aa8b61502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9925a742-ec78-436b-8c92-8296a389c97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85495ca6-0633-4e2f-8dd8-efaa6a9e1fb3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68f6ae3-ab31-43ee-82a9-6a6088e6fa4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdfeb14-11be-409f-950d-6f9585983eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b2c8d8-e2ce-4de1-8014-4b1b6add0475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "66eb9f54-4de4-4603-835b-ae07d63ca0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d0c26f-4bbb-4101-84ac-5b9a8506416c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc3de94-25e4-437d-8a71-dbebe5a48400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc5b8941-13b7-41a9-b757-fb708769b90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52f6fce-f14d-4457-bba4-72f4b64996e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4db662fa-9695-476e-b0bd-dff456632c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "411fbcb0-e75e-40bd-989a-791e1d7071bf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adceef76-0f99-4bf6-96c5-a5885f20507b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c43491-4b5a-4338-a8db-c4c83ffdd99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad271b30-bbb9-4b3f-973a-d03f79ccc054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "300fef15-d9e1-4adb-a06a-e10f9c984c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a19b171-a9f8-4e35-aa6a-76209524eca6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c845db1-9019-4605-8f50-6918e04283e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41dc797d-1826-44a9-97b6-2ec770d565c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b483c6-8866-4fc5-97b1-25f51f531054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "deaf93f4-6bca-45a1-b9b9-0756e16291ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadd579a-d891-4c47-9484-7e382b9e2acc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7989e869-f69c-44e1-b5fb-569c564efd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9627d07-d740-45c8-999b-016a7307ff88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59620bae-d30d-46e1-8bed-cd416692240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe51d48-757e-44ac-a80b-14fcda93356f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb4284f-6f06-473c-b4e6-6d62d1b873d6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2104ad-056e-4d2d-8786-ca87cad596a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14927b3c-453a-4783-8e2c-13cec880a0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28edae4-3cf6-41e3-99a9-b371377cd50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08c13a58-a849-455a-bf90-68b9640c635e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dad411-a3dd-42c7-950d-896d2a4bb57f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4307c9-61b3-4605-8f90-b485f4d8cb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f63efb3-8d73-4307-8ed3-3ee6a8800430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fa9621-9b0c-427f-887f-eaa903eb013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55fda710-72c3-4bc8-b9ea-95266f391bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65373401-a227-403f-abf0-250a8a5edb88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a127fad-5a0e-45d0-8687-6c345efcdeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21488455-c3cc-4223-9482-4f772d3dfe87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b8961f-46ca-4025-bd16-49dab9a5038a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3eca398a-ff2d-431f-86a7-4900f5c5c410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a61537-71ef-4ca4-8c2d-54f4e1a52c16",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb77b3c-0b9b-457b-9b72-25928c1dba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "751f0ab4-a111-415e-840f-716b8462605f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32e1c17-1828-4b79-a566-16e18cd02477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd597c40-9186-4eb8-aded-ffa579433315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0957db8a-fc80-4a35-aa40-e9c0fb608e9f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6927ba6-4fe7-4a69-8fb0-7bdd78c35bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7b643d-c2c1-4998-b39b-777066d9743a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cfe0ac-9c2b-459f-b130-1d39f35eacee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a2d17a-7c77-4565-a031-27ea12d236de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ba3ab7-b648-4ebe-948e-b62affb611fc",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0980ed7-0109-4436-be67-73f96a5717a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d1faf4-b353-42f1-8a87-29a8db5dd77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b448417-e71b-45c6-b84c-f31b8597508b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dab9ac-ef09-42cc-b121-c4f3df664bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8d1dca-ebd9-475c-a1ac-cf6c60b21e30",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aab77b2-d4d7-404d-9121-b7382e50578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62aca61b-4219-4d7c-85f3-99ca46cce008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893ae260-8fa5-47c1-a480-098969b0d754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ac74d9-9a0e-43de-b509-c7a5d4c1a529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75a6526-1370-4168-97e9-b9ec0a6dbfda",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746cce25-a0da-4a83-9705-4ee1a56ab255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7f97fa-7cda-45c5-a07a-4eb34f9fdfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6324c56-733a-4fe5-82d7-c2e55496a8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cdeecec-7d0c-48fa-ae7f-953dc9e25e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaab7a33-c23e-433c-9ad8-23e607187544",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a2341e-4686-4bc6-b3ba-cb8f77f0eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ce81b4-64ac-40d2-a5d4-bc1a2804bdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38a465a-fd68-49c5-aef0-93dc13c4407b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b214ff1-3f23-4e63-8168-3700334c83da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f484a5f-1f46-4453-b6d3-6a6567013dc5",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfc0c6b-5405-4893-96eb-a48a29442ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004b4408-19cc-4e56-a958-9770c12525d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30316f54-5384-4ac8-b454-2158560ce0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1031f4-6539-4d0e-a701-a654a0dd424f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47713c64-584d-4888-93de-3402cdfd7803",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7211e17f-65b4-45fa-b0a0-6647a38a3346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2aa776f-1b94-425e-968a-ecac39afa548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811c38f-c5ed-4c67-b324-7ef711da1df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdb1e98-4d5d-415c-9e28-a6b96803d6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55290731-168a-4d91-8301-86b6b98f6bcd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da0d64-d574-4c2b-b248-14f764363699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e7cf1f-b1a4-44d6-94c0-f58c5257d79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af3147c-a120-4780-ba11-8d421e09ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3f53dde-1861-41d6-8d21-4b00fd17c258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e805ede1-b39a-4a5f-a8e6-814c7835f630",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6854f093-82f8-48a6-abb1-b0f6c7bbdea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1f4e82-6f9f-42eb-bb24-b6b5f6b26d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f29cabc-be1b-41f9-aa96-3e4bd543805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c214a9-9cf7-49ec-835b-7a61e3e12a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f09e14-3748-464c-8378-1b4e33c9c250",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e5547-e702-4b33-b593-90e22f4b663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e067e5b8-8afb-4c88-8a70-4091e5ea7fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba4e10-825f-4aa3-b668-94e9691c485d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea9367e-93ff-4609-a371-2ee8f2e40d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf0fed2-74c4-4419-8238-5f2699607320",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9afda9-4552-4283-abd0-ef54dd8a1664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c72c14-9757-4dff-95fc-3b50c7523bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf71a3fe-0570-4606-a954-3ebbafe929b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e776f4a-9e78-404b-85d4-d5093c6d21e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99287004-ac06-4889-a1e9-c03cedfdeaab",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e49d879-2606-4838-a919-33dfa07a126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74577d16-d972-46a6-ae1a-b9228239f479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbe4fb4-0b5d-4655-a110-b089fd6e9d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db15447-b5bb-40c5-89dd-9e89d2dad8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8bf4ea-c504-4742-a3b1-7ad94f92fc05",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a148f9-63eb-457e-9e9f-6d3afcd46c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177ea5d2-8a11-4968-aef5-421391e3dd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b246a978-8064-42a0-8e9d-aa0f763ee455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b46d09b9-fbe2-4bcb-8b74-97e41a4570d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f6de68-2a6f-4f25-aee7-81bd8a4185a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2edf206-0542-4773-b0d2-83982e8a0229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43549c0-1aa9-4ae1-9d7f-dd761b367547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e75eaa7-0c8d-4558-bba8-abeb6f643206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8532a7-9486-406b-87ee-71c4c5046b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885d6b65-fb86-4a83-887f-37c80ac16272",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe5d366-f7a7-4d13-9a93-27c7d9e40294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4b1bf0-a192-4cd9-a149-a38ce5577521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c4a20b-b1ea-46d4-bca3-14c87216b636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "48691a5a-ba27-4a23-a579-950a4abe935f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67138b1-741a-4174-b00e-055d8e44e2a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f492280-eac2-418e-9c2d-eb7f53664b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4995a20-b918-4ee1-a4da-8601c1c2e03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24ea4e6-4c36-4905-ae53-fc76882f477a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8d94eb-a5ab-49c9-b564-e6f733fab4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec69c977-c336-42a8-96c0-87972172313f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a3f834-8323-46c3-a698-926fa9ecf3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be794c83-b477-4337-be44-dad5f26eccaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d378250a-2e72-4e54-9bf9-7550ac6b7c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e92de15-f876-4352-8ca6-0644e6fee9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d277029c-0562-4a25-b7b5-7d31da655f4d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7298887-4c54-4c4d-a465-5b8c87c857fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2806c17e-5222-4631-a975-891aec3eab2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4febe2b0-de6d-4aab-aad7-9acc820bc13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c58268ed-3e9e-4668-96ef-e06c3483cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dea2307-56c4-4c3d-ab11-fb9c19aad11c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e62874-53cb-4e10-9ad1-676fc4f8d3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8027ba64-029c-4bcb-8ee9-a49675578182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4818aba-c67f-4550-8fee-e6fdd88fd6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "90c1fcd6-3254-4620-b2cb-5953ffe662c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd98e92b-2088-49bf-a00e-dfbf9bac8e88",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a666605-8f79-4225-819c-a99193c80dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60fe2d3e-820a-494f-904e-6ca369bc2383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8e5d76-9b65-4cd7-8c9c-1aa763a8c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4e9ed9-1f77-41be-a9a2-7b02ff9ecd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9eb1eb-765b-405b-90e4-7d267905d402",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefa28a8-1418-4899-89d2-766d474cbf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373f07ae-eefd-45bc-926d-2c86687b8008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adac9a9d-2a81-44d7-bab3-520c6f1f9ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a66df4-e044-4627-b852-9656c75447a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d3cc8d-4e54-4098-8d10-ea918ff4abc9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9931088c-063c-4bc8-931e-e0a03d20a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33bf4c4-9ef4-4a3c-9867-747a0584df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf957618-fed7-456d-90fe-a1ebb9227d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f15e71e-99db-4e78-adee-418c7471c92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53cf5d3-9ad9-43aa-9a95-a25bca38eea7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da2e7d3-50e6-4eda-b4e6-89862acb3b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d25e46-4356-4880-b7c4-a6130ed4b50c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b527751c-f8d3-4f34-9120-88b389a8895e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56550cf2-0f49-418a-8bf4-e27ed03bd8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8737b5c-6095-426e-a635-13415b1eb38d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dafb18-0bbb-4cbc-b2e8-4da9bc7428bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcbed7d-1afd-4d46-80eb-cc67a4b68411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6662dff-a11e-492b-9657-c5071450d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37a11926-d215-4caa-864d-a7674fb0c2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4292fc8f-ebe1-4072-a202-7d8e49ad4b9e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f956f5f-9c3a-48b7-bbd7-46a8f95f7554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba38617-5bf7-40c1-a92c-9211e268a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353b97bc-5e48-4fcf-aa77-4f0b16194a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b9b574f-6440-4e34-9ec7-d34ab49505ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92f99c2-749b-452b-8e6d-5b9188de69c6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7682c3-275c-49dc-8d85-4d7d0aab7712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798c1e11-221c-4c91-a4dd-628cd1ce9ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a982d8d6-8f5d-42c6-85a9-888a89a224b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0be73a02-450b-4005-afc9-96342c8fa773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3404948c-1ca8-4b7d-80b3-f247f84bd066",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12972a6-7721-47f6-af2a-b59495fe02f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a573c3da-b79e-475e-bb0e-02b660bb3ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6f1399-fc5e-4a5d-95ac-213e38c278bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd82c66b-2c89-4d90-8d2f-eb530ca9d3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a01580a-7b39-4fd7-bb99-c32891797dd5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743f1751-5dc9-45bc-8649-93137ef05553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e333df-23d9-4971-b72c-d96c86efe96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce78ca2b-abb3-4001-9a1a-266079aaefdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3451fdb0-6897-4386-8482-6bf5f24d0b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941381a6-83eb-403a-8413-c62b1b07f43b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c122c1-0813-45cd-9ecc-80ab82a198a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25433ac1-ff57-4e53-8a5a-99362b4c0803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73c2eb-670c-4599-9ceb-6d844b760ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c55d947-a2ee-4824-9ba4-a5b83ecaf1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8da24d1-28a8-42b1-ab6a-ccce21496755",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52951bf-c4ca-4eb2-a98c-1f8275907f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac8582d-4d86-45af-819c-e862e9c1e2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337af28b-8889-4032-b8d6-8bd1c874b7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e178e2-45ff-42e6-83d9-8d998667c2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2258091f-29b8-4183-8d4f-137dbc758ff6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13b2c7f-a9b4-4495-922b-e5f835db5ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a6180c-4d6b-444e-b4a1-6540a3a725eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d00c8b7-7e1e-4ae6-b4c3-f25519ff183f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68b889f5-903f-427e-bf49-c1056572f6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c278f0d-7a63-46b4-87f7-6177b1954df9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceb415d-1980-4e5e-8426-008bb44b671f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaa15dc-a962-486d-80c7-346af37d5ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd86d41-82ec-4557-bcc7-65a3b09e0b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1204366-577d-435d-9600-eb9cbd6eeee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208f9df5-60d7-498b-ae64-25c4e388e957",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65978485-31e7-4b0e-a2a2-314685264d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821b315-03a0-4e2d-bf19-ed409af3bf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207c90ad-8818-48f1-8c44-37af682e6a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcee0ae-e4a4-4a65-b83e-9fed2f413fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf59026-7aac-40a5-8b0b-6f7f5941f63c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e97c9cf-c820-41de-88be-15f1fa333ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f54815e-be10-4877-8866-b08001728afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f1935-5914-4d57-90a7-5668ba7d9f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcb5201-baaa-4a9e-b459-af2eca4849b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638f7594-4890-474b-87ae-e25dd72d977d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbe0040-4de7-40c5-b726-9addbca62081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67901fd-4148-4a47-a704-89aaa6207231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7f95e5-353d-452c-8992-15cb43c95c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cfd5b5-3c0a-4342-ae38-9ba65b88c261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771b6c21-6ff1-4c88-9ff6-2b32b8ebc29b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e8364f-5311-42fd-9813-4ed3704cd28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d00ec8b-9245-4781-8b23-ddeea71fe639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c8f196-99ef-4ccd-91d2-6fae33232ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e43a557e-f4d7-4d90-b02d-a69a0ea08375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15569569-c79a-478d-af35-a520f23733b0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e61f0fd-fb62-410d-a59e-470bdfd7ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304b71a9-04d6-41f2-a39a-eebd3c50603d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafc02ba-0f06-49c8-bca1-610bdd2acb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4be698a2-791b-4707-9d6c-ef726977a084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de45e86-7c90-4dfa-a7eb-087bc14c667d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99b0d6d-69e2-4942-be35-228412011713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a705879-e5cc-4d40-8db3-fa86e3c54f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57dbb47-aa6c-41a2-90dd-bc779188e76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f5d813-c632-4878-8b64-56d4be6e342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6971feb9-bb83-421b-9a17-a0431b8529bb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afef784f-6d97-4e17-8483-ef9f5eb3c464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06c2d930-ff14-463d-983a-8276c4bf3a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3257188-6133-44c5-918e-43b0d96021e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af55eea-51a8-4809-8da8-882b83abcf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743ba1f5-e808-4b80-a289-0a64026121e1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4f9669-8e67-4635-839e-ef86897ded4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36b09f9-eb58-4b64-b651-962a9e8e609f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976832c9-10d8-4025-8093-708bf90c5d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a784f90a-582e-4ba7-bb88-79083a537fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95477fd8-71e4-47a1-adf8-bdb7903846ba",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d08f936-0749-4853-92d3-9fdd561aacdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fe09aa-fa6c-4286-b2a0-667225d95ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f417d1f-afa2-4d51-b4ce-b7d2d483cea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92a998b0-02f2-420f-a36a-904487857ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1394f9e-0e13-46af-848e-e2d4713b6a12",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125dc1b2-7ad2-4d5c-ba38-58f58e5a5a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ce3a28-5bf0-4d53-a081-004ac84e313e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960e8d68-86ae-4a82-a00c-19fab58d3d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "907ae9a2-f65f-41c9-898f-20db80f20e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c74d1db-da5d-4d72-ba34-a8b0201b5f15",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44a0ecf-0ee5-4d15-9966-206635eff718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522c01ce-e6b9-4e29-a86f-58153563dfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240bfd88-942c-4ea7-b666-d7e732f97e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2c4a52-123b-44a3-8cea-c850dc7b0881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4e8d88-8af9-4f23-8ca8-b8f5ec74ca9b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf6e343-f8d7-4d5f-83d5-bc439b8d3b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01dc80f2-e1d8-4ca5-a398-77f478eebd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aacd3c2-689d-48fd-b5b6-9d1cb2b5a3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "255b1d02-96fa-4d05-a346-1df9d96eddfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84478e5-b43e-414a-959a-22793dc6e2b3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2800f88-4d44-462a-b7f5-bab5b32e1b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c8d591-4a8a-4826-8822-f4aa193a48e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ece358f-33c8-4ff3-a429-e8234cf9e314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e25afc1f-07f9-491e-b92f-79a17fcde0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c554caff-62b8-460a-807c-c11464092936",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab385f4a-1546-49b4-93f9-4434b488c724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75db5819-8039-4616-82fa-805cd64832da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57782c2b-9513-44c8-b787-22e8e6754f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f821f2e9-0c35-46df-8f79-179531f021a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021cb708-90b4-44dc-941c-433bf8d4c311",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4accd341-8f61-4bc4-a9af-565544badfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc77a34-a92b-4786-81ff-7547e19321a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da72c834-5bf8-411c-87fa-31042de73d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dedfd986-12ce-4638-a235-dd9e533eaa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd3ae27-43d8-4a44-b7f4-3e696f4f424b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8285a5-1391-4236-a761-e6c231414c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5a39c0-a3d0-4eb9-90eb-ae494f9e7d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0361218a-aa14-482c-a084-e4fd5a35bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d57979b-65e9-465c-b712-47ed318802e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d45a3b0-a236-42ee-b95c-41e062894323",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dbb24b-822f-44f7-bf1a-7fed4d823fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "84302937-48a4-4088-b9de-c181ec210f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7917d15-296f-44e5-980f-4b372d2088a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "08f73644-532f-4c81-8209-7fcb5acd19f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd243b54-df21-4bab-9a72-a6e8fdaa5b7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "259d469d-7c2c-4572-84fc-dfc18369f500",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bece0937-d4ca-4f1c-b0ca-175b08121dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "429e22e6-ccd7-4794-8fdb-6b9979a1016b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32711d7e-259e-41ba-a873-cd19837e3009",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4999f78f-9217-4ec8-b5f4-22537a721d4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42cfe9b6-eb3d-4279-831d-bddb56156ab6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "591c1d5b-e12a-41de-9339-26509fcd9f31"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d846a179-0ded-444d-969a-b4883c8ee869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1290d11d-96b2-41ca-9fa8-6233989715f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65260453-ab29-4e91-b6c2-93b6046e2347",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4533281d-4012-43a9-be88-91cc56e3ab89"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e942f48-d659-4c5e-bf1c-f933290a6319",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0cddb16b-2557-4655-a209-80fba23284e6"
                }
              }
            ]
          },
          {
            "id": "6ba80ce6-33e4-415c-9e3f-2f7c16f3cb11",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7723c37-b4fe-46e8-82d4-7b9ce02525a0",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "da0216df-e606-4e3c-af61-2d9ccd6edcbd",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d68ac4a-541e-4019-9e6f-66ef2b178c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "056543c6-b598-40c1-a634-f15b2fffce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a67539-3b44-4b6a-b1f0-adf3d6a32f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de37372-c903-4a16-80a5-812925d28a11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5561f7be-b912-454f-aa81-b639239b19c0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91981fa0-8c54-494c-af3c-6dc1d5f8dbb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83f09566-f32a-455d-b7ee-fb7672552fc5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccb145cb-5692-4931-a349-f0877905ffd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bde8f2b5-c8cd-480d-9688-bbf8c1f79426"
                    }
                  }
                ]
              },
              {
                "id": "7483803c-3043-4ae5-9398-9e512abec77a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "167c789c-60b1-4f0f-85a0-fd74cc6c8873",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef11bb4d-c729-43aa-8ca8-56159ab5ab32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dade9476-8d5d-4737-b1de-ded35382b403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "517b49bf-3fe0-4fe9-b898-f8587fd673b5"
                    }
                  }
                ]
              },
              {
                "id": "50497289-0524-461a-bf02-4c3b71e075a5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ccc39c1-fee2-481e-a242-38e4f0372b6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b7a3af4-a76c-4ddd-b73d-187d660001c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b6380e3-d957-4701-b851-56cc0ec7be65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ebb4242-f56f-401d-963b-67326ccb177f"
                    }
                  }
                ]
              },
              {
                "id": "49e2f91d-c77f-4657-b145-9c4cb30baf80",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16d03b29-e0b1-49d7-ac44-396ce69582cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3360d776-712c-4122-8f26-e39a04af65eb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50984030-cb1d-4642-a8ee-8c2ae9bc73cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "52575d64-a566-4478-84aa-574b5e0f1104"
                    }
                  }
                ]
              },
              {
                "id": "9cc98d09-a753-43d4-80ac-0498299058f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08c840c8-b341-4920-b35e-aae7cc517f71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55b2c231-056d-4bfd-8418-1a47f47805ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d025d84e-2b78-43bc-96f3-0905391606f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3623446b-8d38-48b5-8df3-a16ce5bbc54d"
                    }
                  }
                ]
              },
              {
                "id": "c231bfa7-0246-497d-9223-ba39a4ea6e2d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e2ac0a6-d51e-42e0-8f9e-485284bbb9e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb5aa258-b349-46f0-9aa1-49f4621b6ea7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f03409-981e-4397-81a1-67227c437046",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "290f3466-956f-41b2-9ea2-d31f1bab5233"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7f21524-1436-4774-a4a2-f5f19114322d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c58335c-f77f-445b-bda3-09591b418a0e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76c96319-54ea-4cdf-8d67-3c4b6430a32b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7671b54-2b39-46af-9354-f45c1b576ba0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a41baea-a81a-4b11-9dbc-97294e49103a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f98d783-faa7-4edb-8b7e-8ce1aee3d0df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "661b40c0-ef61-41d3-ae06-6def4b2c7114",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0e23d88-a269-4f26-b4c8-d8d1f4bfb22d"
            }
          }
        ]
      },
      {
        "id": "dd8f89bd-4ed6-4712-bdbc-e7e3923eb509",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ab0eeff9-a875-45a6-b98f-6fbda027c05e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ceea0eb1-57fc-4077-ab6d-267fb33eb729",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9107886e-4365-447a-a7f1-c168c89b2805",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24562ea-eefe-471e-a3f7-6f70219dc09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90c1ba3-5cf7-46e5-a317-ae5ad9ec7ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01dbc3b-829c-4973-9655-00ff63322dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c541fe1c-99c8-40a8-95f7-656475855e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560351e7-31c6-4e9d-b120-a379fec5fe97",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1c425e-515a-4a4a-b454-e56ba8177b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32a1884-a120-4f2b-8034-495079aa6450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cca5f56-1974-4432-8efe-4605aac8bf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0b0810-1c96-4509-9af0-23cb4a56d198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a4c42a-bbf2-4e0b-a150-edb4c5f81ef3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa144b8-8250-4d4b-b9e3-5f94aca9a78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34933c66-ee98-417e-8bfd-58f045f7f335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab37a349-2f58-489d-ba3c-da2f5df4c69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c07995e-03b1-4fd1-a47c-859874372ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c0b49b-f2c4-47dc-abb1-8913c149f86d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fc4b58-6d05-4d89-ab0d-96e25c8ac14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28735414-3d31-4346-90c5-6f4726f187c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a655ebed-7e09-4417-b980-ee13661750be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9ac217-05b2-481c-85d1-572503219cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5211c6-3553-4c09-8007-d1cc26db98a0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b0d3c6-bf5b-435e-a034-99c8eee235d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31817da7-5485-42d6-8bcf-86256a29fc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ad6a46-3b0f-4624-a8b3-7c0a1093b881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceab76c8-309e-4518-bc91-03b891162ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2907ab64-8e6d-4037-bef3-844f16959ef0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845e97e4-6297-449c-8b65-9063c668c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa2aae6-dd69-449f-b897-698709adf516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1eef79-2331-40a3-8c44-b1fe676d66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b314751-0e40-49c9-8b0b-d3fa53951a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb18f1b-2928-4d85-babf-5523a15ce64c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9feec893-e0aa-4f1a-b8b8-c35e6e7abbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9ad688-9e22-48ea-bdaa-13a72ce4d06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24de981-525d-47e2-859c-dc17a78b210e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f238a71-d2e2-424c-9de2-1e4f24b87d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d24a59-21d9-4177-8486-2fb3f0da4810",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40869889-cb66-408c-ba00-486a21f1f1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3682841-82be-4bce-addd-fee69b8dc97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96ec95e-2e50-4ca3-acb0-eb7e10353e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c44aa24-f428-45ef-b662-d02a21de97b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813c20cd-59ef-471a-a897-08a9c0d0912e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97e2490-f749-4c1e-a1d1-4b7bba3812cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56d3174-8d09-4448-8027-8cea44096a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d306a5ce-5c2d-4991-a7bc-8667591c6c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e422820-b7de-4008-82b3-08c51867c0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a094b50c-4737-446f-8e6e-12d9be7d853b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e0a53d-8fcf-4e9c-a738-8ed7cd10ca69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb08bb4-6b6a-4c90-919e-8082e498e13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104594c8-119f-4846-8186-3f3e06258571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbcc2ce-a9a9-40b5-8115-c6c52dad3468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563d8817-20ed-4df1-908e-2145a38a0a8d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442248b4-d9f6-4f8a-ac18-516f060c5d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e14115-ec17-40d2-85aa-32c4b9acf059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8961d909-367a-4d99-bd67-2c28140aabb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0898bf30-b471-4f25-937d-158069d6f0f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194573b4-33d2-4caa-9f58-e47b24af1f54",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5638fc73-e10c-4657-9b8f-41011c059610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8055095-8bc1-4b65-b744-50e7df82d5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab333814-a11c-40f6-8cd5-546e4c3ac8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "845e18f8-7560-44ae-aae3-0b91b2f0163a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2689576-aba8-48f9-8433-7c6e5b075995",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2730c7cd-aed8-4159-8074-e2b6f85aea34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f482831c-d45e-437e-ba84-93819ffb2b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a89021a-ce7c-431c-a1f7-6ebb42448389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5deaeb69-52a8-4b7c-bcd4-1bf8b313d9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a90bc95-f028-45dd-a3cc-be8cf385f7cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db3047-d332-4adb-a0d1-54b3ef6cee79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e229faee-a98b-4854-b146-f01e83c84262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e255a0e-b698-4c0e-a429-e0774f76ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e681fe-3823-4d14-b82d-95eb81993d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18cd074-5552-4cb2-982c-f84187f9d8ee",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9004437-b1f7-4bc9-a0ba-cd315c60de32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c123ed39-b1ea-4d02-8350-20ca837bb20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5350f7-e546-41ea-8263-0dfcb114ee1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c079c0bb-d13a-49e6-9a11-3f54ae50dbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5289e3-9476-4815-b801-6b545c829ab4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb84e55-ff83-465f-a8fb-70a6a2252b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0ff77f-6d34-4e1f-8866-612cc33f811a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a202e1-4c65-4719-bec4-e7d815fac79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ef627c-bc2d-4114-bcb5-1c682b9cc289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c678b1-9490-48dd-b100-65206cdc0dc8",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22847675-e7fa-4653-927d-9e740a27c32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42982543-2e0f-439a-b0cf-9ca220743a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c818c636-5de3-4331-9bc3-8a581e0cc7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17400db6-95d3-4b97-a6cc-e1c5d14fb85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec36ed-1347-4b45-b068-e652869ad38c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6257550-8ccd-4cf4-bd95-3571f0a5a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1d9484-3cda-43e8-ab39-cbc3b8425013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17d0892-10f1-49b1-b074-a019f97d1bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2de21e8-d486-49b3-a55f-2b485e5ce1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783d3441-4e0b-4938-a114-1ce38bc8c62d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe7a2c3-c680-4199-b5db-1b951ea40385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d58444-8188-4b7f-a459-343935041ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69edbbe5-de14-4a46-8d26-073a2646623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc4e888-90dc-4300-b086-98fbec3098d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515b1d64-5936-4185-b2ad-4bdde795dd54",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33850e2d-d996-47a3-bb1f-315840db13d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d195bf-f163-4b62-b38f-c86a5931d47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0485e80-8589-4435-a538-f46c302ca4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c82638f-bc2e-4f3a-9865-6a7c70de6a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83a7822-12ad-4559-b15f-ceb9120d94da",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06e2008-25ba-4baa-9219-240ff7743f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc2225b-404e-4ba5-af9a-dff3b3d91f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd0fa18-fd4f-43a1-80d7-f5c96b3c5a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dd18d7-65b5-40ea-adc9-3653787a5a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ae8e37-cfca-46f1-8d63-eb497f3d852f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fae3dfb-1e34-41df-9323-b9864891e30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2a87c1-0c5f-4065-8c2b-60cf447c4ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba001b2e-231c-4850-81b5-f4d1c7503caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b57826a-4dfd-44b9-84e4-9dbbef125220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1436d6c0-2ea2-4670-9a86-496b8c2111ef",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef4c6ba-53ba-413d-a337-c4a9d7a5cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ed73a7-4439-46ea-87ea-f74eca3d6d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235ecfed-40e2-4785-a746-042576038f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "227d1873-8674-4e9e-aab3-4e3c899034f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328b8669-7498-4be0-9212-7fd0cdf03991",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a8145-0a14-4ed8-9265-25cb45664af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0184b1e1-198e-44fb-9157-cdbbd26b0280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42cf16f-7c97-4270-b80b-05f2889eb1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "553703fa-db0a-4bc5-88ec-37f05c761399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b0d570-574f-412e-b691-f66576c8197f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe323c2-fe4d-4531-9d54-fff101a81876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e843f512-344a-40aa-88e4-38af02a3dc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2ba8b6-89c7-4774-b6da-17b33d1de3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6ad50d-b0ad-4009-957c-4264663ebf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8375ad4d-2105-4707-b924-d7ba4244854f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a312c52-111b-4bf7-b9c4-220c7ff21a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c30c54-cfb9-4ea0-be2b-4082ee215ddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c636da-ebec-465f-8fae-657d248ded50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f02591-8ade-4c1d-90ae-3c939c1faf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00c8940-5e7a-4ab4-9639-70b8ea46f8db",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934c5174-c7c8-4bae-86f4-b4c5b162de25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366c421f-c87c-425d-af9b-584ec0d7170e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fb3209-4789-4b4d-9feb-a95fc5770818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90016f7e-cf0f-4311-8c1b-6a2a7d7464d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3ddff0-122a-438a-b126-9f3b7549048e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67de4713-9071-4b9d-9b1b-f3ac3b0efe0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff826dd-21bc-420e-b715-a2b9d07fa6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aa1e5f-04ed-411c-9c5c-da3a1dded3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21b20c7e-ad24-4248-bd79-e8698c7e333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71123f8a-7e30-4fa2-8857-72431b834107",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c8dc7d-cfa3-456a-b463-766ebc19d279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd04c953-220d-4305-88dc-fdf999736102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919f430f-bbda-4ff1-ae74-a19eae85599f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a209cbca-c27f-4d34-8d88-ba11b75af63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636403da-d268-4dbb-aed4-b4e01d2d4a4a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2946855-642f-4d5e-aa4d-3c76635884d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a4f269-eb86-481e-9a24-d8ea238f03d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbfe83c6-24d8-4c79-90b8-14a5b4081ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baae440e-4fc3-4786-9a9b-fc3d018c9b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28a4d58-45d4-4f1a-bb78-1a73dadd6854",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deff7730-0418-4721-8138-1e2af7dca522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4f16cb-069a-4575-bff6-c4d026fe9d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67226940-ab79-40e4-97bf-088394e7108d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba06c80-c6cf-4e52-8e22-12d57cfcaccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14fe501-944f-473d-b9d5-ffb8627bc34e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce0c04c-0c99-4f0c-9d8c-65e94825bbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aea468e-58eb-42dc-847f-25de1d6d49fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80fb949-3270-4085-8053-dbb2935fc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508dae8a-005d-492b-9f0b-72877adadc73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "397d85ba-acfd-44c1-8631-48aa9cf1c8a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74772324-be67-45ea-a522-363584f75e85",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58568539-2379-4433-baaf-850b9824bd9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7b0fb7-070f-496f-8bbb-7ba6a1f8f796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f0fc81-2078-4361-aea2-6804a21c0350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29b5004a-d874-44ff-b7ab-6fab41f399b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2727e35e-ee31-40ca-b233-f492ecc3c000",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b916d67a-2b41-4ef7-a541-ed43956df05c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5018c7a7-f113-4a06-8e98-fd393aefc855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e2d3013-1c7c-40b3-8f1a-555f783a1583"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59b123b7-119e-459b-bce4-73aebdb038d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ad76a7c5-6c58-4222-9782-8b59de41cce4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf6f9971-1b9f-45ba-93b7-c7d24f725c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d53f7d4-efd0-4a1e-a7a1-3dfcc9e2b326"
            }
          }
        ]
      },
      {
        "id": "76b49574-aafc-41a4-b67f-e621174fac8b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c22678dd-a2e2-434b-85e7-91eef7cf9421",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba3618ae-96f5-420e-8cfc-ccb0bfdc9ddd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2105efdf-5b28-4cc3-969b-9fdeab4163f2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7737b5c-e118-4413-aeeb-e3d664d82114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28be2a58-4f8d-4089-964a-5c51e1006bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b61158-a577-40e4-b130-49fd87fd2efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b0947b-e38f-4f00-a89f-fec85453300c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b38e130-fd5f-4ca9-9ea6-965727112952",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b42fbe0-f20e-4d16-93cf-1b083e69f005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97de22bc-7043-475e-b75a-42302f08627b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73be0274-2ff7-4f58-a0f4-5be843575d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0de30a-f5ca-461c-b112-af6472c4e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0014f5-6c43-4d73-bffe-a7743bb7d8ab",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d284ef43-e71b-4f96-9076-d938363334b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdbbf39d-24c5-4449-a33c-126d17a7bb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033324b1-26bd-42b7-8071-b3c4767cfbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0566638-3aab-4ff7-ab97-c9d395006ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0674e2-76d8-4868-a2c0-b6a119debca5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afe7bb4-2df1-4ffc-a384-c8f846b26a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d86aa45-8d2b-4acf-b4ed-7d30b7ca4d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979a6047-ca51-4b4f-b757-4a50384ecb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93c1229b-3deb-4b92-aaa9-797d4df7962c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae4947c-880e-424d-88b5-780bb8fa89e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61e518e-2d0f-46d4-a3bc-8c5c073167a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efe0aee-abb3-4fd3-97bb-69bbf5bf6c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13842ba-3ac3-4b88-a810-49b33cf3f368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4744afcc-3988-4e22-984f-e11119191a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47069900-063a-462a-b351-db71b0c0c663",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1779ce51-76e9-43df-8c7a-9748614feb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8155a4-d01f-4b9f-860f-3f17eec1d82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f73763-1d2f-4267-ba32-eebf25e14a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55f0d386-aa3e-4be4-8536-4e0e9daf680d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8840040c-96fa-4014-97cf-f9b02881d602",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae012cb0-8ea2-4365-8f0d-1b842e3b7ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7773a968-aa1d-48f5-89aa-68676eafd143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7e2a97-e92b-4b2d-bb63-00e63698c7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e95cab57-6627-4480-a1cf-a4a112363fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318b475a-293a-4832-8b7a-f2661e394e33",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ebec02d-12af-48f1-a3b4-672373552475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb078494-e0e4-467e-bd33-2a323ce4be56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd4604a-daa2-494e-ab5f-d8348f0f5fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8e25df-5ae7-4b72-9103-d6cd6afb8359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51fb213-4aee-4bdf-871b-30c1d98babc4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c1dbf9-bbe3-46dc-a8a6-3fc26ce595e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c00913-cb6a-4006-9faf-bf6bb6452130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e321a7c1-f392-4930-937f-43a9fa78b92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e202016e-a52c-462a-8f39-ad34c7ba408c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0beb5bf2-fe05-4c02-96a7-5e44b185ef11",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d8ab96-a276-44e2-815b-54fc07b012e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebdc50db-7049-4e00-a860-061887dd5a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8ac33d-566a-41a9-a288-f25409bd64bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4aa39e6-4029-4eaf-aadf-1bd3582dbf97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d98101-0faa-44c7-a927-92e7304abb6d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "356bc926-5902-423e-9555-e9d9a8576072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54ae6c6-bc25-459f-8edd-4404a082e51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbde3c93-5cad-4433-ae6d-9d02a7a9d3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e97617c5-a643-4b15-8d3b-5e6cde261300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e821bf-3881-4783-8d19-127e59aceda8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba7e4b-f89e-45db-877d-7d99036f76b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661b719c-606a-423d-bc56-840f340b802d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bcafac-d579-47db-a13c-90b441d46c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe3a0e5-9206-4112-96a4-b20fcc6d9158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d05c6c-d3a9-4ca8-b3e2-259a7c4a2dad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b338b69-f684-437e-8e59-f6907857a8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e980b643-15ef-4e1e-a6f7-b444d164078d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1199d0cd-189f-4f0c-bf2d-5dee19ce5542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a4575-1a89-4810-8b14-9a9341e6dfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ea4ab4-56a3-4a14-be51-e7aeb473ae1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25b2e40-0ce5-4f93-be6f-731da66c5201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a62f743-52fe-4836-bff5-57ce9b145cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529fffc1-6ee8-4f91-ae4b-48772cbed837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "67b59317-f8d3-4a16-abc4-470d525b8c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a371604-8659-4b6b-8051-cf78dc181c59",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371b1c8d-095b-4e5f-b16a-ceb0739f476c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c4816d-16e0-4979-9a2a-f31ac2d75f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c270b6d-1e92-4fec-9006-b13f2421076d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c590367-28c5-4679-8b3b-c78e8dd59b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90636b77-414b-4631-bf51-a9ca634e5504",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71536253-ddf1-4ac1-99a9-0f1e7e822b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba663e4-e5d4-467c-b5c1-8523c89c5983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be908792-2591-4770-a181-b38d41a4c5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "41ed797d-bd94-410c-8d97-ee1242d9fdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae50eb9-ccc5-4ac5-935f-235311c0ecbe",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200190b7-931a-4642-b194-68fe96333d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e802e7-7fc1-446b-89c9-6d4c72c362d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c712b8a-3c4d-4460-a2fe-f25e71ef4f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5f3161-7a2b-47f0-8959-6789445f8ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d1b644-8a99-44d3-9ed8-4b6f4363ce0e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adbc069-8ed6-496f-8a26-d6d4d9182393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb80b8c7-9b9c-4a3d-9c0c-1115fa757e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb15886-5fc7-40ef-b8d4-b4c37350057b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cfc507-bfcf-48f7-9150-d208e5496d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad1fec8-adcb-4f13-920f-fa3a088ae9f0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac29f58-5ecd-4017-b1f9-f57285dd6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf943fc-11ee-47fd-9a3d-60e368708887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4d36a3-b7da-461b-a4a7-081da89e3a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d2cab0-91cb-4756-b5c0-bbf446b0182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05040d75-429a-49e3-b71a-f0167aa031d6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36a8c61-8482-48b1-9f58-2716b25cb3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa3ee6a-8eb9-40ba-bb2a-dd3a40fa5b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ae630-784b-4683-961d-f53c4183afea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42a6938c-8990-471b-8ea9-d3cda90ea0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e7d544-320a-4110-926c-f8ca27b0bb4d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b908c663-614b-42eb-93c9-99c3b58304a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b8b3f8-53f4-45d1-8cf8-c45b9bae4e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de018c5d-6808-4d1a-b385-f411a1ac4772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c27fa22a-e9ec-4c69-b7ea-644e16a7a75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e943cc8-45ba-4234-8ea1-ff74c7774ce0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5d26b8-7d97-4b9f-a2c6-7bef564ab391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4864b2-e065-48fa-8a79-24c280617575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308aa73f-2003-43e3-a98b-c36dbb5ab9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4acdab-0edd-447a-898e-7d9eea4df3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8485a9-8563-47ca-a8ca-5812b0abe624",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed61df-50fa-4035-a423-ba62d9455910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a501e8e-50ca-4011-b00b-e769f80a92ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec3b79f-5dba-43ad-ade3-03b823a54af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa34fedb-faf7-4e91-af0f-6f4768283e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6aa6cd-209b-48f0-a233-fd941c1bb8f2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5848b-13d7-4a2b-8610-79f07d860a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782c4019-590e-48fd-b796-0d527dfbb29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247547ec-746a-4ce3-bd69-0b05f9b0c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe90dcb-b902-40b8-9763-a589206fa3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9511eaeb-394d-429e-8925-505e920602f0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d45be2-e04e-42e0-adac-c7f0d938bab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cdefed-c522-402d-bdce-8c84a74aabb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c427bbc4-283f-46a5-9faa-c07957b2860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4693d4b-ba3a-436d-98c0-be99a8343af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279e0c00-d7f0-4062-b36a-7815f5a0a849",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0819412a-d592-4ba1-ad3e-7eb8be2a0d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d420243b-db16-42a3-874b-d21af1f96cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4c163e-c24e-4848-b72b-d85f7a6a7aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25083d1-6bba-4cf7-ba5c-a2a3e988a01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d9e802-293d-4a74-ac9a-ac75f70ee5f6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab1f0fe-2bca-4c97-b638-8a7e59de678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c076ecf-7966-43b4-9dd7-18fb41a74305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48699bd-6e0c-481d-9a53-5fd5b1859044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d761953f-c746-43c6-8504-a252d0d6ead2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1ceb32-fc77-491b-a471-ca7515f3c6b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f528321-9e53-47b8-b765-ffa188b347bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d0fde0-7d27-4c4c-b123-3a2b806334f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d56f64-95f4-4ce4-92bc-8b173705163a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b918d7-2748-4245-87af-bc15cd76af80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e23072f-7a01-4fdb-a7e8-4540a2ad36c3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bcb771-2e36-42e2-9ac0-3e3dbd11d305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c387e85d-40cf-4aa9-a546-1717af69181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439f57ab-3b8c-452c-9e09-98fda1ab5bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13688506-daee-4a5a-b86f-f095b9682d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05390a95-6c0b-42e5-b2eb-67b396d29bda",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b781c20a-9185-4361-bd7f-d0b9782db410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab73374-ac75-4e66-b120-b543ffe6634f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ffe66a-241d-41d3-ba7f-3d36b42ab5b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20eead6b-e6ed-447f-a560-6bd3af847983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aac91da-9fc4-4a1a-9aa1-8f36613b81f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f68491a-7bc4-4af0-a357-c4f3b5a3178b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db1ff5a-31fb-40fb-9255-b8be1d4d8cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfda4cc-80bf-4dcc-8149-02a784aecfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eebdab1a-d70a-4cde-b98f-e565fee27f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4f297-2543-4b78-b0c1-5bf3e2242414",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec6eeb4-8953-461c-8885-31ce28a2fd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5908f657-9dc2-4bbd-bfeb-66e27d739d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1618ad10-0651-493d-be38-0d2b9c682905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e2ec3c-047b-4f5d-b16c-50a22bb2c7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a2f3d-cee5-41f9-8374-084021811cf6",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e05b79-67f9-4818-b9ee-d378d083137e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a185d062-43d4-409f-a22b-1649ccfa5591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f6327-3099-42f4-9636-1658923c7fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1c1125-baaf-4841-87c6-f710364b041f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63baa961-f469-4d8a-a0f1-47f2a470c086",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316c09be-47a6-43c5-af37-dfe916cf5924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c36444-26e2-40f9-9db7-80c7492e73fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b442b9f5-c2a3-4ab0-a564-091f2a635119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad387cc-a8ac-41d2-bfab-abd1f18ac4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9cbd33-4ced-42c8-85d0-10442f54b032",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fce9f61-1b21-46db-a354-1c99f93dc444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c26a0e1-8e05-4146-bf24-5b264061b496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7687311f-2ad1-4ec2-b4df-29429e7612b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97a80def-a27e-407b-9ec7-a30a99ced8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb38a6ff-fbd5-4be8-8b43-7ed2141be75e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ae4969-18c4-4fe1-a289-3fc876f50f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c77b40-3776-4f14-adeb-395db8d8a2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cfc100-8ddb-47b6-a6eb-92e3930bb311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2045ae58-31b9-44bc-a308-62806f1055d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28c393a-532c-4abb-b3f7-413c287ab165",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52793b1d-d751-4451-b9f5-d890c4f6f991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e19e34-214e-47c8-9aad-7dada0761139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b04133-7334-4f9f-9415-b0938a5646a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "683d0a90-613d-422c-8f68-a8c1b9773138"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adf227d0-f79b-41ba-84af-8e5601f5cf59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6476ba3f-a616-4281-b38e-e98f3e0d18be",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8379facf-394d-4d60-9f32-9766cd02bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b88bf628-8347-4bb6-a5ec-4d9484c64ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5abbb13-a3a1-4ba8-b389-324485f8de7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c3fe826-6b3a-47f1-81ef-904b28a87151"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20380540-3a23-4a73-94bd-6457fbb6cbf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f1219e1-58a8-4abb-90ef-1d04023ce934"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d0c98a-3a0a-493c-9785-cfe814caa40e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "083077a7-db5c-4e63-8ec5-a621842f8bde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "273ba33e-e050-463a-ba5e-bdc443cb59d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1a9f72f4-6e6b-4086-bac6-32974014432b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5f72bf3-1f09-4d53-bcbe-03e427dc35f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "634bf803-7a45-4deb-9af6-5ae3a26e1590"
            }
          }
        ]
      },
      {
        "id": "85bd9806-17dc-4fd6-8fe1-9e97f3c71f1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "35d817b6-4f42-4a80-9567-cc7882671a0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13c65c92-99e3-4c0d-a6f4-cad0c529cb3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bc83020-b2cb-4fa5-a921-a75f21125e69",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e54552-0398-4b4e-8200-7d983b5979df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ffb71b8-3778-466a-8f5d-699c9048d1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380a81e6-fd6c-4a1c-bbf9-734b602ba23f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e49911a-7830-4959-835f-7738085856a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4670081-f72a-4477-8a68-f8a38cba334a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1040a17-8731-4fb5-9a15-97d44225e616",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5e9759-c672-4563-bd73-e564c0a5ce3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b13901-cc18-4221-8fe0-3ec4915a5a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0add9dc5-370b-43bc-9d25-d1f99edf3b71",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0041a7-363b-4dcc-af13-4ebb53fc143b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61bb2297-500a-4ef2-a253-e4cdcd1b2add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01a5e41-bec3-4413-9f01-2cf502276aad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38087416-35f9-4329-9c39-9620e6e7c899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a749c7-9bda-4f9e-b9b1-c65d31776518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832646d2-5fcb-4170-ae42-d61fb7f132d8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea272cf-7c97-44c8-a279-e19453c23049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43f50a6-81ae-49a5-8cd8-a7a988f43bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d399f34a-c8e3-4376-9422-563a0c47d745",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9803d76-b902-4fee-af4e-e6438810685e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8b568e-d90c-425c-9fe8-aea118ea6e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d80def-67d2-4d3d-80f2-50dd72953909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff2119d-9435-4bd2-bead-4aaae18ad70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbce0427-d431-4a18-b033-96385d4087c5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d7006c-6104-4134-842f-0f8b30307ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724953e9-fe32-4141-ba5f-2db09366d14d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699998bc-694c-4d3e-9b53-e197d5500edf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ddec1f-fc7b-4c1a-bc94-70a19d9fe106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016bbe25-95e4-4217-9910-18dd66a1376f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c7589f-13e4-4d09-97b2-1ac03572d279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7176b15-c771-466f-a898-ef62c98626e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d4d949-0e17-4ea6-89a6-2c55f2cc8f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec237c6-887e-4266-adfe-453c35ebb1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6b1560-a04c-460f-9f90-326717c26960",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12701c9f-9d33-4c50-ace6-add60449ec83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "540881ea-3a85-4176-9b30-2e1a9f1c4b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3303e5a2-7e27-4c66-b55d-6b82a558dc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719d96b7-5fac-4303-af77-bb24af372a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c918cf2-361e-4a08-8b37-538c78ff091d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcc032c-fd35-41bc-b1e6-6824dd82d24a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c064e6-a44c-4f65-a6d2-62638deaa0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0f3a8d-90a3-4e55-822d-036eb7d48426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52612cea-3dfe-4d03-aed1-3bb415d5381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f347ab-10e4-4fbb-8b92-b8e91f37f2dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd7978-8d3e-4d56-a72b-43740f237628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a33ac3b-198e-43be-b142-0a8932756cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2922c700-7678-4d16-b0cb-6908b295f1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fc219b-9631-43a9-85c7-53dba4ea54a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6018a641-b9d2-4249-8d4e-28b1a7ca9c2f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95876428-560e-48bf-8c67-dc04beaffdfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06829446-c48e-4b48-8af7-028e2ce7ba7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2a4ae2-1fa5-4cf2-a584-40f226e1c9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdcf770-e4fc-4e0a-afd1-7db353a4cfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b48566-f883-495d-93e7-0e01d120cc52",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8615d83-378f-46ca-9d08-a34424bd203f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e68a1a2-4861-419c-b4ad-3b6416e576ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f78b1d-d676-4568-b4cb-fd889855741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2443c7a4-9ccb-4b65-ba8d-4fbf365c8039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c73490-34df-4a7e-b215-655b0410926c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5efe679-ceb6-42e7-af6a-c36cfa68a3f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9e461a3-bace-402b-a253-4c4810cf16bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d5c865-f2ab-4163-b996-5eea52628e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71a0be3-58a2-43ad-b699-5230c9812714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68851964-43b7-456a-ae45-fd8d946189a7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2225050f-c73e-426b-a058-f25ea5015da8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e50373b-39b8-43ea-8379-2df3ba43b527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1650eea3-88ad-48a2-9a53-fd33c491a3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c511c844-71cf-4912-a1aa-c140cf96e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc05e155-1265-4314-8477-9d73fc85b551",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355ea32d-17ef-4f7d-b045-7d7b07609b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c457b67-014c-4930-9da6-fd4b564efb5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e37cd9a-8692-4d12-9956-cc632ae32d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e0dc56-5402-4c88-b955-54389ec771ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b971b081-04b6-413e-a9dd-cb8b178bf893",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab42f8e3-4484-4fb0-a36e-bb56656d6f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb60428-78ed-4b8b-a1d9-bb4e024e0f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78199548-9cf7-46f6-8381-10d6fdf26180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd722860-170e-4466-b466-c7137aec8031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9941a315-4057-4f29-94fd-ed9d0df1e6e3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd24be0-6dc5-4f8b-900c-0f9569d449f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ecce376-0522-47b7-9e77-6c845090d291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3b27f6-32e6-4b97-8bee-8f50617fa8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d861a6-a959-43ab-8ba4-9f7be1632468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4939419-9272-4384-bb15-d560d3c200a5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a33632f-6d23-40ba-acd1-273da70bdc9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a036e3af-7628-4c6f-b574-d248b017183b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76ae464-2de3-4e6b-9036-fd0e45fad0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0445d16b-56ed-4cc2-af45-9a89d53deef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8194119-fe9f-4647-9f79-726f6657eb7a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6db4ec-99d7-48cf-91d6-af74758edaa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524df0cc-b39e-42cf-aa9a-740f72d79069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507b8a43-f732-41cb-97f6-35a88bb6c301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab9076b-7394-4e51-84ed-dd1d76b22821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fc41bd-4ae0-42f6-9737-6ba13a92f775",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7355ee2-2fee-447d-a14d-731e67138be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90cc377-ad66-4ee2-94dd-a3b8c6b97bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dddabab-902d-4ae7-a197-f42f69e9d08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba492be-b41b-43cc-aee2-d2be6e287245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcf3e83-a9bc-4a66-9cb6-033634793afe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8d5c26-c13d-4353-a0e9-b4632089297d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d62c9e-2bc0-427b-b62f-c65d830b2025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b90d8f-ab10-44f5-af42-d5f6c2678fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a225f5-1d4f-4936-8109-2d33532e7af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee169b02-e316-48ea-90bf-4807dab24785",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac49833-aadc-4271-9fdd-233e73dbdded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95519d46-5208-44f7-b624-fac9da43c903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed616e4-57b5-448c-8c2f-3f870ab2771e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9c3669-68e3-4f3c-87be-aefdc7acba9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e08eff9-3cd8-45c7-b95c-478b647f6b6b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c6080c-be9d-4f1a-bd44-cb52b22633b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5305576-bf57-4751-8188-6142b6fdc2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f44acc1-b6ee-44b1-bdcd-cf4449ee47e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166fbad9-b3a3-4082-8a6f-f73917197970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093ce7cd-ad45-4089-a979-06feb68e2a5d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242c501-0caa-4eef-a53a-af1b6859636b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba3776e-8d01-4cf5-92b0-35000a2b8c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f703f8d-3a76-436e-990f-cf3e6bbb75c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e4dac1-8344-40b3-b446-1f88ddbc494c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d494e0b5-46b8-4715-a770-117de03b6b0f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e917f46-6c0a-4b57-838f-a1a5b548af71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7feb15-cd43-493c-9f33-a57add72b7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437bf67f-9d8b-4af4-8eec-3dd24c93547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d573e32d-481c-4900-a501-d5b2c2dcf671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a27f7-a80a-40a8-a67b-dd92fb249ef0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5564daa8-0897-4b11-b76e-6c9e6648bb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41febffb-80d5-4ede-af76-12632d5aba67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1816c064-c0cb-4fc9-a171-5231747a0826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9322826b-d6bd-47b7-8906-a5810ae966f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af94c3ea-5509-4ffc-9ae8-883c184adde1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a366f054-8217-42bc-85e3-abca2888badd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28116438-4137-4a81-b744-fd0993a342df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a442cabe-c5a2-4e57-bea0-7f9c176ee983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb02401c-6d7a-40c4-9c79-53f8c71c634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d1c098-f831-490c-a7d1-187057c23fa9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a524be1-bf94-431f-82f6-03340ae2f6a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eed8004-f2b5-463d-8773-fb2af802801c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978eec5e-381c-47ce-9a5b-831270002e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc8c7a9-bcee-4036-a14d-28ec05cf3413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da31bd23-c40a-4ec0-a833-2cacbd81517f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89582d8e-9d32-45d6-af9d-f7f449d10e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf0b5195-d4a5-4174-83bf-1d077701aabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc79850d-becf-4ed8-8b81-d261ef1cab22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed356e2-f6cc-45d3-b1dc-fd998110897a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e955036a-8f3f-4be2-8d59-d4bedad18f04",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0c984c-40d5-4f3e-8cdc-757af2c96c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551fd6f1-a9bd-47be-877a-7e18c5cb8532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36c3e21-b7ac-4b50-8d2a-1acee7d6c6b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8bbd7f-9c3c-47d3-9e16-0be7f785cab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014f4ef7-9719-40d4-909f-bff420111261",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9efb32-fa5d-41ab-b088-185c29cb4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fd1119-35c8-4a70-81be-cfa3bf698201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a0c1a1-3357-4516-b871-8f9d72a2b86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88636cae-f1eb-4b11-a0a1-64f51c163427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc4acb7-d150-4d77-8dab-afbf360f98bf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c083618d-e461-4fe4-8585-089b9dc13647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e178ca9-350a-4efb-a1bf-6b4869fb2088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4cce7-dd72-4703-9e2f-ff8e314e622e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7424a500-8c5e-4e68-88cd-952bd5a5f5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed888529-5a07-4f3b-9d3d-2b997d7fc0d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97905a4-dadf-43e0-928d-675eafc65fe4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3655834a-c1a3-4e9a-9fb2-110ab85cf3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7963cc79-d0cc-437f-8ed5-2425acb320a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0781221e-48bb-4fad-aa2f-15f05f2fbd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22004e20-5f42-463c-8641-36f282abb7dd",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0086b7fd-1da8-4e46-8fa4-aa60298b6460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b3c9a15-5343-4d30-84ac-0839899e9494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce79343-b793-4a9c-ab86-54a86eddd530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f369e02-9c1d-41f2-926d-110dd6534936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e67f12-fbd7-4e6b-a8af-876079216971",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a305a7b8-0cb6-4175-89f2-c1162a4fd74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b49710-4b3c-4422-b146-483bfe5313b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8000faba-1c6c-44c8-9c09-acde4831aacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80014920-e379-406b-8f8d-5b778409d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f81b00-35bc-4652-b315-7e99a38eb368",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9a7758-78c5-47c0-878d-1f2dc4fcfbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa53435-0628-49e9-b382-dd5c278675e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff14168-3d8b-49f2-ab4b-0c5b6cd5af4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789e53f2-6560-4fe8-8e94-575ed1f1a013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcc48de-360b-480c-abf7-a6caa6826f3d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fa9ddc-a6cd-4e88-b507-8bc4b909cfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b965db6-305a-4018-9530-bd07e3a77bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3bbc1f-d10c-466a-ac20-073b2d0b2956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315b9afd-ea23-4960-be12-9db0a54c85e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449244d3-7f20-4c7c-8d92-92c2d9476e93",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e39e1b76-c44f-47d1-9d81-4fb62e3ce193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dda5288-1471-48e6-908d-7b4587cb7495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1593300d-b53e-4333-9205-bdc3b40daba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e8cc33-58cd-4f6f-9224-8991d0adbdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42b6f12-5536-4f55-8098-fb1c33046d57",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171cd886-2788-4446-85af-f31971519c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e818a3-af30-41c7-a8ea-95c278dba37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5df4b3-a39b-4017-831a-0884cb50a169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f620944-6768-4cfe-a338-ecd1e07587d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a575d5-4244-4ba3-9283-9c51ce49caf2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33d8056-06f2-452a-8592-5404ebef7a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff7ac8c-0c3d-48ee-bf6c-7c13b213460b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43de752c-0435-4589-bc14-c528cddeba00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d15bba-0137-4fc1-9f58-fda8fc992dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa50986b-8f4b-42d6-8242-11972b5321fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c00cf8-61e8-4f1c-851b-2f2648a8814e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e995515-d027-48e9-a9d6-634102277cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0aa5955-ce41-474c-96da-1a85cc67e573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b93ee8-fd98-4721-b0fc-ea55d0b57cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec72692c-26ad-406c-9e9e-77aac514d8be",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a21ad6-6f1c-40f1-b9f5-60b64b8150b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a53bd8-af4f-4e8d-99ef-b9c126efb9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d877a4-917c-41fe-acdb-329ba156d9d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c6367fb-7171-4b49-8d33-657425ffad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c440308-863b-4946-9685-f497a33345d1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359c39f5-e6fb-44b3-bb67-02d1935fdabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d03c34-6276-4cff-a6c7-67fe575384d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d954e04-3032-4518-923a-769bd3455f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2358af-1d77-4df3-aa53-3069f8ebdb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84e9da8-94c6-4fe6-8994-7b93888de793",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c14f755-1c92-40a8-97cf-f03fea586fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bd0cb7-f9fe-4de4-8dce-ca954b084bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251e0c43-2667-48cb-89b3-6e12c7489b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d80e330-a78e-4532-a3bd-f517bffa7d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f94529-7f73-4ce9-94ba-31cdb17a38fd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4e5fd0-c9fb-45ab-960a-963539c9dd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3475f57-d5d0-44b1-843a-91f8ec86d669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "962a8e59-0217-464e-9df5-a7a5ae0a6eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3aee5b5-d3dc-447e-8a17-ea1ba33895a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6ac541-2e9f-44ae-8b3d-a1c3fe48ff17",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa1601a-9f4b-4e49-9d91-35d991e76c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c17722-73c1-4ee6-951d-e1eda4c59094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62a0d89-7207-479f-9547-fc886fc447c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa185ca1-34df-4f40-b64b-ac1359fb8061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f89ff1-38cb-467b-a74e-957dee3b2202",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd246ba2-91c2-4d68-864e-0a9869f30c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c0a5c-ab55-405e-bf26-ad9bd61edb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b206625-9e1e-427b-99cd-a0b4ebccf764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f72ca9c-dc05-419c-9c2b-aaf21ac03ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c38317a-3ff5-4376-87df-0f8245e8dc3f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1581408-58f3-4804-99e8-7b38772b198e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c267ec-6303-4a8a-ac73-3330e2bb3dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2d2e6-ce78-4e55-ad86-45fb245fe370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cfd70a0-32bf-429d-b193-032c0b191d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc74480-220b-435f-8f2f-7b10c5de022f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a550eb4-b838-49e5-8ae8-fee83e53ec40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc210f27-637e-4e0f-bf83-83713814892f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c351fcc-a13e-49d4-ac7d-eb2a47033088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a07e03-3d68-4596-93a5-28e0ee3a96ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07800099-b8f5-4d4e-bb2a-08e511444123",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731a630c-f573-4342-bba8-354841e0e19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc42d004-6022-44cc-8f95-759f211f4785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a15611d-5935-4409-95e2-d9399117cc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951d14dc-4abe-4c4a-80a0-5771578eb654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47e1450-0380-4eac-9fda-ace703d45911",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e355e5e3-31c7-42a8-afbc-9767a4bdb63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b029e65-e8fe-4c88-9fdc-d9d06ae49a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448f3e87-bf6e-4fef-83ba-0ec131c9aa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c983851-a42b-4321-9cc0-88860192bdf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95db0899-4ef9-47e4-a257-09bccba9962e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a2321b-40b4-422a-a6b0-c81bb8f02ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265eabf8-59d5-4b58-a767-176b4faa94af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db75468-75cb-483d-959b-65d9e5ce6ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f18c9ba-7d58-43ae-b6e7-26ea7ed430bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ad0f43-ef16-437b-ba0e-84af1b761309",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab4bb82-9eb6-4779-bf4e-1a5c289e60a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8f175-c124-41ec-bf0d-cf88073ef6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f723457c-4e15-411d-bb95-8906df2a7dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a15bbef-5142-4f9e-ae99-a316b8f9f44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c5fca8-3791-48ec-adf3-a9c190b9ab9e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3356b59-2e9b-4ee9-b5ae-ff28852a14a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30dc0259-8e84-4bcc-a443-671fa4aee36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0333c0-ed15-48af-ade2-c9301dd4aba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce5025e-620c-475a-ab49-d4f42428963a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e4853-997d-4c4d-8f25-b300a5aa07b3",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64e2566-4659-4032-84e4-5dc5f184763f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372c1afb-1822-4a0e-8f80-bad50295e8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa73246-b22a-46c0-ba0a-c77347cf2e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b7ab3d-a402-48cd-8d90-cc45409c96df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4391c20-1477-4362-a06d-c944e43cbaee",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e872e166-078a-4cda-8264-b8ab1edc841d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e389896-ee4a-454b-8cdf-ed8bcd03f6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a160cf-33d0-4917-abba-ec517af5736d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c75384d-51fb-4432-a1ff-cb1bc75d82f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04ae459-f26d-4632-ad9b-459bd7678843",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8858e54-01e9-4efd-9f09-f49e8ad99127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892cfcdb-134a-4176-b832-ed083abf5727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a8c8cc-d507-4a86-aa62-526db7e642fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785002a5-4e87-4f84-b3ec-117ff88861c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea752135-1c94-444d-9b2e-7a5de791b7e3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62661346-5c03-4e1e-8ae8-e5396c782cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4456f40-ea94-4d13-ac79-ad7f3c85a2bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58da74d8-04f6-4010-8d41-194c8bde79b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed5d7ca-6513-4ad8-92e1-ccfe513979f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4e108-22da-4f28-bd83-595d50b0b7ae",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077cc188-1011-4c1e-9bb7-ab2f8d9cf32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4150557-f682-4376-b79a-e5da227b8515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf6727-8342-412c-b4a1-28a5d8c0ebbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f2b67e-b8dd-4328-945f-054e9cb65d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98faa115-0b09-4cbf-8163-ecfdd18f6069",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c258b352-c422-4b81-838c-aafe2d520f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d68d0f-89a0-4d64-bce3-070906555f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aa63d0-da4d-4cbb-8e9f-2de9b2f0af39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cf02e7-34e0-4499-a508-e88ac8e0deed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ca2b24-232d-4b9b-aaf4-5cf0a5b6493b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e507e41-7834-422c-b2a8-745c462f8141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f8a016-6379-4de5-9029-d4a3dadcecbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d6c0af-3a16-407c-8efd-533e5a1c750d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6592a122-f58e-4c53-81fc-6c47e45fd9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8fc2f1-1a2c-4f52-b108-d617f274fdd0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea90468b-328b-46d9-9f77-77cca3d5382e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f47a148-4cbc-4b0e-80f2-3348ab150708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa6d1c6-4e43-4c73-8ba1-b583a5556937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86baf639-cefa-4c7f-b175-34b5d50623f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecbedd2-8e65-466d-9ea5-53ade909b915",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9585a6e7-b631-4dae-8174-81ab4d1282ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60d39fb-da87-4d14-a0d0-916c387b2f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1fea18-c5a6-46ef-9367-7e3c8fb5f70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd7d876-6d68-4df6-872a-09b3013c8e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7468be93-67fa-47f1-a737-4471aeb86ed0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968e4fd2-ad16-492b-a546-cf55bf693f9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f1abee7-b50a-4bcb-9bc1-d10bf45ae2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ab67e7-4739-4d91-8657-e38b3a7ed952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aef12d-b484-4a4d-aaee-5bdf3c7c36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab34eee9-5624-4d10-81fc-91729b09dddc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0ffa67-d50e-42aa-9cbb-d797d2fb7be3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f657b4af-5548-4637-9201-2620e52ca0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03235e9-cd2f-49b5-8943-ff0f6e1b3657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60fd7ea8-cd09-427c-ad09-1f608fd5fd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8315cc7-88f4-4e95-9d64-0c343a299842",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b89847-6c3d-4a23-a8ff-44c5a1e059ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "119300bf-e32a-410f-96b0-65aa9743dd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1101e5b2-3168-47b5-be7d-d67371b4e0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8758d1-520e-44a0-8445-6a08d1f8e388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b9f961-08f8-45f1-9c20-185591af14cc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9126842-8db3-4995-bad3-56009f4cfcf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ae40f9b-0636-4a56-8e41-fc47e81d7048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb3bca1-18d2-4c56-849a-204a1aadbd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305174d6-3cb6-49bb-94a5-b900994cb591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c919fa-9281-4977-935c-39b78a9dfab4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4a3cdf-302d-4a81-9a1e-a95ff6ca49c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc7106e-476f-4fe0-976b-eeb903e21d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f94538-1991-4dbc-a604-2ec44ace0433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f55c1e-65f7-4746-aec3-6cba81b39dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4855e6a-c1cf-4a44-af31-7dc6bd9b6f8f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3141a8-0dba-4e85-a65e-a796ac4c5983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95e7fc33-f056-4445-851a-df3c09f9c307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19091d92-837a-4c1c-9a1a-5ec449df86e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b80055-f5ae-4295-a813-37283617431e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7095e8-d3ca-4382-907e-ab04b525eb09",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bb1c49-824f-4952-a85e-ddaf7301e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beebaa11-12c4-48a5-981f-2960c744761e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a55fdaf-bc21-423d-807d-a25067ec41b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09d23de-8215-4479-9e6b-300164a66fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4eb691-5266-479d-b009-722fae3b837d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e5bff3-bb13-4b40-a4d0-b0fc25e5f4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8cf2070-21a7-4dce-ac2d-893ea0eba347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319dc4ab-2300-4efd-a056-b02c419d5aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7368da86-09d0-49c0-80c3-cf6861062694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211969cb-30af-4908-8c01-01ee9c28494d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4931415c-5f32-45fa-a21e-dbe546e09946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400217d5-42e8-4e75-a5b2-62f700d4c5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40126a18-2fd8-4f9f-b75a-008be8315b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fd2424-2019-414c-8b64-4c04c608d94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa704ff6-ff5b-4aca-9877-b5611b5855fe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7836325-ea02-4e36-b8b8-ccdf65206f21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f516d8e-aeae-4116-964c-781369f81296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1b2734-9643-4aee-877c-b1c727cc3b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acec42f8-8f23-480e-b1b8-f6a829f76f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee75a0a-4951-4629-802e-885f72bf3543",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b761108b-cb85-42c9-8b23-a4a55932bdb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019c7c59-6005-4923-815f-f49770388b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239ca038-a102-4f80-9ab4-ae47215a4b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38786577-c0db-4892-a495-efa578fa1d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159daa05-097e-4f67-926d-fe5e86460180",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e452f49b-3667-400c-9bb4-d5d126d6e734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff254b7b-a304-4db8-8df2-93663bdd9fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2069d33b-1e30-4f49-b863-60cf5cce616c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172c9258-aca9-463b-ae98-544d9690f9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f9fe26-e4ed-450d-8101-5b791d532f46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac638e8d-d770-4ada-8220-499397fc4d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5fe328-440d-41cb-b66f-8836671d9a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d460082e-4307-4ca0-a474-a67914359859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fa7d7c-833b-4b40-8627-2f310905af7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7718b0-ad3b-469f-83df-b5699828745a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e227d524-a916-431f-8167-f57d710ae6b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c452cbc3-94f5-46d8-a8ea-ad8d0e5a9291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596b43a-9cf9-4e1e-97a4-398be676c7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ec7653-1de1-4de4-96ab-1725d12d9435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad387be-1e83-4b68-a81b-efbe90144ead",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5500f8e8-8912-492c-83c2-a6317b849b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9446eb19-699d-4f52-944d-99bc3a04de39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9bfc11-9d66-4a1e-940a-c6a9cf62003a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e92a414-178d-4efe-ad85-b4063bcf2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871f42ee-a417-48dc-a871-02150da24990",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aecd6fb-5df3-4e63-9f19-a8353dc5419f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e98871c-f514-4c2b-9c01-4e04d472c698"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8af17d6-01b0-4021-ab85-3533eb51c514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fb30fe-7d6b-424a-a0b9-758a77f600ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8891adf3-2f72-4469-9234-af42f22e28e3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f850989-b54f-4682-929c-5e0dfd3b171d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2930301b-3cc8-4d18-b521-d77aa8d0d6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee605df3-5284-43b5-8fe7-bb9b0d51a6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eea6e1a-978f-48d0-b4c0-5e8980474557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ddf61a-de1f-4270-bc75-6389b5a10609",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb54ff1-7686-4273-8412-01deec528d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039eee8d-5c07-4826-bacb-bb324da2d321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421a666b-4c97-4c11-b7bd-111fb527508c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d68d031-8306-4329-9215-414f1675d19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc8e1e1-2c2b-41d9-b9bf-6b6f431aa58e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d5633a-ac00-4449-a00c-01c5b62f6b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a806016-15b0-4213-9415-84491abf322f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e971708a-b19c-4ccc-887e-adb2ef5b0275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9376ad8d-e00a-44e4-9129-38a0e1f99048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656cca3e-ac52-4bbb-9bf9-c47bb73510ce",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7d2c34-fd5b-4e23-8676-a2cc21866fbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53bcc66f-b5da-4ede-a28e-219f074a7ef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeafe32b-87fe-4e0b-9f17-c2adb262b45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc90e90-2ce3-42f2-a77c-6e8dfdd2b775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1a5e53-37df-46d8-8d51-f76e3a186173",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa771deb-ec91-4422-bdc6-9291b948c5cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "483ad82b-ae38-4b9e-bf38-eac8041c7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b774ff52-d419-4ab5-9ef5-a5c6a834ec7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513c257b-ac44-4be5-b70f-5328b583958e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae78bb32-5779-4c15-b030-03ef6d9412b1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e10a07-36cf-4e49-aa8c-03c6f1e6be46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dc22695-f732-4bee-819d-cb7611d1197b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1b2f51-c30d-43dd-8602-1e49048a0e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de24847b-e00d-49de-b9e2-867a9432fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe1fb20-dde3-4552-acfe-27fe419ec458",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8430633-4479-4173-b2c9-bb02552ed604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ef844c-373f-4ea1-ac39-1df05f32333c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ccb061-5f0a-4e36-8c67-a65ffe22bd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913701fb-d6a8-46dd-aa62-d98cb27e216a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8c7480-8234-4b8a-b58a-b1fafb2a9671",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ad5f35-a159-4880-bbfe-57cd4fe9c90b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a675bb6f-6482-47b3-978b-06c8bb51305b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e017cbfc-ffc9-4c9c-9bdc-65d8cb58f8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb168f7-3a14-4526-87ba-d429fd61d4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8249c108-4a88-49f7-b506-727ddfe72f21",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92db8170-ae6d-403b-9c3a-d524ae19996d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b1b646-271d-4c60-b4eb-e1d149f703a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce73745e-8ae1-4e30-855b-3af38d7fcd04",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a28977-5f36-4f42-b580-5c97c959b023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3957940c-4a63-4535-9fac-4aa37af2704c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52960c40-8363-48af-9542-6583e42707fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea915667-f560-4914-b927-0922838c1543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d790fa0-c654-4a87-bab0-f213419067b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27cd2a4-a626-4fc0-a0ac-c769a25c9e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d57e56b-f268-448c-91fb-8d811d0a38da",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71220af5-4eac-4cc7-b8c9-0167e5ef75c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de05f8eb-0a7d-4391-868e-10d57e2c7c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa5bf1a-b66d-4e37-b6be-69d385c0b920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0632b738-c300-49e8-94a2-368969211b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d01b90-683d-4c9b-8f12-52de9d0108a5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89180c56-85d0-4ab5-9d9c-89cbea08eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d83db79-5bd5-407a-90d8-4bbbf072f4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5882e1f3-def7-4403-8a0f-b2ec2225d257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691caefc-aceb-4804-a055-8f7b5417f1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f8d427-14cc-49b1-ad33-701267341fb2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dae0421-dd68-4a75-ac2c-f13d7d155ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e954defd-6ad6-4671-92a8-4dbbf83a0625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167225b6-3fa7-439b-a977-51da9460c856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e9ac35-faea-4d34-92ff-159bf8cfddb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfae9f16-e789-4429-a58c-f8c5937ef649",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7c146d-382d-424c-aabf-9f266a90421d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f99a00-af47-4c15-9f1a-8951df94b67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e59d7e4-a8cb-474e-9d43-7ea8f5aaf739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f1ebce5-3d03-4085-af73-4a64b058ca87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f2cf50-ed3e-4811-ba71-9e975490ef11",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329ccd09-3418-483c-ad80-7290910becf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb09aad6-b3a2-4580-bd2b-9a3b679b5634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96ae933-4107-4b85-87a7-629461af896c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ced045e-9659-4c52-94f6-84cdc27149bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6ad0ce-915e-45af-a4fd-bbfa2c4e32e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b819f42-721e-4371-b511-81be9072ec89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d1a818-5965-464d-9c5a-9010a8be1d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b1487f-f4a0-46a8-918f-16841ed6b450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd7413b-8f8c-4a95-be31-3d538f70af37"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75871094-a9db-4c4b-a587-8c32e1787d6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed41d090-65a9-4d47-b99a-df9eb2b599b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f268cdd8-5495-46d4-b04f-3a04344fba18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "681075d8-ad46-4ebd-a650-c07bc515fe7f"
                    }
                  }
                ]
              },
              {
                "id": "edbf4961-7f02-4ede-933a-f8ee45e642b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51f2ec37-f5c8-47b3-92d1-38f487c5039a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3f7a32-134e-4ae7-b435-842e845f3530",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e2dbf633-82c3-4981-8c67-2640ddc349cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbcf8de-1209-443e-abf8-c64b9410b84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d666437-3aeb-4bed-b9c4-b18387991a45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d265a56-5981-48d0-80d8-8475d9c61b72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f811d0-e475-4c06-a76b-eea0ea707428"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "20d7383b-da51-4260-bfbd-d68c54b0950d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df8a6ffa-66ad-4902-a7f8-c08af1943a8b"
                    }
                  }
                ]
              },
              {
                "id": "9be4c6eb-1e30-490b-96d8-241dd66cf03e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4e837e25-5070-442f-8766-40555fd6a1d7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc3b8e8-6f57-4ee5-8886-2782a121c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ee837032-c33a-4302-9f44-01b9f67eb003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09132423-4e80-45a8-a4f1-982d60298d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "819151e4-800c-466a-9314-cdabbd70fccf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ed5d140d-caa0-4d79-b5fa-ed718a0a4bf7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "805406fb-983c-4108-99e1-0f675aa577fe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a5692f5-e345-4bd8-b90b-9c630c430410",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "62b705a2-5ea0-4b7d-9885-7275adb43fb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e527f91-60c4-427d-8441-c615a85da81a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42404b58-d0fe-4233-afb2-dc2b688bc7fa"
                    }
                  }
                ]
              },
              {
                "id": "a3c94038-8aa8-4db6-9cdb-9a045d914b8b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25315f72-ea99-478f-8645-c3d7102ca932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a1fbfaf-e989-4cea-a06d-6335fa8b1f81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78e35a48-2760-4bb2-aec2-2188e2dc2f18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e711d269-1d33-4ca8-b2ac-5bf8c65fab8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7441e90-b54c-47a6-ab7c-119648a4d0d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ef53e8df-cc22-4acf-8ada-e139573a3bcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9360922c-2a39-4e31-a1ac-30a885f154b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fbbec3e-6d68-4501-9115-5f80ec0e3a0f"
            }
          }
        ]
      },
      {
        "id": "52dac60a-8f52-4fea-9149-75dfee9b5a55",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "587882a9-c709-40a5-bffc-c5a1d43f5ef2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f2fe0a6-cd44-4325-812b-d69058192a5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3b392c5-7c69-428a-bb61-d36418dd6966",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee9ff4a-0029-409b-9eb3-68f7a2f8c509",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75bac454-5b3f-424e-81c8-b7edab53e72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5aa383-f0b3-4fbd-bf55-2a69d57c99c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "157e7620-7865-43c9-91ff-a73010fffac1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d03b63d6-675a-4d5f-950c-01aaae08027b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "055f4396-3245-4a3a-b7a9-7971853de4fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5d847e3-4df0-4269-8482-85c6b3ef3a09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cccd18bb-e155-4567-a99e-095f727caeab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d06011af-174f-4de2-a978-c393268c7669",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6c725a06-5a01-4f4d-a8c0-b3821b79d521"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "923addd6-6908-4e36-940c-d5e19f5ffa19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43a6488d-0198-43f9-a85b-1ed04da91bfe"
            }
          }
        ]
      },
      {
        "id": "9543a213-dcaf-49c2-9c47-628720146339",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "98455cb0-8dce-4a2b-8bfb-ac1c16690f02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b47a9f42-f6f0-4f04-b6f2-0bca21a199d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e580c5c-6e7a-4027-b1e4-6cfcb255101f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ea38f4-1a58-41bb-975e-4ac70e354083",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e13171b-d4eb-4703-a26f-54c1ae11bbd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4be555-705f-4dfe-838e-91d90234c998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4aeb80a-776c-4fdd-9722-2db4187d56fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54cabe65-046e-474f-a332-74bc5615c382",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7291813e-ebf9-4ce7-b8f9-45a91f91e523"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61218005-dc62-4be0-ae29-b3b9cdef0f2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65e5d0c6-bfc2-425f-97f5-6b65a1ad6ded"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7cadc4d4-045d-4cc4-bd93-48c2937e23a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b40633fb-dcf0-4d31-8900-a450792e67ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88aebec8-6f45-4e6a-8371-991b1a328978",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3275ece0-3908-4f7d-985b-909fd1e4b650"
            }
          }
        ]
      },
      {
        "id": "96fd8577-10bd-433f-86c8-6f134dc50802",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "00b2c144-fc0f-496f-be8a-2fd3ab16a243",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92e564ad-7a6c-4c9a-ab87-8b351769c49d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bc3e8f0-d097-45e9-8495-08d7b01ae443",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a87e896-00d4-494c-89ea-48e2d5e2d8bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cadc2af-afd4-41ad-a14a-da9d73e40e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f360ed39-b667-4e39-8dfb-cfaeb5221242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "85072f70-6392-4710-ab5b-afc292f4028e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fc894f4-8f68-4013-beae-f7657ec0caae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51d77e07-707a-4264-b70f-119f64cdb342"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95d2a1d9-1997-4d75-89e2-4dc396f0288a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b45850e-9a71-4381-805f-682bb084cbae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c42a5088-8d54-4de6-a869-4d7a1c215db6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "86c24062-98d1-473c-8f11-b8ae5d2f31c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95cae804-1e95-4e85-8fb4-4306022748a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91bf7fc9-a648-4598-bb4b-8496883c6d9c"
            }
          }
        ]
      },
      {
        "id": "6908e297-4aa6-4c29-9c94-bcd6d9eafa49",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c60885b6-835e-4739-90c6-033ebccbce31",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b28fca-2c85-4bbb-a28a-87fd1632118f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a4e7457c-6ee5-4b37-8160-ecac2e02479a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "812b82ad-106a-4a2b-8b41-41050aed8c03",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b462eac-0aaa-42db-b38f-86a81384e443",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 270.2245614035087,
      "responseMin": 16,
      "responseMax": 11875,
      "responseSd": 1328.9210418746063,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1699144626880,
      "completed": 1699144719361
    },
    "executions": [
      {
        "id": "b11ba9da-2475-4697-8eaa-910c520fbec6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "540f3dd6-feaf-4027-805d-bfa4efda1b6c",
          "httpRequestId": "b12f9724-f19d-4da2-8933-f8d92555ad65"
        },
        "item": {
          "id": "b11ba9da-2475-4697-8eaa-910c520fbec6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "12062369-89f6-4c0c-bb84-03685dfd185a",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 0
        }
      },
      {
        "id": "acc3f76f-391f-497f-a2e9-20cbf514f08b",
        "cursor": {
          "ref": "eeaf2526-324f-4939-be5b-eeb40591cb33",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "14648c69-e788-46bd-baef-1c9030823ef3"
        },
        "item": {
          "id": "acc3f76f-391f-497f-a2e9-20cbf514f08b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "05711e69-a757-4011-9a85-81e876a05804",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "f1fa5914-0e2f-42b4-92b0-3d4dff108a1c",
        "cursor": {
          "ref": "92529dcd-8e37-4698-9653-7876f4094954",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "72a35b40-4f21-4878-940b-027ba5e02207"
        },
        "item": {
          "id": "f1fa5914-0e2f-42b4-92b0-3d4dff108a1c",
          "name": "did_json"
        },
        "response": {
          "id": "701c40ab-aa16-4bb1-8ec2-6ac0824f2924",
          "status": "OK",
          "code": 200,
          "responseTime": 1643,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19770088-759a-4846-bc0d-4b5dbd13731c",
        "cursor": {
          "ref": "bde3b9c7-7e06-4879-bca1-be484379d064",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47efcc4a-9a67-40e8-b398-6765caae605a"
        },
        "item": {
          "id": "19770088-759a-4846-bc0d-4b5dbd13731c",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb22f524-281c-4122-a8b4-0b85157d5193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19770088-759a-4846-bc0d-4b5dbd13731c",
        "cursor": {
          "ref": "bde3b9c7-7e06-4879-bca1-be484379d064",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47efcc4a-9a67-40e8-b398-6765caae605a"
        },
        "item": {
          "id": "19770088-759a-4846-bc0d-4b5dbd13731c",
          "name": "did:invalid"
        },
        "response": {
          "id": "bb22f524-281c-4122-a8b4-0b85157d5193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45daff83-4b0f-43b8-8273-12ca5eb624ea",
        "cursor": {
          "ref": "813318de-0b5f-47fc-84e2-1e29bc89c9a1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6d448d6b-42b6-43ac-b3f3-612267f1a55c"
        },
        "item": {
          "id": "45daff83-4b0f-43b8-8273-12ca5eb624ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "49a716fb-123c-4459-b2b5-9a1e1d431122",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123f30ba-3b7a-4456-8434-8ee45cb075fd",
        "cursor": {
          "ref": "4160f7cf-2ed9-4d25-a374-6cc080116a69",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5b1b7d30-a3ab-469b-934b-2a68f5d6b510"
        },
        "item": {
          "id": "123f30ba-3b7a-4456-8434-8ee45cb075fd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a99e8e21-c5d8-4f50-97e2-ec12bb8c844d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c040b-0a75-4485-8f06-19b42a8cdf38",
        "cursor": {
          "ref": "2798c054-0ef9-4882-9329-978c803b1622",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6756eba0-c94e-4041-bda5-88fbe614d325"
        },
        "item": {
          "id": "422c040b-0a75-4485-8f06-19b42a8cdf38",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f739bd64-4c54-4c09-931e-9d41881fb676",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f780d58-36c7-40ce-9e94-2bfd4388d28d",
        "cursor": {
          "ref": "7302f3e2-49da-4598-a78a-ddacaf975251",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c0c7aea2-1df3-47a0-a155-cb84c1697e19"
        },
        "item": {
          "id": "8f780d58-36c7-40ce-9e94-2bfd4388d28d",
          "name": "identifiers"
        },
        "response": {
          "id": "88a70748-21e3-4b60-888d-d58d3409bac8",
          "status": "OK",
          "code": 200,
          "responseTime": 1237,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fc5af6-c580-465c-b8f7-8222c404effc",
        "cursor": {
          "ref": "812389a3-9f10-4cca-8aad-cd67aff8f558",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28d78161-1637-4f0b-93b3-ac38c3718c74"
        },
        "item": {
          "id": "47fc5af6-c580-465c-b8f7-8222c404effc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fb5323ea-b564-4857-b422-321443926156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b99179-def3-44b7-b856-4bfcbb80a97a",
        "cursor": {
          "ref": "e97fd876-8a33-4e92-8e54-66578433ce30",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "088d5750-04f0-4ce4-bb0e-4cc06eb8d1bb"
        },
        "item": {
          "id": "a6b99179-def3-44b7-b856-4bfcbb80a97a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d1daff8a-8f14-4896-8fc4-bae5cd79397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6c361d-f4af-4957-8af9-1d66b5cd0dad",
        "cursor": {
          "ref": "ab3c4179-20ec-446a-9efa-eddfd5ec8b52",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "365042e1-7ba4-4ddf-a407-bd1fe9c8b2f8"
        },
        "item": {
          "id": "2e6c361d-f4af-4957-8af9-1d66b5cd0dad",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c603bf84-7507-4380-a86f-3dd1720ef10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4628a0-0cd5-497a-81c1-959c86d9ed57",
        "cursor": {
          "ref": "1628f8fa-eeb9-47da-8041-bfada1db7812",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9fe6078b-9633-4173-9d24-7ccd6dd8dab6"
        },
        "item": {
          "id": "4d4628a0-0cd5-497a-81c1-959c86d9ed57",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "27a19e1c-7502-4b1d-aa35-b9b3fd08a075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c44792-a877-40e0-8d88-7f2edf2eb382",
        "cursor": {
          "ref": "5d66994a-48d7-433e-be68-945ce781b74d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "faeb00f6-31e4-4be0-b763-e7218836ac41"
        },
        "item": {
          "id": "62c44792-a877-40e0-8d88-7f2edf2eb382",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "71b58253-ce1b-4440-80a2-c9ae372d52b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0646e79-e3c8-4194-93fd-5297f17b19e3",
        "cursor": {
          "ref": "29467933-ff8f-4230-bb6d-3ee4f8b9e1f9",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b1a768c0-e0d3-4834-a0a3-94843da02f3e"
        },
        "item": {
          "id": "b0646e79-e3c8-4194-93fd-5297f17b19e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "deb62e4d-f264-4b50-8db9-2f3b20b09c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9b20a1-edea-4335-8c5d-d5e3eb31b9ab",
        "cursor": {
          "ref": "c6215f47-900c-484f-9200-7221eb2733f6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2a6e297d-613a-4a26-9953-b6f80fb05e96"
        },
        "item": {
          "id": "2d9b20a1-edea-4335-8c5d-d5e3eb31b9ab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c3693813-426a-40b5-ab34-e991066759a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8438c89-eb84-401b-967f-358460d96139",
        "cursor": {
          "ref": "3ca99720-271e-4db7-b0e0-f500e5033866",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c675f3ca-7681-4097-8d03-11aacfdd0df1"
        },
        "item": {
          "id": "d8438c89-eb84-401b-967f-358460d96139",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "18537039-a4b2-4eac-aed6-f78ff7a10320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d91bb9-bdc1-49d8-89a1-f5bb3fb1f417",
        "cursor": {
          "ref": "0563ebee-70a1-494b-84fc-44048b64b11a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "67c9b2c8-a2c9-4d21-a09a-dba578817efe"
        },
        "item": {
          "id": "66d91bb9-bdc1-49d8-89a1-f5bb3fb1f417",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c93eee35-df87-4952-8bfa-21073995495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d879eeb9-8873-4a4a-894e-5d388fe3b375",
        "cursor": {
          "ref": "cd0bb721-c39e-4297-9035-8db5b076cede",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7d674ea9-eb01-4e05-87ad-23922726a8bf"
        },
        "item": {
          "id": "d879eeb9-8873-4a4a-894e-5d388fe3b375",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ca4d6b92-322d-4790-ac58-2e26e08a330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc0fe4b-2e30-439f-95cb-784faaee01ac",
        "cursor": {
          "ref": "e5579ee2-3dfe-4b09-b059-4f4ba6b8812c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1e03be88-66bf-42a7-ae12-58974f10e206"
        },
        "item": {
          "id": "8cc0fe4b-2e30-439f-95cb-784faaee01ac",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7ee49949-1c21-41dd-9c90-e21ca92b6ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6c2c3c-3d0d-4bdb-a777-a4365cb8cf57",
        "cursor": {
          "ref": "153ab6cd-e376-4413-946d-9c93fa0c796f",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8d744335-ecca-48a8-8055-9b576def17d0"
        },
        "item": {
          "id": "0c6c2c3c-3d0d-4bdb-a777-a4365cb8cf57",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e90b45cf-41e7-4225-a2c4-18b9e5e99152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d6b635-1d04-4422-bf52-fa6c83bacb0e",
        "cursor": {
          "ref": "8583f102-8fb8-4fab-9091-05c8f22fd784",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e85e23ac-a193-4e1e-9916-8313bd31fae1"
        },
        "item": {
          "id": "f5d6b635-1d04-4422-bf52-fa6c83bacb0e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "142a10a6-83d4-42ea-b07a-c3c93a66ef80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8023c18a-9c87-40c9-911b-e93d08858f7e",
        "cursor": {
          "ref": "8d6e9b07-31fe-42c0-854b-7826cb9001bc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f29ce96c-69e9-493d-a2b6-b32a0aa7c832"
        },
        "item": {
          "id": "8023c18a-9c87-40c9-911b-e93d08858f7e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fd40bcea-8559-4d86-9eec-1c75b97a463f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa25a7-435a-4f73-8635-58f3168926e7",
        "cursor": {
          "ref": "70a82304-1b22-4dd4-81c6-919f54bc69e5",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9153423e-9465-48ea-91a2-c8bb676df41d"
        },
        "item": {
          "id": "06fa25a7-435a-4f73-8635-58f3168926e7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "19857fe5-0995-4a39-9401-f4ce780b0c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035daf15-33e9-44e1-a842-1e33bbcaf070",
        "cursor": {
          "ref": "020922a4-7a43-4a52-af3c-0f8e1cf65686",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "43a4e841-afbb-47c1-9456-f3f5b579f536"
        },
        "item": {
          "id": "035daf15-33e9-44e1-a842-1e33bbcaf070",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1bbbb244-2c37-488e-afd8-5c4ad5169b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06b8052-0a01-476e-911c-63ced53f0ea7",
        "cursor": {
          "ref": "879a5962-a15a-4b54-b02c-e3f584fa435e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2e29b268-91f5-43c2-a183-6cd6e838de57"
        },
        "item": {
          "id": "b06b8052-0a01-476e-911c-63ced53f0ea7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "80f10d9d-2835-4178-ac08-83dfa3a6610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7690979f-e12d-413b-b96f-0b4683f55b3d",
        "cursor": {
          "ref": "e8f45dbc-3205-4ff1-833c-732dc052b927",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4e25bd97-eadd-4422-b645-639f3484dab8"
        },
        "item": {
          "id": "7690979f-e12d-413b-b96f-0b4683f55b3d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0d8b81cf-6927-49f3-882f-50662bbd57d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a7661b-8f45-4f09-b1ed-47a7959f67c4",
        "cursor": {
          "ref": "d941c1e1-d0c4-43b0-a300-f42975d52a38",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8cdcbb2f-57ad-418e-bc83-b2f7df2a3f18"
        },
        "item": {
          "id": "99a7661b-8f45-4f09-b1ed-47a7959f67c4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9226de5d-0fe8-4aa9-932e-a64bd0950a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d9aab9-1e13-4945-b3f5-455d768f7554",
        "cursor": {
          "ref": "bc378f89-9dc0-4ef1-b0b4-744f8a3ea486",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "29194319-a646-4f85-9cfe-95383b22763c"
        },
        "item": {
          "id": "53d9aab9-1e13-4945-b3f5-455d768f7554",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "17442e96-8369-4dff-8c01-dfb5cd2db94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6998c4-8818-4ee6-b6ef-368409d2bf5a",
        "cursor": {
          "ref": "76405938-a418-47ae-9a20-14741afd7181",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b56de5f3-09cf-4371-bad5-80bcd8276c06"
        },
        "item": {
          "id": "1f6998c4-8818-4ee6-b6ef-368409d2bf5a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "724a6b47-4261-4bfd-8039-8874e6089f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2d7fdd-8fcb-420f-99ec-dcee4ace523b",
        "cursor": {
          "ref": "3785f0f1-4f7f-4810-bc28-628e9f905a0b",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "213c1290-7f93-4e46-afbe-c41d231e4561"
        },
        "item": {
          "id": "0f2d7fdd-8fcb-420f-99ec-dcee4ace523b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f1d409f9-04af-4326-bb57-3ee373a2ce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7a239a-4b93-44a1-826d-8ad0d3286893",
        "cursor": {
          "ref": "16c54e27-04cb-4b78-b974-39f4845d203c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ae22632c-2d2d-4658-955c-8fe4e849e574"
        },
        "item": {
          "id": "9a7a239a-4b93-44a1-826d-8ad0d3286893",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f10970f3-b5e4-44ec-8aa8-ac39c99c73ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3cd096-0855-4e94-8f35-a095f841a2a0",
        "cursor": {
          "ref": "3dc0ad93-d1ec-444c-a61e-daa5278a9add",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "69531c2a-9b05-48a6-8336-2e3841d0ec62"
        },
        "item": {
          "id": "6b3cd096-0855-4e94-8f35-a095f841a2a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "11f9e6a0-ed8a-467b-8d99-b65d57a4bf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a53106-d3df-4df3-8257-307292392726",
        "cursor": {
          "ref": "aa13aa93-e042-4a0c-8b05-13aec71deeb1",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "054f3e0c-dbea-4b85-9de6-bd39d9487a99"
        },
        "item": {
          "id": "04a53106-d3df-4df3-8257-307292392726",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3cae6d13-f32b-42ec-a948-f76a50008e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a4b986-52f4-432c-969e-479af1dc35d1",
        "cursor": {
          "ref": "1bf0b7fb-5b70-44ad-887b-1726faa6eda4",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c4208b7b-9663-4d2c-9753-320f7a3af299"
        },
        "item": {
          "id": "e2a4b986-52f4-432c-969e-479af1dc35d1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "842fdbad-229f-44e5-a8e1-cf40b2b7f640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735ad7cd-826e-4306-838b-0d630407ea40",
        "cursor": {
          "ref": "7b1e5bea-8e37-402e-9a31-65f72e79452e",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "71a8407f-22db-4abc-8889-0c6c2e9cd6ec"
        },
        "item": {
          "id": "735ad7cd-826e-4306-838b-0d630407ea40",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "34e2db6d-9ce6-44ed-a309-8ac1abefe37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03258f02-efa0-4a64-8325-1864a32f99de",
        "cursor": {
          "ref": "6060351f-d476-4442-99d7-3d7439511614",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "932081e0-73cd-4b2a-8f40-280a83740176"
        },
        "item": {
          "id": "03258f02-efa0-4a64-8325-1864a32f99de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1c43532d-9e5c-43a0-8773-d8de1ee216da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a6917d-9ed4-4058-8f4e-7be3b6e44617",
        "cursor": {
          "ref": "67d19447-f50a-4e9d-b2e7-b39acdc8e3a3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5a2e31e6-fba8-4bb0-840a-1a43748f05a1"
        },
        "item": {
          "id": "55a6917d-9ed4-4058-8f4e-7be3b6e44617",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ba4532e8-1feb-4d23-bba0-9002ac742a11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f796a28-d564-4fee-8c4d-e609dd8bddb0",
        "cursor": {
          "ref": "4b58cd44-fd14-41a4-8afe-e4cd67a6a5ad",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e16e5930-8b25-41e7-9e80-ddedecd6d1b1"
        },
        "item": {
          "id": "3f796a28-d564-4fee-8c4d-e609dd8bddb0",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e5fbb726-ae35-43a3-afbe-f6480fca32fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bfc627-4ffe-4aab-9305-8486eb1013e4",
        "cursor": {
          "ref": "18fbc347-eb61-4bb6-b65f-fa5b2d4ab4d8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7b52573b-4e36-46de-b770-bf4a1ccee3bd"
        },
        "item": {
          "id": "e9bfc627-4ffe-4aab-9305-8486eb1013e4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9ad86a53-0047-4bab-86a3-95280ee2a331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd53eba-4258-48ba-9d90-38249467eae1",
        "cursor": {
          "ref": "5f4417f7-be66-486e-98a5-7617162a3adc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a7014645-78b5-4c63-8fb8-eb5adcd64ec0"
        },
        "item": {
          "id": "ffd53eba-4258-48ba-9d90-38249467eae1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aa020a5a-c9d5-4517-b248-c0c2cf0e1b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1616c8e-5b27-4e1e-a385-7704927081b1",
        "cursor": {
          "ref": "3aa24c81-9525-42d2-a103-5cc6f34b575a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "61cc8326-21bf-4e01-90e6-ec8aba22030f"
        },
        "item": {
          "id": "a1616c8e-5b27-4e1e-a385-7704927081b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1763d6b1-1346-4e4c-8406-dd80da6379f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1672d0-4a90-4b5e-bcdf-4c9c621204d8",
        "cursor": {
          "ref": "a474e1bd-71f5-4b35-bc97-f54ad3024b69",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5800db4a-d359-44de-b7b3-67e2835d9532"
        },
        "item": {
          "id": "ec1672d0-4a90-4b5e-bcdf-4c9c621204d8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6634edc6-0f55-449a-a0ef-f4b11ef9cafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85495ca6-0633-4e2f-8dd8-efaa6a9e1fb3",
        "cursor": {
          "ref": "7e6e03e8-f42d-454f-9e0c-0f958960a2c7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4a70af43-75a5-45d7-9857-728c6f23d1a4"
        },
        "item": {
          "id": "85495ca6-0633-4e2f-8dd8-efaa6a9e1fb3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6cf477b8-54da-4f1a-ba05-02a9ba2d94d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d0c26f-4bbb-4101-84ac-5b9a8506416c",
        "cursor": {
          "ref": "00ee31db-e1f2-4d2e-ab02-9d824f4f1562",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6ce43b5b-7b2e-4e66-855b-af1a4097d08e"
        },
        "item": {
          "id": "58d0c26f-4bbb-4101-84ac-5b9a8506416c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d331a24c-b2bd-483b-ba05-8cb51086cfaf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1479,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "411fbcb0-e75e-40bd-989a-791e1d7071bf",
        "cursor": {
          "ref": "0603e631-a1e9-4dc9-b701-8ed250dcfd5b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "119d9d80-984d-4072-8600-4adabab42c2e"
        },
        "item": {
          "id": "411fbcb0-e75e-40bd-989a-791e1d7071bf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2f9cfd1b-c63f-4de6-a956-48130bc6fcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a19b171-a9f8-4e35-aa6a-76209524eca6",
        "cursor": {
          "ref": "d6f9f889-787d-40a5-95db-be72de41d1be",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5b12e191-20b3-4075-a6fa-150799363cb1"
        },
        "item": {
          "id": "4a19b171-a9f8-4e35-aa6a-76209524eca6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "47fbb006-ad4f-4979-8f91-c5e2c0be5db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadd579a-d891-4c47-9484-7e382b9e2acc",
        "cursor": {
          "ref": "1549ab03-91dc-4fe0-97b9-76be8218f9fd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6406271a-9df2-48b8-9e62-57ac7a3997a8"
        },
        "item": {
          "id": "fadd579a-d891-4c47-9484-7e382b9e2acc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "59f197c6-118d-43ef-ab22-d376fc5c5c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb4284f-6f06-473c-b4e6-6d62d1b873d6",
        "cursor": {
          "ref": "ee6243b6-02d3-47e0-8f68-229212422885",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4b00a9d7-2e6b-42e2-80d7-f9cb9d9b4dd4"
        },
        "item": {
          "id": "ccb4284f-6f06-473c-b4e6-6d62d1b873d6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "193160b9-3c75-49df-9156-2dcb57e6952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dad411-a3dd-42c7-950d-896d2a4bb57f",
        "cursor": {
          "ref": "d4016df2-a795-465f-8b3e-e98b6b91e264",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7af5b6e8-20c3-427c-b388-e698756d421d"
        },
        "item": {
          "id": "c8dad411-a3dd-42c7-950d-896d2a4bb57f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "81b96410-dcc0-47b2-ab7a-bc9d179e9efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65373401-a227-403f-abf0-250a8a5edb88",
        "cursor": {
          "ref": "bf8197fc-6d0b-47f7-880e-bb204adccc3a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "af9cd3ff-fee1-4886-8df8-b1f7e7910c73"
        },
        "item": {
          "id": "65373401-a227-403f-abf0-250a8a5edb88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2f8f245e-3679-44e6-b7c1-179c301b0dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a61537-71ef-4ca4-8c2d-54f4e1a52c16",
        "cursor": {
          "ref": "3846039b-702d-4e4c-9144-93c87579f3d2",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6a48906a-4f9f-443d-9a26-0fab8390cdf0"
        },
        "item": {
          "id": "02a61537-71ef-4ca4-8c2d-54f4e1a52c16",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "eed492d9-1a99-4426-8bc0-43fad440ec90",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1475,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0957db8a-fc80-4a35-aa40-e9c0fb608e9f",
        "cursor": {
          "ref": "d26c97e1-7333-4eda-87c0-eb50af0a7359",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "589dbcab-820c-4264-bfd5-98220914a6ab"
        },
        "item": {
          "id": "0957db8a-fc80-4a35-aa40-e9c0fb608e9f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "add4d7f0-4277-466e-bad9-63eff520253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ba3ab7-b648-4ebe-948e-b62affb611fc",
        "cursor": {
          "ref": "20127f5e-bf33-4ec6-b4de-6fcaa4e1df5a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72262516-7e2b-4b08-b677-6f91dc2666b9"
        },
        "item": {
          "id": "a7ba3ab7-b648-4ebe-948e-b62affb611fc",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "382edb6b-7145-4c66-8eb9-7736178d46fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8d1dca-ebd9-475c-a1ac-cf6c60b21e30",
        "cursor": {
          "ref": "c5db960b-6b90-4089-bfb3-91cfca46aedb",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3f172386-0735-4c91-83cc-146a4e058d99"
        },
        "item": {
          "id": "fb8d1dca-ebd9-475c-a1ac-cf6c60b21e30",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "207b3b6c-6683-4887-9821-9a73d953a29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75a6526-1370-4168-97e9-b9ec0a6dbfda",
        "cursor": {
          "ref": "0f353d6b-35e3-4187-b237-63a10f29f07e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3b7287e1-c30e-4f3e-8c51-1abebd9bd652"
        },
        "item": {
          "id": "d75a6526-1370-4168-97e9-b9ec0a6dbfda",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a7fda24-58e8-4830-8f30-82348654b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaab7a33-c23e-433c-9ad8-23e607187544",
        "cursor": {
          "ref": "1a63110d-5c6e-457c-a58a-35953ee04344",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "38ed50d9-60d1-493e-bf11-278b3089a1ea"
        },
        "item": {
          "id": "aaab7a33-c23e-433c-9ad8-23e607187544",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6b8a03c4-cd15-4b53-a745-27bea9495858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f484a5f-1f46-4453-b6d3-6a6567013dc5",
        "cursor": {
          "ref": "68193a60-7e3e-4206-a0a7-ee8702b9fbb0",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6e646fda-ba70-437f-8ab4-c2793ae65421"
        },
        "item": {
          "id": "5f484a5f-1f46-4453-b6d3-6a6567013dc5",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "696d9f55-78ff-4998-9318-b58f245d1251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47713c64-584d-4888-93de-3402cdfd7803",
        "cursor": {
          "ref": "3681cb00-3a2d-4cfa-ac19-ba54a33c6b79",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "63ba8c01-8e78-4e7b-8e63-d9fc410a3e2b"
        },
        "item": {
          "id": "47713c64-584d-4888-93de-3402cdfd7803",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ae557836-4a6b-4a05-8e6c-68a432774095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55290731-168a-4d91-8301-86b6b98f6bcd",
        "cursor": {
          "ref": "f5d546b4-7730-408d-9c1f-2aa25fe2a704",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a1abdb6-09c1-4b3d-a64f-d55630d5b134"
        },
        "item": {
          "id": "55290731-168a-4d91-8301-86b6b98f6bcd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "35f2e476-f558-464b-9fce-c119824a15d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e805ede1-b39a-4a5f-a8e6-814c7835f630",
        "cursor": {
          "ref": "633574c9-f987-44de-8017-12c7e2779383",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef84782e-f888-4e9b-abd1-dc9b904d8691"
        },
        "item": {
          "id": "e805ede1-b39a-4a5f-a8e6-814c7835f630",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8437c221-df1b-40dc-82b3-587e3399dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f09e14-3748-464c-8378-1b4e33c9c250",
        "cursor": {
          "ref": "960f9f44-0d2b-4d47-a1cd-91d4c520aba0",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d7cb3b3-ade3-40bf-ada2-89023c47df19"
        },
        "item": {
          "id": "06f09e14-3748-464c-8378-1b4e33c9c250",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "821f8c2f-346e-45e7-81be-e7234189b845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf0fed2-74c4-4419-8238-5f2699607320",
        "cursor": {
          "ref": "840b60f1-a9c5-4c8a-a9ca-219c9c899869",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c26ba0c6-0cdc-4f14-8620-d6ef49ede863"
        },
        "item": {
          "id": "caf0fed2-74c4-4419-8238-5f2699607320",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4cfffe26-4b62-43f4-a3c5-c4efd3340fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99287004-ac06-4889-a1e9-c03cedfdeaab",
        "cursor": {
          "ref": "ae76e4b5-bd97-4337-b159-39fba80089bd",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8285d0ef-e9ce-4527-b1fe-f7b5cc684d25"
        },
        "item": {
          "id": "99287004-ac06-4889-a1e9-c03cedfdeaab",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "44516093-6948-4960-9962-4e567ab7ba8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8bf4ea-c504-4742-a3b1-7ad94f92fc05",
        "cursor": {
          "ref": "20e715a0-4fa9-4eba-96a7-06d1fd4a0f1e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c409fb4d-f929-4c9d-b089-23c8079b8d53"
        },
        "item": {
          "id": "bc8bf4ea-c504-4742-a3b1-7ad94f92fc05",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "551bb6c6-6e50-4350-840b-c80fa42f184e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f6de68-2a6f-4f25-aee7-81bd8a4185a8",
        "cursor": {
          "ref": "4a7290d1-2e5d-4ddf-a865-0296130e55de",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3e65b7b4-2e39-4536-91b7-08e21fa329fc"
        },
        "item": {
          "id": "07f6de68-2a6f-4f25-aee7-81bd8a4185a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d382f670-0ade-4c4d-b23a-08f8cc9f2070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885d6b65-fb86-4a83-887f-37c80ac16272",
        "cursor": {
          "ref": "ee81e2af-9a5d-482b-92c1-83f0384fa894",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3e0873b5-b361-41f4-b5b6-05f81fe9e8a0"
        },
        "item": {
          "id": "885d6b65-fb86-4a83-887f-37c80ac16272",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ac938059-5b7a-4628-a68e-668387e90048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67138b1-741a-4174-b00e-055d8e44e2a8",
        "cursor": {
          "ref": "e9003598-f8eb-4c8f-bcbb-b082b6c1ecea",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a0986c5-157f-4ef3-9448-7b098d664bc0"
        },
        "item": {
          "id": "b67138b1-741a-4174-b00e-055d8e44e2a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f5a99e7f-ed57-4c3d-9f32-d0da90fa1ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec69c977-c336-42a8-96c0-87972172313f",
        "cursor": {
          "ref": "ddf3f260-256d-4b5f-bb94-1265b41490cd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c94ba1ee-7d58-4826-b9ba-cdffc384684d"
        },
        "item": {
          "id": "ec69c977-c336-42a8-96c0-87972172313f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "340a37a3-c924-4473-88ff-768a6fc1032c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d277029c-0562-4a25-b7b5-7d31da655f4d",
        "cursor": {
          "ref": "ca8262dd-60ae-4d54-8b8c-9fc7f0c97079",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0cd0bb7b-828c-4bc7-b8ff-b64a66495d5f"
        },
        "item": {
          "id": "d277029c-0562-4a25-b7b5-7d31da655f4d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "34546b8f-0018-4197-91a1-9c3011c95e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dea2307-56c4-4c3d-ab11-fb9c19aad11c",
        "cursor": {
          "ref": "d8cd1272-20f4-4288-8c29-c1eeb7a89382",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "97e24eff-c62b-499f-b0e4-3d9f015284ed"
        },
        "item": {
          "id": "5dea2307-56c4-4c3d-ab11-fb9c19aad11c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "292f2e1b-003d-4cc0-a401-d3965bd99353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd98e92b-2088-49bf-a00e-dfbf9bac8e88",
        "cursor": {
          "ref": "e6325222-bea6-4a54-af45-f8f957edcdb2",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "39f37201-e252-4494-866a-fa88b1103f2a"
        },
        "item": {
          "id": "cd98e92b-2088-49bf-a00e-dfbf9bac8e88",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "329afab1-565f-4223-a67f-d3378921d540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9eb1eb-765b-405b-90e4-7d267905d402",
        "cursor": {
          "ref": "8780f39e-eacc-4579-a5f6-11890c7dd581",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b34b266e-2085-4832-a4d4-fae0879e7315"
        },
        "item": {
          "id": "6a9eb1eb-765b-405b-90e4-7d267905d402",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e9c63167-2b5c-4443-890a-5160f4ae20c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d3cc8d-4e54-4098-8d10-ea918ff4abc9",
        "cursor": {
          "ref": "e8aac4da-522c-4cd1-8e6e-d520318c28d0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "183965ac-cc19-4092-bdbc-4dba3c56a0b4"
        },
        "item": {
          "id": "14d3cc8d-4e54-4098-8d10-ea918ff4abc9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e307e653-fd35-421e-8aac-62e2a42e51df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53cf5d3-9ad9-43aa-9a95-a25bca38eea7",
        "cursor": {
          "ref": "cbdb02ee-31fa-4c4a-957d-cdb47ab1a45b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2f5e3389-f4d2-426a-b285-b003d7c7a816"
        },
        "item": {
          "id": "d53cf5d3-9ad9-43aa-9a95-a25bca38eea7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4aea3b24-3f5e-44ee-8a4e-ab8dce791c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8737b5c-6095-426e-a635-13415b1eb38d",
        "cursor": {
          "ref": "34ecdf68-a3f6-4dd8-8775-00d0d53f3a72",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "62904385-ccad-4c96-8a97-b08fdd337c8d"
        },
        "item": {
          "id": "d8737b5c-6095-426e-a635-13415b1eb38d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1c75aa7b-a7c4-4130-bed4-1905c0063b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4292fc8f-ebe1-4072-a202-7d8e49ad4b9e",
        "cursor": {
          "ref": "8f21b75c-eadc-4c40-a94a-f5417a34eaff",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb6dcee2-4c04-4e84-a4ab-f2fd37381c7f"
        },
        "item": {
          "id": "4292fc8f-ebe1-4072-a202-7d8e49ad4b9e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2e314dbe-40d7-4b76-9477-f5945fc664aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92f99c2-749b-452b-8e6d-5b9188de69c6",
        "cursor": {
          "ref": "f340f680-7306-47a0-b473-6f45ef143945",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2442b3e8-342f-421c-b77c-f94b2e13eb08"
        },
        "item": {
          "id": "a92f99c2-749b-452b-8e6d-5b9188de69c6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "91933530-b5cf-424c-847a-2716fb82d5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3404948c-1ca8-4b7d-80b3-f247f84bd066",
        "cursor": {
          "ref": "e4298d55-5bd2-4d47-afc3-25510b9cf0a3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6d505c95-d179-446d-9c17-292b803010ab"
        },
        "item": {
          "id": "3404948c-1ca8-4b7d-80b3-f247f84bd066",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ebe3cc2a-05b8-48ad-8976-2fb61cc85abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a01580a-7b39-4fd7-bb99-c32891797dd5",
        "cursor": {
          "ref": "98838b26-b7fc-49ed-93ca-a6e3a263e02e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4c539f3c-0f00-42d7-b27e-814b155a2f24"
        },
        "item": {
          "id": "7a01580a-7b39-4fd7-bb99-c32891797dd5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "443b459b-5cd5-43bb-9e20-35392f5c6a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941381a6-83eb-403a-8413-c62b1b07f43b",
        "cursor": {
          "ref": "1aaf5305-6e37-42a8-b480-6375a36ab7c5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d73886a7-a1f7-42f8-8ebe-29e1d7581e60"
        },
        "item": {
          "id": "941381a6-83eb-403a-8413-c62b1b07f43b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cd3305d9-cfc2-478b-859d-df01edc0ddfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8da24d1-28a8-42b1-ab6a-ccce21496755",
        "cursor": {
          "ref": "59c46273-26e9-4d71-971a-33007c0115c5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "27b4f1e4-b041-48f4-b030-40c3473aa875"
        },
        "item": {
          "id": "f8da24d1-28a8-42b1-ab6a-ccce21496755",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4fe530e1-8cc9-49fe-a8b9-6719a0636aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2258091f-29b8-4183-8d4f-137dbc758ff6",
        "cursor": {
          "ref": "83faac02-5994-431d-820e-6f81e4cff44f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bb052823-ebfc-4126-afe9-8f1e1b635ae5"
        },
        "item": {
          "id": "2258091f-29b8-4183-8d4f-137dbc758ff6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d1bb8362-2057-48e1-b934-05371292fda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c278f0d-7a63-46b4-87f7-6177b1954df9",
        "cursor": {
          "ref": "ee0dba88-cc48-4f99-a866-0ab3b13790ff",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "31958256-2946-4ab6-88fb-cb7486353f3b"
        },
        "item": {
          "id": "0c278f0d-7a63-46b4-87f7-6177b1954df9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c833a10-8fed-4916-aba5-472b5cda8793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208f9df5-60d7-498b-ae64-25c4e388e957",
        "cursor": {
          "ref": "748260e7-5f08-4a87-a819-9497195e187c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4ee018f2-6f11-4781-b654-e725d2bca499"
        },
        "item": {
          "id": "208f9df5-60d7-498b-ae64-25c4e388e957",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "82e73244-fdd7-4cfa-918e-ee05aa29bec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf59026-7aac-40a5-8b0b-6f7f5941f63c",
        "cursor": {
          "ref": "b44c6bee-7546-4b84-b677-d74bb4dfe084",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8a4d89dd-2f65-4598-9438-616d689f1d3a"
        },
        "item": {
          "id": "bcf59026-7aac-40a5-8b0b-6f7f5941f63c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d2f22276-b139-4ae1-912d-49dd06f6be11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638f7594-4890-474b-87ae-e25dd72d977d",
        "cursor": {
          "ref": "edad478c-d3be-4cad-9f51-2298de4eefaf",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "290f029c-f75d-4155-876d-64b6e286bfd7"
        },
        "item": {
          "id": "638f7594-4890-474b-87ae-e25dd72d977d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "659a71a0-7fee-4c76-9a84-93ab19667ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771b6c21-6ff1-4c88-9ff6-2b32b8ebc29b",
        "cursor": {
          "ref": "dfaef136-8dc2-4408-8460-c78e8eb2a6ac",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1f56cf0a-776b-469e-9fe3-519aa6328198"
        },
        "item": {
          "id": "771b6c21-6ff1-4c88-9ff6-2b32b8ebc29b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "373560be-a95c-4c65-9064-d7044253950e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15569569-c79a-478d-af35-a520f23733b0",
        "cursor": {
          "ref": "92d25653-ecd9-40ef-8087-84e51f8bffc8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e6ac1ad7-6454-4f5e-a2b8-2dab257fdb1e"
        },
        "item": {
          "id": "15569569-c79a-478d-af35-a520f23733b0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "383f9733-5b7a-4314-9c10-d0bb59b3bff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de45e86-7c90-4dfa-a7eb-087bc14c667d",
        "cursor": {
          "ref": "fcc03aaa-bacf-438d-9297-a653fa373946",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a2a863ef-0035-4ced-8bb9-867da6477c14"
        },
        "item": {
          "id": "2de45e86-7c90-4dfa-a7eb-087bc14c667d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8a34d413-87f1-438e-8af0-53f818589521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6971feb9-bb83-421b-9a17-a0431b8529bb",
        "cursor": {
          "ref": "0206da74-cc27-4843-bd58-6d90c7211a6f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "965146aa-b75b-4228-97f1-597db37b81d5"
        },
        "item": {
          "id": "6971feb9-bb83-421b-9a17-a0431b8529bb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a64db856-4740-4d41-a3dd-0120389263c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743ba1f5-e808-4b80-a289-0a64026121e1",
        "cursor": {
          "ref": "78eaddd0-4f1d-4486-8fd7-20a9f862aaee",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bceacfcc-584b-4c78-9eb2-7be240e2e32f"
        },
        "item": {
          "id": "743ba1f5-e808-4b80-a289-0a64026121e1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1e4f722d-8870-40e9-934b-cd182a9352bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95477fd8-71e4-47a1-adf8-bdb7903846ba",
        "cursor": {
          "ref": "6ac6f9f4-8b33-4b57-8897-35ece644c021",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "93f45700-cf0f-45b5-9cdd-b2860e9d6631"
        },
        "item": {
          "id": "95477fd8-71e4-47a1-adf8-bdb7903846ba",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ef996a9-73bc-4cf7-b37e-60c9c94852ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1394f9e-0e13-46af-848e-e2d4713b6a12",
        "cursor": {
          "ref": "934ac79a-1345-4945-833e-79ad6ed9917c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "64558dc9-d11d-4bd5-948e-8a2aaee0d9aa"
        },
        "item": {
          "id": "e1394f9e-0e13-46af-848e-e2d4713b6a12",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "41b93885-6e74-473e-b76e-a71f2b0deef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c74d1db-da5d-4d72-ba34-a8b0201b5f15",
        "cursor": {
          "ref": "ccca2669-0327-4f72-ba8c-5647e0f7c262",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "11713bc8-45eb-417d-96d1-92de5175f4a1"
        },
        "item": {
          "id": "1c74d1db-da5d-4d72-ba34-a8b0201b5f15",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb250cc0-da49-4a3e-9cd6-fd191e1fe970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4e8d88-8af9-4f23-8ca8-b8f5ec74ca9b",
        "cursor": {
          "ref": "0b05d9c9-144f-4f77-8781-a4918a4de2a4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "083961cc-d214-4ac6-ae30-3b237becc196"
        },
        "item": {
          "id": "4f4e8d88-8af9-4f23-8ca8-b8f5ec74ca9b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "15a07887-a665-4ca9-aac9-58e7ce9589af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84478e5-b43e-414a-959a-22793dc6e2b3",
        "cursor": {
          "ref": "268c8c95-d6a0-4444-a3e0-f8471b8731bf",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "79ca5801-1a2b-4921-be4e-a40723b63e1d"
        },
        "item": {
          "id": "c84478e5-b43e-414a-959a-22793dc6e2b3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "87aabe7c-e9c5-41bc-8c32-5877ebfdbea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c554caff-62b8-460a-807c-c11464092936",
        "cursor": {
          "ref": "471aa353-0472-473e-a078-a7d4eff1ac85",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5d47a0d0-83e6-4d2d-896b-d95d7b9c19e2"
        },
        "item": {
          "id": "c554caff-62b8-460a-807c-c11464092936",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e4d38998-0042-43a1-8602-1ba99dbbb49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021cb708-90b4-44dc-941c-433bf8d4c311",
        "cursor": {
          "ref": "f49c46cb-163d-4167-b944-5b71c69f7c52",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ab2bcff7-7d90-4fc3-9a47-9108c1b240df"
        },
        "item": {
          "id": "021cb708-90b4-44dc-941c-433bf8d4c311",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "91c60a61-64b2-4db3-9f2e-4571d3ce8847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd3ae27-43d8-4a44-b7f4-3e696f4f424b",
        "cursor": {
          "ref": "13fd203f-6621-4deb-b0c5-704b72173e2d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dcd7aead-3077-4352-ba71-390c47401cd8"
        },
        "item": {
          "id": "9fd3ae27-43d8-4a44-b7f4-3e696f4f424b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "199284b4-02a4-434f-9b74-0ffeb1907c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d45a3b0-a236-42ee-b95c-41e062894323",
        "cursor": {
          "ref": "4fa2863f-58ca-4333-8f42-740bb0229f49",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7d9eea4f-85ef-4e6e-b4ab-770cb391755c"
        },
        "item": {
          "id": "1d45a3b0-a236-42ee-b95c-41e062894323",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "510c86d5-71c3-4231-aac3-2040c713a03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d469d-7c2c-4572-84fc-dfc18369f500",
        "cursor": {
          "ref": "b7c9b82a-3542-4af3-b3b8-767e095cd8d7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4473d7ef-43cd-4c0c-9d17-1656747ef449"
        },
        "item": {
          "id": "259d469d-7c2c-4572-84fc-dfc18369f500",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8dcf331b-9d44-44f8-89cf-1f20bf597fe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0216df-e606-4e3c-af61-2d9ccd6edcbd",
        "cursor": {
          "ref": "f6aa9562-d53f-455e-b5d5-561b9000a6ed",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a6aa220a-73a5-4dc0-87cc-c385ed655800"
        },
        "item": {
          "id": "da0216df-e606-4e3c-af61-2d9ccd6edcbd",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d3dc418f-8ad8-4cc0-bd50-0dfd8229d86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5561f7be-b912-454f-aa81-b639239b19c0",
        "cursor": {
          "ref": "3233ea50-9deb-448e-b3b6-9e06dc21ab38",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0864df81-4fd2-48a7-a244-cdfcd42d6520"
        },
        "item": {
          "id": "5561f7be-b912-454f-aa81-b639239b19c0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "684e4fe0-48de-4b05-b1a6-253aced28adc",
          "status": "Created",
          "code": 201,
          "responseTime": 8635,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7483803c-3043-4ae5-9398-9e512abec77a",
        "cursor": {
          "ref": "b16528c4-b88d-44e3-980d-b70152e5d191",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "06c77122-45b7-45a7-82b2-d98f0689e0ab"
        },
        "item": {
          "id": "7483803c-3043-4ae5-9398-9e512abec77a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "52f9d8b5-428c-46aa-9827-d8dcd26ca3bb",
          "status": "Created",
          "code": 201,
          "responseTime": 8695,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "50497289-0524-461a-bf02-4c3b71e075a5",
        "cursor": {
          "ref": "70c59a12-1b65-4879-bfef-2fceb8bd04b8",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5e3dc81a-7ab1-4ff3-91c1-82ee30cd906b"
        },
        "item": {
          "id": "50497289-0524-461a-bf02-4c3b71e075a5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fbea8951-6f4f-4275-9ba0-366313428b8e",
          "status": "Created",
          "code": 201,
          "responseTime": 9508,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e2f91d-c77f-4657-b145-9c4cb30baf80",
        "cursor": {
          "ref": "bd5280ab-c868-4b36-8538-940fb35cc79e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "abde35e2-e336-49af-b9fe-64e27a30e111"
        },
        "item": {
          "id": "49e2f91d-c77f-4657-b145-9c4cb30baf80",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26b3848d-5f25-45b0-ba45-27ef794bf50b",
          "status": "Created",
          "code": 201,
          "responseTime": 11212,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc98d09-a753-43d4-80ac-0498299058f1",
        "cursor": {
          "ref": "c361780e-7b87-43f6-b067-e10ac309861d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "42b5de2c-5bcc-44fd-9887-6066f694b422"
        },
        "item": {
          "id": "9cc98d09-a753-43d4-80ac-0498299058f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f620076e-c07f-4f7f-93a6-c750c22ed847",
          "status": "Created",
          "code": 201,
          "responseTime": 11875,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231bfa7-0246-497d-9223-ba39a4ea6e2d",
        "cursor": {
          "ref": "f112d4aa-cdc2-49db-aa8b-93e834177353",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14e0005f-b446-47a4-88c7-111be9ce899a"
        },
        "item": {
          "id": "c231bfa7-0246-497d-9223-ba39a4ea6e2d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a2011975-bc8a-4ce2-be09-7c90eaf676d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9107886e-4365-447a-a7f1-c168c89b2805",
        "cursor": {
          "ref": "f915411a-3ea9-4b59-9bab-b01cbcd848ec",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c5946d4b-ffd8-4e0e-af8c-0e8aae1d2459"
        },
        "item": {
          "id": "9107886e-4365-447a-a7f1-c168c89b2805",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8466507f-2aa1-470d-9232-261b094c2250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560351e7-31c6-4e9d-b120-a379fec5fe97",
        "cursor": {
          "ref": "b72559e6-ec26-4784-a748-1ce08e796167",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bd39f551-ae6b-4349-9587-7d26a1ac32dd"
        },
        "item": {
          "id": "560351e7-31c6-4e9d-b120-a379fec5fe97",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "33e7cec8-6f31-4bc2-82d1-0ac5ca0377f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a4c42a-bbf2-4e0b-a150-edb4c5f81ef3",
        "cursor": {
          "ref": "23e83ee0-611a-4f93-a75b-fbbed9adc4ab",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9aaa9fd2-c239-4976-a8c2-8d7505ea505b"
        },
        "item": {
          "id": "93a4c42a-bbf2-4e0b-a150-edb4c5f81ef3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7fed2adf-b01c-4bc7-8832-bc96faaacd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c0b49b-f2c4-47dc-abb1-8913c149f86d",
        "cursor": {
          "ref": "3750a9b6-64eb-4f3d-9cd0-e192287ed03a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4cc0adbb-3fb0-4a6d-8a06-f04d65a251fa"
        },
        "item": {
          "id": "59c0b49b-f2c4-47dc-abb1-8913c149f86d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dce7d9fc-145f-47a2-a88d-ad6c639a7dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5211c6-3553-4c09-8007-d1cc26db98a0",
        "cursor": {
          "ref": "237e23e0-0a77-492e-848f-0297ece46df8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9ad988dd-e4e6-4482-a45e-3a9c01ea5a32"
        },
        "item": {
          "id": "ae5211c6-3553-4c09-8007-d1cc26db98a0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4a0ef00-a4a7-402b-80f3-283dba6b7d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2907ab64-8e6d-4037-bef3-844f16959ef0",
        "cursor": {
          "ref": "aea7dcc0-805f-4c25-a030-74af7cdf8002",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a5793bdc-7032-4a19-a577-8743be0fc20e"
        },
        "item": {
          "id": "2907ab64-8e6d-4037-bef3-844f16959ef0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ab9413ba-9eff-4f08-9fb4-2be539ae7075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb18f1b-2928-4d85-babf-5523a15ce64c",
        "cursor": {
          "ref": "0ec079a2-b16c-439e-b581-4db4476d42f1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3171e73f-1b93-4e9d-b7fb-80c63a369929"
        },
        "item": {
          "id": "8cb18f1b-2928-4d85-babf-5523a15ce64c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1f9d5ef6-43fd-4c11-850e-65be4f3a35b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d24a59-21d9-4177-8486-2fb3f0da4810",
        "cursor": {
          "ref": "a877e439-1b05-497d-a3e2-afcc7391497c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca2d3aa8-52c8-4cf3-a848-7cbe741a1d30"
        },
        "item": {
          "id": "c6d24a59-21d9-4177-8486-2fb3f0da4810",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "33f59b56-ec3f-43ea-a321-95d48c956c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813c20cd-59ef-471a-a897-08a9c0d0912e",
        "cursor": {
          "ref": "13fa8356-5c5f-4442-9ce8-567a8af1fd4d",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a8b007c2-e428-4aa0-9350-3ef63be86aaa"
        },
        "item": {
          "id": "813c20cd-59ef-471a-a897-08a9c0d0912e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7154364d-1a88-48f2-b3ba-082eef78ec6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a094b50c-4737-446f-8e6e-12d9be7d853b",
        "cursor": {
          "ref": "3dcc9c90-c70e-4900-8a9e-fc90b268f029",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "820dfb18-6c31-4564-b8dd-d78771907921"
        },
        "item": {
          "id": "a094b50c-4737-446f-8e6e-12d9be7d853b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e35a9094-c389-411f-8ec8-fe150509e832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563d8817-20ed-4df1-908e-2145a38a0a8d",
        "cursor": {
          "ref": "d6a30b91-c314-4882-9629-3f45f2c68279",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "57317321-667f-4429-9ee0-818623cea8ea"
        },
        "item": {
          "id": "563d8817-20ed-4df1-908e-2145a38a0a8d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1828570d-6c89-46b6-b1a3-c13c903b661d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194573b4-33d2-4caa-9f58-e47b24af1f54",
        "cursor": {
          "ref": "68974dbe-3d3f-4aee-9c07-f75e4d4f69b3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7d7157db-172c-4b27-9f10-9009401ff0b1"
        },
        "item": {
          "id": "194573b4-33d2-4caa-9f58-e47b24af1f54",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4e60c81-2265-433c-9322-1ac0aa6e2ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2689576-aba8-48f9-8433-7c6e5b075995",
        "cursor": {
          "ref": "7d0c2078-2276-4951-a9bd-36c2c180a31a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "579e861b-ca84-4fa0-a818-dff3c413b100"
        },
        "item": {
          "id": "e2689576-aba8-48f9-8433-7c6e5b075995",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "83f7c8dd-16f7-4bfd-b621-8824cd84b1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a90bc95-f028-45dd-a3cc-be8cf385f7cf",
        "cursor": {
          "ref": "9047fce1-da46-44e2-9978-f8ac1ad78ea9",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fcebe71c-88e1-4458-b01b-54905f5924ef"
        },
        "item": {
          "id": "6a90bc95-f028-45dd-a3cc-be8cf385f7cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2d9634cf-54e0-4059-894c-d01c87b05c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18cd074-5552-4cb2-982c-f84187f9d8ee",
        "cursor": {
          "ref": "4146bb95-3024-41d9-89dc-a35a1b1535ad",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b916abc4-83a3-45b6-87d6-0c1e02018b61"
        },
        "item": {
          "id": "b18cd074-5552-4cb2-982c-f84187f9d8ee",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "87275c15-b3a4-4fce-bfc7-d2c59d033bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5289e3-9476-4815-b801-6b545c829ab4",
        "cursor": {
          "ref": "e7182f60-62c7-4b1e-8f93-b333874577d7",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "52130df9-26eb-4290-8e90-8e0be1c8c014"
        },
        "item": {
          "id": "4c5289e3-9476-4815-b801-6b545c829ab4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "84d7370f-3c2c-42f3-a532-99c948e393dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c678b1-9490-48dd-b100-65206cdc0dc8",
        "cursor": {
          "ref": "e96e4904-dc43-443e-a7a5-be3c21686fe0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ba954a1-9e09-42d5-950b-febe0d89ebc4"
        },
        "item": {
          "id": "b6c678b1-9490-48dd-b100-65206cdc0dc8",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bfc15083-a129-4693-a183-014cf0e5a5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec36ed-1347-4b45-b068-e652869ad38c",
        "cursor": {
          "ref": "6b775890-cbcc-49ce-9610-723f2943fd4e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a2ec2d87-5ae1-42a6-9651-d791d3038125"
        },
        "item": {
          "id": "91ec36ed-1347-4b45-b068-e652869ad38c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7fb00190-a453-485e-a8c1-2a34bdd36085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783d3441-4e0b-4938-a114-1ce38bc8c62d",
        "cursor": {
          "ref": "cc0db3e7-d21d-4b50-a307-598e5aa17a23",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "503014e6-91c2-4fbc-8e5b-53030a3dedee"
        },
        "item": {
          "id": "783d3441-4e0b-4938-a114-1ce38bc8c62d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7e198c83-4496-4c3a-95e2-6498ff32c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515b1d64-5936-4185-b2ad-4bdde795dd54",
        "cursor": {
          "ref": "4f6048f0-c299-4f63-bfb8-efcbbdee0ba9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a9ae10dd-b7db-442a-a875-6a0cd934fa15"
        },
        "item": {
          "id": "515b1d64-5936-4185-b2ad-4bdde795dd54",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7e8f6ec6-ab68-4d78-9cc1-1cbda7ad5d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83a7822-12ad-4559-b15f-ceb9120d94da",
        "cursor": {
          "ref": "19b8d9b9-d6bc-4b67-850c-d81dfd0d6160",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9d39c3fb-bc21-4dea-bcf1-e3e5b6b338c1"
        },
        "item": {
          "id": "b83a7822-12ad-4559-b15f-ceb9120d94da",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a2aba2c3-95f9-4ef1-9fa7-94b4cfa33119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ae8e37-cfca-46f1-8d63-eb497f3d852f",
        "cursor": {
          "ref": "72977a8c-0b88-4b1c-bd67-dfc0697a18b5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "32fe99c5-c621-4da4-87ce-c95a63c70c2c"
        },
        "item": {
          "id": "c1ae8e37-cfca-46f1-8d63-eb497f3d852f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7d1ac95-1a80-4282-9e60-fd1f10f6e993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1436d6c0-2ea2-4670-9a86-496b8c2111ef",
        "cursor": {
          "ref": "41a34ba0-548c-4c4a-8768-a48d694f0a34",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "956fe0c2-46e1-4958-b1bc-3ff519240200"
        },
        "item": {
          "id": "1436d6c0-2ea2-4670-9a86-496b8c2111ef",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d5124dc9-4a1d-47c9-8ed6-e4add42575d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328b8669-7498-4be0-9212-7fd0cdf03991",
        "cursor": {
          "ref": "c8b0d0a0-27e8-4b88-b6de-232255d7e8f0",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "12ac6088-e927-4fb3-9929-566fe3e44731"
        },
        "item": {
          "id": "328b8669-7498-4be0-9212-7fd0cdf03991",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d94b1e79-d35d-4854-8277-0af686eed1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b0d570-574f-412e-b691-f66576c8197f",
        "cursor": {
          "ref": "235f9018-181f-4a67-b047-e34deb683fe5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "50f331f9-bf0c-48aa-b952-912a370b92df"
        },
        "item": {
          "id": "e5b0d570-574f-412e-b691-f66576c8197f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "987d3391-1dcb-4482-836e-ca12fad5125f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8375ad4d-2105-4707-b924-d7ba4244854f",
        "cursor": {
          "ref": "a1575856-8c8b-4e76-a540-4d95f166d75c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "13c375db-051f-4d82-9878-bead3828e8e8"
        },
        "item": {
          "id": "8375ad4d-2105-4707-b924-d7ba4244854f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f800cdc3-c108-40f6-8213-0f061bbf1c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00c8940-5e7a-4ab4-9639-70b8ea46f8db",
        "cursor": {
          "ref": "52238d84-3f37-4aa3-8504-052d24677793",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2c9719e9-33b8-4831-93e7-1c95a0fabb90"
        },
        "item": {
          "id": "f00c8940-5e7a-4ab4-9639-70b8ea46f8db",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "76769308-589f-4c64-8133-bcfa9e0d86b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3ddff0-122a-438a-b126-9f3b7549048e",
        "cursor": {
          "ref": "1c6a9f1b-68c7-4fc0-b9fa-737ee6230fb7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3204a021-0025-477d-b9c0-d03ebc882bf5"
        },
        "item": {
          "id": "bf3ddff0-122a-438a-b126-9f3b7549048e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "51ec4104-f3e3-4648-9b92-9b473c5f43e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71123f8a-7e30-4fa2-8857-72431b834107",
        "cursor": {
          "ref": "1090d367-1a23-4e90-9c82-2ce7bfc342c0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c1d742b6-1bb3-42a7-bb84-975b40b6719b"
        },
        "item": {
          "id": "71123f8a-7e30-4fa2-8857-72431b834107",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "245db79c-4aef-4800-9927-7387d3e2fa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636403da-d268-4dbb-aed4-b4e01d2d4a4a",
        "cursor": {
          "ref": "cb6eabf1-b0bf-4627-bb7a-40260c1ecb39",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "54c0c098-0dee-4a14-ab43-107d798ff435"
        },
        "item": {
          "id": "636403da-d268-4dbb-aed4-b4e01d2d4a4a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "66e89a2e-78e4-4322-ab35-b0f1e8ede1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28a4d58-45d4-4f1a-bb78-1a73dadd6854",
        "cursor": {
          "ref": "c4b9b911-7d05-420c-aa70-0c34d9db3f4f",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b263edf1-cfc1-4060-87c5-81cc6ec1b0b9"
        },
        "item": {
          "id": "c28a4d58-45d4-4f1a-bb78-1a73dadd6854",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "048ef2a7-6433-4836-9815-42e158b3d612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14fe501-944f-473d-b9d5-ffb8627bc34e",
        "cursor": {
          "ref": "cd199707-09f5-43c9-9a2d-122199dde81c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbd9de95-0149-4bdc-9aa9-d18d03d779d8"
        },
        "item": {
          "id": "b14fe501-944f-473d-b9d5-ffb8627bc34e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dfced276-71e1-49e4-a740-ff617968a7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74772324-be67-45ea-a522-363584f75e85",
        "cursor": {
          "ref": "69b07c9a-b7a7-4244-9219-48298dcdd776",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "528c6322-c857-40f6-9140-14ddacaf5534"
        },
        "item": {
          "id": "74772324-be67-45ea-a522-363584f75e85",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "02a9f50a-4b97-45d7-9794-3b9803de8907",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2105efdf-5b28-4cc3-969b-9fdeab4163f2",
        "cursor": {
          "ref": "560e32f8-e906-4100-a5e1-055355240763",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "47eab9f5-eb83-4461-84fb-029e0c53d10b"
        },
        "item": {
          "id": "2105efdf-5b28-4cc3-969b-9fdeab4163f2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d3cfd0c-30a0-466b-9449-99561bec672b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b38e130-fd5f-4ca9-9ea6-965727112952",
        "cursor": {
          "ref": "acae2ecb-68d6-46b1-98f1-3f40a1df96f0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d064299-ecb6-4d6c-b7e9-196b4d20026d"
        },
        "item": {
          "id": "8b38e130-fd5f-4ca9-9ea6-965727112952",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "08544422-7a70-4d2b-babf-03d1a176cb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0014f5-6c43-4d73-bffe-a7743bb7d8ab",
        "cursor": {
          "ref": "b20c1a5c-0467-4bb3-b20b-803e4d79051a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "72ec377c-b0d1-4e40-9aea-f7ddd831ae6c"
        },
        "item": {
          "id": "7b0014f5-6c43-4d73-bffe-a7743bb7d8ab",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cff073df-f936-43f2-a6fd-1a4106fc609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0674e2-76d8-4868-a2c0-b6a119debca5",
        "cursor": {
          "ref": "b9a36162-8c1f-4442-acbd-f671514e65e7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "db4680ec-c06e-4265-94ed-cf63e41a7ff5"
        },
        "item": {
          "id": "fc0674e2-76d8-4868-a2c0-b6a119debca5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8223702e-f865-4c06-b77c-55731c507b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4947c-880e-424d-88b5-780bb8fa89e6",
        "cursor": {
          "ref": "45d88085-815e-4c7c-a5f0-a09dbf309c1d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "294e11a2-d618-4b91-9361-95a8e4bc58b3"
        },
        "item": {
          "id": "2ae4947c-880e-424d-88b5-780bb8fa89e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "916047c5-1ecb-4009-bc80-0a4fd051bc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47069900-063a-462a-b351-db71b0c0c663",
        "cursor": {
          "ref": "b3ffa3c9-4314-4755-a224-025c3a00a517",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8685ee17-373d-46f6-9f88-ef385a884ec9"
        },
        "item": {
          "id": "47069900-063a-462a-b351-db71b0c0c663",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8024bd05-97ab-4df5-bcfb-5e54ca53a8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8840040c-96fa-4014-97cf-f9b02881d602",
        "cursor": {
          "ref": "bb3cb514-941f-4e75-ae2a-a46decd01f6d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2205e420-e584-4967-a947-85aefb020f80"
        },
        "item": {
          "id": "8840040c-96fa-4014-97cf-f9b02881d602",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e76df011-b2a8-4d0d-aee7-a554e7b0d18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318b475a-293a-4832-8b7a-f2661e394e33",
        "cursor": {
          "ref": "b784e42c-1518-4587-9bf1-0e007fe6d340",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ea3f62d-d336-4bda-97b4-7e279eb28174"
        },
        "item": {
          "id": "318b475a-293a-4832-8b7a-f2661e394e33",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "675daa24-c56d-4c26-aadd-2e7026df134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51fb213-4aee-4bdf-871b-30c1d98babc4",
        "cursor": {
          "ref": "9199ac38-0480-421c-bfb6-e78bae697698",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cbbd7d13-15dc-4f55-8840-c90c84fd9474"
        },
        "item": {
          "id": "b51fb213-4aee-4bdf-871b-30c1d98babc4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df22d7c5-a984-4fa4-8851-4772e7ec7da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0beb5bf2-fe05-4c02-96a7-5e44b185ef11",
        "cursor": {
          "ref": "cf550adf-59a4-4556-aed1-5a3f67f11913",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7af2e112-c4c8-4778-bc4c-d93382f0fed1"
        },
        "item": {
          "id": "0beb5bf2-fe05-4c02-96a7-5e44b185ef11",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bc7d14c6-4c7a-4e3c-8118-0375b5db53b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d98101-0faa-44c7-a927-92e7304abb6d",
        "cursor": {
          "ref": "a54e0b34-39a3-4892-86f9-5305535269b0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f36825ae-35a9-47f1-b679-ec0aa8f4a5ea"
        },
        "item": {
          "id": "67d98101-0faa-44c7-a927-92e7304abb6d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6269ea8b-8b5e-46c6-8337-1175dd514acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e821bf-3881-4783-8d19-127e59aceda8",
        "cursor": {
          "ref": "a5f00caf-0251-42e3-8de2-df21336fc910",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f4f52c4f-276c-4169-9e4c-b5cd31d77146"
        },
        "item": {
          "id": "e4e821bf-3881-4783-8d19-127e59aceda8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "89fd38f9-7f46-4678-868e-d350dbc56dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d05c6c-d3a9-4ca8-b3e2-259a7c4a2dad",
        "cursor": {
          "ref": "c99fade6-df94-4c33-ada1-48b6c93fd1c1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "957186a4-a80c-437d-a022-f9252e6b783b"
        },
        "item": {
          "id": "f7d05c6c-d3a9-4ca8-b3e2-259a7c4a2dad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a9af1208-2b4d-4226-a57c-dd6ca9ad5133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ea4ab4-56a3-4a14-be51-e7aeb473ae1c",
        "cursor": {
          "ref": "5b057ea0-ad2b-4846-9d5c-1c4d6ee54d4f",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bfc54a3e-8010-466d-9532-ca44e60fa63d"
        },
        "item": {
          "id": "80ea4ab4-56a3-4a14-be51-e7aeb473ae1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f097dfd2-37e6-4f5e-bd05-cc1a2c99a9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a371604-8659-4b6b-8051-cf78dc181c59",
        "cursor": {
          "ref": "20fd45f4-37ac-4323-aec0-d6ecb28d1123",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7873edd-5c81-43ca-8c93-e56726ac7131"
        },
        "item": {
          "id": "1a371604-8659-4b6b-8051-cf78dc181c59",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f1ca8b61-3a4e-456a-a73e-ff1951c28505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90636b77-414b-4631-bf51-a9ca634e5504",
        "cursor": {
          "ref": "dc0ae742-d037-46f7-b65f-d21a6497b9c1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c57fba3b-906c-4140-ab8d-e785cf01841a"
        },
        "item": {
          "id": "90636b77-414b-4631-bf51-a9ca634e5504",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f54beb44-963a-45c0-bb36-d9cde5e2eadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae50eb9-ccc5-4ac5-935f-235311c0ecbe",
        "cursor": {
          "ref": "a1eed016-c20f-4670-9062-6624948df073",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "89a19e37-1c3a-440e-ad2c-654206527350"
        },
        "item": {
          "id": "aae50eb9-ccc5-4ac5-935f-235311c0ecbe",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8b3f9c8e-07c0-42e0-bfc0-64d63f8ff791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d1b644-8a99-44d3-9ed8-4b6f4363ce0e",
        "cursor": {
          "ref": "1411b2fe-fe2d-4e14-bcf4-2eea73a425c5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5a955c44-873d-4379-8024-77e9f004c305"
        },
        "item": {
          "id": "a9d1b644-8a99-44d3-9ed8-4b6f4363ce0e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8a9e6601-63e5-49aa-9e94-c5684ab82ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad1fec8-adcb-4f13-920f-fa3a088ae9f0",
        "cursor": {
          "ref": "756e3614-6136-44a9-b1c4-1784f53bf9d2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4a5df80d-2b09-4154-bbe3-26eed8ef8745"
        },
        "item": {
          "id": "aad1fec8-adcb-4f13-920f-fa3a088ae9f0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9f140772-ef19-4c85-9ca4-9bdd849b0dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05040d75-429a-49e3-b71a-f0167aa031d6",
        "cursor": {
          "ref": "fe1336ec-0e15-4bc1-95ae-a5c1ae24ab0a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d7e4adf6-317f-4335-af92-0b6e775d3095"
        },
        "item": {
          "id": "05040d75-429a-49e3-b71a-f0167aa031d6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eabd4bcf-fef4-4891-882a-09d07a26b17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e7d544-320a-4110-926c-f8ca27b0bb4d",
        "cursor": {
          "ref": "17348b23-c12b-44d2-abde-7dda372bd478",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8ef7be69-ed52-4e65-b52b-8080be624921"
        },
        "item": {
          "id": "b9e7d544-320a-4110-926c-f8ca27b0bb4d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "755dd196-8cc5-4f68-b007-07c6ab718bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e943cc8-45ba-4234-8ea1-ff74c7774ce0",
        "cursor": {
          "ref": "49ef2e01-1173-4591-ba36-3dfac7a2c9f2",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "176134a4-a909-40f5-a22e-2f650a3290f8"
        },
        "item": {
          "id": "7e943cc8-45ba-4234-8ea1-ff74c7774ce0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a3c4feb8-06e6-4100-bf96-5fb410dc2297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8485a9-8563-47ca-a8ca-5812b0abe624",
        "cursor": {
          "ref": "28233529-3696-49af-91f5-864d9aa91cd7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "adfdfd19-7823-4d47-aa9c-7c6ed764f95d"
        },
        "item": {
          "id": "7b8485a9-8563-47ca-a8ca-5812b0abe624",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "de6bdb2a-5668-44b8-888c-0e0db3229560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6aa6cd-209b-48f0-a233-fd941c1bb8f2",
        "cursor": {
          "ref": "ed4d22c7-e49b-444d-bdba-faa6971de3f2",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f056c253-cde0-4361-866a-ae7b3a86b9c9"
        },
        "item": {
          "id": "5c6aa6cd-209b-48f0-a233-fd941c1bb8f2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5a5b4231-66fa-4ceb-b848-a08680e5150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9511eaeb-394d-429e-8925-505e920602f0",
        "cursor": {
          "ref": "50b8ca24-3eb6-4efe-9886-c08e84accbdb",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b3fdb08f-45ac-4d30-969c-ea0969dbddd3"
        },
        "item": {
          "id": "9511eaeb-394d-429e-8925-505e920602f0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "236ce08f-49c3-4f72-bc99-b4263d8f8d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279e0c00-d7f0-4062-b36a-7815f5a0a849",
        "cursor": {
          "ref": "66676b5f-ae14-4158-a56d-49b437888e33",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ff36ce61-cafb-416a-b764-41b1a95e09a1"
        },
        "item": {
          "id": "279e0c00-d7f0-4062-b36a-7815f5a0a849",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "87aaf3ef-f844-4f7c-b3dc-ab1323c40913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d9e802-293d-4a74-ac9a-ac75f70ee5f6",
        "cursor": {
          "ref": "c024216d-e39a-4c4d-a524-31f7dcff0833",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9293ff95-29ec-4e2e-bef5-c9eedb86820e"
        },
        "item": {
          "id": "76d9e802-293d-4a74-ac9a-ac75f70ee5f6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6372feae-14c1-461e-ad23-dca9cee2802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1ceb32-fc77-491b-a471-ca7515f3c6b2",
        "cursor": {
          "ref": "fb6c2c58-9d95-4d68-ae9f-f59ecd823f5e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "906b17ad-0576-49a5-baf4-837ba22c6f71"
        },
        "item": {
          "id": "ce1ceb32-fc77-491b-a471-ca7515f3c6b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "246fb367-9866-4c63-a59b-c5e8c0effa43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e23072f-7a01-4fdb-a7e8-4540a2ad36c3",
        "cursor": {
          "ref": "902eee07-f758-4daa-a8b6-7f5ca144de84",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a51e620f-d41b-4936-82e7-920a317f3bda"
        },
        "item": {
          "id": "3e23072f-7a01-4fdb-a7e8-4540a2ad36c3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a64e8b2a-1641-494d-8a7f-5dd09be17ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05390a95-6c0b-42e5-b2eb-67b396d29bda",
        "cursor": {
          "ref": "1c19a70e-75c7-4d61-9f62-967b647c59cc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2a1c2a9c-6893-43a0-ae1a-ac49431b6f49"
        },
        "item": {
          "id": "05390a95-6c0b-42e5-b2eb-67b396d29bda",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e5fd278e-98be-456c-b2c5-e117826858d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aac91da-9fc4-4a1a-9aa1-8f36613b81f2",
        "cursor": {
          "ref": "9f226213-fd4b-4f1a-8864-1936145f4ea5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bbdf6735-5fe2-4ac3-9c5b-4bc606f840e7"
        },
        "item": {
          "id": "7aac91da-9fc4-4a1a-9aa1-8f36613b81f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "37eb2b6f-ae6d-4f02-9a03-5153d49bcdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4f297-2543-4b78-b0c1-5bf3e2242414",
        "cursor": {
          "ref": "6a4e3530-a7a6-41c7-805a-7693c44fc210",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "62850f6d-1d83-4dd7-b12d-eaa7a9b5bcaa"
        },
        "item": {
          "id": "5eb4f297-2543-4b78-b0c1-5bf3e2242414",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "269076fa-cfcc-4c72-b570-9c682f720056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a2f3d-cee5-41f9-8374-084021811cf6",
        "cursor": {
          "ref": "fed8eaad-16cb-449f-b781-eeac4074156e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0d16725e-9a7d-4576-a98c-fc8a617e9e42"
        },
        "item": {
          "id": "074a2f3d-cee5-41f9-8374-084021811cf6",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7a2905a4-af01-4984-906a-449f1e773814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63baa961-f469-4d8a-a0f1-47f2a470c086",
        "cursor": {
          "ref": "db5d10a0-102d-4efd-b80e-eb552c2bfdea",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a9984abb-b388-4865-9034-7c9fd685140a"
        },
        "item": {
          "id": "63baa961-f469-4d8a-a0f1-47f2a470c086",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1284cbdd-3a75-4585-b746-ca54afc5ec8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9cbd33-4ced-42c8-85d0-10442f54b032",
        "cursor": {
          "ref": "5ce2c6ce-dcce-4a13-a58d-9ca2363e90d3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "add2e83b-2ca5-4799-bd08-4829286fa551"
        },
        "item": {
          "id": "5c9cbd33-4ced-42c8-85d0-10442f54b032",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "19621b79-119f-46f6-97f5-a339a467dd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb38a6ff-fbd5-4be8-8b43-7ed2141be75e",
        "cursor": {
          "ref": "4b3218cb-c5df-4e86-bae2-622992bed86b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "753810a6-a27f-412b-a17e-fd7280e6dff2"
        },
        "item": {
          "id": "bb38a6ff-fbd5-4be8-8b43-7ed2141be75e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "523a1d51-1552-4d88-b47f-64d71ed392a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28c393a-532c-4abb-b3f7-413c287ab165",
        "cursor": {
          "ref": "fe7c6a35-36cd-4740-8e6f-0a58b7061074",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e78b55d-b4c0-4214-b98f-5fa75eddbe5e"
        },
        "item": {
          "id": "e28c393a-532c-4abb-b3f7-413c287ab165",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f899d220-b3b0-4279-a832-64028c941b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6476ba3f-a616-4281-b38e-e98f3e0d18be",
        "cursor": {
          "ref": "36f7bcbe-31d8-4383-9e3c-4554a9f079fd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b45c3f46-4b10-4d10-9dbd-de4d1cf5faa5"
        },
        "item": {
          "id": "6476ba3f-a616-4281-b38e-e98f3e0d18be",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "36c95d60-99f9-4728-a228-105245463e6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc83020-b2cb-4fa5-a921-a75f21125e69",
        "cursor": {
          "ref": "aba4e541-b9ad-4ade-ba7b-121a60e18a23",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "aa40ee92-d36c-4d08-9fa1-f2ddd55740cf"
        },
        "item": {
          "id": "7bc83020-b2cb-4fa5-a921-a75f21125e69",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c8dac5f1-a785-4746-a3ae-dacb4d43c8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380a81e6-fd6c-4a1c-bbf9-734b602ba23f",
        "cursor": {
          "ref": "029c69c9-87f3-4d60-8c95-da59af301dbc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a0a4d54f-3e52-45bb-9eb2-1bd8d182fed5"
        },
        "item": {
          "id": "380a81e6-fd6c-4a1c-bbf9-734b602ba23f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aaa6cd9e-1f2b-4eaf-8f02-5b794eb455ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1040a17-8731-4fb5-9a15-97d44225e616",
        "cursor": {
          "ref": "1158b51a-6122-436a-a57f-c176428aa0f4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "33ad7e3d-1160-4549-81a8-13a18295facd"
        },
        "item": {
          "id": "f1040a17-8731-4fb5-9a15-97d44225e616",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19ae3b65-99ca-403f-bebd-594120b3ca4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0add9dc5-370b-43bc-9d25-d1f99edf3b71",
        "cursor": {
          "ref": "0fd755c1-5e18-4c9d-95b9-4d899ee17432",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d139902b-a459-4c37-8ff4-7e575bfd8278"
        },
        "item": {
          "id": "0add9dc5-370b-43bc-9d25-d1f99edf3b71",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0b6a15dc-ee91-483d-a5a1-6b9d3d1548f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01a5e41-bec3-4413-9f01-2cf502276aad",
        "cursor": {
          "ref": "ab10f28d-3021-485b-945b-b2d79dea7733",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "aed5c7af-290e-4222-adec-663dcfaed01b"
        },
        "item": {
          "id": "a01a5e41-bec3-4413-9f01-2cf502276aad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "990278e7-c82d-4d7c-ba82-f71d403ab1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832646d2-5fcb-4170-ae42-d61fb7f132d8",
        "cursor": {
          "ref": "4d9b67dc-f60f-4c6b-bb9c-f5e2f109640d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "246cd4b0-ee8d-4e6d-a909-a19984e00ffd"
        },
        "item": {
          "id": "832646d2-5fcb-4170-ae42-d61fb7f132d8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "289108cc-06e4-4992-815a-b0e900847057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d399f34a-c8e3-4376-9422-563a0c47d745",
        "cursor": {
          "ref": "c525bfea-7b86-45ed-bc48-2c93b1363d2d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d1c6264f-7bb9-4a9f-9544-e6c9a412e805"
        },
        "item": {
          "id": "d399f34a-c8e3-4376-9422-563a0c47d745",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d83d84c8-eb05-40b9-8bee-ca6c6b27bf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbce0427-d431-4a18-b033-96385d4087c5",
        "cursor": {
          "ref": "bb0c6fd8-f686-4cc8-8da7-818b525443b0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "94c3b081-8e9d-493d-988f-7875b1af8eff"
        },
        "item": {
          "id": "cbce0427-d431-4a18-b033-96385d4087c5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "74c8fda4-744e-47af-997c-4eabb656e87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016bbe25-95e4-4217-9910-18dd66a1376f",
        "cursor": {
          "ref": "43ea7519-5919-409e-98f6-6b35662ee5b8",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "bd445746-11b9-4f58-a124-6d9ab0537c29"
        },
        "item": {
          "id": "016bbe25-95e4-4217-9910-18dd66a1376f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "573507a0-ef65-470e-9c64-82731a5e9e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6b1560-a04c-460f-9f90-326717c26960",
        "cursor": {
          "ref": "d06709be-244e-42af-bcfa-32e7791c3ca6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d81ca6c1-9b3a-43f0-901a-b162e6977e31"
        },
        "item": {
          "id": "dd6b1560-a04c-460f-9f90-326717c26960",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a3d9bbf4-d08d-4fe9-8206-0f4f994548be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c918cf2-361e-4a08-8b37-538c78ff091d",
        "cursor": {
          "ref": "d6f8f221-fcb1-44f0-9532-8ef48376673f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1786a543-9b35-42eb-a3ed-603fc21befb8"
        },
        "item": {
          "id": "1c918cf2-361e-4a08-8b37-538c78ff091d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0f0f923c-58f4-4c70-81bf-c463f3b87313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f347ab-10e4-4fbb-8b92-b8e91f37f2dd",
        "cursor": {
          "ref": "66122b63-30cb-4e8b-a5b0-ac7e3a8dd8f7",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "537dcddb-64be-4c0d-acb7-829e477b087c"
        },
        "item": {
          "id": "d7f347ab-10e4-4fbb-8b92-b8e91f37f2dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07bbddb3-38d2-4277-9b85-da9e4285edbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6018a641-b9d2-4249-8d4e-28b1a7ca9c2f",
        "cursor": {
          "ref": "775fab4a-d311-4118-835a-b326a20402de",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0ad95a26-2630-4df9-8ce5-1fbff333bb62"
        },
        "item": {
          "id": "6018a641-b9d2-4249-8d4e-28b1a7ca9c2f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7fa97c5f-d806-4745-90eb-49f35aa92682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b48566-f883-495d-93e7-0e01d120cc52",
        "cursor": {
          "ref": "3f636e58-8928-4aaf-a6e3-ea451f152298",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1a804076-0641-4ad5-957a-f9d5ec644a73"
        },
        "item": {
          "id": "e7b48566-f883-495d-93e7-0e01d120cc52",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "17f54b95-d7a9-40ae-ae8a-85d41f6c51a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c73490-34df-4a7e-b215-655b0410926c",
        "cursor": {
          "ref": "4883d68c-3d1c-46da-9006-6b6ed63fc0a6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "702a1379-5cba-4e6f-86f1-a692bfbb2820"
        },
        "item": {
          "id": "91c73490-34df-4a7e-b215-655b0410926c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "00fbbbf5-f582-49e2-b803-ec2636c4d700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68851964-43b7-456a-ae45-fd8d946189a7",
        "cursor": {
          "ref": "bad1de68-fe98-4f50-8986-ed7b26f43572",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9ceb0ea1-2c97-4285-8424-6c179420b426"
        },
        "item": {
          "id": "68851964-43b7-456a-ae45-fd8d946189a7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9dcc91b1-f9b8-4063-9bcb-effcb38bb9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc05e155-1265-4314-8477-9d73fc85b551",
        "cursor": {
          "ref": "19ff7185-44d6-4d53-a21a-f9b197384fea",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad58413c-9dda-479f-a7dd-45c2ae69a836"
        },
        "item": {
          "id": "fc05e155-1265-4314-8477-9d73fc85b551",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7cdef4fc-bb89-40a1-86b4-3d8c39fa1b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b971b081-04b6-413e-a9dd-cb8b178bf893",
        "cursor": {
          "ref": "0397eea6-263c-4284-993e-801b13b5d041",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "536fe385-a72d-4517-891d-b7f3494abdf5"
        },
        "item": {
          "id": "b971b081-04b6-413e-a9dd-cb8b178bf893",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "280efa1a-4b30-46d0-a381-4f4e01872cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9941a315-4057-4f29-94fd-ed9d0df1e6e3",
        "cursor": {
          "ref": "71d06af7-cc8d-4225-8ffb-8a29657b0c42",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "266aeedd-0a8b-40f9-8301-f2da641255c2"
        },
        "item": {
          "id": "9941a315-4057-4f29-94fd-ed9d0df1e6e3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ffa8f3c4-b52f-4676-b8a0-f7a1f025fec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4939419-9272-4384-bb15-d560d3c200a5",
        "cursor": {
          "ref": "991efd1f-fb4b-4c0f-824b-6c86b04a5e79",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f96ed692-a464-40f3-ba97-264689dcdf7c"
        },
        "item": {
          "id": "d4939419-9272-4384-bb15-d560d3c200a5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87952c5f-2d80-4da3-9bc7-95c9850d0b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8194119-fe9f-4647-9f79-726f6657eb7a",
        "cursor": {
          "ref": "85866fff-95b8-46c9-bdde-c53d71b7b54f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2f1073e6-6829-4006-99ca-0e12ebb7ea59"
        },
        "item": {
          "id": "a8194119-fe9f-4647-9f79-726f6657eb7a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b20528d-5042-4969-94b5-559de7227a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fc41bd-4ae0-42f6-9737-6ba13a92f775",
        "cursor": {
          "ref": "1af99dd5-f5c3-4ad3-8592-7310660b12fd",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b810250c-0cc9-4678-abce-18829de932a5"
        },
        "item": {
          "id": "a9fc41bd-4ae0-42f6-9737-6ba13a92f775",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c9281b0c-0719-4b90-8c14-02a08c7ed97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcf3e83-a9bc-4a66-9cb6-033634793afe",
        "cursor": {
          "ref": "c44b6b64-713c-4c80-bc13-dff345adccb4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d1302951-fc23-46ff-9285-0d42c00e4d33"
        },
        "item": {
          "id": "8bcf3e83-a9bc-4a66-9cb6-033634793afe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "06b9343b-0f8f-4089-a8d2-581c76caa5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee169b02-e316-48ea-90bf-4807dab24785",
        "cursor": {
          "ref": "9487cf9d-131a-4a32-b9e3-4bd646668424",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7233402f-0888-4cd1-800a-c4ed10de18df"
        },
        "item": {
          "id": "ee169b02-e316-48ea-90bf-4807dab24785",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "00e6d836-71f3-484a-961d-1cd1536102d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e08eff9-3cd8-45c7-b95c-478b647f6b6b",
        "cursor": {
          "ref": "c9772e9c-ad38-4397-97a5-c85b7bd9f94e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "59d73ea8-8141-4dc4-b5c6-d37edb198b5a"
        },
        "item": {
          "id": "6e08eff9-3cd8-45c7-b95c-478b647f6b6b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8507485b-aafc-4ce5-be56-3d9296711736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093ce7cd-ad45-4089-a979-06feb68e2a5d",
        "cursor": {
          "ref": "666dda96-cd46-49f9-831a-fbeac1e53fb5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "48951a58-a627-4ad6-b501-2837f23eb4b9"
        },
        "item": {
          "id": "093ce7cd-ad45-4089-a979-06feb68e2a5d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "03879844-e65a-42ea-a873-cdfd4d8cce9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d494e0b5-46b8-4715-a770-117de03b6b0f",
        "cursor": {
          "ref": "2ba48e39-8ec7-445c-ae3c-08ce3da38e04",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ac4e427e-20ac-499a-9ece-1b97faab9144"
        },
        "item": {
          "id": "d494e0b5-46b8-4715-a770-117de03b6b0f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "33713332-ea34-404d-a978-8959654828b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a27f7-a80a-40a8-a67b-dd92fb249ef0",
        "cursor": {
          "ref": "2562e17b-0629-4597-9a9f-58e7c84fbdc8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "82cf774a-6078-496f-8c2c-1d26c5278fb4"
        },
        "item": {
          "id": "c80a27f7-a80a-40a8-a67b-dd92fb249ef0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4ee16c23-54e5-4d99-b5e0-4c9b340a8252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af94c3ea-5509-4ffc-9ae8-883c184adde1",
        "cursor": {
          "ref": "9b161e07-d361-4b88-9ab8-9a5d37b25e2d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f14a151f-d056-4f08-90d3-cbd47b29c29e"
        },
        "item": {
          "id": "af94c3ea-5509-4ffc-9ae8-883c184adde1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "80acc794-1dc7-43b2-b69b-e02a80f24b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d1c098-f831-490c-a7d1-187057c23fa9",
        "cursor": {
          "ref": "04f2cc4b-a5ce-4d4e-a9b3-1671717a6f00",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "61405e30-1260-4792-b036-9dc65cbf8898"
        },
        "item": {
          "id": "d5d1c098-f831-490c-a7d1-187057c23fa9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "17f11f59-5790-4790-b339-2dc30369ef90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da31bd23-c40a-4ec0-a833-2cacbd81517f",
        "cursor": {
          "ref": "0cbb8a19-3465-4cf6-b378-f9e9c10c1762",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a62ce795-a694-42bf-b76e-d5d1eca4ab0a"
        },
        "item": {
          "id": "da31bd23-c40a-4ec0-a833-2cacbd81517f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "db3abc3c-cbef-4b9f-ab34-1b8a57c9e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e955036a-8f3f-4be2-8d59-d4bedad18f04",
        "cursor": {
          "ref": "e317a3c3-708a-4226-9fd0-2ebea19ef2f2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b0d9a5ae-b4c6-46da-9777-989fe8129e4a"
        },
        "item": {
          "id": "e955036a-8f3f-4be2-8d59-d4bedad18f04",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e08b857d-915d-4e7d-91fb-78352e3bb29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014f4ef7-9719-40d4-909f-bff420111261",
        "cursor": {
          "ref": "e3772d06-387a-43c6-af09-32ba7c27a551",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1b25d0c6-62ba-4ec3-a92f-b89ab4f9e8cd"
        },
        "item": {
          "id": "014f4ef7-9719-40d4-909f-bff420111261",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8dd2e4b4-d0ea-4704-a855-be79ba7ccaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc4acb7-d150-4d77-8dab-afbf360f98bf",
        "cursor": {
          "ref": "12ba73b9-9fad-4325-8b1a-13ccceb2d7cb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9f3f7460-59e2-4d92-9a16-4ede3306b85d"
        },
        "item": {
          "id": "fbc4acb7-d150-4d77-8dab-afbf360f98bf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da25fae8-fde4-4b66-aa84-5af7b5e0009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed888529-5a07-4f3b-9d3d-2b997d7fc0d8",
        "cursor": {
          "ref": "f92f331e-6f50-4071-8db6-c77fed9ec038",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "55381ac4-4075-4449-8dc4-e4d4822dd4e1"
        },
        "item": {
          "id": "ed888529-5a07-4f3b-9d3d-2b997d7fc0d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d5e0ddf3-0673-419c-9130-9c26b884ec00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22004e20-5f42-463c-8641-36f282abb7dd",
        "cursor": {
          "ref": "3af74f1c-23b3-4fdc-9fe5-d30bdb92d276",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5d5e7abc-3f52-4148-8f8a-a95904604e5d"
        },
        "item": {
          "id": "22004e20-5f42-463c-8641-36f282abb7dd",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d2875777-9dfb-4139-a120-fc8950e53b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e67f12-fbd7-4e6b-a8af-876079216971",
        "cursor": {
          "ref": "29bf64b4-ba17-49ec-b494-bef63d62cea3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "78adf375-5df3-4208-a360-52ebd9ea357b"
        },
        "item": {
          "id": "83e67f12-fbd7-4e6b-a8af-876079216971",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "30e51434-60da-4e82-8733-d977ad04021c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f81b00-35bc-4652-b315-7e99a38eb368",
        "cursor": {
          "ref": "ef6303be-a94e-494f-ae7d-1b0a6fd5a923",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d1029dfd-9a9d-475e-b3c9-be93915900f3"
        },
        "item": {
          "id": "02f81b00-35bc-4652-b315-7e99a38eb368",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2682ac03-8b8f-468b-b5e9-2d3aaeab9115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcc48de-360b-480c-abf7-a6caa6826f3d",
        "cursor": {
          "ref": "b7ec2dec-0b31-432a-8798-4d3ae3cc18e5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5fddf9e5-1506-42e5-8123-2f0fd986a22f"
        },
        "item": {
          "id": "cfcc48de-360b-480c-abf7-a6caa6826f3d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e836b178-ad97-42f6-82ed-39f21aa1512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449244d3-7f20-4c7c-8d92-92c2d9476e93",
        "cursor": {
          "ref": "a240e737-7eba-4904-9e2b-1cb82c4c0ef0",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a0a4c8e1-9f91-47f3-be44-b071721bb9ee"
        },
        "item": {
          "id": "449244d3-7f20-4c7c-8d92-92c2d9476e93",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "090e497f-a866-4ee2-a615-ca3888a8c1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42b6f12-5536-4f55-8098-fb1c33046d57",
        "cursor": {
          "ref": "65ba4f94-633b-4329-99fd-a7704bd11595",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ffebe519-1dfc-49fe-9c76-ac76106df902"
        },
        "item": {
          "id": "b42b6f12-5536-4f55-8098-fb1c33046d57",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "549cd151-6628-4b9d-a72f-8a3ba8f4a453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a575d5-4244-4ba3-9283-9c51ce49caf2",
        "cursor": {
          "ref": "14d245dd-1671-43c0-ab18-7545885eea8d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0ddecf7c-c18b-4324-ae37-aff133e72174"
        },
        "item": {
          "id": "72a575d5-4244-4ba3-9283-9c51ce49caf2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b05f00b5-e06c-4989-a0e7-d0627d13e08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa50986b-8f4b-42d6-8242-11972b5321fa",
        "cursor": {
          "ref": "94c54937-1ed0-4f20-85ba-01642f891ed4",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df019fad-68fa-4b62-8d71-6c22866767a9"
        },
        "item": {
          "id": "aa50986b-8f4b-42d6-8242-11972b5321fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "50d46a68-d23f-4a02-8b4c-f3cc14ba0ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec72692c-26ad-406c-9e9e-77aac514d8be",
        "cursor": {
          "ref": "8c7e6424-ff5a-4757-b992-00b6a12c89b6",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "08b4be4c-11cb-40d4-9644-49b22dcf6470"
        },
        "item": {
          "id": "ec72692c-26ad-406c-9e9e-77aac514d8be",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "483625e6-092c-41c1-8116-92cfec8198ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c440308-863b-4946-9685-f497a33345d1",
        "cursor": {
          "ref": "c22c3967-5d8d-478a-928f-14a1008e9f0c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b5f57302-1610-4ee7-8867-d94085968b3b"
        },
        "item": {
          "id": "3c440308-863b-4946-9685-f497a33345d1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4b822c89-d846-42be-a349-e90066ff505e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e9da8-94c6-4fe6-8994-7b93888de793",
        "cursor": {
          "ref": "a5d0f9be-0f72-4117-a0df-30316efa0475",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23240160-e679-4252-8c47-bf0bd51023fe"
        },
        "item": {
          "id": "f84e9da8-94c6-4fe6-8994-7b93888de793",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa288eea-3d27-46a1-aee1-736b83d7889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f94529-7f73-4ce9-94ba-31cdb17a38fd",
        "cursor": {
          "ref": "5b6431db-c8bc-4416-8c31-708b3da8dfbf",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d433ccfb-3943-4e2d-8396-d4c0b2eeb60e"
        },
        "item": {
          "id": "a0f94529-7f73-4ce9-94ba-31cdb17a38fd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "beaa5dbc-8f43-4980-8d98-dbfc99fa6f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6ac541-2e9f-44ae-8b3d-a1c3fe48ff17",
        "cursor": {
          "ref": "fbec2838-350b-44b4-a510-96903483f99d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dc44a981-3632-4c71-8137-778b207afc77"
        },
        "item": {
          "id": "fc6ac541-2e9f-44ae-8b3d-a1c3fe48ff17",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7f91cb87-4fde-452c-992b-f3f38a6d57ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f89ff1-38cb-467b-a74e-957dee3b2202",
        "cursor": {
          "ref": "9d657423-5fec-45b0-8fb1-13af0a20bd22",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bdd28c1e-20c8-4398-9688-9c2f31252e9c"
        },
        "item": {
          "id": "20f89ff1-38cb-467b-a74e-957dee3b2202",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "218d87d5-572a-4420-8bd7-005cf302b1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c38317a-3ff5-4376-87df-0f8245e8dc3f",
        "cursor": {
          "ref": "c57adeef-8488-487c-a1ec-d7dae6fc0637",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "35bbf815-d1eb-4adc-b90f-41d1e0f385eb"
        },
        "item": {
          "id": "5c38317a-3ff5-4376-87df-0f8245e8dc3f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "562af0ed-ecc8-4fef-bc72-67176b47ea5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc74480-220b-435f-8f2f-7b10c5de022f",
        "cursor": {
          "ref": "8f2d70f8-b17b-401d-a23d-85ed62ab2be2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "073aa131-0424-4c22-aed3-4638f5b35aa6"
        },
        "item": {
          "id": "bfc74480-220b-435f-8f2f-7b10c5de022f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0e171aa-aef9-4c23-a045-ea53789b6328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07800099-b8f5-4d4e-bb2a-08e511444123",
        "cursor": {
          "ref": "3e3ec17a-44f7-4a4e-8866-30fcc0715a5e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ebb3c663-087b-4333-8e8b-467f09dd84d9"
        },
        "item": {
          "id": "07800099-b8f5-4d4e-bb2a-08e511444123",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "338b2b36-c1a5-414f-ae60-824f075f02e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47e1450-0380-4eac-9fda-ace703d45911",
        "cursor": {
          "ref": "b5815326-106e-4dbd-b45c-420bdf054808",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8623cede-dad9-4823-9194-a720303a3628"
        },
        "item": {
          "id": "d47e1450-0380-4eac-9fda-ace703d45911",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c0c6a717-f4b7-4cbc-bb4e-378480f1dc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95db0899-4ef9-47e4-a257-09bccba9962e",
        "cursor": {
          "ref": "c50ff43d-893b-4698-9812-4d1b99d4b1c6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2f221c82-933b-482f-8ee1-c19e4f2fc035"
        },
        "item": {
          "id": "95db0899-4ef9-47e4-a257-09bccba9962e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4f29a39a-3988-4ee8-bbfe-d2db149c4cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ad0f43-ef16-437b-ba0e-84af1b761309",
        "cursor": {
          "ref": "ccb6ac0b-c414-43a4-9a28-b126ba121b66",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e2c3e94-b0a0-4435-961a-d770913700f4"
        },
        "item": {
          "id": "f3ad0f43-ef16-437b-ba0e-84af1b761309",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "439b6a5a-db26-4ab9-8945-1162cc449acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c5fca8-3791-48ec-adf3-a9c190b9ab9e",
        "cursor": {
          "ref": "00730176-4466-4675-b312-31572a25ff1a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "afaac079-394c-4973-88b8-6b62a4559cd2"
        },
        "item": {
          "id": "91c5fca8-3791-48ec-adf3-a9c190b9ab9e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f2f5b210-fcc3-4079-b459-40fe66176def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e4853-997d-4c4d-8f25-b300a5aa07b3",
        "cursor": {
          "ref": "70be3120-a55f-44d4-801b-29a106664446",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1d714817-9b66-48bc-93c0-ea1423b06d07"
        },
        "item": {
          "id": "7f9e4853-997d-4c4d-8f25-b300a5aa07b3",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "cea68a50-6c7a-482d-ae68-20beec2e1674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4391c20-1477-4362-a06d-c944e43cbaee",
        "cursor": {
          "ref": "fef89a97-2613-40b3-89f9-fb9bed99d1bd",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9080ad60-4c2a-47b4-9a8d-356bc211acf8"
        },
        "item": {
          "id": "e4391c20-1477-4362-a06d-c944e43cbaee",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e1755a9-fd45-4e27-b45c-1cde47ee5bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04ae459-f26d-4632-ad9b-459bd7678843",
        "cursor": {
          "ref": "50f18e69-d583-446f-a2b9-3a2c98de402e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "913755b3-f0a7-4c28-bb05-c02b96c3e906"
        },
        "item": {
          "id": "a04ae459-f26d-4632-ad9b-459bd7678843",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c0e353a0-edee-4611-a340-acedaef20f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea752135-1c94-444d-9b2e-7a5de791b7e3",
        "cursor": {
          "ref": "3d69897a-730e-476c-a64a-ccff7198b868",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7c310a83-a0d9-4a52-bdf2-786f6983c926"
        },
        "item": {
          "id": "ea752135-1c94-444d-9b2e-7a5de791b7e3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f0dcab06-e0f8-4404-84e7-7c8be4dbed3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4e108-22da-4f28-bd83-595d50b0b7ae",
        "cursor": {
          "ref": "a61fa87a-78af-44f2-82b0-4f6e25c10006",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b09a76a7-3c47-4c3a-8ec5-d99df5990847"
        },
        "item": {
          "id": "c5d4e108-22da-4f28-bd83-595d50b0b7ae",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "dcdf4883-ac3a-48cc-92d3-3c8df3718e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98faa115-0b09-4cbf-8163-ecfdd18f6069",
        "cursor": {
          "ref": "014630a6-2c08-4515-9f48-331c1770c5b5",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1f9cfbdd-64c5-478f-924f-8b8b48ebbee0"
        },
        "item": {
          "id": "98faa115-0b09-4cbf-8163-ecfdd18f6069",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5a8c9f6c-20f9-476b-bc78-448407b5c01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ca2b24-232d-4b9b-aaf4-5cf0a5b6493b",
        "cursor": {
          "ref": "c0cbdac6-7396-4e6a-bc1b-b16954a741f7",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ff953105-8abf-4acb-885e-57839b922668"
        },
        "item": {
          "id": "09ca2b24-232d-4b9b-aaf4-5cf0a5b6493b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4066992b-3725-49b4-8753-7890ba6591cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8fc2f1-1a2c-4f52-b108-d617f274fdd0",
        "cursor": {
          "ref": "5383df32-ac9f-4164-a9f2-bb3f9c7317a8",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6188fa75-70e7-4a5f-8a46-5ddfe6897b63"
        },
        "item": {
          "id": "4c8fc2f1-1a2c-4f52-b108-d617f274fdd0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8c454c0c-af05-4cbf-b8c1-affebf4a25a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecbedd2-8e65-466d-9ea5-53ade909b915",
        "cursor": {
          "ref": "14bbdbca-36cd-42d1-9b10-af8f14979d5d",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6b692700-eecd-4ba9-88aa-cf8987250841"
        },
        "item": {
          "id": "cecbedd2-8e65-466d-9ea5-53ade909b915",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2f4fc979-3649-4efc-a8af-ca07ca8bece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7468be93-67fa-47f1-a737-4471aeb86ed0",
        "cursor": {
          "ref": "3998aff5-e187-4407-9bfa-49ffa5077ec9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0452b167-7055-4aa1-817a-28fe35316810"
        },
        "item": {
          "id": "7468be93-67fa-47f1-a737-4471aeb86ed0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9554eb87-b080-4758-a0cb-bcef6f1156f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab34eee9-5624-4d10-81fc-91729b09dddc",
        "cursor": {
          "ref": "a29ca1be-43bf-42d7-b178-7d999a278cab",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fc799a02-3af2-4d6d-b16f-c0fbe13d0103"
        },
        "item": {
          "id": "ab34eee9-5624-4d10-81fc-91729b09dddc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0bb9808a-a5a2-442b-97eb-8162449b0baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8315cc7-88f4-4e95-9d64-0c343a299842",
        "cursor": {
          "ref": "fc1ea1f4-91e4-4b3c-9ce1-06f70410a9ad",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78160a6d-e0eb-46fb-8492-57047bc647c5"
        },
        "item": {
          "id": "b8315cc7-88f4-4e95-9d64-0c343a299842",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff4202c5-0443-4350-a14d-a678e2107e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b9f961-08f8-45f1-9c20-185591af14cc",
        "cursor": {
          "ref": "5bced48a-8c48-480c-9385-79c9b7b56d92",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "031d770d-68e8-4995-8dd8-5ec947e0e3c2"
        },
        "item": {
          "id": "60b9f961-08f8-45f1-9c20-185591af14cc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cb64c1a5-35c2-47d3-87a5-26afb443ff3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c919fa-9281-4977-935c-39b78a9dfab4",
        "cursor": {
          "ref": "b7e92cc9-2ec3-4aa8-851c-837616ce7747",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7ceccc13-64bb-4417-aa73-0b895db9ffb0"
        },
        "item": {
          "id": "91c919fa-9281-4977-935c-39b78a9dfab4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "64a6ec43-1498-4b17-b66f-e2a98ba1cb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4855e6a-c1cf-4a44-af31-7dc6bd9b6f8f",
        "cursor": {
          "ref": "7eea3b7b-5295-4eaa-9d43-d0a5a7d2e715",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "40a8f909-298d-4326-8dfe-6124af0d73b1"
        },
        "item": {
          "id": "d4855e6a-c1cf-4a44-af31-7dc6bd9b6f8f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fbd2654a-9e83-4005-81ad-504240b69a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7095e8-d3ca-4382-907e-ab04b525eb09",
        "cursor": {
          "ref": "1d7f7595-47c1-43ec-b219-5eed67f917d5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "aa35aa52-2673-40d0-a44e-eeb7b1abaec4"
        },
        "item": {
          "id": "0d7095e8-d3ca-4382-907e-ab04b525eb09",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8be190c3-f5ab-4485-8615-6ec7b88eb39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4eb691-5266-479d-b009-722fae3b837d",
        "cursor": {
          "ref": "1e7498e9-fd28-4579-87aa-91ba6eacddcd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ff46826b-e980-45db-8061-037458f9c622"
        },
        "item": {
          "id": "4a4eb691-5266-479d-b009-722fae3b837d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "52d4d5e8-43d6-407e-a21e-c7fbfb819b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211969cb-30af-4908-8c01-01ee9c28494d",
        "cursor": {
          "ref": "4cc53921-5746-49a0-8bf8-57de18f0e255",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cd568748-e08b-4bf6-8638-a35b0720c8c6"
        },
        "item": {
          "id": "211969cb-30af-4908-8c01-01ee9c28494d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e399fcae-8235-4dac-bc0d-bfd3884ff70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa704ff6-ff5b-4aca-9877-b5611b5855fe",
        "cursor": {
          "ref": "d91a70e3-f725-4343-b79e-c01c4d8e6413",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a0f1c9da-4a0e-4600-9634-d83984bcd814"
        },
        "item": {
          "id": "fa704ff6-ff5b-4aca-9877-b5611b5855fe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2043df55-01ce-4771-872c-6cf180424bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee75a0a-4951-4629-802e-885f72bf3543",
        "cursor": {
          "ref": "2ab05102-8901-4ef8-92af-ac52a8177ccd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "75e65b0f-d2b1-4db8-973c-eaa9664e8420"
        },
        "item": {
          "id": "5ee75a0a-4951-4629-802e-885f72bf3543",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b3658691-b7a9-4506-a46d-3f294ce643b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159daa05-097e-4f67-926d-fe5e86460180",
        "cursor": {
          "ref": "607312af-6c61-40c7-a37f-5c07b1fd35bb",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "260c6a98-1c8e-430f-b9cc-b13c3b376ef9"
        },
        "item": {
          "id": "159daa05-097e-4f67-926d-fe5e86460180",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f670bf5d-5728-4472-9c21-b6b7db628967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f9fe26-e4ed-450d-8101-5b791d532f46",
        "cursor": {
          "ref": "fad4e246-e475-4b63-a1fe-8f72912b44dc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fc2869b3-fc98-4f9b-b01f-a08221bc1f7e"
        },
        "item": {
          "id": "24f9fe26-e4ed-450d-8101-5b791d532f46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4a452f20-1fb1-48a0-bfb8-acb2c212a7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7718b0-ad3b-469f-83df-b5699828745a",
        "cursor": {
          "ref": "7fc0a00b-e5d6-43cd-8f93-9b0971977a1c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f06dc9b4-5dd7-4203-adaf-acb967fe05d3"
        },
        "item": {
          "id": "bd7718b0-ad3b-469f-83df-b5699828745a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b328a628-7738-41a7-9399-61f0bad50b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad387be-1e83-4b68-a81b-efbe90144ead",
        "cursor": {
          "ref": "5a692db2-8426-423e-99b4-5ec2fa966d13",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "95427bd0-d431-49a7-84d3-4fa0a14eac02"
        },
        "item": {
          "id": "2ad387be-1e83-4b68-a81b-efbe90144ead",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4af6b03b-b380-4db3-8c5b-baa44fb9fb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f42ee-a417-48dc-a871-02150da24990",
        "cursor": {
          "ref": "bcf02d8e-d86f-47ea-867c-99223d1668e0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e1cb30ac-465b-4ece-9397-1602e9ee7a00"
        },
        "item": {
          "id": "871f42ee-a417-48dc-a871-02150da24990",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "812a35a4-f86e-4a09-969f-11e2ee0f5919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8891adf3-2f72-4469-9234-af42f22e28e3",
        "cursor": {
          "ref": "716311ac-e272-4e8f-915f-36560f00546f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "87ffa5fe-b30a-49e8-85e6-c495633c0463"
        },
        "item": {
          "id": "8891adf3-2f72-4469-9234-af42f22e28e3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ea7671d8-0739-462e-a90d-072c9b5066e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ddf61a-de1f-4270-bc75-6389b5a10609",
        "cursor": {
          "ref": "a662957c-1136-4c0e-9099-f348293860eb",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6db03061-3327-45c5-ba17-72c748ce0e6f"
        },
        "item": {
          "id": "69ddf61a-de1f-4270-bc75-6389b5a10609",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e3394589-f995-43bd-9af4-80486e3dc1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc8e1e1-2c2b-41d9-b9bf-6b6f431aa58e",
        "cursor": {
          "ref": "2b1e8307-758b-479e-8e93-c5111994d755",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f072abc8-9b01-40de-a040-a1a23b472e4f"
        },
        "item": {
          "id": "7fc8e1e1-2c2b-41d9-b9bf-6b6f431aa58e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1693eb77-09e9-482e-9bea-b18360af36e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656cca3e-ac52-4bbb-9bf9-c47bb73510ce",
        "cursor": {
          "ref": "5bcba4b5-924b-45b5-942e-132c0eecd2a5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5b56c76f-20f8-4649-86f9-8deb6eea4f95"
        },
        "item": {
          "id": "656cca3e-ac52-4bbb-9bf9-c47bb73510ce",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cd1b8be6-c771-49e3-b0cf-8c23374ffcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1a5e53-37df-46d8-8d51-f76e3a186173",
        "cursor": {
          "ref": "47e0c3b5-21ef-4f78-8fce-d5c2b9905314",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7b520312-ed3f-4b5e-bdb5-dd1b524106a9"
        },
        "item": {
          "id": "dd1a5e53-37df-46d8-8d51-f76e3a186173",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "18dce304-cb72-47d9-a96e-5765f3cfae33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae78bb32-5779-4c15-b030-03ef6d9412b1",
        "cursor": {
          "ref": "0beef00c-804e-4ab3-8df7-cf901131c65a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a8464028-b48c-46b6-bb9a-1b138da6690c"
        },
        "item": {
          "id": "ae78bb32-5779-4c15-b030-03ef6d9412b1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3d631678-8d57-49a7-b62e-f16c3c4b54c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe1fb20-dde3-4552-acfe-27fe419ec458",
        "cursor": {
          "ref": "93e8c200-6ad9-457c-ac85-7cc18c1ace04",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b6d21ecc-74ea-47c1-bdd0-62366555cbb9"
        },
        "item": {
          "id": "6fe1fb20-dde3-4552-acfe-27fe419ec458",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "48e1f89e-82cb-4d67-9603-8f75f7385ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8c7480-8234-4b8a-b58a-b1fafb2a9671",
        "cursor": {
          "ref": "eb331d68-5c3c-4e9f-8970-bb965e12e0c9",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8a7ad88b-1b7d-4ec0-a122-3261d4b957cc"
        },
        "item": {
          "id": "ba8c7480-8234-4b8a-b58a-b1fafb2a9671",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a90a9c4f-6598-450c-8d67-38b4a06f3c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8249c108-4a88-49f7-b506-727ddfe72f21",
        "cursor": {
          "ref": "c14e1f99-c3cd-4f5e-9e14-d0740c3f8e22",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "88f14801-2b97-4f72-9a7e-bb500373f554"
        },
        "item": {
          "id": "8249c108-4a88-49f7-b506-727ddfe72f21",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d9b9368f-407e-44c1-8223-3564d9d15f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3957940c-4a63-4535-9fac-4aa37af2704c",
        "cursor": {
          "ref": "590fb899-7782-4c5a-88f3-54b7e0994375",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "66178002-9960-4eca-b188-cc98a9a0379c"
        },
        "item": {
          "id": "3957940c-4a63-4535-9fac-4aa37af2704c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "082d9c78-3121-4411-9aac-f4490e8b9c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d57e56b-f268-448c-91fb-8d811d0a38da",
        "cursor": {
          "ref": "94be5b20-9822-4427-9cf1-cd00d15f9ee3",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f3845e28-4a1c-4939-98f2-ef757b2eddab"
        },
        "item": {
          "id": "1d57e56b-f268-448c-91fb-8d811d0a38da",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "17f2d8a2-7d50-46b8-8f82-032a3fedcd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d01b90-683d-4c9b-8f12-52de9d0108a5",
        "cursor": {
          "ref": "0ab48899-9886-426b-bf5e-3fb3f822ea9d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "479d5391-3f3c-4fc7-b446-08d7611fb181"
        },
        "item": {
          "id": "28d01b90-683d-4c9b-8f12-52de9d0108a5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "486a1f4e-a7bb-4f0a-a6e5-e47f3116bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f8d427-14cc-49b1-ad33-701267341fb2",
        "cursor": {
          "ref": "0d100348-afb8-4a92-b5c0-bba68c0c3a44",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "17ec6d3a-6d60-4100-9ce7-c0cadd76b894"
        },
        "item": {
          "id": "81f8d427-14cc-49b1-ad33-701267341fb2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b1a1c80e-355d-48b9-a86c-eec21cc16e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfae9f16-e789-4429-a58c-f8c5937ef649",
        "cursor": {
          "ref": "5c6ab261-eb58-4ee1-b1f3-8dc67238ed97",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1e2a9e99-ab78-4be6-898c-2dc712491eff"
        },
        "item": {
          "id": "dfae9f16-e789-4429-a58c-f8c5937ef649",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9df47308-a6b0-46b4-a5be-579053fc53bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f2cf50-ed3e-4811-ba71-9e975490ef11",
        "cursor": {
          "ref": "ef166b1d-b238-4f0f-a0ca-d2a7bcf578b7",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "30a6cee1-5fb4-40de-bd0f-bd4394f4aa01"
        },
        "item": {
          "id": "50f2cf50-ed3e-4811-ba71-9e975490ef11",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cf3314e0-cee2-4566-8ce6-dfddf2842207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6ad0ce-915e-45af-a4fd-bbfa2c4e32e1",
        "cursor": {
          "ref": "12f7cf42-349b-47cc-b71d-b8a5eead3e8b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "148d7799-4660-4c6b-9c08-1dce32a7b34b"
        },
        "item": {
          "id": "0b6ad0ce-915e-45af-a4fd-bbfa2c4e32e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9a46aab8-b7bb-4452-b305-336c4bbaa1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f2ec37-f5c8-47b3-92d1-38f487c5039a",
        "cursor": {
          "ref": "1c0195e6-2895-4798-93b4-f4b5b63d40d7",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e54f9f72-85be-49a5-9b68-458843bd44ec"
        },
        "item": {
          "id": "51f2ec37-f5c8-47b3-92d1-38f487c5039a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2fa77966-90b8-4b62-9d16-6e9719cf6a8c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e837e25-5070-442f-8766-40555fd6a1d7",
        "cursor": {
          "ref": "525a5391-b5a4-4aff-b57d-95082651019b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c9b95a73-3ee9-484e-ac59-6a646444ff1f"
        },
        "item": {
          "id": "4e837e25-5070-442f-8766-40555fd6a1d7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "04ac27f8-d4d3-434a-8cdc-6807f8ab2759",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "805406fb-983c-4108-99e1-0f675aa577fe",
        "cursor": {
          "ref": "377227b2-455d-48f5-8db2-3c87c30f2968",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "603e8672-3bba-41f5-9e82-8f9284c4cf3c"
        },
        "item": {
          "id": "805406fb-983c-4108-99e1-0f675aa577fe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "924093f6-7427-4fbe-85da-17825ec177d6",
          "status": "OK",
          "code": 200,
          "responseTime": 1675,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c94038-8aa8-4db6-9cdb-9a045d914b8b",
        "cursor": {
          "ref": "1698b4e1-ca8b-4d5e-8630-a4ab6e582d49",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "04ffbb41-7459-46ab-b17d-a4351d517d3b"
        },
        "item": {
          "id": "a3c94038-8aa8-4db6-9cdb-9a045d914b8b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "98065f70-8c67-47c8-827f-9b4309361d57",
          "status": "OK",
          "code": 200,
          "responseTime": 1340,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b392c5-7c69-428a-bb61-d36418dd6966",
        "cursor": {
          "ref": "d018c14a-1265-4c88-901c-13c04e9fbdf8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "decaa143-954a-4a4a-9c72-7103a5953aec"
        },
        "item": {
          "id": "c3b392c5-7c69-428a-bb61-d36418dd6966",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "87ed07b5-27d8-4222-95c8-1a54ad5f5633",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b392c5-7c69-428a-bb61-d36418dd6966",
        "cursor": {
          "ref": "d018c14a-1265-4c88-901c-13c04e9fbdf8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "decaa143-954a-4a4a-9c72-7103a5953aec"
        },
        "item": {
          "id": "c3b392c5-7c69-428a-bb61-d36418dd6966",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "87ed07b5-27d8-4222-95c8-1a54ad5f5633",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e580c5c-6e7a-4027-b1e4-6cfcb255101f",
        "cursor": {
          "ref": "3082f826-e93f-477a-88a3-f7b25cdcf808",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "563870cc-9e0f-4c39-8c13-c089a4be9a9e"
        },
        "item": {
          "id": "0e580c5c-6e7a-4027-b1e4-6cfcb255101f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5a4ccdaf-607c-492f-b627-b6e6c015822c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc3e8f0-d097-45e9-8495-08d7b01ae443",
        "cursor": {
          "ref": "1777b746-cb3e-469d-ba36-76557d73aab8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2a15563f-ea71-426c-b802-3f61a4189304"
        },
        "item": {
          "id": "9bc3e8f0-d097-45e9-8495-08d7b01ae443",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5430216c-1931-4791-a41a-d9332ea463ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}