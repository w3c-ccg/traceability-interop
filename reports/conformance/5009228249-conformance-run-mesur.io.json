{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "07d7e23a-6381-4187-ab5b-58025550b73d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2210099b-b2a8-4119-ae93-8af886f00dbb",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae05b5db-2604-43fa-9647-476681e3858b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ff3e1397-d253-4d30-b655-2d4be76146d9"
                }
              }
            ]
          },
          {
            "id": "24e659bb-ed39-4ffc-8cba-c35dcbb52e21",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e7fc93e-d40b-400e-b35c-d1a107a1981f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "307a4dd6-970c-4219-b846-c1ca462ab791"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3497d3c7-15d7-4985-bd71-6f96da888323",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3ac2e219-6385-4629-9790-85e6eed16f5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12e05344-5205-47f4-b87e-8dba5812b58f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bcfd323-74bb-4290-9154-2afa39f00e56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00d06ac8-b574-42e2-a78f-65fdeb030668"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8325f366-ca39-4296-a681-8a831ab168e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6db7d5e6-b22c-4b02-a5c6-40d1e325cdad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca56db90-7494-49a7-87da-6911a265d8e8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48c4a6d1-8e34-4d0c-9ef4-f86d1ab210aa"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "348810a8-d607-4762-b69f-2a2ff88ec872",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0279febd-7daf-4cd3-a356-3a1d14549ba1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11cbbe0d-85e4-4837-bf81-2375d7b83f8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a56c889-6cd5-4bde-93bf-b9a3d7d275c7"
            }
          }
        ]
      },
      {
        "id": "d988ae21-e622-43f5-b630-a4ad80288180",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f4bfe326-370a-4978-ab74-92a72b6b687f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad4ae9c1-9e7c-4613-b129-02380753679c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3184d0f2-0603-4ce5-9e2f-a6e655c21983",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf726b9-a0da-4bbe-84da-ba249d30d538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c331243-8415-4cc8-b82c-00f9884d39d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db06e503-dfbc-4d4d-a05a-6d417384b807",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614fe786-f86a-4d07-908c-261cf3b678d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3816a1b1-b0de-4f43-afc8-3d2aceb7c76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0eb7b8-5f3c-44fc-90e2-e8b13dc1dd4c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04de308-e606-429b-856f-2a0cffe3c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "212b1157-d869-4492-b889-b8e4ddaad7d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1ea1c79-4854-44da-b3e7-f0cc0f791603",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1f00916-8132-4f79-b789-5c0bb2aa313c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5853f9d7-77a3-4ee1-9f1c-13b328ec0c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43dc2f2d-07ad-4412-987e-0362a4861098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05d8bd4-b98f-4948-8f00-ed3b6c94a2f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47543af7-c4e3-4631-848a-8f19565e0ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40027446-468e-41f5-87c0-890df70f7a38",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50042ba-aaeb-4b92-b18a-f60ec0f1d47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b832deda-e442-4259-a4b6-1a17127c4943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ccc09b-627e-4231-a8e0-557d91f00504",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9008abe2-4aa3-423a-a313-47a011cbf85d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c1d7b1dd-875c-47b1-b54f-9248a66e3893",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffba58af-1099-46b4-9a04-58aae15b8f42",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dec49300-4e80-46b6-9438-83c5816c9679",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b77b379-3d00-4d56-ba84-df7e64527d86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e35486e-8326-461b-bb7f-914f9f464d31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1b740c5c-95d3-438a-a451-42d2a0e1750c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6a490a8-8f4d-4d21-b5f6-8ca1765181a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78f42f1c-0422-481e-8508-6cde5e248484"
            }
          }
        ]
      },
      {
        "id": "69c77027-80eb-4cde-9f35-5adacc1c5b66",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c440b95a-1c37-4068-accd-f7722c27aa4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bb2afe9-9fe8-4e90-8057-07c5ee4eb7e4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "44d85759-6606-4ad2-af37-4b59f655fd9a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964b5936-821b-4485-af82-b7d434e1fd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2ac098-8304-4013-bfd0-ccf83bf36767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da0aa49-09e6-41d9-a41f-ec995210a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50de2f3e-8711-4c16-84d2-3d7c12e91ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ace6bd-7b9f-42f6-97e1-58892387c10d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c4b36a-ac88-4dd9-840f-f6ca8ac6a515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c83d3c9-5655-43bf-a39f-1e646333d02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad47e4a-7525-4ec0-bf14-43479d4b6773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7767862-ad92-4f39-8511-558d0561b57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964a8074-695c-4d17-9e7d-149c5310c1d9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc9c60c-ecd8-49a5-8b48-f2b1e7a71944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eb9640-3afa-4f7b-9d30-52c60de88e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50f4ac4-ea96-486f-93f9-0a0ca5651d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3c3ec18-e2f3-4967-a6f5-c5bbfaf8139b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95be4d18-bf7f-4071-b4ef-b140eac6f212",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04911e7-f43a-48ec-a657-e432dd4440fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0f883c-2087-4714-99a0-f5b919f1f815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605e0b5e-0c6c-4b22-bc0d-19232b65073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9740223a-fcb2-4b57-b3b6-d9b15052992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45cb65-d7d3-4fb9-b7f2-d7fa7f1871c1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e796ee4-9a0f-4c8c-a2c1-f43f37dd509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5efc6e89-b889-401a-a91a-ab168aaf9342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6412f143-22b3-40f3-b775-a822349c3b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "874ab57c-4bca-4f54-bdfe-e6c013c574df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eafd47-6dc0-4d61-8561-4002ed412d7f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855fcbc4-1238-49ac-aa31-36ce24064448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abf0892-7e2e-41af-b0e4-5a4081dc674c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d80a272-06eb-49c9-b22b-38b3a75f6461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed128f5b-e353-48cc-874a-6a9e8fd628a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1569ee56-095d-439c-8e52-7bb51bec1e87",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aed0ae-35cf-4f7a-b7fc-eda165a50fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc32989-8fe2-49cd-8f78-08f1f062e398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c00005-ae3a-422b-9085-cdc12256f864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e45ed63-7576-4887-803f-05b83de54e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88de29e-bd78-4a3e-8a93-1c9c979c7340",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07513546-e688-49c3-8ec4-3e6addac67e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67534e4a-70e4-4cd1-9ba9-623c422b1983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ff33e7-f4ae-4ca0-ac67-ccea2f968624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "246dc9ee-181d-44f2-b0f1-928d3ef8bd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24764fe9-9a18-4a4c-987d-bf6a72d1a34f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb56b6c-b798-405e-90ba-f8628c59fb6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596b3ca4-d580-425c-b5f9-87c92231bb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93bc0a7-c74c-4144-b502-1f6d027dd6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c19a71-1d82-43d1-95d3-1727ed61a763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c477b65-7828-4e5c-9ba1-8f0aa82475d9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897b9118-f09b-4620-a2e3-28dd680bd21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9381ea-c8bb-4e90-bbfe-9358c74cfa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ef9929-57ca-4fae-afa0-297da6ab4bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f912658-796e-4172-8707-50a384bfb400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e62e6a-233a-4267-a64b-d3fe957ea05e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc4fe1d-08d6-4635-834a-2265c99f09af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6daa2553-4acc-4d74-a3d9-de33bdb61481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dcfa03-0f7c-43ed-b04c-f21126d68ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "094d01ba-b86e-4c11-97b0-fee795ec6d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ae38b5-be1c-482e-aa33-9112e1bc6672",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12bdbc3-075c-4e37-998b-deef73de58d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0ac443-30c1-401e-8846-08e24571303e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffabbbe-2dcb-40fd-b7a9-005f4acc6062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aecbe13-7fa9-46b9-ad5f-cef508fff480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd5acc-7aee-4246-bec6-1d7668afe92a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d84e1e6-36d1-489b-94bb-6006059fcf93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dea9ff4-118e-4fcb-9ab6-571ad3dae944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310127bd-40d1-40d8-a54a-501d7dd641fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f99087a-e1bf-489a-8105-81e995fba5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0634153-a90f-4c63-b862-c5c03c1d5d65",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbb9aa1-f180-4c1f-976d-ddf77dc81190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc1ff17-afa4-4635-b3df-327d4bc21289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93a93b-fa24-4c13-a38b-b6bda3f76860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1e0509c-88b8-4840-9511-1281f460f6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c838c78-e0b0-4e78-b7c7-7ae8f0568ce8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d6d592-b91c-49ba-95e4-2be62656f030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa27f7e-897a-40da-ad5c-8651a40a8775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad96cca-d070-485f-ab74-16ca06cd80ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e04cfd33-f36e-43d6-af9d-719e2ac1ee01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c671f64-1cdd-4876-b4dc-b70a7a81db16",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d3054e-4a69-4a81-b30f-4ccdb2b91684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db69335f-39d6-4b71-ae04-ae22a376a737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f9b22d-abbf-4529-9ce5-671f4e337326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd8fdf48-79f2-4993-8463-fcb07963a575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5cb418-a117-495b-a2b7-ec91e47726f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6a64f1-69c3-4e82-a3a7-e55fbcab72fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb36949-e616-4ec4-8a0a-20841712ffea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d7afb0-e2b6-462e-a299-fd863e39aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899c4983-0c0b-48ec-87bd-3d2049021634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b92b0c-0dea-4ab8-afb6-a4fcfb04c885",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebb40ff-56d5-4851-8510-e8607b5b3bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb870acf-c5a5-4e97-9eaf-316f9ab8b7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c496f5fe-e7ac-4496-a534-805d2191fe16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3b45dd-73c3-4363-8828-a8a65c3f0b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777517d2-2117-404e-a7a2-1a1e5c6983bf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec133b4c-1662-41d2-82ec-34a7d8122389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595a634a-6ba5-40d6-9cdf-34ea94aa345f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d1f31e-3c66-4a42-81ed-9bb8c3cd1bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "209c313f-f095-43f1-965c-9ddc4ad6a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611eed40-af24-4607-a582-9882f825d8b9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80639e7f-5879-4133-975c-cd1fad0abe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359a7b8e-b307-4ee6-a9fc-c28139cf844c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80bbee96-5f49-4b4e-91e1-c5be13dd4773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a6c1d1-7251-410c-a957-c0dea2de57f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5145a20-17db-40a6-9ad9-914bbe3b410e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85243a0f-0b9e-45cd-b39c-bf47afbf7f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7604deb3-9cf4-4177-a5bd-8787f13277c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b4d080-491e-4bd2-b2cb-4a87f0f52d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc21eea9-856b-43f7-9391-58e7ea218f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f662d053-2d4a-47a7-a8a1-c50db9e2b0de",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346752e8-7989-44e8-89a8-466c1ba714ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c922705f-ac9e-4aeb-bd36-2bec1041b391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3886b068-4692-4df1-99e5-434f8b59877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e7f95f-bd8e-4b7a-baf1-03b72afcc1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6235900f-3c69-4f67-a73f-6025584052f9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3951cab3-97a3-4709-8404-3becb38221ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37550d80-a977-46d6-9295-740a34391683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34deda31-5df5-4055-9e13-973b884e0b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b294a00-7c48-425d-acba-d57cf1e3d197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8e335d-31ce-4b2f-b505-4860ace46f56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadece9a-0f9b-498f-ba18-279b4d088ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f81f24-e2c8-4c6b-8f7b-37c34e63d46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c54e28b-d8e9-4fd6-a7e2-152815ffff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc93741-1a39-46d4-b50e-8e37cbb10390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d67746-1d5c-4be7-8527-e6b00644c5a3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaffd3e8-ccec-4ae1-a313-85535290d6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6c8ceb-3cdd-4376-bdea-380c163aaf36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2301b84-0d96-4d5b-95fb-88fe3c459a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dab4dc-3984-4ff0-97e7-29f3b5e10109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcdf9aa7-7e92-45b5-96ab-3b7b56aac784",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0faae6-810e-42d4-a71f-3063fb7a8adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29a9f18-1fde-4a9b-9a25-f0da49b6bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab4d37d-0e55-47d3-a8c5-923e6fa946d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d67d02-24fb-4e75-bd7b-7b4d99afdc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f7ef04-0ac3-4fa3-9bc3-e085e638429b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5432da-d99a-4a66-aa8e-80b977c37ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eefeb88-1bfe-4a80-aa83-a23377996619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ee00c5-c379-4379-b867-a788a031383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2855d7-380c-43f4-97b4-941b6f9db1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c934fb-4265-43d1-8a2f-64afa49ee612",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc5747b-67e8-4e23-b1a6-fcadb517b15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adf4000-7939-467c-a5bb-a13dd92ed2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa8b68-a40a-4a63-967c-eadd952210c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff937d3-9196-4497-9402-23ac2b482f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3038d10d-c9b9-4c41-a3eb-bd1439134870",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb94978-91ca-4402-8182-de7f64a098cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbb9f7d-84ba-4b26-83f2-4500564eef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc384e74-9987-4c59-a866-77406c3d5118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39ee72e-e3fb-4b99-abf9-7e689458f507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc58ddf-9592-45f9-a9f8-14735f9bc305",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7b872a-b152-4f0b-ac35-158abe417897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1456a09e-429c-4b7f-83dd-9c7cadb2db63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b80f3ba-2e33-40e8-a5f6-c5202265ab86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c73c108-c8dc-44c0-a69d-5c387bffaf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac24d164-25a1-49ca-a9fa-703362067a88",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be3052a-517e-4f1b-9f31-7eb6ebd25778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a471a3-69c4-45f9-b7fb-4d7838fe7cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7837b827-f24e-4527-bc99-619e53dbd0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab14409f-5a66-42b8-9bc2-480330d7eb1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcf01d8-371c-4b2a-8ee2-8d5d1f746933",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f56d3b6-9a93-49bb-ace6-27d63c936f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c533f482-46e1-4666-897e-602c2151465c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5b7468-db60-4613-b6c6-709acce052ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b901ca11-57ad-4936-bd6f-2d1109c9895c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d36fbfc-a74d-4463-bbac-2896f20a38af",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3b271e-5d63-4747-9e88-efcce9ca2b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc597f85-5d63-432f-9674-0e85cf968232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a43fbfa-5389-4bfa-9fbe-72cb386712f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f2d2af-90ec-4f4b-aa3b-2e0fe35d3509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9722aff0-cbda-44c4-a11d-63d7f5ca40a7",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacaa4fd-534c-488b-9b51-8af7413c7e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138dc14b-c035-450e-9387-1fda05585687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9a421a-a782-46d1-bcd3-8beb765705d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c07e7fe-bae0-4156-b476-d99b5b3774f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e949f-d666-4cbc-8586-83ee3309f97a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59b0b6a-e4a7-4cb0-88b6-aba898111769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29e5cee-8277-4888-9445-fb2314264d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0558aac8-8362-42cd-8f7d-2e538242315d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3895e651-b46e-4b8f-86e2-7c3ad2e13172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7648900-f48a-44ff-8938-65c456b84de5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798fadec-4f7f-4a67-a215-4ea229a1972d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b8ab56f-22f9-4f87-9337-2a9c84d46eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fdc1b9-a358-4fea-9503-64425bad526b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfc7851-4a43-4f5a-8d1c-f21fb8990780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb84583b-f450-4bc5-832c-943ee1c5a95e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392e24da-a416-4892-a5cc-4c448706c5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dce499-f6db-4e83-a0b6-c1296ad76767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf3b43f-114b-42a6-947d-6f1792e3e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e806ebf-6705-4534-bd1d-07ea2cbebd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f721f9-8daa-4210-bdaa-eb4566a3d386",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444e4822-368e-465e-8fe7-a22d87b3c806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3ea5ee-1af7-4c6c-ba39-ce3be2d6aa55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe62c98-741a-40c4-bb6b-92b1ae8f2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd44c27-c593-4e35-a60a-301ade4fd193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1031518d-6e4d-4cd7-a502-04c297153259",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6f4ae4-7a2f-4668-8015-f2f8bd8e9d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d080154-2d09-4c76-9b0f-40533158e81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aaeff52-acf1-46b6-ac13-426c12d08ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9a0fb6-bc5d-44e1-b138-2bc178f3e34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ee19bb-17db-4eab-9931-040a645ebe18",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778ead0b-185c-42e7-a91d-0c68a335ff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083356a0-a0a1-4c71-abce-97542f018fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d75eb3-3177-412d-b3f1-417328c1bb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "129ff14c-5c43-4a47-8c2b-f4ec045c3bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89676ef0-824c-4c61-b948-860f5a0cbe25",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f8d44f-70a3-4a07-a0a8-58dcbd742368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2ba650-f2dd-409d-b2e7-a3fc3110a760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08380cf2-cca7-49c6-bc3d-b36f3b5945d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d46b9e7b-f3bf-4f01-a427-293b475e3486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f90706c-68fc-48a6-8047-829c26ab64e4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caa914d-1e20-4abf-a721-060e3a52565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab412979-dbfc-4807-8a49-b6b9d81fbef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c495045-0ca6-47ae-9c91-3143ddacffb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b28474b8-62de-4c6e-82cf-e9f4c3868065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "319b862b-402f-4a3d-9d3e-2d7293d53a7f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560efdf8-c11d-458c-a55d-c82fa5530532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2787941c-52a5-4be6-aef1-dc4da23e6d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2470b0e3-a9b4-48aa-b475-a34c0dc4fb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac883d1-c268-4cb8-afed-e0b632460507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044a87b1-79e2-438a-a028-a071aa5d6c22",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62108d2-20ff-4d66-8a50-96ba6a6a5a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6e6c8a-0b42-427e-88d5-971d2570dc01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e38c612-d0e9-4dc1-9697-d4f243fd5207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1bfb85-159a-474e-ba4a-050f44dea200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdd6e60-e115-4dda-b6bb-5175504dc669",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975cc614-5041-460f-be20-9e2f2d2f8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf404f3-ec94-468e-bcaf-b49dca9d8da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596b5cc1-c9d0-42c6-9960-604e22ad865d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20a6734-6ad8-4b76-9bb0-a4dd095e4719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edf148f-f77d-450d-8de3-682aa471324f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f70840-68a9-49c3-9d3e-787609413d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46967c3a-9564-4019-bc53-55e3924da3e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ee9c38-0184-4f78-922d-b76bcdb1f9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f992c74-d429-4286-b0b1-e0eb1f2971c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7a7d83-7be2-477c-9bd7-8cc9f9e8a053",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0e7c98-c2c4-4a74-9714-514f8a717e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d2796c-f8ed-45bb-bc82-2d6351928eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06a0e04-5ec6-4a6e-8426-d1dcf8af3da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6194a62-c1c2-42cf-958e-391daa900a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b73ce4-ca44-46e1-94ad-41ee6685524b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584a712d-4f5f-42d7-86e4-0511af21c0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2e4a4c-a6a7-44e4-b09e-7726a997a0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466fbc58-09c6-4341-8140-1eaa3c56d141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d12976b-9ea2-4a46-a67c-2e29d23cc411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b766a9c7-42d1-4a3f-a6a5-0fb740f43bcd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690b1164-11b9-4fb4-b6cd-faf475679f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfdfd2d6-9163-4fdd-ae7b-9a5c4aa74370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9877d59e-964d-4222-a0ea-f822abf5c91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c160d628-511b-4a4f-9053-5fe6678c2096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48a8576-67b3-465c-9bd8-f23d1adbda1b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd7cb2a-2b0a-4f03-95d2-3ba83ce2fa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c9f3a-15d6-44d2-8ddb-7511e1ffe3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65656afb-c658-4ebd-9ef2-c99ea019ceef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2d6cb2-6256-4b7a-96d5-e1f1adb59c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d5d7c6-beee-4cec-be3d-930db0e44289",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b126ea-8262-4242-b164-d3a5fda96753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281c270a-742a-4569-a664-367ac7fed622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4245cc1-dabe-4a91-a1e7-6626e872cec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "549bbd91-3a45-4a3a-987f-9bf64ad35879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33f86f2-b864-4e0c-8e1a-5b0cd3414e3b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f18e42-6bff-4f5e-84ec-d88d308587b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d4f41d-bc33-415f-841d-3141a0414dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de321fdd-dc07-481e-bd49-9e0d9d42d418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19199130-336a-4289-994e-9f484b525e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae3d21f-99d9-4732-9dd8-8bde26b02976",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03782bcf-a8b1-4951-909d-244ac18fbeab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea50a570-b92f-4eb5-8a8b-a41ce27b4173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdf208f-82c2-4a5f-8a5c-db166ef3134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "650b2cd5-9b88-4cdd-a845-eac486137ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6374d353-472a-45d5-9fe2-4b8f1bda1d5c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04520c0-f9e6-4d76-81fe-2b4ade8cda71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8a454c-0f08-45ed-af5f-7c7e2cac28e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8845b470-9f0e-4b0b-9fc7-409e70416b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed72d75f-b813-42d1-b6bd-cd92d362efdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82548761-dc1a-429b-988b-15bb085200f2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a063f6-6bc6-4a37-aac4-3a8fa7d0baa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8bb18c-17e4-48f6-82b3-a90833678509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3219cd15-f4a7-462a-b253-db52b473a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29ae1e73-8508-4f74-9e24-e0685245504b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888102a6-b52f-4b31-9806-8b0285b27b69",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c0cb9d-8692-41f2-9d82-60189c1e28b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fde353-fe38-48fa-8d26-e35b72ff095f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02dbb21-4bd8-4fcb-a1ae-ad44277bc2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5c8f29-a683-4b49-a990-45235cd3c16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd86f055-2a12-492c-b66a-dacc328b7684",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933afecc-da9e-4320-9cc6-41e4b97fe80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5424f2d2-0ebb-4149-926e-3ae81974e433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5fd944-6ea6-4b15-a62b-e25dfe7a3afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9194011c-f20e-4605-9ead-179065912372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e0c197-53f1-4d54-9aca-207886b6aef4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d970df2-20f4-4be7-9179-0785323f46eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67980bf-bfda-49a2-8a8b-f9f0dae83a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e172bd-5cd1-438e-95eb-518097eb4f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1881f6dc-decd-4fe8-8977-8f1dbde601a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73d85c4-1f25-4d33-8cb8-4aff1817d8fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1026307-4d02-44ab-9555-0825b60ec61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b268fe-def5-4dee-b3c2-d2865ebd5deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e2624d-0ffc-466a-b8b2-dcb8421b3d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "609bfe9d-f4f2-4d93-bc38-853b33dcc846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e3d19b-bd84-4014-a961-96d957be6ea3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d2a331-b5e6-4599-87b0-9a8eeefe7913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666491bc-f1bf-45b4-ae50-78bf97a44bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98958a1a-abb7-4ee2-8720-f0ab738776a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7645c6f5-a6e8-4a22-b3cf-fcf596bbcdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f1ed0e-3527-4a52-ae4e-41585cf357af",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5873704b-38ae-436b-88ae-5a6d792e8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0943a5b-bd01-4eee-a7da-ce7fbe52affe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648d146a-be32-4132-bebf-6e0d6fbed390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7b3243-0cfb-43ec-884a-391399d484de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c6944e-46d4-4c09-b3fe-3b46c2feb38b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bafb13-abcb-46eb-b138-01e9b49c8390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dae50d-9838-4669-9f3f-25fb23856965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f5096-4ad5-4d7a-8542-9728bc9e0588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "900db89f-e7df-4160-94a5-f71cd873c0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9d9a0a-d89b-4fa6-90a2-23cd15eb1cc9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa279b71-6338-4f83-9e74-8dbfbec7ec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03d210d-6341-42de-9d63-34278a21a536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7228d25-a4b9-41e7-83c6-e932f8ca0448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "276e47eb-d01f-4a34-b5b6-a4e72867ed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3fb527-418a-4730-8d25-2a532fa9b42b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1841c3b-b534-4981-ba0d-2c1ebe42cc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d571e9b3-ecb6-4c1d-bb88-aa6b3592b9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c254f0-7830-4677-b58d-54a740a0b3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e3667e-eb23-4746-b293-36d4746abe67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a4a394-b14d-4802-874e-2d0793bf2662",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0071fe04-4dc1-41a0-bc71-63fa5e4ecdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0e7a85-c70f-493c-9343-47f4af2ef0d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a55ce89-8772-4682-ac88-9144245ddf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b249bb62-206e-4381-9072-29b28679e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b196e9-58e1-47ce-bd9c-af01d7dcddf5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa230cf-762d-4873-b449-404f0cd1de6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a2e9f0-ccb9-4e6f-a410-ca63cee56d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02bfcdc-01d7-4403-9457-267f3bf92349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1770a9-2559-40d1-b77c-3a5a2d6f0c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237fe608-5927-4e42-8b1b-1057d49f02bd",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ce2122-23dc-4873-86b1-a305adcd47b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802c573b-02e6-454e-a532-2e37244dbba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904b1bd0-0858-467e-9c0b-6d72817d9eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d6f149-2655-4e57-9231-ebd33ce425a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10f4938-7ed9-49a1-b467-825f548e3438",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2819435-2a16-4e3e-bf21-a438e375eae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1fc618-524d-4ab0-9954-3d53a465743f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d4c709-6723-483b-ab47-83c965adc71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51dc7afe-6511-4940-bf7b-493004552e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce7d154-c154-4df0-80a4-c820c960c9bc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0e0356-d38b-4ac2-bc7e-19baa7e7b2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168642fc-3fc9-410c-9541-d749ef98fc7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d1b0e-3293-404f-b1e2-31d23da24f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c040e99-b25a-4e98-a697-98d38a88964e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7778be4-4d11-4dbd-99c1-7e0b1619b1b8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5a50bc-62f1-4603-b2e3-05cdfcf3be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7d66c5a-64b3-4b0d-b419-151655a1ea0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d0a76c-40c5-476c-be93-0a4c1745b548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4473ba74-0a0a-4e20-a1b1-60aa2dac4d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32702fef-b2e6-4813-90b4-efe408302ea8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0dc2f0-3fa3-4f0f-889c-a4e59f0da9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c583323-7949-4b7b-8dfc-cb840a88b9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aab550d-511d-4500-bad0-2530cf3f12f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc848674-79d5-4b57-a46b-21b69fbd8df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efff109a-458b-42ef-8549-3c787560f8d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942bd37d-5fd7-45e7-824d-959c601be56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0cc4800-47ef-4eb7-a245-1a164c164aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2844ae0-96d1-4a5b-9152-3f692b2bf00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbe1ddb-ac8f-45b4-b61a-23f5f2ec72f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304dcd17-5813-4fce-8e9f-5acb0d424ae7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3fc65c-e1c2-4975-ba80-d59b0d2a4543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfc84e8-80fb-4526-9f5f-7acf1bc4674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc07599-a84a-4178-bf1b-e069a5c9ec38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d30b10e9-e1fa-437e-9766-ef6bb90ea1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7b842f-a2b8-4c20-8b8a-d713e30ab71c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101eab09-d461-40b2-9bb8-cf1fe5b03c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc250042-2788-40f1-8e4f-b09965a1cee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e5675e-fdbf-4340-b115-24652a6fe3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05cfa094-f9e4-4c68-a6e8-a7542e4f5c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4e07e1-90fe-4c23-9286-e4c0cb7ed654",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1afa80-6889-4383-add7-da6dcd23efdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be1e3a10-1f99-4eae-b829-e9d1423eb006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5399a31-39c8-4c52-994a-77abf899c729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5dda489-5d43-4499-b155-a4776ccaf27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3642b11e-cc81-48bb-8d00-d1a8f146df48",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91dc9e9-8035-4084-8c70-2933620b22a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38afa8b4-679f-4c62-943e-07a831f9b98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55db9bea-e9b2-4f03-bc8b-8050e9731234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d293226f-0634-4d58-8cc2-755e415a0170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b76c63-2a8c-4266-a8c1-1b03ba4981e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc762930-ef1d-4689-b53a-af35d493ab59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60cc687-c1fd-4b9a-b2f9-c4df73dcd1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae838600-97cf-4ced-b451-a0408b9e9f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b474711-003a-4eb8-97ad-b20e0d80842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a76211-2939-40ab-bee2-3a1c0e2b7f10",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e63b05-d5ea-4787-8ee3-fec310bde8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5408099b-d5cc-4993-91dd-eb53b1f99b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e75d2c-dd74-4ccb-8f66-0f23b56ac632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1868e2ce-b1e5-4f4a-b75c-dbdde84814bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db60136-a8cb-40af-84a7-4d531e4cb73a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8861810-e36a-4142-afc3-40fcce3493a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a30664-0736-43e8-9caf-3d1784bc5537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b34464-2169-454f-bef0-cb8e667f4473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf23c35-8de4-4947-a826-edbb544df5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf9c4ea-e8e7-410a-82c4-ce494988e9c4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89f50dd-79cd-4958-aa05-ef0398d8ea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7856bc3e-717b-48b8-8e97-1a93055c989b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a220846-71ef-4355-b8ef-45f6878f1216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c87ace36-8d16-4332-af50-6edd1e8b8e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb0912-d15a-43e3-b934-385f491fb315",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3d115c-33a2-4f04-9543-8f3626f939c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e3ace4-1264-4934-9c67-120d42bfc8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707c5eab-1a5c-4f94-86c0-7bc41559504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c28f1d8-70db-4cd9-96f9-f8bb56b159cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6271a8-bb32-4e6b-a4a7-85e33b114ee3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c4c5e3-67a9-46ab-a592-ff3d355f6799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38646b8-15c6-460f-976f-9e9d9b593575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e320d61d-b2a8-4e8a-b184-6387492ea8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c63804f-4f2c-4bc7-a210-137d495ddf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddc3a29-29c2-41a3-b6e2-bdd727ce9b64",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9809e1-a902-4703-9a4a-f79606cdf362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcce244-4b68-45a3-9c30-57133e072a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770745b5-b3d2-47ec-8493-c36efa9d1f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eedbf5e-3b80-4beb-b5e7-a33ce1b96bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0582699a-1d6c-4c53-bf49-e12cd82fc027",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c88fc2-4928-4739-9c94-b71b37780212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e52d87-2cd1-4d54-ad81-667e0500cec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173443b1-632d-4ca4-ab1b-fd3de85d31e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2565b63f-a0bd-4d8c-b613-bbef8ceb7990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8ed4eb-0247-4afa-9ae1-0fc154949527",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852340d7-d57f-427e-884e-3398da9a8fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7511cb0-bd59-41c9-8eeb-6e9d733cb135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b860c53f-cc6a-4652-9574-b91d091ac6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33bb81bf-71d7-47ad-af0b-2c14e5ed1fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8b0620-8062-433c-af91-a0f846f716ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72862829-950d-4644-8902-83c432fd5e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55483317-fdfa-4d1d-8390-8f0189933600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be403f-bb98-47e7-a22c-572d91e2c813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7294446e-edb6-4989-bcbc-6fb5da987d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28911a6b-0e7a-4472-9d0d-ffbf683f8619",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9982bfd-4b11-42b6-9c23-42cbedc5643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256d98b7-464f-4739-95e2-c29884dfb940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418e5965-1cde-46a7-b48b-58c06ba510f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d185212-032f-4482-9dfb-7e107d098eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae35ea66-52bd-4874-83f0-92fb5c5c1dc5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe8033d-b761-46d7-861d-34e281595836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1e7802-4153-46ef-a0c5-1dd94316abc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d3152-650a-4c00-88b8-c49a0ca784e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd0b3f6-f8d8-4879-9541-bc1781039590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14be47a4-57b1-4595-a643-7cabb6164b9a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180f1543-6ce2-4f10-8389-1399ee386ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6d4b81-2496-49c5-b2f1-4987e54f7949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c656b15-1331-41c9-8eb6-320be44e9f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcc3b5a-103a-406b-b2a7-a882f67ea925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf68b5f-fe61-4eaf-b9c1-02d23cc136ab",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ff8ead-fbc3-44b1-8298-63819051a80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163ce117-8a1c-49ce-96c0-6e4fd81f50e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01728dc5-55b7-4442-84c7-e5945785ac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "96754b65-2b1d-4d37-bdaa-e155cce9de60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a0a1d4-c3a3-4095-866f-10f7d004c8ec",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a7c640-bbe9-4b9f-b34e-7c3187e59b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd6fdab-9783-4244-b771-37c7e5062fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1170f6-51c2-4a73-b2ab-66fa99dae61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f1ec1f-c2e5-4035-a0fa-9e496c7b4dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0ada2e-4426-49af-b0c0-ad1fd2622b7d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf18853c-8715-44bb-a31f-0a5c48891111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "198dc387-3281-41be-80a8-9a27c1e5b3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bdb1b1-65d1-4844-95da-978bebda26ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ec6205-8d29-4697-a976-949669153e25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1872099c-22b6-4d95-b517-0e3b6e3befc0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62d5ac20-d2a6-4a94-ada2-0d1e79920499",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb74d58c-6bf9-4f3e-b7fe-e2429e8d3f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8518248-d3ab-42c7-a090-d0902bef5087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2432e2d-9e0a-4a25-bb27-60584869353c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df64065b-f5a1-4b7d-917b-75f221e309d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d3d992-5dae-47a7-97b3-ecb925d0a817",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f117d9b-1a30-43c4-918b-b0daaf30e818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3329af62-7413-4d11-8898-73f2b671cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0640592f-0556-4dce-ae81-10ddf36ea7a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dad6321e-bd49-45d5-a1d5-d3f5a6ecaf06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd5ea544-2920-4380-bdec-81423649b3a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d261c3d-d57e-41e2-9733-60e7a185246d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "353d3884-fa8d-4fe0-a77f-0511afd39de9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f74374cd-427a-4ce4-819d-22b0f8e878e7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23ff86e5-88ec-4294-8600-715f1675db1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46cc4de3-b984-40e1-8dfc-b0266a5474c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b182a82-9ff0-409c-8def-20fc0e5b95bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7461ba5c-b56a-4b1c-b2d3-6e18496344c8"
                }
              }
            ]
          },
          {
            "id": "8988ef2f-c765-4b34-831f-abb41c8052d1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1e17ec07-79ed-4738-909c-d2e4eb62e63b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a11926-266f-408a-9e34-3424afed1014",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58a62c40-8922-4f38-b925-2d4cd1872271"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe865c9-044d-4667-abbf-30d554bbcab6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8325fbb0-77d1-453a-b702-a2e960f5e5d0"
                    }
                  }
                ]
              },
              {
                "id": "888ef48b-86f5-410f-ac89-a0c988c318a8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d298a4b7-172f-42b8-8ba6-a5bf8982e7bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "010922d8-6232-43fc-b29f-5f4cfebff5ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b1d7296-f73b-4448-8370-a570242ea8cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7091130-57bd-46fd-b952-e56f8ccf812c"
                    }
                  }
                ]
              },
              {
                "id": "81cff7bf-3987-43b7-93ce-3e9804da8d50",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35227239-e229-48a9-900d-66d8a36b4382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8866ed74-9003-4577-ba63-e0c1a169082b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deba7983-86cf-4577-a937-e18439856dbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f952e698-bdc9-47ea-940a-35c7899bf919"
                    }
                  }
                ]
              },
              {
                "id": "bf648df3-2d6a-4ce0-82ed-e6596a293123",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "446a87d7-f26c-4a6b-8d44-2434a95caa14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab3089d0-eb26-4c08-b2e8-5983b4d75696"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3da31a-87fd-4558-ad4e-76d3e0d4931e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dd3cac6c-25f3-4e6a-9816-6bf852b84e51"
                    }
                  }
                ]
              },
              {
                "id": "35f13b7b-a4ef-4a37-9fee-d4ae1115242e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08a7e55f-d6f5-4fa0-8cfe-f1c19f8fae62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1e5be0a-558e-415e-9914-f11db67c7867"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "020130bf-69b8-4889-9824-bb930ea0c1ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4af7cd0c-721e-47dc-a41f-f18838e864e7"
                    }
                  }
                ]
              },
              {
                "id": "e3135e06-2d91-41c1-9e98-329d03d9d09c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca6e2f53-4e47-443f-8ce6-c8ba30ef983a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfb86ea4-f3c6-4d1a-bb36-cb673398910a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df1d8d28-91f5-4b04-a4ca-a8e45d689ea9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c81e8163-d846-4dc2-bf33-b14235121525"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d136ff44-8a30-4e67-9309-496e6b1e49e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66d2ddac-0b97-4296-bae5-c9225ed3735f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae002921-a8a6-4e08-9bd9-636ae6f36232",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "710d4e60-434b-4c8e-aff4-b17d18a2ecbb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ce6c830-9d37-455a-8c85-61a09ffebfa5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0b012fd9-e004-4d4c-ab6f-dd513da18492"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "496d54ef-8aa5-4271-b84c-7ad64289b3ac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf22a96e-191b-4f1c-90e8-a8b3e718088c"
            }
          }
        ]
      },
      {
        "id": "4ec46b85-d4f0-47e8-ac7b-287f0483d587",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "59f0d562-e65f-441b-8f75-c9c79ff4dc31",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b9a3435-a0c0-47ea-b140-bfca9939fa69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98a78642-2e53-4aff-9204-c285cae726f1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f203bd67-dd85-45fd-9309-7eace6c6cd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480f850a-48a1-4472-ba2b-eb4541850094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386b0f21-98ba-44e4-8433-38796dbb6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "757fe574-aa48-40bd-964e-1daa424e7bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca107fc-304f-4184-a7c7-8fa77a6b790d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c208420-02d5-43ed-8dbc-e4530c3ac3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6622a03b-84ce-4039-bb19-10117aad9d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939d764-edf6-48e5-bad5-f99b98f4f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "183ab251-e113-438c-8930-c04ce8341256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e12b2ef-a5cb-4015-9f31-2a3cb7a5c26d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f3a254-e99f-4f78-91cb-775a2e291225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37675c41-e1fb-4f5e-9997-5167ef67bb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02229bda-eaaf-4832-a786-371136e9f7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f24311d-4d5d-4c15-9d55-e056c19738e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6976c544-ce0a-460f-b897-c7e4b3d443aa",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2646bcf-5f04-4b05-af9d-dd9b4c4b693c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b634882-2621-4610-bc9a-d9dee566dc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75b7330-5354-4831-8526-71a93fc62fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c834f955-877e-42a6-b1dc-4220a2ad53aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd485df-86e6-49f4-b69d-cc876ca14bce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbd6a65-cc2c-4e40-9f4a-52204319fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc475a39-8c94-44d1-9915-a5515885eee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacd7097-b451-4c1d-8eea-db3526d5bada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00866809-0725-4615-af96-bc2eb18f6985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870b5cd8-62b9-43d5-9f4a-246074b68436",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420b714-4e89-4924-8b90-f383359af2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9162b7d-21be-47f2-8116-2c7450e47957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc777bf-fb14-4f08-a06d-edacae2230f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09c00a10-bae9-453d-8c74-d02a70ee9204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd63813e-8c89-4be1-9881-f9fc0daca688",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87f18b2-d3c2-4d5e-b114-a641fa7e3c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade41a68-32a1-4e5f-bd93-e07b995478e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec4c86d-50bf-4d50-8509-ba97e479df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e44d58-9645-4306-b2e3-6ff248803f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36ce4ca-9996-4036-946d-70acc3f8bbfc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f278b030-d7e7-4188-8079-c8576b1d83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19c8d71-4aaf-4360-aa15-a7788ae4bb0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e501659-fb8c-40b1-a778-cec567b8077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5490c529-7b0a-45ce-bfb9-9a1d355f1f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a2230c-9a1d-428a-814c-1450e02272c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823c96a1-aefb-4fe8-8acc-d3bc34ed5776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42fd3df-f5db-4a39-a9f4-8ba5fc59c396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f5d429-05d9-4d9c-83b8-81f108cae207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc4a83a-cee2-474c-aaf5-4adb6e46ce34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04decf36-33d7-4842-9369-4bf352ce016f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b10d454-fb00-4de0-8592-e2d252d19b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7c4c0f-92d0-48ab-97f8-7249a944a15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edffb9b-7a04-47ee-bb1a-bef239624902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9addf7a7-921c-4fa1-9f25-4001d68719cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1457e3d7-4805-443b-96f7-f1749b701a75",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b590949-bc9e-4a11-8d65-e3071663cf0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b434f911-571b-4298-962f-f551e72bfe18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0115d76-f569-401d-9bae-c1a454f93ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "02c823c2-38e4-4d74-b202-532585b150ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13819897-9bae-4a88-b62e-07fd8332b25c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9430b0dc-124d-401a-b501-908223c57da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d4d6dd-78b8-46c0-85a9-be9281b2369f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a674d3b-93f8-4557-8680-6e2772902509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f61678da-fdcd-48d4-85af-24fe9cc2917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5da2d57-a497-4c75-adda-781700e76a38",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7d9d22-63e8-47e8-8a6d-8f1eaa982704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f649b2-6f90-4e09-a6a9-c013388751ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1bbdae-c78e-4ec5-a4af-29ff146b8be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5160fa-9048-4bbe-a214-7dc6dfa165b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d51576-ff51-4610-a92c-de88a9593cb6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99997e2-d640-4ccd-8be3-dadbffafbb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54e5b08-9383-4677-89e0-6c0b495c1eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b5343-a233-4c7b-a46d-7fde3b99d66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff199e37-3b47-4750-9b1c-dcae07bb6772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b10fb8-f0fd-4b8a-8ebc-f8bb85392196",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882abb49-03ac-4be8-b143-fc4ce6ef18c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad059088-9422-45fe-98e6-0d05494f1378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b6ce0a-2230-4937-85d7-2f6f3d9ba1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c408827-227c-41c8-aff3-560d56997a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcec611-e33d-44cb-a326-6f7e8ff42166",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25b1dd7-95cd-4c72-9976-c6e88daea48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86124ed9-2808-4a68-ade1-a5fa4d9faab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51280ecc-0eed-460d-95f0-b7bfea64deb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7de0047-b328-402f-ae62-0f86200c2434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c4e223-c527-42c9-b820-341b42c3b03b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b98a85-e3e2-4be0-a3f7-f0ce44c879dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce44172a-b151-4037-a214-69bb8f3f1c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928ce80b-ee96-429b-957b-cd3ef722d773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa2898f-6eda-417f-ab04-7c06116cf4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c790f946-c0c0-4f5c-9d70-4dd00532df24",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9761c770-058b-4ea2-8dd8-d8e2243da00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e110004e-caa2-48e6-a76a-634ef095655f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b550f09-2ef0-415b-8982-3fe2f3612b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dddc1d2e-cc3e-4589-9293-7df8ca24ec7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc04c34-a510-45a6-a76e-3048d8fc33ae",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ee2d2d1-24d0-4c2f-8c5d-d69cec4f9ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368385a1-40dd-40a7-ac29-465dc902c6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c877992-ad25-4a63-bd9c-9bdd169f388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21792e9b-2f3b-4c4e-8b07-cae44dd477bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb856e1-082e-461c-a220-17fc5cfdd74e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588e6481-fc40-4e0b-8c1c-fdbac80d0a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffb2552-7a53-4e50-86a9-45e1aa60bd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e97951-ec42-4189-bdd7-632e1dd977b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01a66789-f479-495e-ae82-8ab16f024973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63541914-631f-4b17-86cd-9a3ed372654e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f73348-32df-4510-bd0d-4d79a4f31060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60a4ca1-6bcb-41ac-af70-4ef5fabead7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced90364-8d66-46f1-b5d7-4fa8337fa002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a815a0-7f38-495a-ba26-2e95dab79633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ee911e-b4ea-4156-bfc7-7f79b09ef87c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de653f10-9a34-49b3-99fa-5baf5b94c42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b5e01e-01fc-4344-af5f-be2be3836962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c046fc-e42b-43e2-a4bd-99ee31aca3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f275c98f-973e-4652-8ad3-bb24748e58c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2748eab-1db1-4922-9459-3de3b7a0e60a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b623e700-78c3-49de-b928-8c1075f8ea39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a9c6f4-0f97-4314-8de3-3ec229682cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec91a8d0-f40c-468c-a678-5a49127c3eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39c0bc4-1436-48a1-be58-d438a8795c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae842db-1122-471f-8510-e2403065787c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a750fce-0850-458f-b7c0-0801190fb57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd84e13-9c27-461b-83d8-cc646a4f4269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a7114e-976e-4864-9d52-42eff6341b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce953473-edc5-4d6e-8116-682370b13997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6384c5-fe86-4282-800b-bcaa6a8a6355",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e402bfb-26ac-4023-b486-a65e66999ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4046f35-0bf6-46e0-b803-8321c082fb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d9e73c-137f-427e-9164-69a81a2b610b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "275e8212-c0d8-4fc1-a8db-79664fcef1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa02dfd6-9bb9-4816-aaca-ce6531a9fff1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7765daf1-59af-4d32-8870-e2f843b1566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817a7308-7705-4dac-a6f7-2a556f394b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32049b1-3b7a-46e1-9bc9-6df774c29f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff00f95f-d250-425f-977d-62516ce7f113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae500ca-87d7-4f68-b8b2-458718834811",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7530901b-9c4b-4de7-bb7c-0d6ddb90fac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6aa709-e1ab-4520-8bee-d1f36d470ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abe0531-c1f2-48da-b42d-4bf2390d52ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53774dc0-d692-41e2-873a-26ad136d59f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cef6bf-fc4c-4e72-a13b-450b98f0ed66",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8644fadb-1d3e-4fc1-87ee-5313c223cf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dba444a-b125-4de4-acdc-457d88550502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6af435-1167-4c64-a992-039567bc1135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "835c6fd7-fc5f-4e09-a7f9-cd5d91b17fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8fad1a1-c133-4334-a52e-b73eebbbf5cf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8561e1a-8885-49fd-9c5f-7a97668dd81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e6cbbf-3f3f-4090-8f0b-25f8e05f754c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c6cb75-3a8b-429b-aa93-ea5dd94ee82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f085e8-d9d2-4e7f-ab4d-005f60d40383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34a568a-9a5c-42d6-9e16-765085030090",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa31ec9a-4e74-4b16-a153-88759141bec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29045c74-139f-4926-b104-af4d9545c3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3886c-5307-4486-a518-27ffebb4f5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950ab795-3987-4ad3-932b-5964ef7225e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecad0f2a-1583-4aa4-bc3c-2cf79f10d892",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9454b2b5-3056-47dd-9270-2aa3a3b6326b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cfda7a-b716-4e3f-9d3e-6dc501d398e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553c50af-5113-440b-8210-0bd542cda484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c586da65-0131-497e-8509-f5356e54a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e120ab-12b8-43d2-9c38-77d95d4af264",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6d774f-c86a-4321-a241-088a2ca10b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6554470f-e12a-4f8d-a93d-4ec11285a52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41aa048c-74bb-422a-a408-214e4ab0dcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "737afb88-1017-4bdb-9b94-70b7e7babff0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c635786-7d37-4359-bb9d-12ba0ae85d6b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "67ecb89f-c0ee-4c9d-b68a-3f22a4c4abdc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c13eb2-810c-405c-a18f-be048a7a711f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ed27baf6-a83f-4356-8762-e80bc2e0a2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5217ff6e-3dbd-4f37-8902-ca3d9badf3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbb7de24-928b-4fca-8903-87a525a8dc27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bc9796-f9a5-4fde-b877-4d1459f2f283",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb12608b-f8f3-4c3a-8519-23be2f7ad136",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e86fa2d-bbf9-4187-a0e6-1653d3b7ef0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80912bb-36c4-4cca-9162-c7bccd2d22b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "688b49a8-572d-4650-83db-bcd312fe2509"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b60d29d-7b8d-4786-8641-d0ee33babec1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e18414b2-9af4-4e74-ac30-d08abc980e26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "341a34fb-84b2-4bd6-bf20-d360fa4aaf7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a870748c-f039-4986-9306-9dcf2fb9d628"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7b717b9-ed2a-4a50-acf6-9f3680a81b69",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "97c660a2-0fed-4136-90f9-1cbfd2833166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d667ca20-6e86-4ba2-becc-43c2b7597dd9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ff9ca8e-0cc1-4524-998c-cd2c3fac3f86"
            }
          }
        ]
      },
      {
        "id": "4f08235b-3854-4926-8177-18d9d885fe87",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e81babc6-014f-47a5-bcc1-dd81c73027ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d9e50a4-e36e-4d22-96a7-39355aad4808",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "291f56d5-56af-4a12-8a01-fcc61d0feb0d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def51e96-281b-4570-b432-b9eca3ff9014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9980b0d-560d-4085-b34d-2037ff6c0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0276e22-e661-47d5-9403-07d99f48f080",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a676733b-7e5f-4ac0-b4a4-74bcd716c100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bb3970-0997-4889-9e89-adaadc6a19ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3078b9-59e5-42a9-9b2b-9edcfde950a8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ac4c71-6809-4476-b97d-5a14f9831032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1681bcf-a67f-478c-9e9d-f8545c4f159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b29779c-ca24-46fb-b495-5f2d54fd1fc2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5eaafda-6e16-4a89-912b-a865910b490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf84cdd-d6aa-4ff6-94f6-f6ad86f5fa23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b892e1-de01-4e44-89d8-1f3e34a04f6c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c937bcea-75a4-4650-8631-f875790d1b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42f3d80-f54f-41af-a481-a75e658aa6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ca421-7f39-441a-ae01-550b3e7954df",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36b7f69-8d49-407a-ae9e-53ea6b54a83e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "214cc01b-1165-4011-a0e6-bada1142da21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e9966a-003c-4dbc-9e51-1559a93aa812",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a0331b-75b5-4dd5-806a-3691e8050798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f15672-6ef1-4408-88e3-d7acb24c69aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86321c6-7b62-400b-98d4-fe7462c9fcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f7b24d-e640-4436-91e6-5de344917b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7bfe9e-f350-4b8f-bdf5-4a4249095278",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56c39b5-626e-4c2d-9381-7004a30a4243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95fdf3e8-8891-4072-ab34-9fbd7bf8fbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03c9fe2-79e6-4415-b2d2-c8397a43d018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00cc311-2869-4518-b787-a6add4b2a284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa158ef-dfa2-4a4b-9382-97f0ea8851e8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa63d3ca-733e-478b-8e22-491b0676c1ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c91d2475-ca25-407b-8542-9c0a892ac093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98381798-5c2b-4bf7-9f05-26c35cbf7cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9755d5-606a-4b96-ae38-f5315fb5b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1887007-dbae-4cc4-8863-abcd0dca823e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc565bb-9ee3-47e5-91b4-eb96f8ca5ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a59dd54-cb13-4a40-af6a-c027feb0cf2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "501def7f-61da-49d4-8ab7-42127dffbb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24f0614-4fdd-4878-885c-543cac74b974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc24c457-5c2b-43ed-8c25-14c49dbbafdb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077d7678-d04d-429e-9476-d1bfaef7a747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618da3fd-3e4a-46f7-b471-99e39a6dab00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54027569-351c-420f-a466-437636046e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85486330-722b-463c-8fec-4341bef5ee68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd684d99-2ccb-4791-902b-15d660d2ac31",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a81281b-e10f-4bdc-8dc6-ef41d0cbc403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1568406b-7fad-4096-89f7-3be02e5004dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2b4297-fd05-443b-a3c0-796f065389c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25932f91-48e7-4cbb-b2a7-f5eff7b4e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b263025a-8601-43a8-8f37-a50efe65fc7c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee017bb-63a7-4319-9fd1-cf4ed9c68137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56177901-4fd2-4542-8ee1-45045508fa0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f21f91b-4a93-49ae-9208-f1c831f4de7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0ec3ab-7955-4e88-b973-9caff6a3d01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfda36c2-8b25-4337-8d7e-f0b5a2c991ea",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f039ecd-f611-447b-995a-bfa876213838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914e11de-a59d-4347-919a-7c5e76da5a83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7b4c2b-f47f-4267-be77-dd62d7a9db7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdd9dc4-fdd8-47d6-9896-333880cb5399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f43aad-4852-4e38-9e79-c33b57a5aa72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df40781d-c7f2-46ed-8c1d-ec3da506b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a83b271c-b483-4c46-9287-79132925415d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8466997f-bee3-4442-966b-3907dd7d5be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49b2532-4a10-4890-a31a-6fd3349bec59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b875fdd-de10-4272-b8db-4f9ae0b48cfe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8371bd4-f2ac-4ae4-b015-3a0575690340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "501b7489-f7da-4cd4-b882-1488b776937f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6500c83f-f5dd-4059-998a-962e33411bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176f88d8-b501-4040-af35-ea4f4b0bbfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fd834c-8196-463f-8da7-a64005071a58",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa912631-d94f-4e4d-9a30-0ae7bb94124e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94473b36-6a2d-4b1c-82ef-847787ff0e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7e8c90-3834-4f0a-b5a6-59b993d4b2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abb5fe6-bafb-4917-848b-940a73263e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294aebc6-6378-4c37-adbe-df8b524c7cba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ca081-a082-4480-a9e8-cb9594f53ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78d5804-409f-4bfb-9a2c-3290eedb6e03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57134f75-0b9b-4f81-9ab5-eedd5b141ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1a87db-9e13-469c-8214-3096a565fad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840405ae-3a36-4636-b57f-530f9ba87fa2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7c7707-35c6-4185-9d51-b3ed2c891507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94e33e0-0f4f-4e00-92ce-b75e0609649e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de094eb2-dd4b-465f-b5c0-8a6ac51747a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfc4f88-a9cc-4ce6-b3e5-d4ae8a9661ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f60f75-048f-4afb-b405-5483b330d17b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54c3838-4202-446f-8b64-7262c56840e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb326459-493e-4301-a13f-13edfbc750b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c796f41-e244-475e-939b-430dd2802cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d08de9-a66c-45ff-a35b-c3578e4e376c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bca57a-a6ba-45e1-8306-3e97ddb2176d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e812489-98e1-4361-844a-ce49fe1505a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d84c4ae-bcf9-4ab7-ab26-ec97bd5d1ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60429efc-e531-4ff1-9572-e076962bd37c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eebcbd-dffc-4e82-ad9b-2ed3f9b7f5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102bd5cc-1858-4d2a-8c0c-f52990e6dbf1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8425fa2b-f196-405e-b9a6-add1ccc130bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c89035-4713-4bc2-baed-9bd214a8b89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8b26d-00cf-47b9-bf3c-79c88fc49dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eb6347-9ef0-4cf7-a2ab-5a1bcda88ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc9825a-96f3-4e75-8709-c2c125550baa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27de423-1b64-40c0-aadf-91b259fba7f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749b49b-9e6c-407c-9394-95e62887225d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9eaed-c577-4ed5-8724-a9b4835c078a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4d3eaa-993e-498d-9d84-2cf8713a508b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b48a542-5a8a-4eb1-a142-0b069d0f04ab",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f4ed0a-c8b5-40cd-838b-c5f979b470f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c944288b-961d-4c80-8ada-924e98643c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279222a5-c7e4-4c52-adcd-b6cdf909bc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea92cd6-0129-48cd-b765-677cd6aeeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ddea5e3-a6ca-4800-9636-8acf62c8fc23",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2615eb9-d9b5-430c-9d18-168af9dca05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "991d43b9-4a9c-4eeb-9af3-8d663017945c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c78a811-c965-4bd5-b0bd-a57a7f062972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07f4519-0e92-43c3-ae6d-f9ecaed7d5e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcf2615-176b-44ae-b876-ba7b27014b2b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354ba423-b666-40d6-883a-5da04fe26412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c028cb66-ee24-457e-9bcf-a211cb7d92a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4aebe4-a582-4548-9ae4-3c94c60f3d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20cd8c08-18aa-4bcf-9819-3fac8581e1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5933438b-9773-43e3-8348-92589b71b6d4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e4d42b-2e24-49f8-ab86-123a7b33ff7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c39e4b7-af6f-4364-b533-9b99d209d23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3857f982-b4c0-4c42-aafe-c74863e8c5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4c59a9-2b24-4277-b5b8-40ac9fbfd3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588a42a4-f1b2-44ab-91a7-31ff3d338175",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c86c4a2-fa11-471f-858c-e719979a7d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a097a7-bcf2-4202-8634-8b92a12c1a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168732d6-e5dd-446b-b962-9dbda303d6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd53af5-845c-4445-959a-4dd50de063f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87095b3-caab-4d9f-a17e-10616c6d8470",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf594b4-2d01-4537-8099-41f5c0b67c88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "451913df-754d-4123-9689-ac80843d3a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ae13a-d4d3-462e-8686-1eb874111b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff5cfc6-2bd4-467c-8ace-00374b0c4492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f855a52-a583-41b4-9ad8-fbced8f416d5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4fcc13-75f9-4bac-a9a0-9de1e2405bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74aa5b88-583a-4206-b3b6-00b38a26b405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476d0920-411d-4ff5-9a39-a18f0245c6dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09dfbf56-4d51-429d-817b-199857f488de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df5639a-e3db-48b8-9fb7-2f40cd1215b5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99be07e-0d62-4899-9485-96a6b5103733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20deada9-981b-44eb-b35e-6031b6c489da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c92179c-a4e0-4843-821c-a6f84730333c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fa99de-f40e-40d8-b6af-4f4548acce61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84396830-7dc8-450a-b3ce-dbe5626ebbe2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb348b-6891-46f5-8761-3361282b86ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ab905c-1a7d-4714-9048-bc7322828063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68481d6f-3d84-43c9-ac82-0a5e7f7b8029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d767b4ec-5eea-4c5c-9da5-90a3af1af55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d4684e-6fb0-436d-b60b-6dda6f804ecb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2118c8b8-fe1e-40f6-8f15-d92ced2efcad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d211525a-85ea-4944-b8e5-ef061afce35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe7f8d9-d88c-4b8d-8aa8-af922a775326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248fef48-e3c9-4cf8-b0a1-75da911cd79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dc738c-e636-4a5e-8c19-fc6a48390f07",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d2e8f9-bb80-4238-8c35-1ff8cd6db085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77075a1d-50d5-4572-92f9-4cd76b5d7c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ad67f-6a22-4730-956c-c4fa23aabd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba306f84-1ea4-40db-8a8b-1a4c14811828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93b7369-ddbf-4cfa-b79e-958ea5f65f0d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3159c6-158b-4266-b95a-04a2a6d1cedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3643e486-0f2c-4424-acb6-ee1a3bfa72bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaada75-f28f-4bc8-9e47-d3843a0673c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ee1416-0381-4b9d-9867-3e9633349f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ed29f4-f9cd-427c-9b14-8f21274a0846",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fbf2ae-3b1f-4acf-b5cd-9062f3b3b531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1418a72e-2384-4892-bc5e-7a52f06a594b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b8a346-d689-4f40-a6f3-594db2ad3b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca62854-e655-4a63-8a79-2516131075e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355c36e6-a618-4ed5-b86f-a28611d5c648",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecc7187-3bba-4363-9805-5565104f1abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cfb699-0146-4a5d-91d9-7dc599de9460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9044a2-a4fb-42c5-bce5-8c76158c6a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca268d8-3e98-410f-a618-0d8cc63d3727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781897ae-7b46-4dfa-b21f-48fa7d751a71",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e1bd2a-3499-451f-9856-af7cb994f878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d75619e-a736-4f23-976a-220cd7907968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecee9a81-f88c-442f-8f3d-843ab2de3860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61122f4-cabe-494e-8ba0-ed1697a857f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0f0faa-a17c-4ce9-bd8a-b93a0d351f72",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35586f7b-7b86-417c-b48c-867c8c97103d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0876d9-b8de-41cb-b2c1-c443fca0500e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea152948-d3fb-4655-b3b7-a97b7aed5b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8e8d559-fde8-4bd7-a7e3-12ca370717bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d859488e-5b6b-4491-88b2-26f1360d5f9c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955ba1c2-1746-42a6-ae71-fb8df8b05e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876e59e6-4953-4456-afc4-1ec8c537c65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbdf6fa5-9665-4f34-8d66-2cb66367f567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3949bd-df53-4088-a16e-2c2b161368da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d99267-2ef1-4a9e-9333-1f9135e71f1e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33dbe8a5-9a94-444a-b57b-7b17d2eda351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7742349b-b105-4e1f-9479-878449173726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e09fb9-1c33-4d97-884e-ad48d133ee2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb0aebe-8f03-485c-8af3-3a7875c09172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd36e762-87ad-4c9f-a7ab-5b8a2a66ddfc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e688c3-2b14-41ec-90c0-be099cfb8c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2a35be-2ff6-41c3-bb5f-179de5292cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4bdf69-4af7-4d88-9f99-0024164f29d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991ee307-83d5-49b1-ad62-b077f8f0155a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95312b5c-edb9-4a2a-930d-0fb3869d7d44",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bcaf3e-22a1-4340-b008-09ad43c33914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b37fbad-5a9a-4c0b-b025-d2671a6d281f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cac411-3b0c-42ef-8602-86d2d4586ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18e48d1-317a-483a-b611-5e258e60166b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed176c-cef1-46d6-a06c-eee119cf3477",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5cdcb-2a5d-4143-be3c-bddd0ebf419e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424e82a2-f850-4d02-98a3-6cb2c163b075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1082ce64-7a0e-49d0-9d68-edba43aaa271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e968b4-c269-4d5f-8ed4-14b08f0b2c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927dd4b8-a86e-4a81-99f7-34b510a23118",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c12281-cf53-47da-ae9c-b1fc2d830cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d52177-87cd-4533-bbfe-95ed06acd9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7d98f-3d10-449a-885f-be671fa2e110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd539918-25f7-4d81-8092-abfe95f0ef13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2954179a-bb9b-499c-b1e0-0052056d3c73",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac725ec-3399-48e3-b9b8-b9de7877dcbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56240a4b-77f8-4245-8db2-ff88ca9e695a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba4c177-4aa7-4255-9c3f-af56299adfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffaf361-351f-43eb-83fe-1438cd314836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9acaa16-528a-4315-9e02-4ce71b8dc81a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999372ba-189e-4402-936f-17e62625c408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccbb9ba-2d22-463b-8d2a-d1b24ac076aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae06a685-0ef7-4cd2-b2ad-a6483822d574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22adb2ef-dcfd-4671-978f-641c15527d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded0bf3a-7634-46a1-af59-6a674f4ce4ba",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51991fd-a91a-49c3-94bf-c4b593f18c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdb5ba4-d95f-40b4-87c0-080e667d5cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2e307c-e199-4bf1-a5b8-4c1ab9acf79b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89837f5a-3b09-41a2-b147-8efdad77a66b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a29dbc-35aa-4f53-88e3-f1100ea18073",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d62602-0892-4cc6-b9e8-8da8363be0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681ff908-698c-4625-806d-ac225aac2533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b434ea-b97e-4a61-92c2-31b661339c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb9bf52-dcfa-4095-a589-d0b0ee26113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae2dafe-c5e5-49b4-b01a-7412ee67dc47",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d7250-e31d-4cc9-97d8-2e2adab5ddf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd1579a-d6e6-4872-9807-d00504fdf4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c8dacf-0c33-4cee-a130-12cd7b48ba15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07b8911c-b13b-41ee-a2aa-05e14bbc4c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48242741-79e4-40f3-ae0f-811ce2a2d63e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed4722e-65d0-49db-8c64-4a4676741ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29a5503-813e-484b-8cef-4d54d4f86b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da66540-95df-4e28-a8d1-7ea1be5eb78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e07a100-45cd-47a2-be1c-125456d498a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f44e0e-5c63-44bb-b158-6a38114498e7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99b3b4e-c0ef-4f55-81d1-2bd89de717b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fa441f-c61d-4229-afad-980d69801dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dc3bf6-6518-43d0-8111-ff57b4aa6b18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930b2019-f7bf-45fc-9cb7-754aae76a0d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e318350c-2cdd-49a1-a5b2-38293e8ed454",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39854753-13d7-4635-a2f5-c6b6ed54f56c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9b8081-6b53-4807-a8b7-0f886d06e29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfefe758-78b7-4acb-a618-ba7d006b60a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e57f78-2061-45eb-b0e0-e8616702d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e52f02-672d-4a50-8e16-7a757c4fb998",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c03b57d-171e-4c32-9c01-641783846d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99710f68-d34e-4c50-b922-93bd9c07ace4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43776d2a-4398-4ac4-91d9-6d44e1966206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ec8828-c2db-48e1-b70a-da537caba14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf46ec14-c184-49b2-997d-ae37c2bc1ad9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012f01b-966b-4a17-96cb-e0e21f78a9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8deba32e-bd97-4389-b241-c8cc158d293f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b12cdb4-7ad9-48db-a838-b799e550a9d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6deaed-2710-446b-b7b7-697526177da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170ff772-6396-4ebb-870a-e17efe172a5c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccfa3aa-79c8-44c8-b628-e4866a3b4755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f461f0-7991-4e20-81da-aa35a4d87394"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1568b3-59b0-467c-b313-6024c8344fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb7fe87-3ce7-4cfc-8dea-78058a0a7edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6522aa2-a1af-49b8-b310-2aaae951404f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cd7cdd-ce6f-4027-9c63-fc46cc15d008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ee9330-f5ab-410c-96e6-e7bd7fc81fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d57b8-a8b6-4b24-8d7f-c04f1c4215c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7a15064-1fe1-471b-8197-922a071df6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7505380-bca8-43d6-8ca6-6fcff76dcef8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867621bc-d3de-4b4a-8a30-c2a6e5811580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8b7952-cf2e-4893-88fb-fce17b85c319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e71f163-33f6-449c-9130-9a37656c02f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92279e5b-a69c-434b-a182-cfa90dddc958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e353b7e6-d62a-41e2-aaa1-f96132b7a028",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ef2e4d-f8d6-4ed7-986e-6e4d1c421f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e433954-4534-408d-803d-182c38b85324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e2d126b-c130-4907-9e7f-484d9f4756e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbedce09-8f3c-4211-a7bc-3bb0984fa6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e643ed9e-91be-4f27-8b3c-6b13ac6de79b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a85ad6-2d35-43c6-a3de-2ff5e386cd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1780d8d-ad7c-4cb2-834d-44a1fa2a9791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2acc884-b308-4ad1-b961-ebec072ecb18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0355ce2d-021a-4b1a-80d1-92ad78204f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec49975-e3a1-4c34-8e2a-f0e1d1724b80",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef7e4a3-a198-41e7-87a7-dd328416045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45429087-b25c-47cb-8d5e-27adadd622d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "699b94e5-c253-4c1c-a952-808c9ef67176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8fa6014-6f4a-4b70-b706-9533cb63b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6339d7-02f1-4fd9-bf38-23de677a3052",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44cca68-bd8e-4550-acba-816e6764df8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6be6653-9786-46fe-9541-b47eec7f035d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef527f2e-74bb-41fb-a5f0-1b6c91a5e0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04324562-e727-4e77-9fbb-f68c90afad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d14ed30-3764-4d6a-b5ac-3977bbc0b435",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16138df2-767e-4233-96c6-c0fd654dee97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6310be-9784-4dc2-bc0b-6d226c5de3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9f4bca-1d65-418f-b83f-04790d200ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6faf3b8-a59a-4011-8f54-693c552d0511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06e4f9b-280b-4a79-a3f1-1ef7a8e8851a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e68cd-fb22-4751-8aad-25741cc5a593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f89fd7e2-06e7-4c65-af92-f95e41c3636b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e874e42-ef39-44ca-be9d-3b16b4a022c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6caa36-5477-4c65-aff0-ca80d6dc0729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a62be4f-cfcb-416f-a480-c787fad17a1f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46de9758-b694-4f5f-a3be-fa2175b036d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ed7c829-edd4-4252-8a4a-098112844695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1251ae83-a3ca-4384-b259-1553514522b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36496c97-a722-41d8-945b-fb8f2ad90312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775ec735-cc24-4a77-ad33-f1728860d31e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6085d459-f5cb-45fa-be3e-3d5173474a13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1554b08-3cf3-4cc0-9349-b8c52ad50cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "300742d0-e68a-406c-a9b4-15dfa4105e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c110e9-c60c-4783-b416-349053efb15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278a6c9-af2e-49e2-8767-a9dcffec873e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc5a0e3-eff4-4d36-9ccd-6a9f0e2982e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a898ce-0047-48b9-8d8d-7a5ba72364c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9444e87-4b1f-4788-a88b-654d68d8efe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23eff051-1564-4cd6-9bdf-c0bd3c8690e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9ce54f-3857-423e-a14f-9e42046cf5c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5365859d-76fe-4d0e-a183-3b7082c8f9a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c384494-04e7-447c-ac0e-98af4cb64665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e091af7-9629-47db-922b-36de8cf39834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df54dd-7664-4a40-88ee-2ab5c266e37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe0384d-61e2-4ba9-9b44-a42d59a4b7da",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c299cbc9-f69b-4171-aa82-bccabff65998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e4491f-02a3-47c7-a34c-b5a6f05b5229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78f6b21-cf7d-40b8-b646-0bd7784be8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8667342-48f7-47c8-a346-88e3e8bbe4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392d7250-ea72-4f26-818b-c03e111b3380",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377352ef-2367-4486-b21d-16a490654507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96f1fc8-2765-4800-8318-ec823e226c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13380854-e2eb-4e17-b3a6-1a2ee36a3a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87792cf-f95a-44e9-9fc1-56125ecc009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a02a08-6bfe-454f-b1f4-3658a8e99a2e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6381a3b-8f96-4878-9bcc-ea767a25ef38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cc495a1-24f2-400a-a1a3-20e2756ebec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c19369-7975-44e5-bb06-3b25bd8ba1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67c64d7-2694-4235-a021-c9675da166f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80d167d-2c95-437a-a24a-d846e7d54b68",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f0c3eb-c6bc-4549-8a38-2d32dd38faf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f8431b8-274a-422a-9028-3c7374f69e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06679bb0-0076-46c5-94a1-714c465bee55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f1141d-7222-45c4-a5c7-1f810595158c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313aeb6c-755c-4e58-b4fb-ea1a96afbd7a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9361790-ed74-42c0-b2d8-60487f142157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22343675-efb8-4442-9597-c7bdc7bc9497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e521656b-f261-47c4-9c78-3f98eaa85d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4945a7b0-cbcf-48c5-982d-b4c92b529119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868746e2-1f01-4758-9e41-8246f1cebd86",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f57dfcf-4416-4a57-91c5-e5c0d05639d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b769b7-b7e5-42de-acff-83a390e8fb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb2cbcf-e983-4f01-97e9-29d43b17f4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc69e73-2e2a-497b-98f1-491a474ee5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df00308-25eb-4a00-b055-b42b0800a73a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8aa00e-6f09-4f43-86ea-34be033c465d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "099b7de4-1c9e-49af-8e1b-5e41cb317e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e123fc95-e8cc-4bed-b3a8-671db82bf981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cfbb59-58fc-45db-b19c-6ce2c91fb1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8f9e42-ac92-4b96-a498-f2fb0e932c11",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89adf2b3-0ef8-4c48-9da2-9210d329938e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ca6a29-7d62-42bb-8105-998cb9a06045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38f6212-a791-45ca-996f-ff9b19a9ad3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33827c4b-0cb5-4ee3-ada7-b90aa0bc156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ccaa01-31f3-42ed-b47e-87aa02dbeeef",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a86f32e-3344-4b78-8d43-343c4379618c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329ce843-8296-4d8b-b9a9-9a097bda07a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6262985-96bc-472d-9b75-0f5566f53e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96d2526-6ce6-4326-8b36-461d1b3f3729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f3d8e5-a732-4546-8722-e378d8614b01",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5f98ac-ce0f-4c39-bbd3-f5485282ede9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d327a5d9-e42f-4482-aadc-e7f82375be53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38db3d1-045a-45bb-8a4f-6525a72d3782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5614af9-b013-4084-abe8-355f22a2f0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a94aafd-a993-4e94-a76a-b1be790753db",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0123ef-bb0c-4fb5-aafb-212e7f2d0b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028a34fb-127c-49f8-969c-b0489838c857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734e3dd0-983b-4a0a-b2b6-04e16a6209eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ff91e2-e46a-47ff-ac3b-9f28ea7ebce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02a9ac7-0604-4225-9eaf-fa9387282f4a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d46feaf-470a-4585-83ff-d8286100052e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "831a8edf-26fc-431a-b8e8-4db71f4e1e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28e66f0-1028-4042-a97f-c9c44a117603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2749e16d-17aa-4246-a69c-8c3d9f010546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc33d49-6f68-4720-837a-f9b8c4931719",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb39b60-c401-43f9-bdc2-77a61b50661f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e86220-e3e9-4101-a2ca-3ed171de630e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ff8fb-1550-4629-aee7-17ce9138bd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bdb50e-16f5-4134-b12c-a8f5796989aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822e5040-0c33-46ac-b0ee-2b0585958f2f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd18378b-0acc-4810-84d4-6e0730bce247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63527e98-ee1e-4c10-a027-42b82d8b0c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509bee7-c12c-41ac-9b96-d8cb9d543f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c56ebb-ae4d-4fd1-8723-a6e1db1b95f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dbf2df-c086-4a60-be08-61816edcca9f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301c9d4e-85e3-41be-a511-869b27deebe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5baec2be-13ce-4282-9fbe-562864422087"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6202c3d-0e73-43e7-9acd-3f574d6d95fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02dfc345-d840-45c3-b84c-4691b650f921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0646680b-c90d-4a98-8ed3-e54ebe183820",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0d7349-a8c2-4a35-ae7f-90b204dd576c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0267e7e2-8ec5-4d50-8aa2-4e9bd3f9c325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f508f37a-4da3-4b36-990a-a1141fdef419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85cac36d-717c-429d-9d98-9bca5db0f81a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb747b91-90f1-4b29-a804-3c01c230fd84",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e82d23-3f6f-4a1e-8f59-b2c8cdc651f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e265f69e-242c-44b5-8bba-1f61eb0d67a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c84c23-90a5-4820-b2a6-636ad9478767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a75436-f620-45ef-acd6-25d3a5dcdb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b71d4d-c119-47a8-a2b2-845e2ebc3fab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2fe411-bccf-4487-a86b-20a42bfd097a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0cdd355-8e32-4917-8e3d-4dea427d9aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633f46cd-a11a-46df-99c3-2e91c1a55ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a4be37-a9ed-466b-ab26-2ac5135c1d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239725c2-c0b6-4691-af8e-efbddc62ae1e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2a206e-94e2-4580-acc2-21c3526df24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77678aa-f9f3-41da-b8c5-fcf43ba1dc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd88169c-c856-4195-a449-0ba04f4f1c82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601a92d4-2d85-4609-a5e2-a7f8fd77da14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80635d8b-3697-4a7c-9d00-eebbc0a44286",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320aba09-3f4d-4d81-a79a-2c4d0d7bb697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6f5c21-350c-4320-bb51-870afcd60963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eb0e28-088a-48fe-9acb-d9aec4106b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a459a440-fd1e-4dc8-96c6-60b63defda4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5269a6-c06e-4856-a5c8-4c3483dea8dc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e7cf6-6a5f-48db-8ccd-472b3f52fb70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1febf0c7-eb1e-413c-9665-711abac77dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b2e7a-1378-4c65-9b9b-deb0004d713f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c063909e-53a2-4e99-8c12-8b5ae88054f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f7434e-1efe-4092-ae3d-5dbdef61ef04",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ffba50-ba3c-46e0-8202-b9c81accb7aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2bb4616d-43bb-4939-9237-7013154ce418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8cec2f-0fb6-4fed-b609-1ab83fb51acf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073e6d10-f003-4bd3-a158-1020b4702ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc6fd8c-4d89-4f82-9285-bdd94e9c5115",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d197d22-cf09-4060-8562-04f385cc138c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d0c853-1c3a-4c1f-b30b-f9fcefaf6bd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb12411-f35e-4ff6-a2f0-56c9aaacc770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8217b43-9f43-4b4d-bfcb-9bfd021d9387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d773f97f-3cd0-4681-a346-e8d91f0eeb35",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b6214d-46a1-431a-91cf-7878bb4988e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d0102c0-1a7e-4ddf-b2d5-246e0a5173ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9159c914-8714-45e1-89ef-4d702017ff26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783daaab-a550-442a-b7a8-0c44ec801b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4fbbef-367d-4b48-bc4a-4d201c0a901c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cdb628-9c8f-4da4-9afb-6a3a53ebb5ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddb88067-1cb6-4ab7-8b4d-4cf55f3bc56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206237d4-f42b-4bed-bcce-6538443d5ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "276dbc60-12c3-488e-b528-de4a3ab338e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab08fa70-0440-4e6f-a3de-32276774d44b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f8cbbf-19be-46d5-b79b-66ef4025f4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c64a703-227f-45fe-957a-3ec4ce0d27b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f59cd5-0757-4479-97f8-5b6097899ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9152af95-22aa-47d2-9730-3794e1d66c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7571b7fb-b072-4933-8a29-35adf7666278",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc916d2-3e1c-4445-8d20-f2813d5bc3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b58d29-5c6d-408b-9122-d7aac27fe807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bcb306-bcf4-4eea-8c56-8f6d9ea4f9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341d2283-f45a-40f7-8775-6d131c759be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875759b6-a674-41b5-9e84-2d8b3921ecac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905d48dc-2c81-4fb8-8572-e859a6e66e06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40be2747-7132-4751-b943-76e5b955ad2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb90588-2c4b-4390-8c2f-6e62e52f3424",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df88a5fd-37c9-4a73-bc8f-2534bdaee41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95809c3-fffd-4a04-b0ca-578fdd10c85f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0e797b-b057-444c-8678-f4d1a09a6833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daac94d4-85f2-4d1e-a690-67d63c1a538d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a017ae-9e69-4f8e-a675-295173dd6fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7123bd07-0799-452a-8e1e-004c8e9eaf26"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d218ccc5-6a23-4391-8d4d-f22dcdfb44e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3213ba2-0194-491d-bba0-3332e58ab740"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8dc77738-1073-4ade-b290-97a3807d6adc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42f7b828-3fc0-45ed-b40e-5ac5a5003e17"
                    }
                  }
                ]
              },
              {
                "id": "e6a680d2-4280-4600-9ee3-187270672d56",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "185a739e-7347-43f9-b0c8-688edb57d37b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c071c1c-6454-4b72-a825-c22ae7dac7e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8c86a514-7ae6-4bbb-a838-480b966b2002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b1da7e-25a7-432f-89be-79fef72ecfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f269849-045b-4593-9f51-2b7a4d683506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa657eeb-5513-44ac-8612-aa3839be6ea3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7982d-1889-4a53-8b7a-2f429111b59d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "13e21620-f877-4826-95b4-6650d1eac37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07f75b2-0447-4466-9554-7a3260ce50f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7448673-1694-4b7e-9d57-d328385229d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52f78046-f44a-4f12-98e6-82947b84aebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "691c3f3c-cd7b-4eed-8a4b-bf84ef3d9fcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02366cc3-0e58-4ed3-a782-ab1199b3ccb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fb94334-9cfa-4182-963f-5ab4ac869dd0"
                    }
                  }
                ]
              },
              {
                "id": "c7be8d20-797e-4ce9-acc4-5a70f4c5040a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2c7bad5a-8762-47e9-8889-a38266e58610",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc74caee-11ce-4740-ae69-daed3e427cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bcba92fe-d6e5-42e2-8dca-0a7596921b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f047ad5c-7700-4956-80ad-667c45a959c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57beb3c-25d2-490e-a66c-f0a27f67cba9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "87ca5204-7cd7-4a72-a7d4-c5e36a385c8a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c2326ae-2b9b-4e6f-9c02-669b2e9bf65c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3967118-30ef-46be-9319-72aa0157ccd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bacef9bc-98ec-47f6-9f17-1b2698d98533"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ce2d2d0-7cb3-450c-ba3d-8684beb82b56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8112297-4d2e-4ae6-9c56-093c1bd6784c"
                    }
                  }
                ]
              },
              {
                "id": "9b324c41-93e9-4419-b8fb-266422da29e7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "605832cb-b3e1-4e91-9238-138d984d54f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5c7fa922-6d40-494c-948f-b77466575080"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aaf80c3-e061-425c-ae85-6f0f7be04d0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7cbc404-aeea-4c2f-842a-c160332bcca3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1371fbd9-316e-4439-94bd-fdcaf9b2b4d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e8b9ef79-e841-4eec-a81a-424154eb1ac1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e102a5ad-ba36-4832-ac03-624147718a2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15448654-a6ef-435b-99b7-920a0d6555df"
            }
          }
        ]
      },
      {
        "id": "d7f4afb0-b712-4f74-8417-2a267a0e5483",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c8fbf549-5e6a-4498-aa9b-115c5a6e267b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "173deeba-9291-418b-9106-3494396ea7e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee15358-34fd-4363-983a-d2796e223cf7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ba5dfe02-ca8c-478b-b650-417e39b83c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392a2ec5-4a64-43f0-8847-e17d9d4e8d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "437fbeac-e039-45f4-aa9e-55bd6875a048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746828a-50a4-403b-8046-a95eedaacc10",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86b69f-9246-4b79-a164-a053ef0db844",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9d7566f0-e85a-42b5-a98e-60d50d5d4531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ce2d8f-eb51-4ff1-b39a-74804f7c6d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60b0d9d9-bb6c-46e5-a288-77a14d860ffc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5de4abb3-a93e-42f7-8d1c-e491e01cf299",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "224ca110-938e-443c-8747-a9c4548c3dac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e57423-ddd4-4942-bd93-f8a4aaf07c7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dca5966-499f-4f45-a7eb-df11a330e1bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94ef215d-9a29-4637-9a05-1d7fa7a785da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e48a05aa-02a2-4f66-8e98-f355d7330978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5b6ff7c-653d-463c-a78b-94dc0af49adf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0c9d93c-95ea-403b-bd54-8802ef3d65a5"
            }
          }
        ]
      },
      {
        "id": "e07265cc-d1e2-423b-8f79-4001a251c652",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "58badce0-c0c2-48cc-8d82-63c3db7bc3db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89e48c42-69d4-40ca-b925-abe3a93f8a4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac27c56f-44ab-40fd-9970-ab4c398f2724",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12d1cb1-f23f-4c8a-bf69-65bc038b1d0c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3505fb45-48ce-4b50-8978-e6c61423cb30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3619d734-08f4-4f47-a128-b121aac20573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20a9a939-7ae5-4118-9a65-b94a7c613db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798cf4ff-a31c-4e64-a123-d4d5a70e868f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad99c8c8-86cf-44ba-81f7-fefecafdb460",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5b142b-4b66-4ead-9f85-0fbfcb6ed338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c75a3-5777-4e7c-b2a3-e5ba82919905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "777cbaff-73e5-435b-b430-73eff9f05dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a6c5fbb-918b-4f1c-b3b7-7a5bf2cfcb86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9023b54-9ad6-4011-8a11-40fa17f5de7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3b18c6a-9f93-4048-bbf1-b818e47d7906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b19440e4-2105-4478-a58d-7c53e7d1509e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "172a856e-d4b9-4e40-baef-10cf93b0a34a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "945c46a0-1865-4002-bff0-7728ccd8d877"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "626701af-69e9-4efd-97c4-a013b1217e92",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7531233-3470-41f7-abc2-503f47a90594"
            }
          }
        ]
      },
      {
        "id": "6b38a91b-dfb2-40c0-b008-3827faf543e9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "92aba3ec-231b-414c-bcd1-c9d48d17be72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cfaba36-1ecc-40d7-bdf5-5b29728c7d91",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df48a7e3-2fc6-45dd-a8d8-421da5a342a5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6f2317-cd8c-4915-9c6f-c0802c2fface",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91befbd1-6058-49f0-98d7-4ec2b23f15dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "559256b4-bd94-4aea-84a9-4bb60fbce5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "464cd953-f3ab-469d-a788-e15105a4033c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8984130-ba3d-4cde-a727-b99f149cb84e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf9b873-a2f5-45cb-b2ba-7bdd05222ee2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "39ae5457-6774-44ff-a7b1-1be90aee58f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a3bf13-3225-4f95-b241-ca2f3e4189fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc999a5d-81b3-417d-9f96-0b55aae7201a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d90301c6-7a89-4e06-87ab-c8fcaf6ce5a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7eae67c3-6fa7-4d22-8cc7-9990f78813b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4243f76b-81bf-4ff7-8b3e-bf3f871bacdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c4e24f7-5af4-4f8d-ac8a-2744e473e845"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c2780b1-3d25-474a-b466-4e1b74738b9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c36df298-e3c4-4ba6-95e0-42b062b4c1b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79e7947c-2dca-4bfc-98b4-627a97afb413",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "318db198-88a1-4a18-a10e-968e935ae4f3"
            }
          }
        ]
      },
      {
        "id": "6d5824c8-ab4d-49f3-a11e-9bf7e6a8a8ce",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "164bf399-e72d-4142-9506-7b1fa08e8556",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59b6eb93-1f15-4254-a2c9-41fd8738a671",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bec69df6-d270-4670-81de-39cfa14dc360",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07e7b3d7-3ab5-4a59-a3a5-0200d9abfad7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95af9108-64cf-4947-bc8c-17a1f3eb14c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 18.20769230769231,
      "responseMin": 6,
      "responseMax": 488,
      "responseSd": 43.02337399669124,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684370231139,
      "completed": 1684370246331
    },
    "executions": [
      {
        "id": "2210099b-b2a8-4119-ae93-8af886f00dbb",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f078a799-7ecd-49e8-bbdb-4dad98a75235",
          "httpRequestId": "f35b0642-9263-4754-9811-017773a5a67b"
        },
        "item": {
          "id": "2210099b-b2a8-4119-ae93-8af886f00dbb",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "32694e52-a03c-4863-b450-227d7a86ee61",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "24e659bb-ed39-4ffc-8cba-c35dcbb52e21",
        "cursor": {
          "ref": "28127648-3c30-4d55-91d8-01aacc8edee1",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59886c15-f384-49e8-8c22-6a81d69cc940"
        },
        "item": {
          "id": "24e659bb-ed39-4ffc-8cba-c35dcbb52e21",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "a51fde07-6a3b-4943-be67-cdb61262c67e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "12e05344-5205-47f4-b87e-8dba5812b58f",
        "cursor": {
          "ref": "c44da8c2-a776-4b8f-a9bb-130250a3f51c",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "25a7cb0c-8434-43b4-ab4a-4545f6f7707e"
        },
        "item": {
          "id": "12e05344-5205-47f4-b87e-8dba5812b58f",
          "name": "did_json"
        },
        "response": {
          "id": "2aa8731e-499f-4351-9942-630c38558d70",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3184d0f2-0603-4ce5-9e2f-a6e655c21983",
        "cursor": {
          "ref": "f41a5f8c-cee9-479f-9b83-039e001e0fe9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2dc893be-cb67-4e0e-be5b-aec8a01932ac"
        },
        "item": {
          "id": "3184d0f2-0603-4ce5-9e2f-a6e655c21983",
          "name": "did:invalid"
        },
        "response": {
          "id": "80fb3d0d-9402-46aa-a652-1cea2b5c47b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3184d0f2-0603-4ce5-9e2f-a6e655c21983",
        "cursor": {
          "ref": "f41a5f8c-cee9-479f-9b83-039e001e0fe9",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2dc893be-cb67-4e0e-be5b-aec8a01932ac"
        },
        "item": {
          "id": "3184d0f2-0603-4ce5-9e2f-a6e655c21983",
          "name": "did:invalid"
        },
        "response": {
          "id": "80fb3d0d-9402-46aa-a652-1cea2b5c47b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db06e503-dfbc-4d4d-a05a-6d417384b807",
        "cursor": {
          "ref": "a9086fac-1b81-468a-95ce-feca6f33a7f7",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7bf5f81c-f918-46a5-8f6e-8d0a5ed5b9fb"
        },
        "item": {
          "id": "db06e503-dfbc-4d4d-a05a-6d417384b807",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fafe783b-3c81-4c7e-8187-d96465fa4cb0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 52,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0eb7b8-5f3c-44fc-90e2-e8b13dc1dd4c",
        "cursor": {
          "ref": "31cfd6ee-5121-47b6-b512-3ff0baa418be",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d6ad4d89-2263-44ba-81f2-a9ed04e725e9"
        },
        "item": {
          "id": "fb0eb7b8-5f3c-44fc-90e2-e8b13dc1dd4c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "518e8ed9-b6ef-4039-98ed-69ac49f4f1b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f00916-8132-4f79-b789-5c0bb2aa313c",
        "cursor": {
          "ref": "e969fd21-79f2-4746-8bda-534d635de627",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9f607089-36cb-404f-8d09-d991b7905200"
        },
        "item": {
          "id": "e1f00916-8132-4f79-b789-5c0bb2aa313c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "70f1f27d-0b9d-4f97-bbad-a76bdaaafa8e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40027446-468e-41f5-87c0-890df70f7a38",
        "cursor": {
          "ref": "5dfeb786-6db5-4ba6-bbb1-2cb0e7a1aaea",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "43c1c259-9835-4d19-9846-97307eef754f"
        },
        "item": {
          "id": "40027446-468e-41f5-87c0-890df70f7a38",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "422bcd72-22c1-4da2-85a5-bdb71662ec08",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40027446-468e-41f5-87c0-890df70f7a38",
        "cursor": {
          "ref": "5dfeb786-6db5-4ba6-bbb1-2cb0e7a1aaea",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "43c1c259-9835-4d19-9846-97307eef754f"
        },
        "item": {
          "id": "40027446-468e-41f5-87c0-890df70f7a38",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "422bcd72-22c1-4da2-85a5-bdb71662ec08",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffba58af-1099-46b4-9a04-58aae15b8f42",
        "cursor": {
          "ref": "6106f757-03b0-4346-af42-aefbc48151e7",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c26bfd42-b2b9-4795-b649-aef9012af981"
        },
        "item": {
          "id": "ffba58af-1099-46b4-9a04-58aae15b8f42",
          "name": "identifiers"
        },
        "response": {
          "id": "e43e8b0c-6721-4d7e-a06e-509ea8bc44a8",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d85759-6606-4ad2-af37-4b59f655fd9a",
        "cursor": {
          "ref": "030ebbd4-57ac-4a91-8018-a1039f96f17b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6da2fed2-8218-4b3b-8e40-904aea626a8e"
        },
        "item": {
          "id": "44d85759-6606-4ad2-af37-4b59f655fd9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78485c79-d4eb-464c-9207-60c985b79910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d85759-6606-4ad2-af37-4b59f655fd9a",
        "cursor": {
          "ref": "030ebbd4-57ac-4a91-8018-a1039f96f17b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6da2fed2-8218-4b3b-8e40-904aea626a8e"
        },
        "item": {
          "id": "44d85759-6606-4ad2-af37-4b59f655fd9a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "78485c79-d4eb-464c-9207-60c985b79910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ace6bd-7b9f-42f6-97e1-58892387c10d",
        "cursor": {
          "ref": "113bf97b-86d6-45e5-bfb5-c6ffcd9421b7",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d90cbde3-b4d8-46a1-aece-bcb288880f96"
        },
        "item": {
          "id": "e8ace6bd-7b9f-42f6-97e1-58892387c10d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "68aafd3e-6ccb-4db3-a21a-de33c626b4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964a8074-695c-4d17-9e7d-149c5310c1d9",
        "cursor": {
          "ref": "0184ee38-0982-4cfb-9742-970212e74696",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "17165710-1c4f-4f3c-b2bd-47e604735e53"
        },
        "item": {
          "id": "964a8074-695c-4d17-9e7d-149c5310c1d9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "73d20af7-e5f3-4686-bc95-ed28605d6553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95be4d18-bf7f-4071-b4ef-b140eac6f212",
        "cursor": {
          "ref": "30cbf47b-0caa-4a42-9b41-47504aa39296",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "64110852-ec0a-4013-ade6-3689683be5e8"
        },
        "item": {
          "id": "95be4d18-bf7f-4071-b4ef-b140eac6f212",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "638a874a-4530-427d-8b32-8a1ccd3840ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45cb65-d7d3-4fb9-b7f2-d7fa7f1871c1",
        "cursor": {
          "ref": "c7a8427f-371a-47a9-bd6f-7c2cfebb0dd6",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f270652e-a560-40ab-b86d-0d389b47cd5c"
        },
        "item": {
          "id": "0c45cb65-d7d3-4fb9-b7f2-d7fa7f1871c1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ab669c48-e2f9-43c9-b9fe-fc30dfbeca55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eafd47-6dc0-4d61-8561-4002ed412d7f",
        "cursor": {
          "ref": "4752b539-ca64-420d-8145-ad1967de37c6",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9a54dcc7-881a-468e-a18d-1dfe57c2593d"
        },
        "item": {
          "id": "60eafd47-6dc0-4d61-8561-4002ed412d7f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "12a852ca-bee0-44d7-9164-d3bd53315204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1569ee56-095d-439c-8e52-7bb51bec1e87",
        "cursor": {
          "ref": "c8570fcc-51cb-49c3-ad3f-8e0e5cc11ff9",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0be46b6e-91df-4b5b-a75f-be01e5c8563f"
        },
        "item": {
          "id": "1569ee56-095d-439c-8e52-7bb51bec1e87",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f3b7bd09-f8d2-4880-9556-11228ed4bedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88de29e-bd78-4a3e-8a93-1c9c979c7340",
        "cursor": {
          "ref": "cfdca898-003d-4e83-a726-2a2d6939dc1e",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b68bf0e1-19bf-4250-b10e-3b692a4fec64"
        },
        "item": {
          "id": "a88de29e-bd78-4a3e-8a93-1c9c979c7340",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "56108a4d-94bf-4b2b-bd88-e30fd2e35a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24764fe9-9a18-4a4c-987d-bf6a72d1a34f",
        "cursor": {
          "ref": "42954322-45dd-4428-a59c-a526c8347df8",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "17d18716-7835-4e96-9b11-d52d1a7f41c1"
        },
        "item": {
          "id": "24764fe9-9a18-4a4c-987d-bf6a72d1a34f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d24f18f3-d86d-4473-b2bf-3d1dc969743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c477b65-7828-4e5c-9ba1-8f0aa82475d9",
        "cursor": {
          "ref": "c5971ec0-aba3-437c-b2a6-eb80d4d5c46d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f4f89ade-cf7f-4cb4-870f-ce88ed845e55"
        },
        "item": {
          "id": "2c477b65-7828-4e5c-9ba1-8f0aa82475d9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e22190e1-1b2f-4461-b854-94533aea9fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e62e6a-233a-4267-a64b-d3fe957ea05e",
        "cursor": {
          "ref": "6fb085f3-dfae-4a22-8384-90b224b9c3c3",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bbb38a1a-1c8d-4a80-bab7-782ba6d05320"
        },
        "item": {
          "id": "40e62e6a-233a-4267-a64b-d3fe957ea05e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f542b159-2d4e-4aab-ace7-b263290447d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ae38b5-be1c-482e-aa33-9112e1bc6672",
        "cursor": {
          "ref": "edf2ef50-db98-4db4-a064-ed885a216387",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6d0d723a-b3fc-40ce-bece-320c94b64958"
        },
        "item": {
          "id": "88ae38b5-be1c-482e-aa33-9112e1bc6672",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fd5b1a79-0911-411c-aa92-5f30ba3593d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd5acc-7aee-4246-bec6-1d7668afe92a",
        "cursor": {
          "ref": "ffacef4c-3856-49a6-8c01-cd7cc67c389c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fbaf910b-4a05-411d-8496-a89b26696063"
        },
        "item": {
          "id": "02bd5acc-7aee-4246-bec6-1d7668afe92a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d2529c8f-793a-448c-806b-c44afd8ae3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0634153-a90f-4c63-b862-c5c03c1d5d65",
        "cursor": {
          "ref": "13b1b1a9-7531-44c2-951d-b28b20ac8285",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5f956b6c-0d86-43f8-9c50-3424ed1e447a"
        },
        "item": {
          "id": "d0634153-a90f-4c63-b862-c5c03c1d5d65",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f0d5fbdc-60d4-485e-a8a2-596d45a701d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c838c78-e0b0-4e78-b7c7-7ae8f0568ce8",
        "cursor": {
          "ref": "9deb58e6-f0d2-4ab6-aaf2-1ba10a9eee9c",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4f0c9b99-2a11-409c-af4c-ce5865759fa3"
        },
        "item": {
          "id": "8c838c78-e0b0-4e78-b7c7-7ae8f0568ce8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "caef3495-b1b9-4ae8-bba2-21fe1feab304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c671f64-1cdd-4876-b4dc-b70a7a81db16",
        "cursor": {
          "ref": "29776eb0-99b0-48b9-a772-b4c19481c2ee",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d066b45d-44fb-4e58-8156-d4fde8cb971a"
        },
        "item": {
          "id": "0c671f64-1cdd-4876-b4dc-b70a7a81db16",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "74445f52-1abc-4d0b-b589-dff7bc52e29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5cb418-a117-495b-a2b7-ec91e47726f2",
        "cursor": {
          "ref": "62904a59-a437-4f67-aeb6-1cf22894b571",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b79f3a30-928b-473f-aa12-0b563dcb0997"
        },
        "item": {
          "id": "bc5cb418-a117-495b-a2b7-ec91e47726f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8ff2185f-287a-47be-910a-bf217fd6d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b92b0c-0dea-4ab8-afb6-a4fcfb04c885",
        "cursor": {
          "ref": "b7aa4ebb-325e-4ff8-af9f-ee8d1c1d831d",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "28d1ce2f-0690-4241-89bf-e03be36f76cb"
        },
        "item": {
          "id": "89b92b0c-0dea-4ab8-afb6-a4fcfb04c885",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3f23790f-9565-4f02-987f-370a31a1ae9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777517d2-2117-404e-a7a2-1a1e5c6983bf",
        "cursor": {
          "ref": "646894d7-64dc-4212-ab1a-aa074340b356",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41b2c4e7-c7a7-4c9c-82bf-2b5d99f42304"
        },
        "item": {
          "id": "777517d2-2117-404e-a7a2-1a1e5c6983bf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f91bccc7-4ee2-4104-9933-1c2259554d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611eed40-af24-4607-a582-9882f825d8b9",
        "cursor": {
          "ref": "e8c095e5-7385-45ca-a8a6-43d4f4b2cd8e",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c1fbc1d-bc94-490f-8343-f2a28021ecaa"
        },
        "item": {
          "id": "611eed40-af24-4607-a582-9882f825d8b9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c884fe5e-3788-4166-898f-347042a53d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5145a20-17db-40a6-9ad9-914bbe3b410e",
        "cursor": {
          "ref": "ced5d0ad-d936-4d82-b8fc-bc018ddcef8b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0f67db0c-8667-43fb-93e1-61f4ffc225e2"
        },
        "item": {
          "id": "b5145a20-17db-40a6-9ad9-914bbe3b410e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ac788372-6ae4-4fe4-8442-2f6bfa2286ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f662d053-2d4a-47a7-a8a1-c50db9e2b0de",
        "cursor": {
          "ref": "a5c4da12-11b4-47d2-a3c2-02cd733f522a",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2dbf2416-f34e-4b5e-a20d-a44327939d30"
        },
        "item": {
          "id": "f662d053-2d4a-47a7-a8a1-c50db9e2b0de",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cebf0e86-2b86-4d92-ae4f-df0e9a3bee7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6235900f-3c69-4f67-a73f-6025584052f9",
        "cursor": {
          "ref": "5a6a3bd6-fcfb-4aaa-9422-d882c5b357ac",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75ca542d-0e19-4c58-86e4-3cdc834c7737"
        },
        "item": {
          "id": "6235900f-3c69-4f67-a73f-6025584052f9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "561f30bf-d1ac-4029-8eb6-5d0bd8a1ce64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8e335d-31ce-4b2f-b505-4860ace46f56",
        "cursor": {
          "ref": "7dcdaa07-587c-404a-8d29-ea1bd8171ba9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e4af970-4eb9-445f-8861-24d5a71d69b0"
        },
        "item": {
          "id": "6f8e335d-31ce-4b2f-b505-4860ace46f56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c2155651-2cd6-4976-a31e-4487ff570ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d67746-1d5c-4be7-8527-e6b00644c5a3",
        "cursor": {
          "ref": "5732262e-4975-4af6-be25-9802bf9f1362",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6906b350-274b-476c-a86f-46f726393cb0"
        },
        "item": {
          "id": "09d67746-1d5c-4be7-8527-e6b00644c5a3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e456d2a7-5f91-4e97-bf11-66a2e9f5b8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdf9aa7-7e92-45b5-96ab-3b7b56aac784",
        "cursor": {
          "ref": "0b5c3c33-6385-460c-a65c-604422437b31",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9ed44b91-3676-40bc-b213-ebebac6db257"
        },
        "item": {
          "id": "bcdf9aa7-7e92-45b5-96ab-3b7b56aac784",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0defc942-6777-41b4-80da-4c9236f536c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f7ef04-0ac3-4fa3-9bc3-e085e638429b",
        "cursor": {
          "ref": "ced3d7d7-4e33-44cf-a914-9b260c5adb61",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b31ee9a-3a0d-4473-bc04-2e2d521f4019"
        },
        "item": {
          "id": "89f7ef04-0ac3-4fa3-9bc3-e085e638429b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bb5b4696-32a0-420c-94a9-4593829efa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c934fb-4265-43d1-8a2f-64afa49ee612",
        "cursor": {
          "ref": "8a35ddcb-e8fd-4643-ab1e-fd0f5001f571",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e42a7800-4966-4887-a8fb-57bf9bd89f69"
        },
        "item": {
          "id": "37c934fb-4265-43d1-8a2f-64afa49ee612",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6793a4a8-6cb2-4f1c-a53a-f3907e4f9a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3038d10d-c9b9-4c41-a3eb-bd1439134870",
        "cursor": {
          "ref": "78f87708-2cc4-4e2c-b978-8cd7626efeb8",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "41f31df9-f5b2-4179-a25e-0f922ffef6dc"
        },
        "item": {
          "id": "3038d10d-c9b9-4c41-a3eb-bd1439134870",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e938e4d7-efe0-43ae-b7d0-628fde6fa5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc58ddf-9592-45f9-a9f8-14735f9bc305",
        "cursor": {
          "ref": "275c1884-dafb-4ad1-9a56-44630f0f4afc",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "de1ac5b6-bd34-4f0b-9279-952d700756be"
        },
        "item": {
          "id": "5cc58ddf-9592-45f9-a9f8-14735f9bc305",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ee8007dc-4f22-4383-87d6-d932158dbe09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac24d164-25a1-49ca-a9fa-703362067a88",
        "cursor": {
          "ref": "7d66ddb1-2dbb-429d-8ade-9f61ff543981",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7afd4ab2-956c-43c3-b712-ef6ee12cfe2d"
        },
        "item": {
          "id": "ac24d164-25a1-49ca-a9fa-703362067a88",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7612638b-677c-4a45-ab58-4d53c53a9480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcf01d8-371c-4b2a-8ee2-8d5d1f746933",
        "cursor": {
          "ref": "83272199-2bed-48f2-b9d2-3145817243af",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1beb4222-f634-42c1-b621-699854edbb6b"
        },
        "item": {
          "id": "5bcf01d8-371c-4b2a-8ee2-8d5d1f746933",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "723be197-078a-4b18-b85d-99c914bef99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d36fbfc-a74d-4463-bbac-2896f20a38af",
        "cursor": {
          "ref": "34f403d4-0e4f-40c5-8eae-cca86a1c0e6e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "020278fe-69e7-4344-81fa-848d3d62f4c1"
        },
        "item": {
          "id": "0d36fbfc-a74d-4463-bbac-2896f20a38af",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ff0a8106-f5bf-4134-8611-835bb5b95a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9722aff0-cbda-44c4-a11d-63d7f5ca40a7",
        "cursor": {
          "ref": "6f079605-c4b5-40b1-be9c-eb024e4edf21",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "812ee95d-df79-4dc8-9d4e-f9c2da43ec56"
        },
        "item": {
          "id": "9722aff0-cbda-44c4-a11d-63d7f5ca40a7",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8bd86ce8-99bc-4eb6-b9d8-0c8b4a17dabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e949f-d666-4cbc-8586-83ee3309f97a",
        "cursor": {
          "ref": "46d85366-fdf3-41ae-a48e-c64bc1ecf588",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2416eac6-390a-4606-a816-bb326904e5af"
        },
        "item": {
          "id": "bc6e949f-d666-4cbc-8586-83ee3309f97a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5ae02c9c-f325-4bab-a16b-1b500703b390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7648900-f48a-44ff-8938-65c456b84de5",
        "cursor": {
          "ref": "94509d7f-db00-4678-a78d-7f9802a748bd",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "45e8bcd4-c409-4806-8eb3-5f3d33884806"
        },
        "item": {
          "id": "e7648900-f48a-44ff-8938-65c456b84de5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b0d5ac3e-130c-4bbe-ab6b-9ec49a8a3a33",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb84583b-f450-4bc5-832c-943ee1c5a95e",
        "cursor": {
          "ref": "fa60d806-9660-4844-ab94-7c20e995dbfb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "97714cb2-9ea7-46de-a78f-9e2b79d2ba3b"
        },
        "item": {
          "id": "fb84583b-f450-4bc5-832c-943ee1c5a95e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c1655c70-6260-42a9-90a9-5d581c82df34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f721f9-8daa-4210-bdaa-eb4566a3d386",
        "cursor": {
          "ref": "647c305a-04bf-4dd9-a138-7850b47335e5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f028af86-cf77-4cd3-b2e2-805689959778"
        },
        "item": {
          "id": "a0f721f9-8daa-4210-bdaa-eb4566a3d386",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "12124892-49de-4ff6-b710-4178572e6fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1031518d-6e4d-4cd7-a502-04c297153259",
        "cursor": {
          "ref": "70900202-749f-449d-ad58-0b9819b31fd1",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8aff9732-ac47-44b8-aa15-ada29ddc7663"
        },
        "item": {
          "id": "1031518d-6e4d-4cd7-a502-04c297153259",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1162aa00-4e02-48ca-970d-ae17fc77a829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ee19bb-17db-4eab-9931-040a645ebe18",
        "cursor": {
          "ref": "e729c0df-bc37-421c-aa70-7de8740b56ce",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "86e9feb4-7d0c-412f-9228-92244294627f"
        },
        "item": {
          "id": "64ee19bb-17db-4eab-9931-040a645ebe18",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "29fd8dc0-993b-41cf-9428-3d563dae055f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89676ef0-824c-4c61-b948-860f5a0cbe25",
        "cursor": {
          "ref": "1f5e8be2-65c4-4319-bafa-a6ef278674b3",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bb2fb32a-8d10-43c2-91ea-c21d06aa08d6"
        },
        "item": {
          "id": "89676ef0-824c-4c61-b948-860f5a0cbe25",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "63e53709-8171-4319-a440-afc17983a80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f90706c-68fc-48a6-8047-829c26ab64e4",
        "cursor": {
          "ref": "6b2ab9c2-c278-4544-8cde-4e4c6c83936e",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "647f2618-aa01-4301-b7b7-c2c66ed10042"
        },
        "item": {
          "id": "6f90706c-68fc-48a6-8047-829c26ab64e4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "25733bd3-0b56-4501-8e1e-5ae56c47a941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319b862b-402f-4a3d-9d3e-2d7293d53a7f",
        "cursor": {
          "ref": "01fc324b-c805-4366-b06a-df31aaac2fa1",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c3cf909d-e73f-4054-b026-f97ca024823d"
        },
        "item": {
          "id": "319b862b-402f-4a3d-9d3e-2d7293d53a7f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76ab9030-1c2e-4500-a54c-77d755d8ff6c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044a87b1-79e2-438a-a028-a071aa5d6c22",
        "cursor": {
          "ref": "eb144f44-0091-4384-af8e-e2eb6d97de9f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3c920074-604d-4a5f-8142-ead51951b8a5"
        },
        "item": {
          "id": "044a87b1-79e2-438a-a028-a071aa5d6c22",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9aacbddb-f95f-46d5-bc41-c0e6d465433d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdd6e60-e115-4dda-b6bb-5175504dc669",
        "cursor": {
          "ref": "883c9165-1bde-446a-ba3b-35e060469c78",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a81c0fed-ec2a-46c3-96f9-f7759fd94b4c"
        },
        "item": {
          "id": "dbdd6e60-e115-4dda-b6bb-5175504dc669",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f07c391-9869-45f5-a0b8-c0f30aa638a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edf148f-f77d-450d-8de3-682aa471324f",
        "cursor": {
          "ref": "7396c774-6518-42bc-9aae-7a5ff603ccea",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9b7633be-87ad-4cbd-82df-484cb605222f"
        },
        "item": {
          "id": "9edf148f-f77d-450d-8de3-682aa471324f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f6f24bdd-8794-4c59-bf1c-e3cc7d5123ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7a7d83-7be2-477c-9bd7-8cc9f9e8a053",
        "cursor": {
          "ref": "de60174f-9d41-4a2f-8ff0-9a070f0d9ed7",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81e07406-0287-4c9e-ada6-2e456cdddecc"
        },
        "item": {
          "id": "fc7a7d83-7be2-477c-9bd7-8cc9f9e8a053",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c804f96d-a251-4d8c-b51a-e4ac730eee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b73ce4-ca44-46e1-94ad-41ee6685524b",
        "cursor": {
          "ref": "9b07daac-db3c-42c2-b3f4-37823da00ad0",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f11d8cd4-51f4-47d9-bc42-44c02c28d92b"
        },
        "item": {
          "id": "82b73ce4-ca44-46e1-94ad-41ee6685524b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "55bdf9ba-b79a-4619-8734-a5e6132f0877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b766a9c7-42d1-4a3f-a6a5-0fb740f43bcd",
        "cursor": {
          "ref": "d9672142-60e7-440d-a24d-522c720ce87c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c8792c8f-45fe-4f78-a116-ad7237344c35"
        },
        "item": {
          "id": "b766a9c7-42d1-4a3f-a6a5-0fb740f43bcd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6c4c5fdb-5324-4545-ad4c-30e328f3a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48a8576-67b3-465c-9bd8-f23d1adbda1b",
        "cursor": {
          "ref": "a396302d-7fd4-47e1-8e11-db3d222d2ad2",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "19f8bccb-1122-4624-b1d6-584c3d75f7ff"
        },
        "item": {
          "id": "d48a8576-67b3-465c-9bd8-f23d1adbda1b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0c80e8d5-77ec-40fa-b215-94eb90dedee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d5d7c6-beee-4cec-be3d-930db0e44289",
        "cursor": {
          "ref": "b74868d9-0eb2-42ba-b87f-f1250b050e0f",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "adea54a2-3616-4c82-802d-c314202b32e3"
        },
        "item": {
          "id": "f1d5d7c6-beee-4cec-be3d-930db0e44289",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6c3ae765-a790-4b6b-8868-9775beee3931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33f86f2-b864-4e0c-8e1a-5b0cd3414e3b",
        "cursor": {
          "ref": "e8f42f07-0786-4b60-a9f8-4a54335cf3bf",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7b9dce93-c5f8-4f66-994b-99f5f8ab7206"
        },
        "item": {
          "id": "f33f86f2-b864-4e0c-8e1a-5b0cd3414e3b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "00ce2498-48a7-409a-9410-e1821feb9621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae3d21f-99d9-4732-9dd8-8bde26b02976",
        "cursor": {
          "ref": "0836ea31-c3cc-4ded-8801-1a4780926f07",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9d32e6ce-66c2-44ef-bf38-d77f71c7f4cb"
        },
        "item": {
          "id": "3ae3d21f-99d9-4732-9dd8-8bde26b02976",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1fe680d2-99aa-4f88-be81-712a3c323a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6374d353-472a-45d5-9fe2-4b8f1bda1d5c",
        "cursor": {
          "ref": "36cf1171-4c13-4559-bbde-c1806bd08a2c",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "55cfe558-56d8-460c-ba76-08aabc73719d"
        },
        "item": {
          "id": "6374d353-472a-45d5-9fe2-4b8f1bda1d5c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "487c64de-c426-49e9-abf6-86385bce184d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82548761-dc1a-429b-988b-15bb085200f2",
        "cursor": {
          "ref": "2858b534-5136-40f7-8e30-12e5ea305bab",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3e53a852-d332-4192-b3d5-bde75cdb404b"
        },
        "item": {
          "id": "82548761-dc1a-429b-988b-15bb085200f2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "84d24cf4-24e6-4c36-bd0b-2f968188cf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888102a6-b52f-4b31-9806-8b0285b27b69",
        "cursor": {
          "ref": "4373ba29-a92d-4faf-9cb9-1fa20fbd6547",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "35733c3c-6d3b-417b-939d-59399269d4c0"
        },
        "item": {
          "id": "888102a6-b52f-4b31-9806-8b0285b27b69",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c363e6a6-2582-4532-b004-a8e537b1ead7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd86f055-2a12-492c-b66a-dacc328b7684",
        "cursor": {
          "ref": "158aa4ff-ead8-4ffd-816e-e96b358ec2a9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2b7a736f-c2d2-48d2-8489-0bdb3288ee12"
        },
        "item": {
          "id": "bd86f055-2a12-492c-b66a-dacc328b7684",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "85638c7b-5a4c-4f0a-97f4-514a85b275af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e0c197-53f1-4d54-9aca-207886b6aef4",
        "cursor": {
          "ref": "84ad988c-a28d-4fd8-9eaf-3c7fa0fc020b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2ff49a97-e46f-4d7b-80a1-43b29a0e2b60"
        },
        "item": {
          "id": "06e0c197-53f1-4d54-9aca-207886b6aef4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3053643d-6291-4ed0-87e0-f44734ff0605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73d85c4-1f25-4d33-8cb8-4aff1817d8fd",
        "cursor": {
          "ref": "a875d907-abe7-41b1-be54-c31d8d5f4a25",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "007246cc-1354-4cf0-a6fc-3148892a3920"
        },
        "item": {
          "id": "f73d85c4-1f25-4d33-8cb8-4aff1817d8fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "461533c3-00ed-44e3-991f-98cf59188915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e3d19b-bd84-4014-a961-96d957be6ea3",
        "cursor": {
          "ref": "c80a6904-1185-4785-95d2-2d78fadb2375",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5beada06-2450-41be-85a4-f1287b58aeb7"
        },
        "item": {
          "id": "d6e3d19b-bd84-4014-a961-96d957be6ea3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bef06c80-2aab-4c42-9395-4cad986efcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f1ed0e-3527-4a52-ae4e-41585cf357af",
        "cursor": {
          "ref": "61f69d74-2b5f-4689-8541-a8d872ac35fe",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "57b9fd22-66d3-49d8-82c1-19d88d0011df"
        },
        "item": {
          "id": "e8f1ed0e-3527-4a52-ae4e-41585cf357af",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "afd21e7f-4b33-4e58-baa7-790084042c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c6944e-46d4-4c09-b3fe-3b46c2feb38b",
        "cursor": {
          "ref": "67fa65da-576b-499d-8629-7aa4cfd39a8c",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f48ba4d0-6a13-4584-af88-ae088c77bb98"
        },
        "item": {
          "id": "62c6944e-46d4-4c09-b3fe-3b46c2feb38b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "93cc5fa8-ad11-4526-80e4-c9fc51c2348f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9d9a0a-d89b-4fa6-90a2-23cd15eb1cc9",
        "cursor": {
          "ref": "2aa3b203-40df-47aa-9d01-204b4ba241c9",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "587bab51-6b2d-4fd5-9cfc-d1feed89ae9a"
        },
        "item": {
          "id": "8a9d9a0a-d89b-4fa6-90a2-23cd15eb1cc9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95b4e206-97d0-47d9-aae5-1f45d0f8b197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3fb527-418a-4730-8d25-2a532fa9b42b",
        "cursor": {
          "ref": "3cd7ee33-a60e-42b2-998f-dd8cb75ba502",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0b866dd1-322f-43ef-88d1-94af73fb80cf"
        },
        "item": {
          "id": "6c3fb527-418a-4730-8d25-2a532fa9b42b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49aeb79b-3cfb-47c9-bc8a-2838629f7f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a4a394-b14d-4802-874e-2d0793bf2662",
        "cursor": {
          "ref": "e9ba7d20-ab0f-48c7-a81a-d316ababa453",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d6eeab80-f48b-4cf8-b217-c0cabd9b1fbb"
        },
        "item": {
          "id": "67a4a394-b14d-4802-874e-2d0793bf2662",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c93a057c-4b0f-4f4e-8aa6-d875659b15ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b196e9-58e1-47ce-bd9c-af01d7dcddf5",
        "cursor": {
          "ref": "c912e8da-fd35-4fd8-889a-81e507c70b72",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b528d1a0-4960-479c-bf89-be0077566619"
        },
        "item": {
          "id": "77b196e9-58e1-47ce-bd9c-af01d7dcddf5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c6292cb3-ad01-4e32-b56d-98c87f2542b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237fe608-5927-4e42-8b1b-1057d49f02bd",
        "cursor": {
          "ref": "f92665a9-8ca1-45d4-9594-5a45b828a3f6",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9e114c8c-8f0c-4221-8725-8a81cabdd312"
        },
        "item": {
          "id": "237fe608-5927-4e42-8b1b-1057d49f02bd",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ec1aa18c-fc2e-4f2f-8236-858f5e827183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10f4938-7ed9-49a1-b467-825f548e3438",
        "cursor": {
          "ref": "718f600c-bf44-4a18-8247-b5eda9e794ce",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9fbfe81d-557c-4e1f-a0cd-c49b12ba53c3"
        },
        "item": {
          "id": "a10f4938-7ed9-49a1-b467-825f548e3438",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "472761a6-9ac5-4955-9207-849deb4e2897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce7d154-c154-4df0-80a4-c820c960c9bc",
        "cursor": {
          "ref": "9819ebc4-f12a-414c-9ae5-37a71adaadc2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75567540-2b3a-4b8a-97ee-2cb355fe47fd"
        },
        "item": {
          "id": "9ce7d154-c154-4df0-80a4-c820c960c9bc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fe646f00-b15f-40b5-9d91-cc5a15a5f0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7778be4-4d11-4dbd-99c1-7e0b1619b1b8",
        "cursor": {
          "ref": "0bb8b033-1b8a-4b94-b3d0-f1caff20444e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c7cec0ef-b023-43ef-83e3-f5c09da81dd4"
        },
        "item": {
          "id": "a7778be4-4d11-4dbd-99c1-7e0b1619b1b8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "041716e4-52db-4e15-8501-605a64a43921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32702fef-b2e6-4813-90b4-efe408302ea8",
        "cursor": {
          "ref": "37c1d59b-1a4d-4b51-82fa-649b0fa5674f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "70343bba-f745-4d61-aaa9-24a1615b730b"
        },
        "item": {
          "id": "32702fef-b2e6-4813-90b4-efe408302ea8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7d95816a-a66c-4278-a2dc-3962a94a13e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efff109a-458b-42ef-8549-3c787560f8d6",
        "cursor": {
          "ref": "7f136386-cbb6-4a5f-8103-fec6764f1cad",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9de2f8f-9b21-4c14-a566-18b33c2a6d08"
        },
        "item": {
          "id": "efff109a-458b-42ef-8549-3c787560f8d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e55df932-39fe-4a75-ad57-cfed62e6d658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304dcd17-5813-4fce-8e9f-5acb0d424ae7",
        "cursor": {
          "ref": "9874be81-fdce-4e1c-b8f2-54d2343b9e0d",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5e5d2940-9824-45eb-9cc0-e10b2e739c25"
        },
        "item": {
          "id": "304dcd17-5813-4fce-8e9f-5acb0d424ae7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "266545fa-868f-4e5e-a424-e6a6347cdfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7b842f-a2b8-4c20-8b8a-d713e30ab71c",
        "cursor": {
          "ref": "26d97f01-9142-4e74-ab6a-d52481dedfb2",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9d759cdf-042e-4db8-b9bd-e31542e2eaf0"
        },
        "item": {
          "id": "4a7b842f-a2b8-4c20-8b8a-d713e30ab71c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99b9a296-3b35-4a51-98ea-4d0d11c0de08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4e07e1-90fe-4c23-9286-e4c0cb7ed654",
        "cursor": {
          "ref": "6e0b8060-c43f-42d9-9f31-5325ad2dcccf",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3d963411-78fa-458f-b647-eadfe715075a"
        },
        "item": {
          "id": "4a4e07e1-90fe-4c23-9286-e4c0cb7ed654",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd08dd9e-2387-4201-a5bc-31cb88220ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3642b11e-cc81-48bb-8d00-d1a8f146df48",
        "cursor": {
          "ref": "5f07785c-6270-446f-aef1-3787d93b4ccb",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5b247623-d9ae-4f33-a3a6-b085eb9382a5"
        },
        "item": {
          "id": "3642b11e-cc81-48bb-8d00-d1a8f146df48",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e535d021-71f6-4222-89cf-5f00cf45a740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b76c63-2a8c-4266-a8c1-1b03ba4981e1",
        "cursor": {
          "ref": "d82af74b-4eda-4a4f-99ad-333e8a6e94f6",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9d31c3a7-2c2b-408d-be18-d974b5959610"
        },
        "item": {
          "id": "22b76c63-2a8c-4266-a8c1-1b03ba4981e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "49580f97-170b-4df3-9277-98cd517993a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a76211-2939-40ab-bee2-3a1c0e2b7f10",
        "cursor": {
          "ref": "90af93b8-8c5c-4ae1-8063-b56eaac702c5",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5e9726c9-c38b-47cf-94f2-7c98494efe25"
        },
        "item": {
          "id": "48a76211-2939-40ab-bee2-3a1c0e2b7f10",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8f124e6f-7917-49a1-801e-ec7f7c475cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db60136-a8cb-40af-84a7-4d531e4cb73a",
        "cursor": {
          "ref": "12215643-d14f-45f2-9e40-acb9a8652ef4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f165e0bd-af44-4997-8604-d8bc444db7aa"
        },
        "item": {
          "id": "0db60136-a8cb-40af-84a7-4d531e4cb73a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "547f7767-e49f-4b9d-a662-3697b2f08dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf9c4ea-e8e7-410a-82c4-ce494988e9c4",
        "cursor": {
          "ref": "6fda1587-4062-4fe4-8a48-be1fc5bd02cd",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "316dc57d-ddc7-4201-8b2f-f32bbe05ba32"
        },
        "item": {
          "id": "adf9c4ea-e8e7-410a-82c4-ce494988e9c4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "96a27f23-bd2a-4f2c-8f0d-8d3b510fbb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb0912-d15a-43e3-b934-385f491fb315",
        "cursor": {
          "ref": "05b9c151-ba21-4293-ad42-1565be966763",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8ddb125e-f628-40e1-a7bc-8f66c126b963"
        },
        "item": {
          "id": "e6bb0912-d15a-43e3-b934-385f491fb315",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c36e71bc-04ef-4d98-956a-78f688ad5f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6271a8-bb32-4e6b-a4a7-85e33b114ee3",
        "cursor": {
          "ref": "fdf4a233-2697-4b08-ab93-beb10d5dc7b7",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d548ba1-0133-491e-908e-3e42758c7a3a"
        },
        "item": {
          "id": "ba6271a8-bb32-4e6b-a4a7-85e33b114ee3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5cad5127-cd30-417f-85a1-ea5827243e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddc3a29-29c2-41a3-b6e2-bdd727ce9b64",
        "cursor": {
          "ref": "b6e9aadf-9e39-4536-963a-d55134a58610",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "764a14de-8fd0-445d-a36b-4216733f6af6"
        },
        "item": {
          "id": "8ddc3a29-29c2-41a3-b6e2-bdd727ce9b64",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1f31e0d8-1d6b-43e8-8d5d-489c0a04ac94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0582699a-1d6c-4c53-bf49-e12cd82fc027",
        "cursor": {
          "ref": "9101469a-548c-4181-9bba-b7bf08f6366f",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "601e66d1-896b-4a5a-8db9-47a869f9d4ea"
        },
        "item": {
          "id": "0582699a-1d6c-4c53-bf49-e12cd82fc027",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c249a529-048e-495f-9230-ded0c96e4c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8ed4eb-0247-4afa-9ae1-0fc154949527",
        "cursor": {
          "ref": "76ea3fdf-58e0-4ed8-a0f3-9f8d55bf9e74",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ce18c883-4aa0-41ea-97c9-d676e7cf8eb1"
        },
        "item": {
          "id": "ca8ed4eb-0247-4afa-9ae1-0fc154949527",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d84cba8c-2c7d-4e67-9956-ac427f64c335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b0620-8062-433c-af91-a0f846f716ce",
        "cursor": {
          "ref": "71bc3e9a-18b5-436f-9469-e0b39cb57de8",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "526ed8f2-d129-4596-be54-70eb1bb7a5bf"
        },
        "item": {
          "id": "4a8b0620-8062-433c-af91-a0f846f716ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca86e748-2733-4117-a995-cbce32813065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28911a6b-0e7a-4472-9d0d-ffbf683f8619",
        "cursor": {
          "ref": "df4b4750-2251-4383-a514-bb1ad751c2ee",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "45aa8bda-57fb-4d02-b7dd-4be2385c9de0"
        },
        "item": {
          "id": "28911a6b-0e7a-4472-9d0d-ffbf683f8619",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a98ec313-95a9-4ed4-a61f-4dfc42e38546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae35ea66-52bd-4874-83f0-92fb5c5c1dc5",
        "cursor": {
          "ref": "6eed2994-bbb1-4acb-8ad4-d53ce3e6c3eb",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4ef337cd-5569-4f55-9e2a-bd381102047a"
        },
        "item": {
          "id": "ae35ea66-52bd-4874-83f0-92fb5c5c1dc5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1a9992d8-33a3-44f7-b59e-4e126b636053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14be47a4-57b1-4595-a643-7cabb6164b9a",
        "cursor": {
          "ref": "f8a10bd3-7374-4cb0-b0a8-c0103f5c2f02",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "14f44423-c57d-4cd4-bcbb-2c64d4a75294"
        },
        "item": {
          "id": "14be47a4-57b1-4595-a643-7cabb6164b9a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9b903c55-5fc5-4d23-9444-434a02998f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf68b5f-fe61-4eaf-b9c1-02d23cc136ab",
        "cursor": {
          "ref": "231d86d3-9068-4218-b0e0-e38c7c02d844",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3449aefb-9ceb-440c-889c-8d615fd4bca6"
        },
        "item": {
          "id": "cdf68b5f-fe61-4eaf-b9c1-02d23cc136ab",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "505189c6-28d6-4d13-85df-331c969e0fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a0a1d4-c3a3-4095-866f-10f7d004c8ec",
        "cursor": {
          "ref": "e1ecdc7c-02e6-401a-a458-f32e4e6771fd",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "306e73c7-f621-44a9-89e0-43b777e58fd4"
        },
        "item": {
          "id": "d5a0a1d4-c3a3-4095-866f-10f7d004c8ec",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "677c839d-e651-4691-8c3c-ca4bcd6f7b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0ada2e-4426-49af-b0c0-ad1fd2622b7d",
        "cursor": {
          "ref": "de56d970-cd50-4031-a6f8-050bc9ec2c68",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9dd9820b-8916-430c-bb82-891c236a6a11"
        },
        "item": {
          "id": "fc0ada2e-4426-49af-b0c0-ad1fd2622b7d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "92258d96-b8e5-4410-9770-a2612fb3274f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d5ac20-d2a6-4a94-ada2-0d1e79920499",
        "cursor": {
          "ref": "eaa19577-b00e-4b98-accd-cf517636448b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c0e77106-d044-4561-a97e-3d97ff7ccbf7"
        },
        "item": {
          "id": "62d5ac20-d2a6-4a94-ada2-0d1e79920499",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "23a8503a-def5-492c-80be-bc92a3092871",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d3d992-5dae-47a7-97b3-ecb925d0a817",
        "cursor": {
          "ref": "8fc7ce4d-1fa5-4e61-8d12-3cab91b49101",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a5e72c5c-652a-4700-b8e6-2e45ab261627"
        },
        "item": {
          "id": "83d3d992-5dae-47a7-97b3-ecb925d0a817",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "de15bda9-2228-4c18-9bf2-6b7b1eabacdc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 41,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e17ec07-79ed-4738-909c-d2e4eb62e63b",
        "cursor": {
          "ref": "6b7cbbdb-ede6-48df-bf5d-df6f39f975ca",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "00af9c64-2031-4b76-9793-4a60e74e14db"
        },
        "item": {
          "id": "1e17ec07-79ed-4738-909c-d2e4eb62e63b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fc80ae88-ce5a-45b5-a47e-cf4d00e678f9",
          "status": "Created",
          "code": 201,
          "responseTime": 64,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "888ef48b-86f5-410f-ac89-a0c988c318a8",
        "cursor": {
          "ref": "f7b7b0e4-e6a2-409e-9255-509d7f6fa243",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed590dab-0f1f-4e00-9ce1-e397e59ce57c"
        },
        "item": {
          "id": "888ef48b-86f5-410f-ac89-a0c988c318a8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "831a98a8-2865-4d2a-8119-08a9929268a6",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cff7bf-3987-43b7-93ce-3e9804da8d50",
        "cursor": {
          "ref": "d9ae0f32-4b43-4703-ad0f-d1623a1bcded",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0203cb3d-c85d-4e5c-84b6-af9f225b66ff"
        },
        "item": {
          "id": "81cff7bf-3987-43b7-93ce-3e9804da8d50",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bf120a10-f116-4037-aa37-42ad2bb59a6b",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf648df3-2d6a-4ce0-82ed-e6596a293123",
        "cursor": {
          "ref": "9d050092-d6ef-4438-a766-62b569670ecc",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "42987d19-2b20-4fba-ac2c-c37a31cbbf47"
        },
        "item": {
          "id": "bf648df3-2d6a-4ce0-82ed-e6596a293123",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "900b1070-bf7c-4b02-82cf-f1a1ab411300",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f13b7b-a4ef-4a37-9fee-d4ae1115242e",
        "cursor": {
          "ref": "3457471d-f01f-4f6d-82f5-a75950f95c25",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "72d5a61b-a69f-4ea0-b941-3c80e007ca00"
        },
        "item": {
          "id": "35f13b7b-a4ef-4a37-9fee-d4ae1115242e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "81161cc7-759d-4852-91de-046b2f197c76",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3135e06-2d91-41c1-9e98-329d03d9d09c",
        "cursor": {
          "ref": "d419394a-658c-4892-a5d0-d0b6b7b04d9c",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c13359da-9a49-48c7-b44f-94ad315143a7"
        },
        "item": {
          "id": "e3135e06-2d91-41c1-9e98-329d03d9d09c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fbb7e003-19b1-48d3-95fb-afa273989d9d",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a78642-2e53-4aff-9204-c285cae726f1",
        "cursor": {
          "ref": "ea0c7c67-0efd-41fa-865a-b82e830f5b5b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4031774d-242b-411a-8a8e-6dcd04ccdbe6"
        },
        "item": {
          "id": "98a78642-2e53-4aff-9204-c285cae726f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f55ab80-a9a6-4128-95c9-f24cff81ee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a78642-2e53-4aff-9204-c285cae726f1",
        "cursor": {
          "ref": "ea0c7c67-0efd-41fa-865a-b82e830f5b5b",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4031774d-242b-411a-8a8e-6dcd04ccdbe6"
        },
        "item": {
          "id": "98a78642-2e53-4aff-9204-c285cae726f1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2f55ab80-a9a6-4128-95c9-f24cff81ee5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca107fc-304f-4184-a7c7-8fa77a6b790d",
        "cursor": {
          "ref": "69395610-c27e-4703-b604-f69f1bfb8d19",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "04737949-572e-411d-8817-775bf50a8289"
        },
        "item": {
          "id": "eca107fc-304f-4184-a7c7-8fa77a6b790d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fad47235-7c63-49dd-acb2-a28d566b8145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e12b2ef-a5cb-4015-9f31-2a3cb7a5c26d",
        "cursor": {
          "ref": "5c16fc64-e274-4d73-9d66-ad979954c3cb",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e92cb1d9-5e84-47b2-aece-b8518c3b5c2a"
        },
        "item": {
          "id": "5e12b2ef-a5cb-4015-9f31-2a3cb7a5c26d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3e92f04f-09d3-42bb-9709-e65d38a74acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6976c544-ce0a-460f-b897-c7e4b3d443aa",
        "cursor": {
          "ref": "877f7611-3db0-4f5d-a105-4568e00ecf54",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f6e12d4-b29e-4eaa-8cbf-91de0340f207"
        },
        "item": {
          "id": "6976c544-ce0a-460f-b897-c7e4b3d443aa",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "df7ac85e-a9a9-4fce-b3cf-4e9a39a5570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd485df-86e6-49f4-b69d-cc876ca14bce",
        "cursor": {
          "ref": "c84ec957-d643-484b-9566-43fd9f7acf37",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "aff55d60-043d-4f37-8b89-565ad647d990"
        },
        "item": {
          "id": "5dd485df-86e6-49f4-b69d-cc876ca14bce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "579c90d7-1532-4619-a184-237f88d52cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870b5cd8-62b9-43d5-9f4a-246074b68436",
        "cursor": {
          "ref": "025f9af2-83bc-4071-b3b2-2f4d0ba6954d",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a26625c9-b5ea-4edb-803a-f930d315cae6"
        },
        "item": {
          "id": "870b5cd8-62b9-43d5-9f4a-246074b68436",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "641b18b5-a9b4-48ca-aa6d-d54d20c08115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd63813e-8c89-4be1-9881-f9fc0daca688",
        "cursor": {
          "ref": "79f6763b-4f5b-494a-ae4d-0a158f3849c3",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "707fc592-e7e5-4dea-9461-6bba2022b615"
        },
        "item": {
          "id": "fd63813e-8c89-4be1-9881-f9fc0daca688",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9b780f82-2812-474f-a528-38854d17d78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36ce4ca-9996-4036-946d-70acc3f8bbfc",
        "cursor": {
          "ref": "04ca8b57-07c5-408e-94cc-cad24e3a1800",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c6b2abd2-9e03-4c62-b602-b46817e200b0"
        },
        "item": {
          "id": "c36ce4ca-9996-4036-946d-70acc3f8bbfc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "044ef28e-6a67-49be-93a1-4122f5db4134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a2230c-9a1d-428a-814c-1450e02272c3",
        "cursor": {
          "ref": "b5803715-467d-4d73-83da-195edc17d0c0",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "dde8edc8-b8f8-4266-b738-46c73e5d1115"
        },
        "item": {
          "id": "81a2230c-9a1d-428a-814c-1450e02272c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5095e21f-82e7-4663-8918-ced4c35aa056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04decf36-33d7-4842-9369-4bf352ce016f",
        "cursor": {
          "ref": "bba0bba3-6307-4ea1-a88d-7151ee2baf5c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0920a230-ca38-4818-b840-e84606372a1d"
        },
        "item": {
          "id": "04decf36-33d7-4842-9369-4bf352ce016f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bf13cca7-3bea-42ec-b96d-1e43be1361c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1457e3d7-4805-443b-96f7-f1749b701a75",
        "cursor": {
          "ref": "6fb5cc55-651d-426b-98ac-370e58df91a2",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2a135e13-ed5a-41bb-bd62-5392072f395a"
        },
        "item": {
          "id": "1457e3d7-4805-443b-96f7-f1749b701a75",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "09a2f6ce-dd7d-49b8-bd0f-2773eaf51a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13819897-9bae-4a88-b62e-07fd8332b25c",
        "cursor": {
          "ref": "033cc554-abdd-4cfc-91f9-b8f2d6b734c9",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "49b0f8e6-de21-4126-92ac-0ed3fa10a23e"
        },
        "item": {
          "id": "13819897-9bae-4a88-b62e-07fd8332b25c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "45ad6460-c268-4d8e-87af-ee27c8f46c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5da2d57-a497-4c75-adda-781700e76a38",
        "cursor": {
          "ref": "e2b1dca0-1a41-4880-b50e-f5c2c37cecf7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6664a2eb-6cc1-4d04-a5e7-bda5c1e512c1"
        },
        "item": {
          "id": "d5da2d57-a497-4c75-adda-781700e76a38",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cff1becf-ce6a-4727-a47f-f8a8ce78818d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d51576-ff51-4610-a92c-de88a9593cb6",
        "cursor": {
          "ref": "c1df5cf4-0775-4347-9eed-b7e56b0f0c11",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35f5ee79-4a3a-424b-ad28-9d3e84358054"
        },
        "item": {
          "id": "67d51576-ff51-4610-a92c-de88a9593cb6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2d2a1a45-436d-4eb9-9880-cd5af0bba981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b10fb8-f0fd-4b8a-8ebc-f8bb85392196",
        "cursor": {
          "ref": "97dbcda9-1d8c-4bbd-92ee-62f4a9211658",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "281bb381-44be-4bb2-94e5-170318e54d63"
        },
        "item": {
          "id": "d3b10fb8-f0fd-4b8a-8ebc-f8bb85392196",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "db44be92-0db5-47ef-b399-6a207d776371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcec611-e33d-44cb-a326-6f7e8ff42166",
        "cursor": {
          "ref": "0a19201d-d217-4ba0-831d-92f27436da15",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1c9dc355-e952-47d4-a4bb-f28f648c4348"
        },
        "item": {
          "id": "cbcec611-e33d-44cb-a326-6f7e8ff42166",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b17a7836-f61e-4670-8afb-a89c8da715d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c4e223-c527-42c9-b820-341b42c3b03b",
        "cursor": {
          "ref": "cf3ce4ea-c771-42da-9698-4076192c5634",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a1696183-7a84-4582-a752-f1f36025b775"
        },
        "item": {
          "id": "85c4e223-c527-42c9-b820-341b42c3b03b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ca47f0d3-a009-44f1-8bc7-310a2a9e3db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c790f946-c0c0-4f5c-9d70-4dd00532df24",
        "cursor": {
          "ref": "1ff03d66-45fe-43f1-826c-220e81a9f53f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e0af2cf-8b7b-4033-b5e2-5702826d4c85"
        },
        "item": {
          "id": "c790f946-c0c0-4f5c-9d70-4dd00532df24",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "676c2c8e-ba25-4951-b381-8c72ff404742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc04c34-a510-45a6-a76e-3048d8fc33ae",
        "cursor": {
          "ref": "69207263-0138-4d44-9f35-f44e7e5483ca",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "16b4a665-4911-48f4-a551-375e54062fba"
        },
        "item": {
          "id": "adc04c34-a510-45a6-a76e-3048d8fc33ae",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6ee54e5c-72aa-4af4-96ce-43eb31609113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb856e1-082e-461c-a220-17fc5cfdd74e",
        "cursor": {
          "ref": "04ead543-ee25-42e2-bac3-32c4660b429b",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "300da617-f99e-4d8f-9bfb-87319574b2de"
        },
        "item": {
          "id": "edb856e1-082e-461c-a220-17fc5cfdd74e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cdf0f360-d9b7-4c76-85a0-c6aea11f868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63541914-631f-4b17-86cd-9a3ed372654e",
        "cursor": {
          "ref": "8c1a00b5-768c-4c59-9411-3e53b7c60a38",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b3934e39-2713-4c86-ac4e-1bb352ac0ddd"
        },
        "item": {
          "id": "63541914-631f-4b17-86cd-9a3ed372654e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3efda386-7b7c-4e6f-87c3-b02f2b5e26ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ee911e-b4ea-4156-bfc7-7f79b09ef87c",
        "cursor": {
          "ref": "f3ede1c0-a038-4fdb-9e50-e26fd379c8a9",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1750be58-57d4-4f64-bc2e-4f73a372bb98"
        },
        "item": {
          "id": "88ee911e-b4ea-4156-bfc7-7f79b09ef87c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce0a5553-dd20-4d08-b30a-38036f70972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2748eab-1db1-4922-9459-3de3b7a0e60a",
        "cursor": {
          "ref": "7fc2778f-3b5a-4cff-93cb-509d393e8521",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "30e4a6c1-8230-4c8e-8a39-44d19d76cf84"
        },
        "item": {
          "id": "a2748eab-1db1-4922-9459-3de3b7a0e60a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "783d7594-1819-41ab-a5e6-bae1d752a033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae842db-1122-471f-8510-e2403065787c",
        "cursor": {
          "ref": "c537e97e-a14e-428d-b95e-5cfd49a05186",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1615a26a-d725-49a2-b747-10c7bc297b1d"
        },
        "item": {
          "id": "8ae842db-1122-471f-8510-e2403065787c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e6575fec-56ea-4a15-a747-dc2f29b4ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6384c5-fe86-4282-800b-bcaa6a8a6355",
        "cursor": {
          "ref": "7e3ffd65-79d4-4291-898c-01ba01d71573",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "154b291a-f879-4583-a7bd-26f734da9c1a"
        },
        "item": {
          "id": "ea6384c5-fe86-4282-800b-bcaa6a8a6355",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "71165076-a68c-46ea-aa3b-a31bb872b9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa02dfd6-9bb9-4816-aaca-ce6531a9fff1",
        "cursor": {
          "ref": "bf3ec3cc-fe4e-4df1-91af-f6a8463b5208",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b5297076-9ae0-48b1-aa36-77b0adf691d4"
        },
        "item": {
          "id": "fa02dfd6-9bb9-4816-aaca-ce6531a9fff1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "72bb95a7-5ae6-4091-b819-38d9d794b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae500ca-87d7-4f68-b8b2-458718834811",
        "cursor": {
          "ref": "29a28132-6134-49ca-9e14-b89cecd3c3e9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "dfa19ca9-09b8-482e-906b-15fd0de4fb5e"
        },
        "item": {
          "id": "3ae500ca-87d7-4f68-b8b2-458718834811",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4d3fdc48-76c4-453d-ba7c-37efda983be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cef6bf-fc4c-4e72-a13b-450b98f0ed66",
        "cursor": {
          "ref": "b3252546-307c-4e8b-896e-aa8649cc9005",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aaeb3aac-e1cb-4b36-8e4c-be43b79dc0d8"
        },
        "item": {
          "id": "f9cef6bf-fc4c-4e72-a13b-450b98f0ed66",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c5b661c3-fc5a-4ed4-ae4a-46231dbd75fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8fad1a1-c133-4334-a52e-b73eebbbf5cf",
        "cursor": {
          "ref": "2b2f88a4-ecb4-4f48-97a1-e19bdb4f8832",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a97ee258-96f1-4772-9416-60adb155e6eb"
        },
        "item": {
          "id": "c8fad1a1-c133-4334-a52e-b73eebbbf5cf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be0e11e6-d765-4a54-8151-9f1b886de7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34a568a-9a5c-42d6-9e16-765085030090",
        "cursor": {
          "ref": "99cef66f-b0c4-41e3-a3d6-1b87fce66cda",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c7de2af1-49fa-4d25-b886-3317c65cabc6"
        },
        "item": {
          "id": "a34a568a-9a5c-42d6-9e16-765085030090",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2ea95683-3cee-420d-8332-6a4adb890b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecad0f2a-1583-4aa4-bc3c-2cf79f10d892",
        "cursor": {
          "ref": "f7cba847-353b-4b10-b57a-fe8f8d0a619e",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f67e86aa-5949-4715-af7a-999a8402fb97"
        },
        "item": {
          "id": "ecad0f2a-1583-4aa4-bc3c-2cf79f10d892",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4477604b-c45e-43a7-bd9a-d8cc395170b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e120ab-12b8-43d2-9c38-77d95d4af264",
        "cursor": {
          "ref": "37bc5162-f8ad-4e5b-9f6b-a7cec2f8e72b",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "63a29c18-b552-41da-8ac2-153b693f0738"
        },
        "item": {
          "id": "e7e120ab-12b8-43d2-9c38-77d95d4af264",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c0bf82b1-9370-40a8-8232-923e816d0d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ecb89f-c0ee-4c9d-b68a-3f22a4c4abdc",
        "cursor": {
          "ref": "260f5e04-5e82-48c9-9514-926511c69e86",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "71acd3dc-8939-46bb-b633-82067302cd9d"
        },
        "item": {
          "id": "67ecb89f-c0ee-4c9d-b68a-3f22a4c4abdc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "49f74309-9875-4a8f-92fe-d04ebb4ac189",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bc9796-f9a5-4fde-b877-4d1459f2f283",
        "cursor": {
          "ref": "3376e7e4-27ea-493e-abd8-4b9a06af1ba2",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b55ef9b2-e9b0-4222-82db-6918183c3c16"
        },
        "item": {
          "id": "80bc9796-f9a5-4fde-b877-4d1459f2f283",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f5949587-00b1-4131-9bc3-6c80a6f85497",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f56d5-56af-4a12-8a01-fcc61d0feb0d",
        "cursor": {
          "ref": "b63af90c-6bea-44c5-af57-9850e1c102b3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fde6286a-643e-4060-b399-36aca9caaa5b"
        },
        "item": {
          "id": "291f56d5-56af-4a12-8a01-fcc61d0feb0d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed4e6629-ecbb-4795-8dcb-7a2d87b293c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291f56d5-56af-4a12-8a01-fcc61d0feb0d",
        "cursor": {
          "ref": "b63af90c-6bea-44c5-af57-9850e1c102b3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fde6286a-643e-4060-b399-36aca9caaa5b"
        },
        "item": {
          "id": "291f56d5-56af-4a12-8a01-fcc61d0feb0d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed4e6629-ecbb-4795-8dcb-7a2d87b293c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0276e22-e661-47d5-9403-07d99f48f080",
        "cursor": {
          "ref": "93a40771-e3d0-4d0a-97a7-4ced5132f6f6",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e8fcd55c-5cdb-4b99-9308-7d9176cf3ecc"
        },
        "item": {
          "id": "c0276e22-e661-47d5-9403-07d99f48f080",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "02b1f243-2896-4a38-920d-ada86a24b0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3078b9-59e5-42a9-9b2b-9edcfde950a8",
        "cursor": {
          "ref": "9264276c-9108-423f-92cb-ea4df83c1578",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dcd98e94-7620-497f-afe6-80df7e9f3eeb"
        },
        "item": {
          "id": "1e3078b9-59e5-42a9-9b2b-9edcfde950a8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a04cf8b7-304a-4753-80f1-fad55c869e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b29779c-ca24-46fb-b495-5f2d54fd1fc2",
        "cursor": {
          "ref": "3b75c295-2ee0-41ea-8092-214def078143",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ce24f03c-f37f-4d60-8a0a-ff3de9314720"
        },
        "item": {
          "id": "3b29779c-ca24-46fb-b495-5f2d54fd1fc2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "04585ff7-2768-42c0-9a0e-58653c0a7a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b892e1-de01-4e44-89d8-1f3e34a04f6c",
        "cursor": {
          "ref": "fd450f4f-a04e-4291-8ff6-01b434ce9ede",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a7ddd71c-8d32-483d-bcdc-c9c0b7cb712c"
        },
        "item": {
          "id": "d3b892e1-de01-4e44-89d8-1f3e34a04f6c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f012cf1a-79a2-4d38-91eb-68b0e88c20aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ca421-7f39-441a-ae01-550b3e7954df",
        "cursor": {
          "ref": "dd86dfa8-1396-4b09-88ca-0c316f357a41",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d53f857d-19c2-4222-a450-1d75990d750d"
        },
        "item": {
          "id": "717ca421-7f39-441a-ae01-550b3e7954df",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f2e96416-90fe-4291-bc33-c0c46eced1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e9966a-003c-4dbc-9e51-1559a93aa812",
        "cursor": {
          "ref": "1211d2ae-2385-4666-bbed-e1f1318f2dec",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19b8ea66-d9f8-4956-8aa9-b9e78456eb5a"
        },
        "item": {
          "id": "16e9966a-003c-4dbc-9e51-1559a93aa812",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2c717159-7597-49de-ad8d-62ded993b20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7bfe9e-f350-4b8f-bdf5-4a4249095278",
        "cursor": {
          "ref": "0eeae723-18b7-4d29-9d4a-efcb5bc143ea",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "68939fff-b3b4-4fd4-8943-41e9abdd303c"
        },
        "item": {
          "id": "5a7bfe9e-f350-4b8f-bdf5-4a4249095278",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "183fbde5-e5c1-421e-b99e-756e5fb597ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa158ef-dfa2-4a4b-9382-97f0ea8851e8",
        "cursor": {
          "ref": "c6f9c344-db43-4534-94a0-aefe791824a4",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "309bc00a-20a5-4458-872a-2a7588e16fa3"
        },
        "item": {
          "id": "caa158ef-dfa2-4a4b-9382-97f0ea8851e8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bd9842fe-1fa0-483d-b306-9e48c5a8bc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1887007-dbae-4cc4-8863-abcd0dca823e",
        "cursor": {
          "ref": "6065167d-0c16-46a1-a564-090606686d02",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "33f06f0d-8dd1-4fe7-81c4-32547d2f076d"
        },
        "item": {
          "id": "d1887007-dbae-4cc4-8863-abcd0dca823e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30b1d52d-04ac-414d-af8e-77d5ccb30851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc24c457-5c2b-43ed-8c25-14c49dbbafdb",
        "cursor": {
          "ref": "c4c474ba-3f26-42d9-ad02-22f5741c503c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5b2fe289-8f61-4a5d-bc37-167654ea60b3"
        },
        "item": {
          "id": "cc24c457-5c2b-43ed-8c25-14c49dbbafdb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f26172ee-a007-41bc-b73e-d991d5b056ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd684d99-2ccb-4791-902b-15d660d2ac31",
        "cursor": {
          "ref": "9c888766-411b-42ca-bba0-fd8374a2827b",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9ef98773-cb96-4900-b401-39891cd6d7e2"
        },
        "item": {
          "id": "dd684d99-2ccb-4791-902b-15d660d2ac31",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "456ab476-66d3-461c-bdc5-0ec3e25d9c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b263025a-8601-43a8-8f37-a50efe65fc7c",
        "cursor": {
          "ref": "b823b592-5e82-458e-86f1-7eae06662db7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "57aa0f59-f406-4fe2-9ccd-c953b9d55511"
        },
        "item": {
          "id": "b263025a-8601-43a8-8f37-a50efe65fc7c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1b74bd61-af40-4c38-acb0-c2d8949491fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfda36c2-8b25-4337-8d7e-f0b5a2c991ea",
        "cursor": {
          "ref": "414ee2cd-54f5-487f-91f6-f98cef33f5c9",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "27e296be-6df2-474c-8d0d-243782cfe868"
        },
        "item": {
          "id": "dfda36c2-8b25-4337-8d7e-f0b5a2c991ea",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ecd81e9c-50d1-4d53-9889-53565f8c513f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f43aad-4852-4e38-9e79-c33b57a5aa72",
        "cursor": {
          "ref": "338c643a-2749-40a9-9e28-dd18943a55de",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "fa2bc9d9-94e5-4b5b-80a1-b333cd36e490"
        },
        "item": {
          "id": "f1f43aad-4852-4e38-9e79-c33b57a5aa72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "116791ad-5d8a-4d59-aa79-b0b352e2814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b875fdd-de10-4272-b8db-4f9ae0b48cfe",
        "cursor": {
          "ref": "ee386942-31e3-46fa-a344-dae324aa1802",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "98eacc8c-7445-4f8b-ad10-49556a8efc86"
        },
        "item": {
          "id": "4b875fdd-de10-4272-b8db-4f9ae0b48cfe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dda7bc29-d350-4d9f-a523-c071464c7801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fd834c-8196-463f-8da7-a64005071a58",
        "cursor": {
          "ref": "731ee198-6ac8-4dd2-981a-d915cee611da",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "553d524d-fc88-4f4c-ad5e-5358dbf74de7"
        },
        "item": {
          "id": "15fd834c-8196-463f-8da7-a64005071a58",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0a116dd9-61e0-46fe-a529-225ff4647b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294aebc6-6378-4c37-adbe-df8b524c7cba",
        "cursor": {
          "ref": "55883c6b-c0e4-42b9-a8a7-459c97fa77af",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2e0fc37-b9ab-4403-9151-e66f3fd2b646"
        },
        "item": {
          "id": "294aebc6-6378-4c37-adbe-df8b524c7cba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "28adc6a0-5212-4b29-9f16-57423d3870c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840405ae-3a36-4636-b57f-530f9ba87fa2",
        "cursor": {
          "ref": "3ae72e2c-5b24-45cd-95cd-70e69744c23d",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f534765-c3d2-44da-b3c5-e15f78d465be"
        },
        "item": {
          "id": "840405ae-3a36-4636-b57f-530f9ba87fa2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b5963bcb-9b8b-4b41-94e2-89a2ac339f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f60f75-048f-4afb-b405-5483b330d17b",
        "cursor": {
          "ref": "82da2101-2be7-4f0e-972b-94e586976938",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c22a6cb-4bcd-4c91-9249-4792c9056305"
        },
        "item": {
          "id": "c4f60f75-048f-4afb-b405-5483b330d17b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1b2e6930-0d8d-408c-a2f6-648d9433f679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bca57a-a6ba-45e1-8306-3e97ddb2176d",
        "cursor": {
          "ref": "27421e42-d28b-4497-b5f6-eaaa817a3e5a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "33434bcf-6db1-4472-a5d3-39bb140b3555"
        },
        "item": {
          "id": "e1bca57a-a6ba-45e1-8306-3e97ddb2176d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f6dc683f-6b25-41ac-af5b-64e9f2e05742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102bd5cc-1858-4d2a-8c0c-f52990e6dbf1",
        "cursor": {
          "ref": "f2bbcdf3-c1b4-479e-b46b-187c8aa49512",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "520d5f72-7fb2-461d-b2d3-3c2719d86209"
        },
        "item": {
          "id": "102bd5cc-1858-4d2a-8c0c-f52990e6dbf1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3f1f4a27-6887-4b4a-90b1-ebf688d15f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc9825a-96f3-4e75-8709-c2c125550baa",
        "cursor": {
          "ref": "14538a2a-d7bf-4133-9dc9-62a15980f4cb",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ba8e113d-5015-41d9-a87a-6fd1a266d6c6"
        },
        "item": {
          "id": "3fc9825a-96f3-4e75-8709-c2c125550baa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "59af588f-44de-4f21-856c-126367700bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b48a542-5a8a-4eb1-a142-0b069d0f04ab",
        "cursor": {
          "ref": "8156cf43-b97e-4ff8-b4e0-da7af21010a2",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e2c7befd-341e-4358-a76b-b0b4d695881d"
        },
        "item": {
          "id": "3b48a542-5a8a-4eb1-a142-0b069d0f04ab",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "610e889e-898c-48d7-af31-182e2c3d6cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ddea5e3-a6ca-4800-9636-8acf62c8fc23",
        "cursor": {
          "ref": "1eb67837-e6b6-4deb-85f2-b07c4dcc4591",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "15f7be27-5b47-49f5-b6a6-24defd927e1b"
        },
        "item": {
          "id": "3ddea5e3-a6ca-4800-9636-8acf62c8fc23",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "97f9fc54-6649-4a2f-ada4-5fba519221b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcf2615-176b-44ae-b876-ba7b27014b2b",
        "cursor": {
          "ref": "b97ab26f-315b-4c9b-be9a-09be3a31b780",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d8725961-53c1-4285-ba70-eaeebbce51d7"
        },
        "item": {
          "id": "4fcf2615-176b-44ae-b876-ba7b27014b2b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7b16eddc-348d-480c-b0b2-b6841c7e06b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5933438b-9773-43e3-8348-92589b71b6d4",
        "cursor": {
          "ref": "ca358ec8-133f-4192-8338-826a58bf60a9",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "acc36afb-72a9-4fd5-b099-f7f0dd04761b"
        },
        "item": {
          "id": "5933438b-9773-43e3-8348-92589b71b6d4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6c6bce5f-ae89-4117-b663-711e33de8f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588a42a4-f1b2-44ab-91a7-31ff3d338175",
        "cursor": {
          "ref": "2f61b04b-7d2e-4408-ab72-1ca775c8c3dc",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "82d772d0-e5fb-41a7-ba83-93047086d986"
        },
        "item": {
          "id": "588a42a4-f1b2-44ab-91a7-31ff3d338175",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a9a9df0-91b8-4b9b-a9a1-5a32055296c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87095b3-caab-4d9f-a17e-10616c6d8470",
        "cursor": {
          "ref": "976268b1-1be9-4c9a-be78-1332b484862b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7f3431ca-bd90-4ce7-9235-619a6772b1bc"
        },
        "item": {
          "id": "c87095b3-caab-4d9f-a17e-10616c6d8470",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "af22e6d3-5486-446d-a20d-9504bfc36a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f855a52-a583-41b4-9ad8-fbced8f416d5",
        "cursor": {
          "ref": "953e9c31-0dfe-44a7-8521-766775f78dd7",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "de1b1a56-f0ac-4228-9fe7-21f6b8dea94d"
        },
        "item": {
          "id": "4f855a52-a583-41b4-9ad8-fbced8f416d5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e904daca-aa1b-4a71-b701-945489f42243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df5639a-e3db-48b8-9fb7-2f40cd1215b5",
        "cursor": {
          "ref": "45d9faf7-cb3a-4eb0-84cc-2b80a6c92002",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2c03a676-b413-43dd-8dad-bed1a49c1723"
        },
        "item": {
          "id": "1df5639a-e3db-48b8-9fb7-2f40cd1215b5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2056dc84-13ba-4d72-bfc0-84b59a8c94bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84396830-7dc8-450a-b3ce-dbe5626ebbe2",
        "cursor": {
          "ref": "71efed25-e48a-413e-9511-2607f4814a07",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a88d188c-bb4c-4ae9-b30f-76b9dfb4ca85"
        },
        "item": {
          "id": "84396830-7dc8-450a-b3ce-dbe5626ebbe2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8bada37c-bd45-4198-91b8-c99590fb820b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d4684e-6fb0-436d-b60b-6dda6f804ecb",
        "cursor": {
          "ref": "7ec146f8-631b-4f43-a33d-0735bbfe8d5d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "690651d4-4ad4-4222-94a2-649e0f50aada"
        },
        "item": {
          "id": "e0d4684e-6fb0-436d-b60b-6dda6f804ecb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f0b37eef-6cb7-4485-91fb-5cb27503b675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dc738c-e636-4a5e-8c19-fc6a48390f07",
        "cursor": {
          "ref": "721226eb-3e71-4401-b3d6-012e5ae0579e",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "183fb17d-cd98-48d6-ba65-f742fa0eafaf"
        },
        "item": {
          "id": "17dc738c-e636-4a5e-8c19-fc6a48390f07",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ed980fa2-e3c3-403d-b9a8-d77fc2a06ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93b7369-ddbf-4cfa-b79e-958ea5f65f0d",
        "cursor": {
          "ref": "2a10bb83-f562-4432-8142-419c1f68b1ff",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a7b36436-298f-4460-9c79-83bb03c33d4c"
        },
        "item": {
          "id": "b93b7369-ddbf-4cfa-b79e-958ea5f65f0d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "93178718-ef46-41de-b2b5-5439bd084187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ed29f4-f9cd-427c-9b14-8f21274a0846",
        "cursor": {
          "ref": "8279983b-5b5c-4851-bf2a-681213081ebb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "15b08527-9858-4859-a52f-0b6e21d0673f"
        },
        "item": {
          "id": "70ed29f4-f9cd-427c-9b14-8f21274a0846",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2dbb8d57-ea84-4d71-876f-3f4b0140578b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355c36e6-a618-4ed5-b86f-a28611d5c648",
        "cursor": {
          "ref": "b58ef480-8f21-499c-b1c3-43fff77de16e",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0d5e1211-cc6e-4949-ae31-4cbecb0dab8d"
        },
        "item": {
          "id": "355c36e6-a618-4ed5-b86f-a28611d5c648",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0b94763c-418a-43c7-9f98-a0de3cc14956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781897ae-7b46-4dfa-b21f-48fa7d751a71",
        "cursor": {
          "ref": "65df5933-c333-499c-a179-3485cb4dfaf8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8eb0afff-a842-4065-8b97-78899c169ecf"
        },
        "item": {
          "id": "781897ae-7b46-4dfa-b21f-48fa7d751a71",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "af5bf4c8-d279-42d3-9458-e69f9f8288a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0f0faa-a17c-4ce9-bd8a-b93a0d351f72",
        "cursor": {
          "ref": "c399f41b-a051-4180-91fe-360b153b683f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cd456500-b5b0-4203-8658-3a4eaef7fc09"
        },
        "item": {
          "id": "0e0f0faa-a17c-4ce9-bd8a-b93a0d351f72",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f4f2fddd-32e4-4f03-a14a-8c27abfd1077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d859488e-5b6b-4491-88b2-26f1360d5f9c",
        "cursor": {
          "ref": "7fcc878f-6692-47a4-bde0-fafa07f1327d",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "903ca7ea-d46a-409e-8640-2abaf0c125d2"
        },
        "item": {
          "id": "d859488e-5b6b-4491-88b2-26f1360d5f9c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "179b7689-fd10-44c4-871b-60a8e132bee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d99267-2ef1-4a9e-9333-1f9135e71f1e",
        "cursor": {
          "ref": "7bd676a1-4ed7-44ed-91db-ffc52e5fb685",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1d5e2e9c-23ec-48af-ad18-dfa93271fca4"
        },
        "item": {
          "id": "49d99267-2ef1-4a9e-9333-1f9135e71f1e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "26ebc2f2-8847-4468-990d-ce73c095f90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd36e762-87ad-4c9f-a7ab-5b8a2a66ddfc",
        "cursor": {
          "ref": "e3eded23-4cce-4179-83f7-b4e7422ec2d4",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a8638693-c0a8-4b6b-9fec-25d8d1cca2d8"
        },
        "item": {
          "id": "dd36e762-87ad-4c9f-a7ab-5b8a2a66ddfc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1a4e46a8-b675-44cb-8b94-a6cf76987f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95312b5c-edb9-4a2a-930d-0fb3869d7d44",
        "cursor": {
          "ref": "aa52a5b4-c49d-40bc-a832-bd3b398b6679",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc7e9921-95c4-4099-8f55-27d655e858c6"
        },
        "item": {
          "id": "95312b5c-edb9-4a2a-930d-0fb3869d7d44",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "950f0529-c0b4-423f-87b6-63edf799cff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed176c-cef1-46d6-a06c-eee119cf3477",
        "cursor": {
          "ref": "51436a59-9197-43f7-a76f-11a0c2a8892a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "69ade476-2fb9-4789-ad40-655dd4bb60ba"
        },
        "item": {
          "id": "58ed176c-cef1-46d6-a06c-eee119cf3477",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "359f4391-fdd7-40bf-9371-c03d56ba3d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927dd4b8-a86e-4a81-99f7-34b510a23118",
        "cursor": {
          "ref": "92a8eb17-156f-400c-8795-a103820a7e26",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "932fabb6-57bc-45a5-9257-62c1b791ab0c"
        },
        "item": {
          "id": "927dd4b8-a86e-4a81-99f7-34b510a23118",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d2b84215-2594-4fe9-8ae4-fbdbfae5dac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2954179a-bb9b-499c-b1e0-0052056d3c73",
        "cursor": {
          "ref": "5be4793d-0593-4322-b665-86a656800b87",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8e5fd370-2aae-4f83-93c9-868f00545a0d"
        },
        "item": {
          "id": "2954179a-bb9b-499c-b1e0-0052056d3c73",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "048db28b-34e5-47c9-9177-4f068f61475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9acaa16-528a-4315-9e02-4ce71b8dc81a",
        "cursor": {
          "ref": "65859f96-68f7-4839-88e1-9c51aeb1f6c3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "12980106-8477-4e1d-b7ff-99283c376df9"
        },
        "item": {
          "id": "a9acaa16-528a-4315-9e02-4ce71b8dc81a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b05b28ca-0344-455c-93bd-60dc9f682489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded0bf3a-7634-46a1-af59-6a674f4ce4ba",
        "cursor": {
          "ref": "87372aaa-7499-4d9e-9fbb-67ebfa3556ab",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "50c7c580-836c-4f4d-bd19-d22d1a7014eb"
        },
        "item": {
          "id": "ded0bf3a-7634-46a1-af59-6a674f4ce4ba",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "678c5cb0-5858-4391-90c6-ee707cbbe7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a29dbc-35aa-4f53-88e3-f1100ea18073",
        "cursor": {
          "ref": "30c8aa12-ebca-49f3-b2be-250a31bdcc59",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b8a3bf9f-4fbe-45a2-b40e-06a50fbc4ba0"
        },
        "item": {
          "id": "88a29dbc-35aa-4f53-88e3-f1100ea18073",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1104d0a6-b724-43c0-8791-9cc9ba8f8f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae2dafe-c5e5-49b4-b01a-7412ee67dc47",
        "cursor": {
          "ref": "9a2cdcdc-b9ee-4449-8b66-593fe0b1bd9e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7568e9ac-b62a-4d0a-b17e-2537efc18dc3"
        },
        "item": {
          "id": "6ae2dafe-c5e5-49b4-b01a-7412ee67dc47",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a2ed0c7f-741e-40a1-a164-498c1076380b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48242741-79e4-40f3-ae0f-811ce2a2d63e",
        "cursor": {
          "ref": "98d3d40c-c1de-402d-830d-1c18ac5dedfe",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "59c57cb5-9290-423f-b0d8-5f3592919cfc"
        },
        "item": {
          "id": "48242741-79e4-40f3-ae0f-811ce2a2d63e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "15b2bda3-7186-45a4-8463-7ea575344de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f44e0e-5c63-44bb-b158-6a38114498e7",
        "cursor": {
          "ref": "0159fe41-8aff-43b2-a40c-e03051c96c30",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "46b0d9d8-285f-4efe-9f1e-307e9f0733f2"
        },
        "item": {
          "id": "64f44e0e-5c63-44bb-b158-6a38114498e7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b19caa5f-7563-4839-80e8-01fc8c17f75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e318350c-2cdd-49a1-a5b2-38293e8ed454",
        "cursor": {
          "ref": "d00ed590-bcb3-4f13-b53a-09beae652427",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d5085013-0b31-455a-a33d-2d08f1f37d23"
        },
        "item": {
          "id": "e318350c-2cdd-49a1-a5b2-38293e8ed454",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "af246029-8ce4-4d33-a57a-61f30b4a8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e52f02-672d-4a50-8e16-7a757c4fb998",
        "cursor": {
          "ref": "cef88f4d-eb4c-46fd-8afe-c833165dcd2f",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4cdd0285-cc05-43ae-9ca8-bb9f11ac223c"
        },
        "item": {
          "id": "c2e52f02-672d-4a50-8e16-7a757c4fb998",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aa93df2c-9fbd-4112-ae38-b4211d162149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf46ec14-c184-49b2-997d-ae37c2bc1ad9",
        "cursor": {
          "ref": "29da19ab-7d08-4089-83d3-da037149309d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7149ef66-4faf-4466-9717-848f6c1baef4"
        },
        "item": {
          "id": "cf46ec14-c184-49b2-997d-ae37c2bc1ad9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fe5bc18c-fad3-4ec1-bdba-0df25a692dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170ff772-6396-4ebb-870a-e17efe172a5c",
        "cursor": {
          "ref": "d1ba60b9-68d8-45c2-aed2-87f501e002a7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d531f8c7-22e8-415a-8909-84dc4004620d"
        },
        "item": {
          "id": "170ff772-6396-4ebb-870a-e17efe172a5c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9cc6b519-c592-4115-92b6-72d5437c0a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6522aa2-a1af-49b8-b310-2aaae951404f",
        "cursor": {
          "ref": "022c6019-41c4-47b9-884a-6d37d840df62",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "74f2c29f-6f67-45ac-a012-684bbdd10031"
        },
        "item": {
          "id": "c6522aa2-a1af-49b8-b310-2aaae951404f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "663f95e3-608d-4339-9bc5-1b8a1c5b3e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7505380-bca8-43d6-8ca6-6fcff76dcef8",
        "cursor": {
          "ref": "864cc88d-a4c7-4526-ab7d-f0f2fd0b1630",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a5f83219-9c20-44cd-8b99-4f0e60868466"
        },
        "item": {
          "id": "e7505380-bca8-43d6-8ca6-6fcff76dcef8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "91037d76-ccc1-43ad-8f1b-ff240374c54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e353b7e6-d62a-41e2-aaa1-f96132b7a028",
        "cursor": {
          "ref": "70e47f71-8b92-47e3-b0d9-8dd6cccc2dae",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b79f34e6-adb1-477c-b736-c8dba0d78c66"
        },
        "item": {
          "id": "e353b7e6-d62a-41e2-aaa1-f96132b7a028",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "960d6c72-bda5-428c-a1ec-8e79f566f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e643ed9e-91be-4f27-8b3c-6b13ac6de79b",
        "cursor": {
          "ref": "c021b257-bc73-40e0-ab76-7a6f57be2714",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bd2798c6-7658-49b3-9197-8b9c1f83c4b1"
        },
        "item": {
          "id": "e643ed9e-91be-4f27-8b3c-6b13ac6de79b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "13449eaf-560c-4b95-a576-811030c50d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec49975-e3a1-4c34-8e2a-f0e1d1724b80",
        "cursor": {
          "ref": "4754c616-319f-4ce6-bd70-533ad492eb32",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "766d05a5-3906-43d0-a034-c8737dedd9a1"
        },
        "item": {
          "id": "8ec49975-e3a1-4c34-8e2a-f0e1d1724b80",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "694763ce-528e-42c0-b669-8f2dce4ae4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6339d7-02f1-4fd9-bf38-23de677a3052",
        "cursor": {
          "ref": "1c30a564-1d10-4d93-904e-3f9978a80c4c",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f34b9103-e3b9-430d-92e0-9839f572e19b"
        },
        "item": {
          "id": "da6339d7-02f1-4fd9-bf38-23de677a3052",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7329a628-2201-44dc-b9fa-4b8a6fabc69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d14ed30-3764-4d6a-b5ac-3977bbc0b435",
        "cursor": {
          "ref": "233e95e2-5594-470b-bb8c-f70c1357a2c0",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f28709af-5750-4b04-845b-d41b51884b19"
        },
        "item": {
          "id": "1d14ed30-3764-4d6a-b5ac-3977bbc0b435",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9f72d165-726c-47e6-9eb9-7e7cb207c166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06e4f9b-280b-4a79-a3f1-1ef7a8e8851a",
        "cursor": {
          "ref": "9daaf0cb-9782-4b2e-8121-a7fef257ea86",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "75cd1997-688a-4317-85f0-c95b67b731e4"
        },
        "item": {
          "id": "f06e4f9b-280b-4a79-a3f1-1ef7a8e8851a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "35e1056e-246b-482c-9a94-8ec12f29aceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a62be4f-cfcb-416f-a480-c787fad17a1f",
        "cursor": {
          "ref": "c87552fc-5b6a-4818-bbd9-e128a238c5ff",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2e1dd75e-2ec7-4adc-b985-e14105bddcaa"
        },
        "item": {
          "id": "0a62be4f-cfcb-416f-a480-c787fad17a1f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a89486d-d21d-4553-9e6d-9d7749d063c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775ec735-cc24-4a77-ad33-f1728860d31e",
        "cursor": {
          "ref": "1a35b14e-3a5d-4fe6-b980-2e94cb805072",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7d7b61c8-2a6c-49fb-834e-96fe057010b6"
        },
        "item": {
          "id": "775ec735-cc24-4a77-ad33-f1728860d31e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cf87bab1-d276-45d3-92b2-9e8bd5cef566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278a6c9-af2e-49e2-8767-a9dcffec873e",
        "cursor": {
          "ref": "6cb2222e-6274-46f4-8d44-e2906f92bee4",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "63df8951-5630-4db8-8646-72d9aae85247"
        },
        "item": {
          "id": "1278a6c9-af2e-49e2-8767-a9dcffec873e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8b990dd5-cd43-4a90-9421-398ffc51ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9ce54f-3857-423e-a14f-9e42046cf5c7",
        "cursor": {
          "ref": "9212e8b4-56cf-4fbb-a6f5-a419587afe3b",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e2150948-5b49-4e7d-87ea-77c3887ee856"
        },
        "item": {
          "id": "4d9ce54f-3857-423e-a14f-9e42046cf5c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ae7063d8-a778-4105-a489-9f225b684545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe0384d-61e2-4ba9-9b44-a42d59a4b7da",
        "cursor": {
          "ref": "45fe5414-7d3c-49c5-8550-a5818f4f1d92",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ed3bb935-fcf8-40b0-bcd4-29fd37e29527"
        },
        "item": {
          "id": "abe0384d-61e2-4ba9-9b44-a42d59a4b7da",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "59ee85f7-a658-4d62-b844-810b6cca7e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392d7250-ea72-4f26-818b-c03e111b3380",
        "cursor": {
          "ref": "e0862907-b1ad-4fd6-822d-bc2803eac9f3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "43165cb4-2fa8-4be9-91f1-528c573f7317"
        },
        "item": {
          "id": "392d7250-ea72-4f26-818b-c03e111b3380",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cc3052a0-c3a6-45dd-9a80-09fa36ad6ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a02a08-6bfe-454f-b1f4-3658a8e99a2e",
        "cursor": {
          "ref": "32245b2e-1a3c-4b09-87a4-9734fcb8f597",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c3017387-c269-490c-8322-0b1bcbe4aaaf"
        },
        "item": {
          "id": "59a02a08-6bfe-454f-b1f4-3658a8e99a2e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1e8ffcc0-7356-4b5c-b705-c7ca8b8c7873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d167d-2c95-437a-a24a-d846e7d54b68",
        "cursor": {
          "ref": "bb6b2ef2-ceff-4428-a331-d538db4f9a34",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "df42c15c-1f88-47a0-8706-1711c333bd96"
        },
        "item": {
          "id": "a80d167d-2c95-437a-a24a-d846e7d54b68",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "080a644f-ca64-4f29-b5a4-73df3223f3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313aeb6c-755c-4e58-b4fb-ea1a96afbd7a",
        "cursor": {
          "ref": "c423bedc-f57f-4570-ac6c-562d34ab083e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "91b479d1-e739-4d9e-99d9-21a757057608"
        },
        "item": {
          "id": "313aeb6c-755c-4e58-b4fb-ea1a96afbd7a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f441dba8-d9f8-4313-a46f-929669e8824c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868746e2-1f01-4758-9e41-8246f1cebd86",
        "cursor": {
          "ref": "c52555cf-0050-405d-ac5c-8cab2e349ab2",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9323705-5463-4598-a161-fdd05681a6d6"
        },
        "item": {
          "id": "868746e2-1f01-4758-9e41-8246f1cebd86",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "43cd7195-4bcb-4888-96c3-9fd379869004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df00308-25eb-4a00-b055-b42b0800a73a",
        "cursor": {
          "ref": "f0ff2309-d399-4af9-94ec-98004a275d89",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bf9b6ee1-c3b8-43d6-b983-9c3282a0c5bb"
        },
        "item": {
          "id": "2df00308-25eb-4a00-b055-b42b0800a73a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ef2ff155-2d2e-4f72-95b8-4825fc629631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8f9e42-ac92-4b96-a498-f2fb0e932c11",
        "cursor": {
          "ref": "b1cdf151-186c-4cfe-a288-6054aef439f9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dd130fa7-83fa-47cb-a2e6-0f52a45039c1"
        },
        "item": {
          "id": "1b8f9e42-ac92-4b96-a498-f2fb0e932c11",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8ac1ef87-acbc-4180-a095-e922d06c0ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ccaa01-31f3-42ed-b47e-87aa02dbeeef",
        "cursor": {
          "ref": "89a4507b-3b05-4e04-8659-cb62b066e2ae",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83442030-2b89-46c6-9948-71de4a19b47d"
        },
        "item": {
          "id": "89ccaa01-31f3-42ed-b47e-87aa02dbeeef",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1edde441-2b1c-4888-93e2-b9db9fa13079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f3d8e5-a732-4546-8722-e378d8614b01",
        "cursor": {
          "ref": "beeb0769-394f-4042-bf0f-beda5c49667d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2492bbcd-e14a-4e11-a9b8-bd96b28d53c2"
        },
        "item": {
          "id": "d8f3d8e5-a732-4546-8722-e378d8614b01",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f7d729e-5027-4f34-be3b-eba266722cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a94aafd-a993-4e94-a76a-b1be790753db",
        "cursor": {
          "ref": "94ea4baa-1eaa-4e7a-84f1-df8649cfd335",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c48ae27e-63b1-4975-9454-967e56caa8fc"
        },
        "item": {
          "id": "7a94aafd-a993-4e94-a76a-b1be790753db",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dd299759-7247-4c50-b764-720392fc5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02a9ac7-0604-4225-9eaf-fa9387282f4a",
        "cursor": {
          "ref": "6cdfe70d-a5a8-4906-a687-be4489285232",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "3d8f2da2-68b1-4be2-b53c-a2e32aeb3190"
        },
        "item": {
          "id": "c02a9ac7-0604-4225-9eaf-fa9387282f4a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "75daafdb-00c8-4de2-ae70-519fe6c26d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc33d49-6f68-4720-837a-f9b8c4931719",
        "cursor": {
          "ref": "c2d275e6-f1ad-46ef-8358-43feb4df1c4a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a72b1c39-80b1-4303-9b84-35c885c8033d"
        },
        "item": {
          "id": "dcc33d49-6f68-4720-837a-f9b8c4931719",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "56602306-845d-4a7d-8e31-8ace0bffc187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822e5040-0c33-46ac-b0ee-2b0585958f2f",
        "cursor": {
          "ref": "06aeca14-f999-4176-86b7-cc93f2116821",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b6b7b94e-df6e-4288-9286-720c85844ac8"
        },
        "item": {
          "id": "822e5040-0c33-46ac-b0ee-2b0585958f2f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e6ff9a0e-dee9-4897-8df7-7f718d423627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dbf2df-c086-4a60-be08-61816edcca9f",
        "cursor": {
          "ref": "22c19fd8-9ece-4e91-a4b9-7d3fb29b39ca",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0ad5a1b4-630c-4b45-a3d4-8ddec9dbe8db"
        },
        "item": {
          "id": "f9dbf2df-c086-4a60-be08-61816edcca9f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ea804207-2cdf-4d58-9bb7-8ec48d1573b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0646680b-c90d-4a98-8ed3-e54ebe183820",
        "cursor": {
          "ref": "1c2f971f-09dc-403c-bf9c-bccb816da284",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b789bfc9-3828-482d-b677-03cfb0a0fbe9"
        },
        "item": {
          "id": "0646680b-c90d-4a98-8ed3-e54ebe183820",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "43eee266-9412-45eb-898a-161dbe96b0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb747b91-90f1-4b29-a804-3c01c230fd84",
        "cursor": {
          "ref": "3efff519-f68c-4e3a-87aa-80c3dc272bd2",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7de139f8-5dd7-4980-a8b6-cb80bb5fb853"
        },
        "item": {
          "id": "cb747b91-90f1-4b29-a804-3c01c230fd84",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b69b0896-0cfa-4adb-99f5-85e7f9de83da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b71d4d-c119-47a8-a2b2-845e2ebc3fab",
        "cursor": {
          "ref": "bb930fc1-5d16-46df-9b39-e1100646b754",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "01e1f834-bf66-4a84-a95a-9bee8f9f0686"
        },
        "item": {
          "id": "20b71d4d-c119-47a8-a2b2-845e2ebc3fab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7110c4fd-12aa-419a-b5e3-dda2948d655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239725c2-c0b6-4691-af8e-efbddc62ae1e",
        "cursor": {
          "ref": "011759ce-65f4-4479-96df-c49f40d16b24",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73756621-566e-49c6-8311-ac9b5dbff7f5"
        },
        "item": {
          "id": "239725c2-c0b6-4691-af8e-efbddc62ae1e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f24cbf39-d4b0-45b7-9dd7-488877efcdd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80635d8b-3697-4a7c-9d00-eebbc0a44286",
        "cursor": {
          "ref": "07839fb9-275d-4eda-b714-f81427526236",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5c9920e5-2a5a-4b89-9b24-f98a05fc3f11"
        },
        "item": {
          "id": "80635d8b-3697-4a7c-9d00-eebbc0a44286",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5a797fad-6c78-427a-9ae0-8ac493edd247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5269a6-c06e-4856-a5c8-4c3483dea8dc",
        "cursor": {
          "ref": "7a9f3d98-7623-4c7f-868e-a6227202f0ca",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16d45c1b-272a-4128-9d2a-e365c10ad98c"
        },
        "item": {
          "id": "fe5269a6-c06e-4856-a5c8-4c3483dea8dc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "12dae030-6c92-4cb7-9010-cdb2ead4db8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7434e-1efe-4092-ae3d-5dbdef61ef04",
        "cursor": {
          "ref": "d05ca13f-2f1d-47cf-bf0b-dd01fb3696f2",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "31eb4b14-b117-427c-b82c-be6233066e41"
        },
        "item": {
          "id": "b2f7434e-1efe-4092-ae3d-5dbdef61ef04",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "25185c87-fa43-4123-8021-a13e2cddb73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc6fd8c-4d89-4f82-9285-bdd94e9c5115",
        "cursor": {
          "ref": "a0ef1a04-fdc7-4344-a177-b4f982fcd00d",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b4e1a65e-20b3-4132-a641-823a64800a68"
        },
        "item": {
          "id": "bfc6fd8c-4d89-4f82-9285-bdd94e9c5115",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a6010675-a83d-41de-929b-97522533fefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d773f97f-3cd0-4681-a346-e8d91f0eeb35",
        "cursor": {
          "ref": "486d5da1-7f88-4692-ac40-218071a84c52",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "07d8b4bb-49f0-4aba-9d3a-f03eb6a5dbc9"
        },
        "item": {
          "id": "d773f97f-3cd0-4681-a346-e8d91f0eeb35",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5b5496e-94df-4f57-9a0c-79c847cc5f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4fbbef-367d-4b48-bc4a-4d201c0a901c",
        "cursor": {
          "ref": "85cc5abf-57bc-4db8-946b-5c880a1e7a08",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c85f763d-3111-4e5a-9190-b2845dc448d1"
        },
        "item": {
          "id": "ca4fbbef-367d-4b48-bc4a-4d201c0a901c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "030d231f-c233-48fc-8cfa-b54f924bf6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab08fa70-0440-4e6f-a3de-32276774d44b",
        "cursor": {
          "ref": "822184fa-0a73-4da3-8070-716f0e1dec06",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e95ab248-a7d9-4a76-9340-b972dbf8a8a2"
        },
        "item": {
          "id": "ab08fa70-0440-4e6f-a3de-32276774d44b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6a5243e4-0829-44d8-a82d-3987a6a3cb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7571b7fb-b072-4933-8a29-35adf7666278",
        "cursor": {
          "ref": "a96d15a5-f218-4941-9472-6e979fe23384",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3dbf060f-409c-4f1e-9486-f1f6ec74792e"
        },
        "item": {
          "id": "7571b7fb-b072-4933-8a29-35adf7666278",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4447da7a-b48f-46cf-b576-7156f04a804d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875759b6-a674-41b5-9e84-2d8b3921ecac",
        "cursor": {
          "ref": "0f554d8e-d505-4596-bc25-4a125b1edbdf",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "001ca3e3-2a30-4095-9904-8d83b4934ac9"
        },
        "item": {
          "id": "875759b6-a674-41b5-9e84-2d8b3921ecac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e09b7642-ad7e-49ab-871a-439e3b8a8e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95809c3-fffd-4a04-b0ca-578fdd10c85f",
        "cursor": {
          "ref": "82777c07-7ceb-4d89-8682-59d9f2b9e299",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "47b755cd-02fb-428a-8d90-0d6ef3290713"
        },
        "item": {
          "id": "a95809c3-fffd-4a04-b0ca-578fdd10c85f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d5b65bcd-bed6-4f34-9385-cea9315d31c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185a739e-7347-43f9-b0c8-688edb57d37b",
        "cursor": {
          "ref": "452cdb91-69ea-4d11-a12d-6624b7b2d690",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9a0c37e-4561-4549-af76-e4bd90fc9568"
        },
        "item": {
          "id": "185a739e-7347-43f9-b0c8-688edb57d37b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "225faca2-d0df-4cb8-8434-56b80936e1f2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa657eeb-5513-44ac-8612-aa3839be6ea3",
        "cursor": {
          "ref": "b8269892-5904-4dc5-889b-4e4325735344",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "91d81109-265c-4d09-aae5-245305986c4d"
        },
        "item": {
          "id": "fa657eeb-5513-44ac-8612-aa3839be6ea3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a781b60b-9606-4ed4-be82-9e31e903aad4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7bad5a-8762-47e9-8889-a38266e58610",
        "cursor": {
          "ref": "ec1d3809-de50-45df-91c1-21bd51b67aee",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "24fd56c4-5155-4158-8e0f-b8247fd14003"
        },
        "item": {
          "id": "2c7bad5a-8762-47e9-8889-a38266e58610",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a49f9d8b-a583-4fc0-ad17-259d9055625c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c2326ae-2b9b-4e6f-9c02-669b2e9bf65c",
        "cursor": {
          "ref": "3a2ad36b-fb7a-4915-8605-e720c74e4031",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "210e5e42-1c04-4a41-9866-df847ab13406"
        },
        "item": {
          "id": "8c2326ae-2b9b-4e6f-9c02-669b2e9bf65c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4710818d-607e-43f1-bddc-d2936bccee2d",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b324c41-93e9-4419-b8fb-266422da29e7",
        "cursor": {
          "ref": "6338411e-132d-4dfc-9627-5ee0b83e500a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "24d512ae-eddb-457d-ae3f-f6ec2f3a9d78"
        },
        "item": {
          "id": "9b324c41-93e9-4419-b8fb-266422da29e7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e9f069ae-5aff-4f50-9bd8-8cd1d03e7970",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
        "cursor": {
          "ref": "2ac26906-7560-4e5a-9305-bcf3e212ee0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "127e8343-e494-47e1-bcd3-850d22cf2c58"
        },
        "item": {
          "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e898b660-8d48-411f-a8b7-9db7c34d13e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
        "cursor": {
          "ref": "2ac26906-7560-4e5a-9305-bcf3e212ee0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "127e8343-e494-47e1-bcd3-850d22cf2c58"
        },
        "item": {
          "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e898b660-8d48-411f-a8b7-9db7c34d13e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
        "cursor": {
          "ref": "2ac26906-7560-4e5a-9305-bcf3e212ee0e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "127e8343-e494-47e1-bcd3-850d22cf2c58"
        },
        "item": {
          "id": "25c8664d-1505-4a35-a98b-4de217af77b8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e898b660-8d48-411f-a8b7-9db7c34d13e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746828a-50a4-403b-8046-a95eedaacc10",
        "cursor": {
          "ref": "271cbc10-5da2-4e98-b626-5e9d8a2cfcd6",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fd90c9b7-df61-442a-93d5-ea17679b4d60"
        },
        "item": {
          "id": "8746828a-50a4-403b-8046-a95eedaacc10",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "b360bca2-8bd8-4799-a2b3-0ee59a9c966b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac27c56f-44ab-40fd-9970-ab4c398f2724",
        "cursor": {
          "ref": "f5fb0f46-aca5-4e54-9869-f9fe50833ddf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a192e694-3808-4e43-9964-1b8350f037a3"
        },
        "item": {
          "id": "ac27c56f-44ab-40fd-9970-ab4c398f2724",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5a59ffbf-099c-41e4-8a80-b7035caca634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac27c56f-44ab-40fd-9970-ab4c398f2724",
        "cursor": {
          "ref": "f5fb0f46-aca5-4e54-9869-f9fe50833ddf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a192e694-3808-4e43-9964-1b8350f037a3"
        },
        "item": {
          "id": "ac27c56f-44ab-40fd-9970-ab4c398f2724",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5a59ffbf-099c-41e4-8a80-b7035caca634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798cf4ff-a31c-4e64-a123-d4d5a70e868f",
        "cursor": {
          "ref": "a294ce88-03ca-45a7-98f9-84704e9cc3ea",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ce8fa9b2-17fc-4414-9e8f-014aeb2c7056"
        },
        "item": {
          "id": "798cf4ff-a31c-4e64-a123-d4d5a70e868f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d05ce0b5-fc20-453e-b68a-179f8d27409c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df48a7e3-2fc6-45dd-a8d8-421da5a342a5",
        "cursor": {
          "ref": "16feb0ca-4f52-4204-a476-daa0073214d0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b7dfd02-1f50-49f0-8ca3-accb92db90ab"
        },
        "item": {
          "id": "df48a7e3-2fc6-45dd-a8d8-421da5a342a5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ef72de20-ce87-4614-a53b-8a3e4d6cefaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df48a7e3-2fc6-45dd-a8d8-421da5a342a5",
        "cursor": {
          "ref": "16feb0ca-4f52-4204-a476-daa0073214d0",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7b7dfd02-1f50-49f0-8ca3-accb92db90ab"
        },
        "item": {
          "id": "df48a7e3-2fc6-45dd-a8d8-421da5a342a5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ef72de20-ce87-4614-a53b-8a3e4d6cefaa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8984130-ba3d-4cde-a727-b99f149cb84e",
        "cursor": {
          "ref": "1ab52fec-8f5d-4278-95db-bd030a4f2260",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d1e1ef9a-54df-4500-bd64-4d7b750a5555"
        },
        "item": {
          "id": "d8984130-ba3d-4cde-a727-b99f149cb84e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "de936171-35f6-44a9-ae12-c1e6529f58e1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}