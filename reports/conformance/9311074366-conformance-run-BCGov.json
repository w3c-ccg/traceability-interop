{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "86264948-7ecd-404a-b43a-2b23e96ed5fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d5026576-695f-47ff-9da6-760ca503f51d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eef36caf-f882-431a-8bbd-13a1abbd6d74",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0cb06971-1e59-40c7-83f5-63f3fff70f43"
                }
              }
            ]
          },
          {
            "id": "05ae61a4-248d-4600-a79b-9af28f633d45",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15b6311b-37cb-448c-8576-690168b01cdd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c8fc7851-7472-48b6-826e-35d21c541039"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9b016c75-a5a6-4518-943e-168b4c523436",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1a41b6e4-1cb1-43b2-a00a-58cd9f15fac1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2de15de0-88ab-4f66-b0cc-6111b8e0857d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb311aa-e80f-486d-90b1-7ebfb6b7819a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2420b276-e7bd-4d0e-9199-9b181b4b77b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40d10833-1edd-4256-82cb-18271e2d2f4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8c8795f-98ff-45fa-9cef-132e123dbe7e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1480e5c6-3499-4f11-9069-cdea1bbd0435",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7bb160b2-b602-49fa-a68e-ab9c227594c1"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02b9cc2c-ce35-479d-939c-fefeb9f442e7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3c97c925-1817-4580-9661-882f9f90b667"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80cfa169-c623-4bf7-b985-4d0bfb35d582",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d2179c2b-fbfb-408b-8bd3-c830c34a762e"
            }
          }
        ]
      },
      {
        "id": "d2d6fc40-6a16-46a4-bff1-a8ec5eee6fbb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8eddce6c-4581-4adb-9da1-b689db4421f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47a35d2f-e2d0-4703-a6ed-37ff56b4b140",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f11850d9-743a-4eb3-ad59-541950c9b6ae",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dea662-ebe4-42e3-91fb-aae7d1d9998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb757458-87c6-4bd0-8671-52329e8bff59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8efbf8-9bd1-4ffe-953d-5d992a8293c9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffcb14a-b9a5-4d75-bec0-b8d8d761ade4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d1e2241-5604-4d51-991c-ccfcd16ffc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffa0390-f12c-4e66-8764-29fea8050e42",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a29706-b0f1-40fa-ab27-794ec321fa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55973c78-e7cf-4f27-8f4c-e2e0d5ed8ef6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80eafd5b-ffeb-4264-8947-9f9d9adc4c71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb22201e-dd8c-4843-bfed-80317b2a4898",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b3f043-e0ba-4fa5-8881-e2d4b0e01e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25a1cfcf-5be8-4386-a28f-d72eea83154d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f12ea01-4ba4-4a37-9d61-0c52eb942912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9ff2bc-d7d7-46e1-818d-21d949c8ed63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04c1731e-4bfe-4f8b-8d88-89caa6e0cc6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3eb3387-7b9b-4711-a0b3-f75de2250823",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d78bb1d2-851e-4b71-b72d-f478d62d4943",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "081652de-c571-4329-8c24-0afd8f736418"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "81f42b67-d7f7-44bd-994c-d4b0e3a3ee2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5368789d-66a7-4653-9836-57495f6054d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a0e9dda-182d-4c00-9343-3f37f5cf412c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bde7d128-751c-469b-acbf-778b4fd68fec"
            }
          }
        ]
      },
      {
        "id": "4568df44-baa3-4472-928a-55e1894908aa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4420214c-59ea-4448-8dc4-11eb911f03f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b5c0438a-d677-4ae5-8c54-3f1b9bedeba1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f10ad202-e513-4876-9fab-613ccd569cae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81a28c4-a098-4f07-8adc-30daeb14714f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3528be1-327c-4b8f-9a5b-a97bb7c6d04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872401dd-e9fc-49d7-b9f6-aa14afe4f0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d4fec09-daaf-4040-bcba-b1eabdc17d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1520fc4a-5d6a-4e48-a4ac-92b591a769b2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6003d9-3943-44ab-b7eb-f077f4c4552f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b819adc7-d416-4e4e-bc91-cf47f42391b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1aaee8b-7417-45d4-83f7-5b4667d0d816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6ca6283-a773-496f-afd5-039f181982cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc159c4b-9103-440c-9dec-d3cfb8607c19",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b0a491-bf07-4f6c-874c-28e423321e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e8af78b-8517-487a-b7b2-3c963f76511e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04dd8fa-cd3a-4f7f-a6cb-c9d63257d514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab9855d-b422-490f-be87-7a15b9031ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4869dc28-d321-466f-a7b9-1b0ee7bd89bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9268df31-fecc-45ac-a8c0-1e2aa25be238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30746ab5-c0b7-4c04-9466-734705d1cccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1e5b25-cd51-41a3-b39d-878e268d76f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f60b24-7b14-40d7-a8af-12c70d41ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7404d0c3-cdf5-447e-975a-9184548d74ad",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5475061-250f-45c2-82a2-3ffe8cb26826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995b078d-4689-4b61-8087-7b735c9125af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c33872-4cb3-4244-8410-a8cf4ec45f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5a0e60-e547-4bd8-815f-adcccddb4a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272cb344-16d4-4861-b36a-be1898d1dc39",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea3b653-8883-415a-9ff5-8f88ac01144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863508af-bbd6-4856-b57d-cbd0f61b4d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f9c841-0533-4004-a85f-e564f0e9ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecdbc575-e756-4615-88ab-12b70d56509b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c703b6be-10b0-4936-a7a9-dbc50f68ba11",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a2ca7e-0a6c-49e9-8e55-3c446e029efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270dcb6a-b1a3-4b22-95c5-513a9b03c929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38269b86-4e58-45ae-b279-604871a2daf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "007a0d92-e82b-4138-870d-b2ce778186e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9f3c99-66ed-46ec-a479-0fd23a2098f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fbbf31-43c9-4971-8083-e3c4f84082ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82babb07-3632-47d4-aaf7-4361294edb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67898a19-e42c-4342-bc07-c354c5869d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebaf13da-3e21-48d8-8de3-f5373ef734c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a43e1e-4b21-4ecb-8271-37b432c9cb85",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ebf11a-ddd3-462a-91ff-5aed787168ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdb1a9c-8bde-49df-bd02-7cd81f92b3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471244fb-d0db-4041-9e38-356e324f5025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "213d528e-5ff8-4333-b7c8-11117e13bb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4d84c6-8c65-44cf-a241-155b20660c81",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449ce135-eed8-4fc7-8e56-6f4d72623a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a782ea-245c-4b8c-8ed5-59da6be487b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e6ef7f-b749-451e-bbbb-8f6fa253e5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b2b735-32fa-4f8a-8a0f-df7b2b19afb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08b2f3e-021e-4d8b-90c6-1ea1eb67e735",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3ec9b6-a1cc-4abb-baf5-08d453e16ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05ef0ea-0cef-4a81-a288-14aa20d7ef40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2bd177-f326-4bb6-baa6-3fba6b8b3d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f317b7d-437e-43e7-82e9-9cc7ea0dbdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2570ae1-a241-4078-93c4-ad1a2365426e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f565ec-d321-4f68-8686-4f97e256c640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7036af-682a-4557-89b2-471fa1a355d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0aa616e-3418-46b2-b03d-ff7200ed70a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d32bc6-8552-435d-b19e-378d80ee2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3ac37e-fe72-4004-b5e0-62c6564ad899",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d565c-bd74-4259-8d09-bd3b04238cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac8a241-d963-46e9-8b59-8d89ca0ec2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494ba4bb-58e9-4c49-ad2f-ff9e15a2837b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e616f75a-00d1-4f51-a81a-523f3089b7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121925a6-2999-436b-afa4-9e5ffbf10d3f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0065ac-936d-437c-a8d8-120308805187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ef6b9a-fef8-435d-8b2c-d3305023b548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6549fb17-4ea0-4bcc-9ec9-d7d9c0b3476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0dd5fd9-d7db-4cfd-8315-2ca1cc4b2cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af67afd-350f-4f82-8203-5c2d5a0eda2e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841fc56a-ef34-42e6-b5fa-ed13e4713f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e55970-f3bf-4672-9648-decb82213748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e37b6ed-16a4-4e38-89c6-5b1fcf025010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce49b092-42f3-4967-ac35-3bef606f97e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db221d38-2b4c-4a1b-9610-b3883747586b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c964034-1915-430c-a7d8-513e3959d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eee0374-6461-4eef-a37d-77b4eeb3ebe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93b2882-e021-4b8d-ba27-e4dd9443c58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d90acd5c-dc35-4381-b65b-876d1987c281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b554f1ca-6d84-49c6-bd35-094fee43710c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f76815-6cd3-4d7b-9107-365355c0d50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653ccf18-2047-4a84-9463-505751fc44cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b30f89-3f6f-4cb8-9f72-126a063898ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd767ab1-9067-4cdd-a1d6-41ec4cec0bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634bfc98-ede0-4cdd-91be-5fc4bd3c03ec",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f165c7f7-a9c3-47ae-b8ca-b73cc5ac1edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e638987-56e7-4e28-af48-d226b7099740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a1723e-6ea8-4da5-95f2-119330297d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2aa080-3f72-410a-8d79-f99bb91a5a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a71abd0-1923-4e41-b7c8-b1c22a0e8b3e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd5f227-0ffc-4569-8f4d-2672936fd93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e66d788-c1b8-4501-b64a-4158a2edbc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59230d45-577f-4dbd-9134-a5228c39e463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebd5e91-f74f-4873-a5fb-a30f5b92e8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad77aeb6-9461-48d3-bf97-f357520707db",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6deaa-7e5c-4332-8314-b6dbd6fa85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249f3ef8-fe24-443e-9393-81a588353a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec0d58c-4f2d-4ad1-b399-cc8110a3e4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1650db76-61af-4251-9317-ee1c62ebadb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d997df-389a-430b-9b5d-c68f21d9840b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd51428a-75e3-493a-87c0-8adbb3b6753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b286299b-1441-453f-99dc-a1ec348a6f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c9c9cb-cd87-4604-9210-1f6fe6187e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a38682c-7e70-4304-9022-ef182bd1852b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c757aaf8-19e4-4ec9-af1e-be8754b9bf17",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fb0ca3-3702-440f-ad2a-7547dd9ee81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52516506-dc86-4d15-99d6-471fb371eaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c644ab5f-be67-455e-ae5f-1917b19429f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c919e19a-83e6-4bab-889f-6838563d4163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b575ee1f-251e-4bcf-acfa-c925bfbb5873",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abfb4f1-c4a9-473d-8ee3-42799ac2833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb4986c-f2c6-48a1-b05c-99b23900d279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8a6123-717f-4292-8dbf-982b7da4a19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfe2f35-3dff-4f31-8dc5-f56bc1fa4bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7e974d-8748-4ff9-991d-4bf8225385b9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f40f8d-f5ba-439a-a4d8-b7d35ed0ebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42976e5-ae37-4f99-ac33-726014380d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f45833-532f-40d6-9dde-37abe800e176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f5138a-bd79-44c4-981d-39cec53d48f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4916360-9090-4c49-8fd8-2160d615bc38",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4815af-9422-45d6-80f0-40efe4e4c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77c6c3b-8806-4704-9d38-e8f84118113b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613afaed-e87d-4d9d-babd-c4d175a1a8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "941a01f9-90bd-4c53-8fca-6d0db897ecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3112e7-97b1-44a3-aece-7330b8524d3b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb36ce36-c10f-4bc3-8c49-1c0fcdbbc44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe993d00-8bea-4137-8e35-63eb24fe2005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e9616a-5aa9-4ad9-9333-d387a3a5d134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2139434-33d8-4d8d-b22e-dfbbb600aa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d727e49f-98ab-46fa-99b7-455b4b257f31",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "661c4091-ec65-4a7d-8010-474672058d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3be2269-be52-4ad7-a1f6-dd9818bb5a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087edb3b-2750-4429-a7fc-1a281d062fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0537d3b3-9301-4fed-895e-efc4f7122338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5215fe73-3611-405e-b7e6-fcdd8d1a4145",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056deb6f-3cde-4616-bd7d-c1c5e74095c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efce2b4-146d-4529-8dd6-64b972fe9acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773df40e-dbca-4555-b9e4-b505b97f8486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "884c84d1-4153-4669-a048-fc9055960be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac96415-406d-458f-b607-b747bb40236f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e33dfc-ec82-4e9a-8f5f-d0fd6474e24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23ac6b9-667f-4b1c-94ab-b8e9c2b35aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500a2965-cf4e-4bc7-9f83-a7c766ba8a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8118a75d-30e1-4765-8340-54b72733ee66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cadfdf-8e2d-4585-9627-b3b64d48382e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f55a053-e359-45e7-b37e-48996153c761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e2e211-15ef-48fb-8674-e917b292e2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f9fb7b-e51d-4cd2-b59f-a0e8685fcf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba99c58-65f5-4cff-8567-d4a2c8d25f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e7bfa3-cb1b-4fb0-8125-b9fc29a9f148",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf6afd5-5a4b-48f8-9f9a-4dd180329c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71119eab-fd52-42da-82e8-1cebfbc32d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d749b11-386a-4900-9f34-5b6a68723cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e776b91a-f846-491c-9c6d-a02a984a324a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b64b14-e6d4-48b4-9e78-777dae1e670c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915d676b-0086-43c4-87fb-7332ea1b70ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7050725-1147-46d2-a99e-5accfdae5644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f55569-7512-4732-b237-a5d03051fb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f07ebbc-d978-4cf7-8d41-1e8900105b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16955db2-c486-4188-9163-d7e707ab89c4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabaf84c-e431-4cee-8eee-7b5623417c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46fb1bdf-d437-48e4-882e-079c09cb7a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01642c4d-6a44-4223-ad25-3b852092f671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15982902-a976-4f77-a427-3c7685991357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22704738-c424-47c9-8fa5-2e0c1a65a140",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d09877c-00f5-4b35-b116-d614f82c0f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5be7f46-0c5f-4079-bd62-82502320c0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6713ecd2-84a3-4c9a-ac0d-d3b85bc869a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d4f2f4-7de9-4863-be9e-5835bd3b4f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4665be0-fcbf-4678-9198-8603263b007f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0ccd90-97ed-4a5f-9425-df382c5d437a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610f6e8e-deab-47fa-a93e-04789a45667a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76842e6-81f9-40cc-8170-fd13872a4f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0717f2d8-4bf5-4c7d-b4cc-367d23d983bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd072555-4166-4b3b-8ece-e6125e062c48",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d60811-d72f-4ecc-8b6b-5bc35f693700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe14b91e-53bf-48b4-92a8-801ef2599a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cded204-ffbc-4d81-a1d7-d29a40fb9e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b06c4f88-3e40-46ff-9a7f-1fa4e6d8acba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f81a11f-7d16-424a-9fd2-e776ba3bac6c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d4a0ff-6414-4617-b757-0150cdb10b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbe972d-c823-406e-902f-867906703d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6329d70d-c793-4108-b9f4-88613fb967ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8537198e-fd9b-46b8-9000-54634f558478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c037a1-0438-4461-9cde-32ca93715f78",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f082b653-77de-4194-a63c-698d5855ae0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f10a5a7b-1612-44e8-bfdd-1e920964238f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301e824e-ee4b-4fdb-bc91-94c3ba9042bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ce5bc6-239d-423a-a2eb-ebe912a525a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be88e4b0-5479-4147-afa1-7ba048003482",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2242ac6b-68a1-4b10-bfaa-4ff1d7c4055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caed819-5492-4651-b37f-b3897ebf2407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb36434-e0d7-43bc-8d8f-c175837768e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04f1cc96-27ac-4be0-b9fd-e5082c5824f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bac5da-e7a4-45da-8ae0-d790d5b5f57a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ec33a5-eb3f-4341-aa7b-052e716d17e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920a34f0-2964-4d9a-8379-40fdebfff053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d753548f-6744-48c4-8ef1-b8d0194ee571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44ede06d-e319-4ede-9522-47cadc12233a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89512c8-b198-443a-aa19-3876f2bd121d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce79ec53-3cea-481d-a89b-efc5bc9f87af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30da037d-9ec0-4067-a936-3da20d2d71f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1cc036-6db1-46ee-9bdc-63e3a71f5bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da8a6b9-3aa7-492c-9a95-5c08ce32a404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a36d79-a63f-4510-aaa3-4eb5245708fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc8523e-3305-49ac-8d6e-404fd9e558ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395e94fb-221f-40ba-b0f6-7cf704c13bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff93ad-cd3c-4723-b316-3e4fb43eec60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b525a35c-bc9e-4852-9e69-b0dc153ab1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed9b686-c22c-44da-99de-eaa0d190399e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf5643e-e203-49ba-85cf-b0c13f2305b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34df811-ce2c-4eff-a1f7-eda30221be5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bbca52-1e53-442b-a88c-f18eca8a664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "010f9a4d-2935-4646-90e9-dbce69f3a1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d42c54b-cf06-4475-9f69-0bacec9c93bd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5632d6a6-ce8a-4f52-95b6-b3721e0a3288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffc2777-6be6-46ce-92d3-a3945d47779a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c261a7-ff9a-4d1c-9e82-42951bcb4286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca9a56e-fc30-46cd-a4b5-a50de2ff2e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b36358-8c80-4ea4-813d-5c57983ef787",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa205f8-a2cc-4b95-bc97-43f84ac68df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5358a889-0a74-47da-a034-1201f0d4a453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632acd88-98e2-4fe4-aa8e-275c7f15a91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8aad8f-f8dd-48a1-894a-0e9325914e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a1a94d-1468-4783-8de2-96f5d9e2179c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b38eafc-7d93-4531-8208-996b49b4799e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536cf2a0-6215-462b-8e9b-be7ad17443c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59aea5-f3b8-411e-86e7-1b81074042cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55023290-674c-476e-895c-14f20e2e5342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc475f2-624e-41e1-b887-f83def3bb1c6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f8bb59-01c5-43e6-81bc-a9ec5bc1045c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ffd784-f8b9-480d-ba40-c767a604f6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e534260f-eef7-4010-a4d5-548afa7186db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79595f3e-f8e5-4808-8f1a-6035c160bc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f067739f-e55e-4a82-9fcb-c52c2af2fdf3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6ae7be-2449-4cf3-a84d-7f819537da81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99007c2d-d0ba-4241-b8a9-5a6c5a35e234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a2cfc5-3923-4407-ad4d-6110a29aebb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7818061b-6ccd-4e27-a644-67e7fdf98102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ad7536-4102-4944-be01-966819c44dcb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "385cdf84-26e6-4a64-82fc-2f7763589fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62312b09-a00c-4a00-aab7-5a6d529ce0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a4138a-7ff2-4475-8e6e-91a3a254ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0093dd1-4371-4d6e-a0b7-d5e18bbece30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a2151d-9302-46dd-8391-69b5bd5472d1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451b14d9-5cac-42da-95a7-1b1b813a03d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5b5bfc-fde1-4b34-86e7-2b523b703aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f8b59f-01ee-4625-9265-2c674f64fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fab4b8da-d65f-4f3a-bf31-d84e9690e9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150fadcd-b7c5-4695-96c1-a04f9c70f88b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1ef39-fc9b-4160-b856-f2dbb21e5e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cba4cb-dbb4-44b9-8991-f8a49482d395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b521d31b-4668-4bc5-9030-bb37f7c2e823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "051f4272-ed97-49c6-8ef9-d44d85d7bf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1801c7-c116-4375-9117-6a9b5cc54904",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a557cac-eae2-4b91-bdac-9dc4a204b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e08b3fd-c648-4896-9064-33dd0e3ddf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4180a6dc-3a88-4165-93e5-02ec8ecb5958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5747db-a0d5-4840-af06-4009fbd08753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d906c1a-0f80-4a3c-9d6a-abc80612c811",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fdd9a4-a22f-471b-8024-a051d46bcd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a16e6b2-20bf-4115-83b4-4345d37d3c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233bbc30-1292-44bc-aeee-f9407ed87932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "025c3e1b-75ee-4b7e-87af-7a23cbd5f7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a95928-9f37-4894-9702-6c2544f50f33",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd6b9a7-ebdf-4e4a-b8e2-7a4f9c255a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd977c0c-c3d9-4677-8dd4-8761de363dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85476065-8768-45df-b161-ac0041d5e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d17cf39-60e2-42c3-a61a-d77667a662d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b1bf4c-2717-4738-b15b-405246b975d6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9f98f2-0563-4eab-8d3e-3b9d9149a3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2b4c7a-416d-4548-a880-f2216160e7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e6a9d-aa0f-4b7f-a73f-d66fb4549bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a0ea4e-fa25-4812-8cf1-d8937c66deda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0230700f-0c22-4706-be0e-02f16982b7b6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0fdd87-2bc6-4488-99bb-ca70137946ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cc4c41-ee33-48bd-9104-c1d1a9c21207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ca05c3-d23b-4843-9f51-14492e875876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "51bf3e82-4322-45bc-ac52-db30943809f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c509a9fb-7604-4a6e-8cd8-c9038d4f2994",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c22e3ab-08c1-436d-8f59-1ffdd27189b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1556fc-4555-4708-9b7a-943e5014159d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdca79c4-58a8-4407-abd8-ff0fc63a3801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f9531a-c703-491a-a9e1-db30ba6fa53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e82a25-ebbc-4603-b869-2d38c9c8f597",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53db3a7c-ea03-4627-93c5-b173768da55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18670d17-d714-42b8-a225-af91b570b8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69c924b-9710-490b-9c36-afd9a6a55740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db90da8d-ef9f-43e3-8d41-6c209d03f763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccd79a7-4126-4234-a558-28ab0844b199",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650ec18c-019b-490e-b119-fbdc79bf334f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738cabdc-3c91-4de3-bcb2-202c5cf8a324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3fffd5-2732-4101-992d-c94cff721455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cad5d9d8-7939-4eb7-99fd-fe4778b6a435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bcc539-23e4-407d-9966-78d07c9ebb66",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890fd6a7-935f-4dcb-b698-a71417417e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168fea56-06f2-4aac-991b-06a13b7ac51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e23bf6-30a9-4463-a5dd-2208de28bc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2edfc31-0a4b-4438-ad79-6f51caca62a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265770e4-777b-43d6-b95a-a5d0deb7256c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a3e0e8-dd72-436c-8245-b8176d1fe7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf7d1a1-1ff7-4e71-9b02-c42ac7d10e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a0bbb-c7b5-4e4d-98ed-b113fd17f556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "555bc5a4-a68b-4b8f-83ca-1f631fb7b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cf7ab9-3fe1-4d07-beca-43e41810f43a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372471d-7500-484a-95df-d0437f0d1b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a15e712-d884-4ada-a787-2183f84d5cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681f279f-de57-432c-98e4-bb767b2c99c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "387dea32-988e-4241-9356-ccae5ede6919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73efe86-8027-4ee7-b2c5-ca1ed0e9f670",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed976c03-79f1-4afb-87f7-d9a01dadefb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363092a7-b214-47f7-8eef-03f5c445f338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd30273-e7d8-4d31-829e-985d9b6acf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4375d842-ac6e-4ac1-ba2e-afd58f98dc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9f29b8-8aff-467d-9334-bec5e8f399de",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc4d6bc-4d3f-4b61-8d0e-a6bc89b7c47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e722409-3d66-44b9-abf0-ae7265b21e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1350d22-643a-4fb7-b202-72d9e336087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c08512a-a091-48c1-94cf-1045838058fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a87e9e-04c8-4806-aff0-5658e8379c3e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edffd064-e49f-4d0a-bf30-581ef48a33a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a0654c-1de9-438a-9751-217014f70cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6951270c-31c2-41b5-9621-19d8152e49a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0d42a7-25f2-4af3-8f59-b91a77e33435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a27a38-516c-435c-b7c2-fbcb59561cac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec7175a-940d-4f93-b9c1-ec85ecb91340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca364df-5976-489b-a5cd-cd7087b1cc94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c64340b-3c7e-4c63-a0e5-312f9a0536b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "66fdce24-e3d1-48fc-a599-8a420a79448f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb418b5-c803-483b-bebc-d523aebf5e6f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2cde0c-2a1b-4f6e-ba37-658d4eef2ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446c518e-0cc1-4896-a18e-4b31391fa938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01201af1-8934-4a4c-abbf-184e64afd33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0a57c2-496d-4b05-804c-09924730ae43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4dbaf7-6887-4fc3-be27-e730ff7d5d9e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b7d13-a0b1-4315-b87a-6a64e673e843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0484d06b-2d27-4ec6-8d7b-1f5ea22080f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800375ec-b267-43cd-90cf-25a56db02fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec11295a-e959-4ab4-ade1-725c9138941f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fd4a2a-d246-4ae9-8685-aeb723602dcb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd615e87-a058-44fe-a3e7-b1c6061d342a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace3fd56-dac9-4a58-9a65-e31599844912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ebb603-53af-41af-83eb-031189b7a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d2050a-c15c-4ce6-8bd4-20f4772b6a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b633e2b8-29c2-4fc4-b3c8-0e183bf5e69b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22015d61-66f2-4e65-bf36-776ca4a9b21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a917820-f2d6-4f2b-8ee2-ec5b7ad2ac9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00381390-1f25-42b5-bb2a-9f523059d377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b608b1f1-dcce-4c5b-aed7-0cf9b1eb7e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3f5127-2a38-4a43-b7d5-5b8874fcfda2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96172dc0-4237-4fc2-8a4c-b950696102fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c04ff7-9ab6-4fcf-ad40-42aa27cec5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ec4787-f604-46f9-acc9-7f9caa4b356f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53080408-7ed0-4d23-a49c-0d0f59823954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996786b-752e-4ff0-954d-29bd9c9fbbe7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a63a3b-cb22-4463-99bb-cfcd4ad54077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e671997b-fea4-4cff-9465-9cc93317c045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27abfb7-762e-413a-b5bc-11b9ad36cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3affeb7b-8437-405f-960e-ccda0e982bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e557ee48-31ec-4127-9f8e-11a80dfb9ddb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65492ca2-9302-4e61-b6a6-f7b544f1dd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81acaec7-629b-42a9-ac36-59143c6e74fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da41c4fa-49bf-484c-a974-74f74ebba700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "482c4266-7c0c-478f-b5d5-7003d1d031d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaab24db-dace-4811-8a25-e3b243af7239",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1fd599-8669-44db-a7cd-d6542314175f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a2bc33-8e70-4473-8e89-834bc2f63a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04922e60-d778-4933-b9b5-619404bcfe45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1721f5eb-4488-4494-a7a8-cfc4908a606c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9802a2-66eb-4b47-9885-1cd2a5f76391",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3822fd7-a124-4f49-9be9-0d0dd6dd7648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d127faf8-36f5-411f-bc8d-7067307845df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92177d87-ac1a-49d8-89f7-9615eaeb9fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f305f1-0ac4-4318-b57e-89bdf2939986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a8564-dfa4-48a7-b67f-3c24735d30bd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4c0fbc-9f31-4a79-b6aa-1c313ab7d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fea25f4-9a02-408a-946b-715f524b7656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b3fa28-eed7-4a9f-9fe9-11d5c863b601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15b2514b-2576-4e00-ac3d-3363f463c5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8159d8-73fb-4a31-a217-ac11ab251d30",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e4b79-0a02-4d75-9deb-2639e4cb56e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7261b4c-d32e-4082-87bb-1d15317cd726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29383dc6-54a8-4fbb-ba95-a459ab959642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab29af1-4c3d-42f2-8766-92e37157d51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bd2efc-31d6-45a0-86e5-c9b69028734a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c6439f-7449-430f-8fe5-3d81f4bb1098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83047a97-fd38-4191-a59b-17595420ccc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09522312-5a48-44dd-91ff-72b4d231ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e3a0e0-f5e4-4132-85c3-aa2231c198bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7fa581-91a4-4d93-a8d0-4ee35d33701c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd980284-ca43-4d57-aad8-3a27e23516a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facfd78c-4dc4-4bfb-bae5-bf0c351a583a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53835ae-826f-47a8-bafc-e41dc3ea86ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d68501bb-8a5c-40ff-86de-d4f47415a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceee9794-7685-4d48-bda0-c51a9f7bf999",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a5f64f-5d85-4db1-a6b1-98095dce6394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c1373f-29c1-4f71-9196-bbd13875c82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80a0ddb-7c12-4640-a1c7-4d2739bd08dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "beeeb6f2-e5f9-4471-9467-505fb26398b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d665033-c781-4c7c-81c4-f17d71b541a4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5e6bff-ee85-4655-bca3-8ff935e2077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719ffbc6-3aeb-45d9-b21e-087ca4cba220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb07ff7e-b7e0-4179-b360-7167bdae5fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16219154-2c06-44ae-b599-016dce89e6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd11c49-3c56-447f-af14-4a5ecc4a6186",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f359f305-076b-484c-b9fe-5c5507673d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce9f6e3-d975-4ceb-ad5f-b9d631f3b130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a113e-855b-45a4-8d0f-58209dd255fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c0fb1e-0827-4c5a-8d78-e3298cde866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881cbe75-52cb-48c4-83bd-34cf5fd1325e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0826e5cd-2f64-46f8-aae3-b833482cefe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990f9b4b-3053-4559-96a7-5d58d893f352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9bfd7f-3c29-4bdf-b4a9-40668f61ff88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5079dc9b-5a82-4847-9ec3-eebe16d173c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1772cf55-7d11-4352-8a0b-346183578a50",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111b83fd-1691-4a96-9749-315f88377781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb4160e-8fb3-4fa5-9049-9eb8980c198a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1c3a9e-3558-41f5-b8cf-df7bbcebec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "264eba02-6d70-4e4d-b6d1-048361c8a398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0006d317-b062-48cb-bca4-4de227bda3e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8860fe-0f2d-479a-a180-0c93dada2d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4788c81-cc51-4951-a8c3-a3f52ab924fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5090e5b3-e308-44fc-8335-d56e676ea144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34b9d772-bc22-41e0-83c5-938ee25122bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59503c0e-7199-41be-9ca0-bf030f476cc1",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e188c98-d0e2-4bd2-a1f4-658624aff086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3531da4e-99ab-4f5b-9ca4-107fa5308016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad67891-240d-492a-a4c6-dbeee4eb9e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8edb05-346e-41bb-ba3b-d4b8f01ff420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e3f1f2-f6c1-43e3-b7ba-b5cc90546b44",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca021827-16b6-4512-a5c7-a6582776253b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a454725-e75b-48af-87e2-98719def0731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c665e637-a96e-4060-abe4-5bf8a7c811a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0129873d-adea-4d57-86fe-242ff776d7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15148b4b-c29d-43f2-a081-3a786b3ea585",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5f3516-8c84-43d3-b80b-c46ddb116684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a624028e-e5e8-4aed-a6c5-76adf390e597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36bbb8f-4d2b-45df-91b6-5d314bbd6973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d584fe63-5132-4c15-a941-689ce481ddcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cb8559-5406-49f2-971f-c3baff2d9308",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b44c3-384a-4a2f-b291-df89f43d7a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6cba9c-7ac2-45df-8cea-da77eedc29fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee23566-da63-4dca-aa10-84796d3d752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11d353c3-053f-470f-9d0a-d35de40b2084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234198c2-5e67-4b88-9db9-2888776f4747",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "209088b9-32d3-43d3-9819-bad2c843dbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77318b21-3bfd-448e-b5e8-41aff5aa4376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd9821e-8a6d-4557-8520-4bbb52b13dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed14b4c4-e5e5-4997-8a97-3cb97dd58df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73625dc4-6fe3-423e-88bf-9086d972a006",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b0a191-172e-4c2b-bc6a-e116556c950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1993a662-9f04-4fce-828e-17cf0aa5b79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ebebe5-750a-4150-9e63-818ade178f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "609e1cca-e1dc-4a80-8004-a5ffa489e617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828d1c9-3b8e-4347-9ad6-986a2923fa39",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ebea1f-f5d5-47c3-867a-1e8f56e319f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae5cc4e4-7791-4804-b3d4-665b203e6ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e36c9-3bd1-4c16-9a46-baeb441c0dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6517a3-a378-414a-9c39-6980e6d736bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1fc6bc2f-5e38-4ea3-84cf-2fd8f58492f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ddb54b6-b52e-41c3-ad49-9f34c1abcad9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d05d4bf-b2c3-4151-a5dd-535c59f1edfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d81e89cf-2631-400e-ac15-119812d93a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20693e0-b7ea-4c3d-b677-ef6e0769f4fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94e7fd01-ff3e-4866-b1dc-0e5ce31b41d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b191a77b-4fa6-487b-9711-274e6816811c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f812d1f9-19a8-4e46-8ddf-40089d92dc26"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fd63da5-8030-4c6a-b66d-947d3e50eb4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33fca555-3030-4756-b9e8-96910817a1cc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c30afb01-38ec-4386-b964-0ab954b4a072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44296e8c-bf3e-4aae-875f-d97f8352981d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ffe15a5e-de7f-49ad-8724-263a7697a542",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aacb1183-c198-4d4d-9a0a-cf06efb3851c"
                }
              }
            ]
          },
          {
            "id": "b9c0fe82-3462-4d32-9379-46a6ef3cdcf1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf87cf5c-daf7-4f9c-b84f-7be74c9f99c4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "aa5889f0-5769-4d72-9bf7-38db9631a3a9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ae3733-2254-426a-9e55-44c321a76d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4c2ac0d-ce80-41d7-b9a9-ed9077a14eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d39d4-014d-4729-a8bf-5f921cb222fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f264b9cc-0b3a-423c-a880-731385c90051"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9bb07de4-6ba6-450c-a4ba-6d7b80dbd802",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71a14c99-1ec4-4cdd-95da-85ceba8cd2cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67c65c88-5daa-4d9b-8a2c-88155db4fe1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4137f11d-e2b9-4236-b4bb-0fc3383a855d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ed8d1a8-5717-4826-a43d-0ebac4199465"
                    }
                  }
                ]
              },
              {
                "id": "e567c1a0-97eb-48f4-916a-af59773313d0",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc6caffa-a05f-488e-8c28-a43b68710a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fc42411-d83b-4b6a-885b-c8d0e6b92914"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4091549b-331d-40c6-b301-f478003949c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56afe384-28dc-454c-a054-4e617bbb6bd6"
                    }
                  }
                ]
              },
              {
                "id": "16e155c5-5f26-4094-808d-219147d5910c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54fd4c97-4571-4b58-a9b7-d5694b03cbc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e667bef5-993b-4686-9ab0-0ab0c5db10d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25516bfb-90c3-4b9b-a873-077a77bed50f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8184991a-5928-469e-bbd6-d5cb46a1494b"
                    }
                  }
                ]
              },
              {
                "id": "9b5622db-390f-41a5-ae9f-fa9a3381b9dd",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ba72db4-8ad7-4857-a2a9-ecb7841e4284",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "467c9e72-a40b-4625-97d2-d8c3421f4dfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8fdb820-2a76-4359-9487-5ee696c1d549",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a122f432-9c04-459b-81c4-39e7d77a7d75"
                    }
                  }
                ]
              },
              {
                "id": "aa5fed28-a9c2-404c-907e-40ca4244e113",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0416cdd9-6e21-4a90-8484-ca013676c34f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e30e8fe-c87d-47e3-807d-a6d99e639b2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a62544a-5c26-473b-af32-3005ba18bfea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "429f92c6-aac0-41a8-b36f-fab142fbdfee"
                    }
                  }
                ]
              },
              {
                "id": "3bf94127-a5c9-417c-8ab9-a9d0e523857e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21479bd5-808f-4977-a636-d0302ab2383c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a528039e-e9a1-4f2e-9d0f-bd13a61c33b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8332c434-e7ab-494c-818b-0a05ba66f506",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "32dee50e-94d0-4c51-87f6-678205b2339b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c880951-fc88-4e0b-a04a-2031f55c95e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b56dd8c4-109f-4c9a-82d3-d571448896df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b56a6b63-86a9-4ed4-8e89-a9a8699ea653",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18bbaf22-e7f6-4882-b8ce-ca65cad5fe10"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55a4f65b-e96c-496e-b960-dfb095f76f2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3dda447a-a8d8-40f1-b378-a7d08eab04e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "255f89a7-8a1f-449f-8a0b-7e8d7f88eb85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9827fdfd-a34b-44fb-9f12-51caeaf0c123"
            }
          }
        ]
      },
      {
        "id": "56647cc6-985f-4cd6-9596-b161e676824f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e3cbcd53-d02e-4932-ab8a-7de3697508f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64ed9652-3d4e-437c-b7f7-59a6f82af3df",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4814eb15-4e07-4030-890f-ba281e2ed661",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef816c3-bd3b-4399-95d4-66fca7380b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ebb471-2651-4f96-afc5-6bd69eca4750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596f1b3b-1650-49ac-98d8-4b244a43ec61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a342a685-c076-4f3b-8986-2079c3d2f5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d325de-26fb-4b0f-80a3-acc26710fcb4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f456f74f-5c35-4cf0-80ee-312b329c2d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc66078-40a9-49f8-8954-9b766a4b807f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6646691a-8d40-4cd4-8292-b8e900855c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b31f28-86b3-46dd-b429-2e8ca9f32018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b015fd-6b59-4394-ace7-95c08ddb0ec7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed2b1fb-095d-494f-9f41-e276db06766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f404157-9364-4adc-ad29-057ea6889cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca46ebc-715c-4a54-9006-ac2d495813cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2581f608-5963-4714-a069-9dc27c2b9350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45af5070-e1e2-4ed9-87ef-b1716d4938eb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a4c015-9f53-4513-8b33-a032820d36a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeab0954-859d-45f7-a6c5-e58752f811ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1812df4-dd86-4c4d-8187-de5bd62caffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b376008-5a42-4434-a5b6-de1db03096a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09667b85-7433-463f-a20a-19f9ee196a9e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e022546a-fb0c-41a4-9c38-ee1d88ea4a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d65ca21-e393-4056-98d0-3f5a6c22c890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5aead1-9f8b-4de8-9700-48d2d621ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad761c8-3beb-4872-b05e-7ea178754e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151dc1d6-d5a5-4e93-a83c-6d6924d232e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ad475b-7944-49d8-a277-87f4f2fa6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db92da64-9449-431c-ab59-f9fb4de586c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "822318fb-e5df-481a-bd1f-29575ccd0b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f304e61b-0809-4679-82c4-e21cd6c954cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e56c7b0-5163-405b-a3db-39d93d4a316d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acd33a0-322f-4b2f-94e6-2a347325294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f954a04f-1273-4ab8-b2c3-1734a2ed5b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b701e9e-2e7a-4732-87e5-cc8441494237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abafc765-e025-49d5-a9d8-a5850d61cf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542a3714-d1ee-41df-b0be-30cf7c8f4534",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378be5a8-f684-4cca-a666-1bdfc417c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d984d49d-02ee-4753-aa56-309a0ec9545b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37f2511-5ddc-468e-9f6d-d06c99c95e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23651b77-6ddc-4280-beb1-029a81b2d749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139b7c9e-d698-419c-9183-bb04c96de2dc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc6a964-6fde-48f6-b11b-284cbd98267d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcc0ba0-32a5-4c3f-98ae-6823abc128fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab00283f-b974-447d-9fda-37ba6046a8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "844f0e84-671b-46f7-a810-bb42c0691f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79cf09e-d781-4f1f-8fb8-022f5c664eb2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a804dad-8337-4441-a969-74ae2b23550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830845f9-f5a4-43dd-9942-95dc84bcb2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3476fd-5083-4756-9e2a-df8ac2949877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee42a65-2aa6-4e64-86b4-c8a57ee7dc95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d931c118-0ba0-4fbd-9839-a0e881d69ea3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e0c55-9839-4eab-8aa6-3ddd62bca3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b18261-4e09-45c4-b76e-b35d28f024ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dbfb7e-8406-4b44-be28-b9926138dd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "920468da-17aa-431f-a97b-cfba401b826f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c946148d-9c3c-4c7a-b2f1-21a591a9fb6b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e323b4-1d0f-416a-bcaf-f0f67a72c8bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83b8ae77-696b-45d6-98bc-d0789ae48e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3fa832-a110-4caf-a54b-61786f0adf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc360d90-c36c-4a04-967b-eeadf8f2dc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad120d7-0b70-465f-80c7-06821a0d8f37",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39abde45-36d0-44f1-a2d9-78aec5dfb3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d128b97-6794-43a2-952d-b65860005dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1c4d55-76b4-48dc-93b3-5c97c8c4c458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6572a29-c847-4e0d-9046-87fe431441d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1986e374-824b-432e-936c-166460fd4541",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e24c705-fce3-47d1-8bcb-fb31b270bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57835d-7925-4ca1-97cc-5d06b27635cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d8246b-95e5-4e6e-969e-3a8b1513e7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe0273a-59e9-4c12-8c94-608451e34d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30d45fe-a43d-43ae-b204-19dcc7bef4ac",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28578acd-eb8b-445f-8016-222382a928e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaf43dc-e935-4064-94d3-59cadc97822c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fe1a5c-9203-4f30-9664-371589c09d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed08654-1a4a-4e9f-bc28-3bc25d87d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587841e-da87-400a-91b5-269ecd386568",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5071156-dd6f-4117-89fc-d30e7b017ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e253225a-49e0-4b54-ae68-e85902d1eb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037ccb2e-7cb2-4e84-904e-b66de0ec6cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb141f92-78e5-4637-b9d4-c16f10478964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9d9c7d-9c4a-4957-9fdf-78ae1536c56f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e1052-f6e2-4b7a-8977-2de0b84d11fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1aa15c1-24a4-45b4-ab54-c06fecc8880b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeaefb8-4298-4fee-8d43-06a359f8af00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f2f137-86a8-4d25-a515-d7589884d2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c17c93f-a879-4030-a3cb-b9d27741317b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0e657-699e-44ab-99c1-9ad000c4aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9abdd5-e8e0-4875-8d89-4cad83b97e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1566b5c-71bd-4f97-930f-7c9dfe66dc52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e260c5e-57e3-4906-8328-a246a9df443a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07890f3a-1397-457d-be90-21b5c48fa99e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bcd420-c7cd-4295-999d-74a2a2fb61a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ba61fd-0898-46d0-be4b-e733c32d3dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9416c76-5e08-4ff9-b179-c6d921d1cbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a415c70c-d173-471d-8f64-4718ea6ff48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4316798-2488-485a-a1c8-948df65ef7f5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab677e-38c5-4f6f-97d4-39bdd0b4dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161d1ee2-404b-4904-9fa7-a0a21736ddbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa357d8c-7da4-42af-a45d-e6a94a59eac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbfba6d-d59d-44b3-baad-9d13069bc032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb803c80-b0f4-4f45-aa94-ae15d98829a3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80d3b0a-2c38-40c0-9b5a-b535a2c3f880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca0fa5b-a88f-46ec-b156-10930b7ca7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e9a9d9-062f-43b1-bb9b-ab5ea0767cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42901e36-e261-4d09-a614-1963ddf1a155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9d5881-fa00-43f5-b712-4e77ad196faf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b4b4bb-fa4a-4744-b112-16294ce78f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f5b26d-d1e0-4145-8341-413165224654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec09d68-134a-46e0-9584-07c60cee0c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "950f55d7-54b7-4066-bbb1-a61aaeef6138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990ea482-d532-4da6-ae81-28cc501c446c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d6b9cb-eedd-4abc-b68d-a7a46f23d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2c069f-a04d-4cca-8a24-c50f89a4662e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cda0a76-2e1a-48d2-be77-da5111a07e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bee5be-2aa1-4855-968d-d6d8653948cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9af019-ee4a-4d52-b98e-498ea9cf3b81",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6838ddc7-fc73-47d3-9f0a-b00526170860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae06497-9390-42e6-b206-08a3d2a25e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95578d77-259d-4c05-aec5-b61048e68067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73f5bd14-d886-4daa-bf55-be5b037a2aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4182a07c-43c2-4041-ac97-5b1e55a0f6fb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8712a6bf-f0d9-45b2-a033-90a4174c159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d718a7-7ccf-4272-b6f1-c3fcd15c0ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0f2235-30e1-49c5-a25b-9ca46d7713ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11ad11aa-2178-4d78-abb7-c52d842ed222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2bef4d-8626-45d5-a681-5651e4a95720",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e6798a-5a9c-4151-b49c-f89970cca179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a026d8c-158e-49e4-bcec-060c306966eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3160cc36-4904-43f1-944e-8107fab90fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c894f7-5dc6-49be-a707-0084cc9763fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23098a8d-a0a2-4fce-be66-9c7b18e600c0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51af765d-3596-4a48-a505-f58bd93af9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c63e737-ace7-44a3-8e8d-b681da0808ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e921ad-3be8-41a9-8c7d-b5c78e45870f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cf3e44-c561-4d82-ab10-6ce6c037231d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8db711d-a664-4e82-b246-81725fb267b2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc2c007-cb97-42f0-8c4a-9dee0eba3a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da00280-13e4-4d40-9321-99726152c159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b29c85-3320-4da7-8bfe-2effaa652415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac21381d-8309-4d22-99bf-c74f4fc49076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9058d8-ca06-4ae0-aa6a-ba050a288bd7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752ab595-1884-478c-8879-2464c1793a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ae030c-4686-47a6-8adc-cc3733af57f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8748500f-804e-4d74-9a30-321255fd3f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19024142-4de4-4229-b9a0-ab202dc6fca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a778c-4a3f-4e79-9644-32faebde487b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82276fa7-e4f7-4a1f-af6e-316d8ec22ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e2607e-9ea8-4672-ac6f-c6b296622eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cedcf99-f6c9-49f9-92a3-c6d7f396ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bf8da5-0384-4bf5-a752-931ec9db509f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff4c7ac-8df0-4286-8ba9-8c2e232382f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c620d955-5336-4a27-a0c0-ff576227ab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80809242-0368-4580-b338-e4f5f3eff2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed670ebb-e4b4-4b84-9b34-8e191ec98511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "664ea255-b581-404a-92d1-10ebddb12d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5728f7d-9912-4ce9-8fb0-1ceb76413605",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a9760a-57c2-4f56-87d9-7fa0e4da1d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a6e938-90b8-43c3-8311-0f70dbf0103c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce35c4b-dede-41ae-a0fc-9819027d4677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f0264c8-2153-48ff-9337-4aa69a2c2eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c80168-02aa-4130-90a6-2f3f4a50eb18",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17816d19-425e-4d22-a261-e351023b4149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588e5665-2f8f-4e73-bd8b-85a2b1230448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b4f540-7296-4ed0-8a54-8e10823ab96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "423a24c5-27c2-4188-8288-632b3c603063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7a8b9b-a5a6-485a-adda-dcd3393e0a3e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e185fa-d396-45a3-9a71-0190da6476f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98292b62-5559-44c3-9151-709ab44f9aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307f0286-6af9-4087-a0e8-ab2b2311e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be6d77d-9dda-40f5-8b8c-b66523ebaa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417e1f35-74d8-44e1-ba29-28b3866957e3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee38e605-7b03-4e39-bcea-ea74823159eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209e5f08-780f-4578-a410-4edb51c71461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8aca227-ce4f-4c73-95f3-a9544e04f8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71bad2c-5cc6-4dd4-a21b-0358eb5b7b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcd881e-c22d-4e9e-a93c-69ba9a586e04",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474f246b-9079-437c-bc78-481c4e02f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bc9d0c-3d3a-4ad0-992c-4eca07fd4773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a6bf4d-9386-4fdb-8231-f5483bee3ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "496849a5-c65a-47f3-a785-b4eeeb9ef1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90032a85-bd24-46f7-a831-0f1547d87079",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408e7f43-226c-4706-a34a-03ad2eab38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c0b328-33c3-49b3-a5a4-3b5023d304b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0da188-2ce8-45c6-ba21-98c0992eb98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff31ce5-13b2-453f-94fb-be79a59eb8e0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "007cef81-7746-44b4-8f69-9a27d36526d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91f81075-c989-4856-a64a-6754cefb3999",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e03586a-8c72-49eb-a06f-03f512bb511a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4936ca-fd8d-4bb2-8783-5a0f3d8fd704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a309effe-9181-4a22-9da3-fdffcb4c6a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb9d9b5b-0e1d-4862-b416-aa85dc0ef3e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5bd87c4-b8e3-484a-a30f-f48e923aa6a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f21355ba-868f-4e17-95c3-08b4b3fef938"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6bb433a-dc94-46a7-b619-de3ee090edd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d19e2c4-2bbe-4202-8090-affec9a8e550"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e52bc530-efda-459a-bdcc-b03dec11daca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d579c249-cae4-42d4-9d31-55a558885f14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a11eba0b-fc8e-4a92-8453-7220bdf7ed7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64469f08-b0d9-4345-8904-cd46ef720108"
            }
          }
        ]
      },
      {
        "id": "c07fef53-c644-4fdb-b508-bd5cc3d50224",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1dd59b44-a07a-4279-bce4-27ea8bbf4726",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73aca4f9-a651-42d8-aa14-cda735f1ef9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7d381ef-ea8d-4f54-a687-c37edc0c992b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8993bddc-5472-41e8-99ff-eb22b48681de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c6182-b316-46ff-a800-8fc6866b2ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821194e7-14fa-474a-aec3-83396d30a403",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd46e49-0a5c-4114-9308-35239754c1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84087c1d-ad4b-4e1f-9272-f2887c41b3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b246b1-6b9e-476b-9246-e1244e96bc9a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65d5ec2-f208-4705-9111-45202a7004b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e045128-eaca-4b52-bb2e-1bac445ed4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b82db7-10b4-435c-bf5b-2820973e71e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8787e210-cecb-4bbd-9ccc-97c83878ddac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72883bc-ea70-4abe-a4f4-1b2f871d0619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7625e1-34ae-484f-a320-ae5600c0aceb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07f6d24-e64f-42fd-9c08-d98443f902b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d3ca8f-981f-4449-8c01-1cbe5eb51c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e540bd9-8608-476d-8c97-b3602aac87b4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cd7be0-8655-43ff-a5c3-02cafbf18d1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bbf9d2-dac1-4c4a-958d-27acdd2e379b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df929457-b340-4b6a-b8e8-98a2f5877b81",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9d49d9-4225-4234-85fa-e2d525529206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e669622b-645e-469c-8c67-0e982eeb936d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec783b1f-549c-4d8c-8cf9-d8a67fed4e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ab674c1-e152-4b23-8b02-7473a3a1a236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865fe267-8968-4ab6-89d1-2e6494788235",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f22e3a-2eb8-47fb-b73d-c361072764c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80798f21-3b00-4e29-8dc5-3967afcd722d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34895f3d-acdf-48f6-bddd-a006659ee763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02820243-f571-41ca-8f1c-2f5a3536773c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5e99ee-73d8-4f19-9a36-51e65d80b5c1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a858643c-e5a6-41ae-b83f-b3cd940e7889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a330defc-9cbe-4c68-98c9-f6bbb73a6bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68e0f71-a2d6-45c3-b0ca-898ceaf8cfd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b38fae4-1bbb-4779-9ba8-b4948c22a9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a3c920-323e-449b-ba94-cbad45b6a36a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3ba1aa-638f-4a93-9e58-aa335b3f5454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae31bb19-cb92-4692-9be2-89e771b6b6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba75427-bb4b-40fb-b7d2-fad44c5e3af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d609e579-a095-4959-9c53-7ee6a63fa6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1eda2-cffc-48de-81d4-fd3cc4527e3e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d20d85-3976-48f5-a855-fe3029e89288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851181a4-acbe-4527-8ba2-1bbafa69a1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86daf156-15dd-496c-b47d-c62a0eb820d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4e3a5c-35a4-4b7d-9774-3de67703649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47c287d-3ae9-4e71-9c60-63a6a7c936f8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38120746-8e33-472d-98b5-dc52658d67e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caece83-3ba6-4b73-95eb-e4d8b63349c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21aaa70-78c5-40c2-a606-674a34623a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027b5ecd-dd25-4551-ac9c-575e762bbf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21fcc86-e227-453d-985b-8d7fe3f4a75d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e494a8c-155a-49a1-a27b-c501abbd4246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "877c2673-9623-4c93-adee-7d2d1180fd68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42b6e93-e4de-4fc4-b195-d765a2cf06df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc58522-bb7f-4cf0-a70f-8d60ecc80f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9de3a945-57da-4768-81d2-65bc2bdd49fc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a38da-d9a6-4d55-8492-04a52c768796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36c53a76-dcd6-4628-8544-a9372bab5f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e92f47-a113-4837-bb87-ac601a0cf27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abc10cb-cb29-4d60-a77d-4ed54de0320b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a54915a-fc86-4c84-af57-754d37dbecc1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477c6f37-641c-4beb-bf5a-11eaa55ac7b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a339e55-b48e-4e0d-b786-fe6c059a3bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ffc026-8a90-40d7-bbb6-3fe30592d7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db432bc-ad69-46ee-ad8e-a4848cf546d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a73c8-2e68-4d4f-8715-9d959130a4e2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac522858-1716-4aad-8216-ddfc0927cf56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5a35a8-8b04-44cb-bf44-b2e5f86cc3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018cfb44-12c7-4f95-a97a-0b5ee029a2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b01af4-4fc5-48bc-a82f-45ac96372aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a201637-5156-4c4b-a360-51fbaefbb9a2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c19c38-1136-45e5-b0bc-1f8610a13d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a03849-ccbc-4d52-9b27-d133c08d2c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa8b166-606a-413e-b0d2-8ab168db155d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa918f7-0324-49bb-b0a8-a52092011818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae3730-165b-458a-8721-cedda27ccc8b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32285b86-1d84-4ddb-a9bb-331ba0196176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6775ec-d5f5-4338-99a7-a254689dc629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31017f33-fa2e-4508-9c6e-52b9992828c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb096f14-b2d7-48d2-b5a3-b83f5436ed6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b4eb43-90aa-4031-8734-eb8d5de22ef8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4442c9f-7b75-41b4-8cc3-cab69f64210a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717cb1be-387f-434b-8200-096ae7345ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbc99c2-cd0e-452d-a077-7839e8aaad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076789d6-d616-414f-a67b-5b52347f022d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b4c495-d270-4cb7-89f7-e6b3232c8a1d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad398b-2e4b-4aff-a364-83e79d05c2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b348cda-6f94-4e76-9cec-3aa450a20608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62151fe-e209-4b94-97cb-52c268700414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e8b180-b8dc-4bf8-bcbe-be418e4083bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8ea889-dfa9-4b8d-9443-fb4e63907a96",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdcc937-cb7e-4a70-bb59-d9d9a1dc4362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667481f3-1771-4244-84b5-b09b5dd9f7ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8d1137-cd05-490d-88d2-bcce461a9c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a12e5ab-f1e2-4b3e-a26d-bc4da85a9249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83283fb-10d9-42c4-ad0e-48a6e8f89563",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d935c-58b8-413b-b252-7173da800049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ec536e-040b-4937-bf08-9e7a07f86ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c22be6-13b5-44c8-ae0a-18df9271ac41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636fdf97-a784-46ff-9241-122ed4292255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d2e4e4-914a-4103-9445-fef2d8e1d27f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b46fe14-3e70-41e6-83c3-720f79352ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf1d965-ab0a-4e3b-ad2e-0dfb86826522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc08369-413c-4ae1-a57b-6505768b8f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014073ca-a00b-4711-8077-28018902b136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8fa375-07d7-43af-ab1c-c2dcc41fb6bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e090e818-71d9-4294-a938-735d515e2af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8614afe-a0a2-4286-b2fa-988933730abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5671bf1f-9a4a-4012-a5e5-06c3a59f3cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672354aa-22fd-4dfb-ad71-24c5e79600bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f123f64c-64b9-4563-bee1-02cc19534239",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e8fa9f-a8b4-48aa-85bf-332e380ee003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daebe8c0-97f1-4586-9050-f4404097e529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d14d982-5f2b-491c-ac99-ca5b08ae07b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1dbb07-6809-40f8-83ee-a1eeaf40ead3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c7107e-e87a-4486-8a7a-626980ec936e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd268e4-2ff3-48f3-82c6-f739bf777859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f078b4c-c85d-4c66-9a88-f283ad932162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dea9a79-2eee-458b-9085-51a2c72e2049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3189df-b1a8-42c4-b1e0-e00da0393838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ddad44-8909-4c49-b273-26eba5e94b48",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09402407-2ab1-49e7-86f3-ceea4b2238bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c808a4-934d-4004-b640-5cda72b54b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736784a9-21bf-42a3-8b4f-0d2f11372c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57906ba-a700-4b6e-85ad-6bb074bf0972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94202f90-5780-4515-9db6-d00ff980c056",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df534a0c-0887-42bf-825d-524139748aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0fc3a5-7d2f-44f1-b969-0461385509fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f840bda-bdfe-4a11-a60c-07ce0d79d562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32825b2b-8e6b-409c-a670-bd8070581170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bee5415-6ec8-4970-b14e-6737a11d6ab1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ceeaf7-f56b-4df6-bdc9-10aededd9768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd239746-3c25-4c52-908e-f97909f8d5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4f49a6-872e-4f88-add8-64fd96840aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675ad079-30ce-4ac7-b33a-d2f4ba4e603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98edf5c3-ec29-4517-b317-bc186ceec1d8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c6aa14-32f0-4272-9672-bfef5fd767ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c560e93c-ca82-457b-bfcb-19e3eaf12d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158bf8a3-f3d8-436b-bba2-5535aa02581f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0b4746-472e-4f18-a4fb-36e229cafbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6902179a-1039-4ad1-a76f-01331df97cd2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83712be1-0596-4d64-a8e2-2078256736c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1626960-e7ed-4beb-b32d-2d7fc61ff515"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec61a89c-cee5-4184-803a-8dac31d655e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd1a87d-9beb-4980-a9b1-4cf4204ce1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af18c2a-94a5-4ab3-9cd8-54ac30d1c228",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25931285-7802-4901-b9a9-aace4497b804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f72a9aa7-27df-4809-83ab-c10ce5291fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49f1c48-7982-4ecd-9120-063ef5fce238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c260e7f8-4cca-4f52-bb48-7c867b3860aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb59b34-6bd7-4f1e-ac53-27c68ca63e04",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9732c07e-131b-4ffa-84d9-29c1523c4ae9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d014edf7-3cb9-44ab-a51e-13ca4436c8bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f749d809-cb46-4b11-b27a-0927be71db0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e012ab-f103-4cd7-a785-4ac4bc537ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f4825a-20d6-46bb-903c-c15c90812bd9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0925a098-4dd9-4a71-8df1-178a0cd7f21b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ad6b529-6cff-450f-8ce0-ce3c5c81e352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55536ea-5040-444c-bf39-be7e50599ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b25b8f9-967d-4952-b461-6837b4924a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8841bac-5e66-4390-8f18-e7d702036773",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcb6402-52b0-406f-b33b-4b828a81f07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50ce697-04a3-432c-8214-c03313132b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33876707-a9b6-4f26-9ec3-0ffb568522e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672e9523-a51d-4686-b02f-c5a21050ce61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebbc15b-e621-4a30-b789-876f8a0f1a7f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5041c0da-8f94-4369-9938-b8a4731bc047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790e4267-1eff-4ea5-8e67-71d9314738ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658e0c7a-4da5-46cd-8b29-69c8f4f9db1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce2016b-e3f0-4344-ab28-0879900b6ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7039c4ab-bfee-410d-a894-55c9dc9e2e70",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abad8c0d-1d4f-4700-8f63-d461710d2741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d557165e-6157-4d0b-9e1e-37a52d4e400f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46196828-71c7-44cb-b9b8-c32eb9566b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc50fcd-88ac-4dbf-89d5-3e89a43e49ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e78e3d7-6076-46b7-a3a3-acafc746a9c3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a26a3-9ef5-4bb1-8163-b473042e1c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8054e6ff-b221-41c7-977a-1b8a30571681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b3583d-5699-48a8-a21b-00e2e2f9c896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393ae052-34d0-4c2e-b8f3-621d451fe317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491d5059-80ef-41ae-9980-d86f4967058a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32d7643-f297-49fc-bd3b-a1226d10f62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fcae79-6073-4661-b2c2-aa77d7d6d780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "883e8726-cbe2-4f66-a30e-5d84254eb39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21a9b52-cee1-49e3-aec6-48dc93016286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0904de76-3895-48a2-a539-53760c8032ae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3674e43f-26f3-4881-bf2a-f7ef15c6c8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87dd544-acd0-4a6f-9b4e-a52855d7e2b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a27de8d-4dcb-4064-aae8-a961160556f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38638d83-5ea5-48d4-a2c9-17e8d33a0eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974e01f7-7484-4227-9ed5-d2bb4d551099",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a548485-2803-4688-a266-14c0745a7363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8f588d-1ae0-4a33-b115-1cc124324abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce9dd82-321e-436c-98f0-03eb5996131a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce07077c-a46e-4c1d-bc8b-9e64344eebd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde5b371-fd5a-467d-b666-c54655acf75c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66806e77-8440-4de4-ac2c-6c9b7de021fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90001e9-f77e-4078-a4d6-d5acc753d876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32dd9cb-cb5e-4abf-b96c-8faf76057771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc7dc46-f09b-44c7-9c15-6aa8e980a20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a04674-b881-4fba-8339-b0575d53e128",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b812f57-e1a2-4bb4-9ed5-ad2154805a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7af2ef-73b7-4d5b-84d5-ede7f1dd80b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58efe8bb-bac4-48f4-8e36-ac256f97f2cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be1a0f9-4ff2-4b11-bb13-3ab7cb03f33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a8c827-e2d7-4e2e-b9d8-d26d21ddd43a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5227a3-1fc9-4bef-a293-45ab952ad81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d84f56-cd6d-47af-bbac-71baa6ca8dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b24e63d-c8ad-468b-b74f-c9a66888bbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b00e50a-5ea0-475a-81f5-07e7b4f901ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e569b7-e320-468f-b1a8-c099ff5be45c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8fceb7-ee29-48d3-b3cc-2b2a48ffdd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f53a5ca-9606-4b3d-89b9-6dbf261e3722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea2d87e-021b-4541-91ad-bf635eba24a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd81ff6-0d0e-4967-822a-106ce626923a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def1f9ad-a2ec-43f6-b0de-cbf3a6f5c99c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af53bdb-574a-4b94-bf56-e2298174d598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610445a-e43e-4ef9-84c9-24c5572107b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78e5c44-2899-4b7e-ac29-51cd9b45b15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbe3905-6633-4084-ab1b-23ad90bf8422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8e5466-598d-49cd-904e-517dc6fb645e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad1a4ff-277a-4e0d-ab59-d25458867845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a76fd4c-d00b-4c1a-b3e6-8bcbff0069d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74948fc3-eab6-4fb5-8353-d4510eb40702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320b5c52-21b3-492e-9d1f-3364b23a7eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40307f8-6a00-4893-92a4-9f5bc73567e0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40abb38f-66fb-4f25-80e9-48b6f33d0675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc5bf1c-1d5b-42b8-9336-d60cc029b680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01778d6f-a1e0-43dc-93d5-a97046ed144d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a51029-b5ba-4781-969f-3fe9a2bc8db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a6202d-e937-4209-b613-06dad3e91908",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f9f5e9-3f62-4148-a56e-6973d8f3178b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "748fcb9e-c186-4b75-ae08-a36a5e9aab26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7d36f-7a2d-4198-9b1c-7bf10d06ae19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e55e1d7-312c-463d-9d48-e346526444ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235e0206-d844-4581-a24d-2b722216e01f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1257e641-8520-474f-985a-36be553455dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3716c9b-c281-4be4-9251-7b34d30a15e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2970f6a-d45f-4ae6-afc6-f004d170a1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af30c6c-de18-4c7f-b95d-1b0a015951b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d110e762-10b9-49bb-9b03-d1c879680f28",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1874b9d0-8338-43d4-a742-6ef86684544a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c55497d-83fc-4908-bddb-a0ed901a47bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febb7a55-3463-4449-b96b-35b7e5ff6446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8124f55d-313c-4a76-8ec2-138ca7f04b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d84ece-3c3c-42ab-a09d-727293f0a3fa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9df46f2-cfb2-4789-8286-7a6ccdf7b271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b986d43f-a2e4-40a7-a82f-2269700e56c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ae4a2b-3e3c-4e6a-a401-83348b35fb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3b66dd-7a92-42c2-ba52-f6c537a4bdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc74838c-d5cb-41e7-bde4-5e96657d8121",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ff292d-5d08-4275-985a-eb6e0648f3c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f219a18-2cd4-4108-852a-12f5335877c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abf5e7b-cf0b-4880-81a0-8d0e671332fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d61519-78ae-41df-a860-4accf6865de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42352a9-2fd0-4a85-8452-fa7491b110fb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9731579-c88d-4885-a7cd-7a8041377399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119e448f-f8e6-42c7-87c3-70170778306f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d4644e-90b4-4ae6-8924-d04f742be642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7461532a-a4dc-46dd-bec9-0226a2595366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaf7c03-3841-404d-84e8-07c14e970f3f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27049030-5144-4f36-96fb-0b35344233db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e767a9-9bdc-4305-8536-4c41bed7834d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5027bae9-60cd-4ab7-88ea-18e9af984db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc623d74-ffd2-4d6d-a3d9-ba7e35b92c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24e6c2a-093c-4d08-80e5-ee16b8770fbf",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a33a5a-6e71-43c8-adc2-98a2a4741afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88bb8c2-1fab-48b3-afa0-d3d337534750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bef47a-a648-4ba8-adea-adb7e99446d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b3cebd-a8cf-4e87-a464-cbeba558287b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f020a69-7f12-4858-b976-2d8ef7fe424c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89f3c9f-f89f-4edf-83b0-375740e15295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ffb4b8-5544-4869-8ff5-f55c7d7cdde1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aecc99-fcc3-474c-93fb-00e7d860d354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78ec3ff-4a45-49f6-b309-6c6ad03f7d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d584f8-5856-4b93-9127-0f9f2f9dfc23",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7b33c6-0458-4fa2-b01b-1f632b967441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7ec96e-973c-45af-a091-aef4c7a1f92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078a769c-d198-491c-a405-0d955f0c3f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802e212e-8836-4ef1-8b2d-72448ddd55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb0a47d-756f-459a-b573-7d2577afefdd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea73542-8826-4c68-b1c6-661c5d4c3baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b38556-4b98-4dc6-82be-406627348543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bcd161-b176-4c78-b147-3dacc73794fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8792c5e-1fdf-4574-98fd-1720b37ebce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d899f20f-359d-476e-b3d7-927a3051c759",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d247df-a106-4200-8e90-6b31fd2412ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a97623-dbe3-4b8b-bd40-bc1e94cd1a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b793d-a5ca-4c0b-be0c-0bacdf115b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb0865d-1f9e-467d-8f2b-eec819e04fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3959f07d-465b-4bf6-a463-535052f19b42",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad8e77f-08fc-4e0c-92c6-dfb798e63515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c20336-4936-4cf1-b5ac-e789ee6d77e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10ee87d-1140-44e7-8a97-bfc7dc6fba04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e44489-3900-4f97-ae4c-3342134a5973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571acf77-88bf-4765-aaba-4e3b76428f27",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0b5e91-baac-4607-9ff7-82d082a04b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e1e1c2-6ee1-4b5b-bfd2-2ddd74db5624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb6479-6109-4cac-af7a-fdfa503fb63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d46650-4a67-4157-8341-381c35ab48b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a03c3b-2466-4d08-8bc7-9e381c876701",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ff80a7-0c85-4ee7-8c66-e8091d4d92f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db422f4-9d7a-4830-8ef8-9dec7fae1aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24db0b45-b254-4a33-b725-c4c0a8a1f472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3091a8d-4893-40a8-8526-0a8353763a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ce03d7-24e4-461a-a9e5-238c7ba5fdfe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2cda52-f061-4687-a734-0cf071ecae6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed4cc9e-0c2d-49b7-9c6e-768979a6ef4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf522ea-5fdb-4400-8a85-c1550f303244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a789ec9-1d36-4c2b-9d54-e6d46c4c21c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8fc28c-a8ac-413c-b165-8235eb4c93e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bd9c9f-7169-4bc4-898c-693cf96ffb2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601ffdfc-8fcb-4b88-9167-21b9959d60ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53381728-7764-4a20-9fd8-47874f5e44ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e691935-b2c3-47d4-a29e-8d2222a6ebe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21123cf-9bf7-4ba5-8bba-3ad8ccf0d835",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aecbec-5664-4592-8cf4-d141c73c871d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34db9d37-dcab-482f-9bf9-3233ae5dabf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322250ab-8e47-4f33-8a50-1f859e81e318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb7b79f-7a88-4954-aee9-b4d8336c59ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb657297-1453-423d-9063-c40ac34cf533",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999e2614-8c04-4da6-8845-ab798377a7c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4ddcab-903d-4289-8fd5-8c526c43616b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf43509-8a92-4f2b-947b-5e0123fcfdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee0290d-2cc3-44a5-aea0-4f56cd76c1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889478a8-c5d3-4162-81de-4d3f2025131c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607caaa8-6f32-4e48-a32b-92288df88cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f287198-0f33-4097-9ace-6bdbb4bbd7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8466c78-2c3c-4bfb-9921-dd506ad12e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3af7786-39e6-460e-968b-b5290b77f85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2399a426-a741-4f6b-9987-15e314a09142",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dfc51d-5ae1-4872-b1f7-4854b3657174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df589b54-32df-4388-93ad-699223e9a7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11c055c-ae8f-4caa-9191-1b43cc851181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333f7008-dda0-49b8-acfd-bf20e295247a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c89c6-c3ec-4aa1-ba1c-9bf1baca504d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b6032b-75f0-4083-b6be-df398b156cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d5bb98-97c6-4028-8658-425a46c17b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013ebdd4-c0bf-451a-99a6-db56d341c257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aded4579-b421-4621-b759-b3fbe8db29a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11905e25-6971-4b92-851f-13b701312639",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82404052-c6d0-4b76-bf43-fff24f2d3193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f5885c-d0ac-4ab1-a580-9312f4592090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db493a65-10a3-434a-97ff-c544d28f2d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f987ddc-ecae-4ae5-bfb6-97462ddae619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a320e5-0399-4651-b241-6854b34852fa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137bf68c-dea1-4297-bd63-5b92cbfff25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e7074a3-d007-4e5a-8b2d-eef64e07773c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73726c1b-ecf2-4546-9bb2-a228b8ec2706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03313562-9094-4592-bb16-f1e9ed64f2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9d8e02-0e20-40bc-b262-790cc24e0cc5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0af9c7-0538-40a6-bfa5-6b8763e8afd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb34edd-5efc-4e54-8dad-64097b9d0b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9704cedb-23b5-4cb2-a98c-5e2b9024b359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3fe2a7-f9d7-4741-bcda-dbe8bb237c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2e6ac7-3345-426e-9cc6-67f256f1ca8b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4f9833-0962-4713-858c-189029a64772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ca278b-3a01-4f35-a7d0-60a5307bae3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8c5bc-23cc-47e6-bec4-0e39ae512d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77278101-554b-437a-98ef-43657d0111b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a32c49-59c3-4860-a732-961d67085f15",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64593b46-f92f-4cf3-a9ed-1a4b110729f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03b4321-d02f-49a7-8913-e04890488943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc41482d-2bd3-43b9-b88d-0b6d684ec664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8cbee7-5886-42fb-aa5a-ac0c121d82ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f08f6a4-cda7-4f75-8b7a-2c48d7f758d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f2744c-8bca-4ea5-93fb-e90d12884ac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999dd092-9ae2-459c-956d-52cfec016a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c4a58f-9e73-402a-9a19-9d1a143af5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6434d1-58a8-4291-9be7-3798997bdb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431c56be-8821-4d59-956c-e4a8179a0522",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc08dea2-a2e0-4f8f-a871-df18e3aca085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2175473-83d0-410e-bbe0-f08b8d5c22fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3843a41-f3b3-4f80-91c9-af8b02fb7ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0259f08a-14ca-452b-83eb-34fb06da78a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5f027-fa2e-47cd-8a71-021ea9556bd7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a229baee-eeee-4949-ad9b-ca117daed271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c38d88-bdc4-4693-af43-b7fb9e255da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b680b20b-bb88-47d6-aac0-d20a883bc9aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab91fb2-4672-43b4-abf5-d088aad7fe28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83fcb32-7ca5-471d-990a-4583db2f6beb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8468a45d-eb4a-4c80-be9b-1cfd7011a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c171c7e4-7b13-4b72-8cd7-da1edd2f3870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1238ea9-3b45-4e4f-abe3-49e5ab004f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e9c0f1-5255-4e2a-88cf-a55fe02177e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0073653-d060-4b2b-872d-27806ebcc20e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f8252a-6c2e-48fe-a743-e590f7a0b65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29e4877-61f1-4ea9-859f-2c26532d2d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4869993a-307d-41a2-8ccd-7541116949bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da96e08-a3b4-4465-9b7f-2765fb1325c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7a6643-d50d-475d-89ad-70e3f90534b5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593b8478-4ca0-4ac3-96b1-437ebce4ca46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bcaf7d1-9281-426f-9a3a-9bc045dd4441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaf64ed-26c6-4a74-b560-9d09ea12d185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bad6ec7-2a2c-4069-abcc-eef21af2a9b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef80fa1-c26e-4d2c-9e48-aa1086e306b9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629a5a6d-3c8b-467c-a971-1e6174e1c28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1880a20-5d8e-4987-a199-67f372b66ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ceaa8a-fb3c-4332-8f66-0d0838ea2341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024190ab-40b7-474a-98ae-e2a42f9342d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d050189-30a8-42f7-8be9-381c7d5f85c6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f66901d-36d8-4a03-9c1b-491eb92ca796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b838828-e191-4da5-b1e6-c9688f183072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bd3dd0-ba07-4d36-8b0c-e9c4e8b11053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7339f07-189f-48e1-8b9f-d59cf8e6bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d2156b-958d-4961-95ac-ff4d41230625",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff886d09-eab8-4979-b408-bee6f1ca43cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88810753-5c95-4493-afd7-d92aec4e293b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da3f2bb-fca7-4e7c-b1ce-320a486d6816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a7ef15-a974-44e5-936f-9d1e2f2d05ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d29483-5e16-4c64-ad69-f6b6fe71b2a2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f1f0c5-d961-495f-b00f-8588b06a9195",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7163a70c-d696-466b-a863-080f085a08d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeb344b-7767-43c1-96aa-fe1326ba805f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9415e311-c6fe-4211-9bee-657ab61db2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2f32cf-cb42-472c-8ce7-fb538e42b6da",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9794f342-c592-47d9-a604-fbb832b89b74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9eb27c-367d-4402-8d1c-e161be8b6c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b842e5-7494-4285-82bd-35535b6a6f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece9d54-7507-4d7f-bccf-38fd5ee85872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f063a3-9c3e-4cc1-96a7-8dbaf0dc1571",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb26b45-8614-44ee-b362-4476edcff3f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544054ca-443d-4437-966e-9bd93372a25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fb2f41-c82d-43a6-950e-5af5c33d2e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2adb9a6-481f-4e7d-9139-cc67efa6e1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1487b845-8e7a-4ddd-bb01-19c88f07ccf4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1e0edf-6f31-4535-aeb4-2d694e9e2540",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f171ae1-9a84-423f-b1b1-5014dcc3266a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4292f79a-f219-467a-8ee0-380c66b3b526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c825af-ee40-40e0-9f37-a2217843f096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15da3b3b-3b44-4257-9455-563aeb0cdfc9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b0e7f80-2251-4482-bca5-95d0cad60236",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0453b38e-5a5b-44e4-b46e-0b298038372d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f268fe-0a1b-4d2d-a670-14249ea81faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9868db5-7bfb-4a05-bb3b-917f4bb7f462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e56669-22c7-452a-be44-273f930fe703",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b962e6a6-e7b3-44f4-b375-ad381450e6db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ee73ae-bccc-4b99-9351-966588d126c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0c024b-5e16-463b-a4fa-b32c0cbde7ed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73f3ae8-6bf7-4c60-8366-9a657a3f4940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8389307e-27c7-45f6-a88f-5b35f6b5e960",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd0a1ee0-552f-429a-b186-7c29e19d7e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f62fcd-af8e-4720-9f4c-f53026c8f268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea99ff60-55d8-48a7-bba7-a83d8a115ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdf8ff6-af4a-41a9-aeca-06573ff8dad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa872bdc-e68a-485d-9b85-97ac12af92b0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ad3d2d-ed71-47f7-8b0a-3916c84ce224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b469c461-9abb-41a1-8b1f-9cada081b1ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2dbea16-6f22-4d67-bb9f-097ef971cd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4053359e-0bf9-4587-bcf1-adf17e4767db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4be052-2fee-49b4-935d-890456a6cd15",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a00ec0-a2e9-4b4b-be4a-a28642dfc37e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e99aa02a-528b-4186-9c30-60492781222a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "633e424c-4925-491f-9517-aa09684475c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "395e8b3d-ee13-4a01-84a1-041b3459f6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1702e95e-e388-4242-ae0e-02068a0308ed",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d1e0b0-b1dd-446c-aadb-ce439c1b4621",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "129f9f05-a2b7-4a5e-842e-3c852915e5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aded06a0-4eef-4252-8900-1174f1312248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0280d6c8-58c4-4b78-9c59-0e388c379ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfeb8f3-6520-4348-a9a8-6c9bd0c5bdf7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370c94c1-14ba-42a0-8ce6-c85286efa83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee6122f-c812-4a79-bfc0-1839e9f87649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8748d21-cc5a-404a-8ce4-9177214c79cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedc2e4e-3a40-496c-be2e-75835f7f6b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b530a77-e577-4740-ab07-7e15de35b650",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b375b4c4-f03f-46e4-9918-52fd48e449c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ef9c552-020f-4654-bd95-9c9e74da16d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66013248-ab6d-453b-93c5-668d0f65dd19",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f75b79-1d85-4bb7-badc-cac84a81a3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785fa16e-8d6a-4744-a36a-a93d515a701c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f55c211-74b5-4c60-8bb0-e9716620058a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda809ac-f72b-4350-b98d-75cd0472cffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d352cb-0a7e-4005-ac84-67b793177018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7992ced2-86ba-480f-b0c4-6a68fda98bb6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eef8e180-6f55-4be9-aef8-716b61e99cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd7ae12b-e6de-44f1-9b1c-6e583eecc01a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78c61a4b-5c04-4f7e-bd32-d4bb19373ce1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "863618f2-a40a-423d-b8b8-513bab7465c9"
                    }
                  }
                ]
              },
              {
                "id": "efcf2833-16f1-48cb-af71-e9cbe7eabacc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd07ec41-446c-4766-b8d1-7f6edd6aff78",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6e9868-a3cf-4651-be74-afb33e15a871",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3041bd12-da84-49a0-bb74-25f5740f4398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63345473-0eeb-4f9f-b9af-50cc5d6f87f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bc8c4db-c7c6-4e0b-9c6b-40cae60172e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbd229fd-872f-41e4-a7c3-894d56abca85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64ae5427-0c93-4ec5-a108-c4dd6b23e03d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec977ddb-84f6-4e80-b8f6-9b12cfd3033b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c81754d8-d1fc-4e65-9bd8-44811d1d775e"
                    }
                  }
                ]
              },
              {
                "id": "87e93b70-9e8c-41a4-943d-837020a72d8b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f582692-2837-46a3-a211-4f78e535e328",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6119d33f-c67d-45c7-b0b5-1bde2bc1645c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "54d36521-8e8d-42c9-a1e8-07bb9173d73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e920ca-2724-461c-8b11-7e4605cd649c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5417a4c4-15b3-4ebb-a49c-c804b7254f77"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f60e041-6ff2-403b-b518-bf90d8f77313",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0dc0705a-45a6-415e-916a-2416af1b69da",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c17bc57a-2313-4534-aa4a-6ca550e15bc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ce419df0-3e1a-4954-8c53-e75339f94766"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2378c9c3-5a1b-4fd2-aa1a-11afec2cf7ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3d3fa78-3ecd-4912-917f-6c646381144a"
                    }
                  }
                ]
              },
              {
                "id": "03b5a54f-4cf9-4163-b239-80ce35df6605",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "777200b1-b3ac-43ee-8212-10e71550c30e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "50978c49-3d97-44c0-a06f-b2afeb8bfcb3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d78736f1-327b-41ba-9e9a-5fe794db23cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d7340cb-5d5c-4a69-b272-2b2915653288"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cca0f7d-add1-4d2d-8152-8752a33e68e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ff33db3e-c821-4eb0-8cf0-dda3237b9603"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c895a771-86d4-459e-8b8b-bf14bde3ff59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa66f8cd-acd1-4030-bfba-fbec7abe11f4"
            }
          }
        ]
      },
      {
        "id": "b05da2c4-3d6a-4c97-afd4-68d328e35f62",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "245b2c58-a47d-4337-afbe-c0eb22d9c56d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f8e9ab8-dc84-4300-b60a-e7da0c2f9afe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7aa8750d-7ebd-4132-af4a-328c6c84f39c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc99a67-0fa9-46e5-97b9-63e0dae46bb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "550608dc-7f4f-4b1e-a0ab-5cc7e1495c07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f543d45-7e0a-4c2f-bfef-0e8f4307aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7537c575-8e02-41b1-a9bd-fed2a13b8112"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07124f45-c9dc-4a44-8a60-729692edbc01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6d02eca-cb2e-4454-84f7-0366923fae7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d334ab5b-ea1f-4c16-a5d7-fa3425960216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa784110-d44d-4395-9aa2-31e89c59f2c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30ae3daf-7a44-4123-a65c-664ba5a7ddf1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a61f0599-3e82-4f64-be1b-15d9e90667c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf5fcdf3-091f-40e2-be65-d471a77c0835",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad09bcf5-063a-44b0-8dc0-38a5c9d94f94"
            }
          }
        ]
      },
      {
        "id": "cd6b7da9-54dd-4a52-9dd9-46a558570bbe",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "27495ee6-321e-430e-975a-df1a46233ba8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25b4ae33-cc4b-4850-a493-826fe374be50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4611937b-1609-47b1-b46f-7558b799559f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bd1297-bf06-4b89-af5f-bc248fe00baf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1da4be50-96a1-4b5e-bb05-755507733669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b4df9f-b1af-4b64-a7ef-66fcd3bfecdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45f0e0eb-ed39-406b-a5dc-3066d1a841a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "718f5fc5-361e-42aa-b2ca-e177522bc9e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b10145a9-e66c-441f-9436-fb210d58922e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c069876-081d-4590-b964-b21d690d08a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3082d95-82dd-4972-864e-31b826bb7423"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa0e9525-c4ad-4e26-bdc5-8858a8589b39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fb5a5345-965e-41e3-aba4-91fe243c890b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36c29e2e-f74f-45ab-9e90-26bfcaf31321",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5984154-afe5-418e-9642-cdc2bafceb0c"
            }
          }
        ]
      },
      {
        "id": "508d2004-62fa-4551-83a0-40726ecb726c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bcb3f0ab-679d-415d-9151-750b37b6a2ae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f80f8e06-6067-4bb0-882d-ab3c3334c91a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d78413c0-126a-4b65-9177-692681eb0718",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27ce0b-ca31-4854-98a4-2d253418d237",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51bf5aaa-7552-4c4e-9606-0458f236842f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d6434e-17e2-4fd2-9e77-b302b064f843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16528c5b-715a-4c21-8154-0a80cf9d1735"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6db8ccd6-b111-4981-9f53-47d31c4f6303",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7da20cb-67f2-48ee-acbc-bce4be282542"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffae2df7-fa8e-40e0-bf2d-b2db0e0e6884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13ddb9a3-f4af-40d3-a38f-f975156dc97d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6674fd70-0eaa-4dbe-a40d-e861693964e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "988a9c3a-a7b4-4bdb-99ac-abba5503cf9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24c51ff4-1691-491a-b7ec-8bddd3d33e60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23b54f42-441d-4a7f-8d2e-8c12a0f21f6a"
            }
          }
        ]
      },
      {
        "id": "5761946d-c684-4c65-84c7-b9eff3bbd338",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c42e1aa2-79fe-4284-b26e-393950fca7c2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "189de3b2-d80c-478a-9c65-5a237039f3b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7c7e239-7ecb-4ae0-af24-cd5b35d7870f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "213afe2e-10c7-4f9b-ab96-180443f98587",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03e8fb24-3859-4157-81fc-e7513f0afa10",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 255.59126984126988,
      "responseMin": 8,
      "responseMax": 5415,
      "responseSd": 831.5207403726114,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717115840663,
      "completed": 1717115913798
    },
    "executions": [
      {
        "id": "d5026576-695f-47ff-9da6-760ca503f51d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7ef39863-42d8-4db9-8126-07e70e03f8f7",
          "httpRequestId": "9cba8fbd-0fd8-42a8-87d5-bde871980d05"
        },
        "item": {
          "id": "d5026576-695f-47ff-9da6-760ca503f51d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "21ff292f-3a4f-461f-8fb1-3ac792ca263e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "05ae61a4-248d-4600-a79b-9af28f633d45",
        "cursor": {
          "ref": "cd5d05c6-e12a-4b7d-8164-78a0c7b6c4a8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea919fa2-1a4d-4483-8e8f-f151fdbaff91"
        },
        "item": {
          "id": "05ae61a4-248d-4600-a79b-9af28f633d45",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6ae5f08c-e6a4-4be6-8d54-557833312d3f",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "2de15de0-88ab-4f66-b0cc-6111b8e0857d",
        "cursor": {
          "ref": "d2792b60-464c-4747-9aaa-895aa2a8bb06",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8129dbbd-429a-4dc5-8f25-ede951762621"
        },
        "item": {
          "id": "2de15de0-88ab-4f66-b0cc-6111b8e0857d",
          "name": "did_json"
        },
        "response": {
          "id": "9c4dc865-8796-4c8a-bf03-e13306ddbc65",
          "status": "OK",
          "code": 200,
          "responseTime": 318,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11850d9-743a-4eb3-ad59-541950c9b6ae",
        "cursor": {
          "ref": "71eb03fc-bcaf-45cb-bb4f-8b347b5bc26f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "22476d46-5efc-4371-8aa5-74704e5191ab"
        },
        "item": {
          "id": "f11850d9-743a-4eb3-ad59-541950c9b6ae",
          "name": "did:invalid"
        },
        "response": {
          "id": "0aabc020-d53b-4976-95b5-b72cc473a9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2386,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11850d9-743a-4eb3-ad59-541950c9b6ae",
        "cursor": {
          "ref": "71eb03fc-bcaf-45cb-bb4f-8b347b5bc26f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "22476d46-5efc-4371-8aa5-74704e5191ab"
        },
        "item": {
          "id": "f11850d9-743a-4eb3-ad59-541950c9b6ae",
          "name": "did:invalid"
        },
        "response": {
          "id": "0aabc020-d53b-4976-95b5-b72cc473a9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2386,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8efbf8-9bd1-4ffe-953d-5d992a8293c9",
        "cursor": {
          "ref": "4b35e31c-0447-4ef9-9bf6-cc3f1a72570f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "51613911-6a1c-43e3-9282-37b247b95de6"
        },
        "item": {
          "id": "ee8efbf8-9bd1-4ffe-953d-5d992a8293c9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e18a8332-7fe5-4f8b-a4f9-ea84e534c1b8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2723,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffa0390-f12c-4e66-8764-29fea8050e42",
        "cursor": {
          "ref": "bf13f456-0b51-4345-a104-e319a924bc30",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e10af264-ce16-4173-9195-6e50730c1bbd"
        },
        "item": {
          "id": "7ffa0390-f12c-4e66-8764-29fea8050e42",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33aec18f-9162-4fc2-8bac-c9f26099233e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2257,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb22201e-dd8c-4843-bfed-80317b2a4898",
        "cursor": {
          "ref": "20589ad7-f2e8-49ea-9a5b-aff6cce63a4e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "63bbc614-4301-493e-8d0e-39cdbd3d7599"
        },
        "item": {
          "id": "bb22201e-dd8c-4843-bfed-80317b2a4898",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8a9629a3-0693-4fd6-8d60-836da18945eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb3387-7b9b-4711-a0b3-f75de2250823",
        "cursor": {
          "ref": "4526141e-6c4f-48e4-a415-2e39b3eeea17",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f253aa2b-2fd5-484b-8a12-cdb83e56e6cd"
        },
        "item": {
          "id": "c3eb3387-7b9b-4711-a0b3-f75de2250823",
          "name": "identifiers"
        },
        "response": {
          "id": "e55587d8-e33e-426d-a913-bb033104a197",
          "status": "OK",
          "code": 200,
          "responseTime": 2160,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10ad202-e513-4876-9fab-613ccd569cae",
        "cursor": {
          "ref": "97531ed6-bf6a-4022-a3be-5593db92fe5e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b30f534e-4840-4cde-a363-d014b8adb477"
        },
        "item": {
          "id": "f10ad202-e513-4876-9fab-613ccd569cae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f21143a6-cd2d-4901-a674-50783defffd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1520fc4a-5d6a-4e48-a4ac-92b591a769b2",
        "cursor": {
          "ref": "bd172e51-3606-44e8-9844-a607001eced6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d09c518a-a0ac-4f3f-8425-289747df8196"
        },
        "item": {
          "id": "1520fc4a-5d6a-4e48-a4ac-92b591a769b2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ce5b8a63-b96e-4ed4-903a-503b19b76a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc159c4b-9103-440c-9dec-d3cfb8607c19",
        "cursor": {
          "ref": "291c5ab8-27b7-4786-9965-c490f071a05f",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5a315c2d-5980-4497-bf4a-e3a063c65008"
        },
        "item": {
          "id": "bc159c4b-9103-440c-9dec-d3cfb8607c19",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ddb52e83-7f50-49ae-bde7-b727cafef98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4869dc28-d321-466f-a7b9-1b0ee7bd89bf",
        "cursor": {
          "ref": "96a5bc31-6721-48cb-b086-de90d5572720",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9f13bb4f-cc5a-4f7f-b311-4d11981f9941"
        },
        "item": {
          "id": "4869dc28-d321-466f-a7b9-1b0ee7bd89bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "998eaf28-4934-41e8-ab2f-05fc06579720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7404d0c3-cdf5-447e-975a-9184548d74ad",
        "cursor": {
          "ref": "bebab37f-7e20-422d-9b6d-6b1b9b788439",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0e7837d4-2db0-48e6-b18c-9d0bd6547615"
        },
        "item": {
          "id": "7404d0c3-cdf5-447e-975a-9184548d74ad",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e8a99d6a-85bf-4ef8-84c0-b4102d260a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272cb344-16d4-4861-b36a-be1898d1dc39",
        "cursor": {
          "ref": "4fcb3b14-ed98-442c-85b1-0d4f911a242c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8dab636f-0581-4866-aa1a-0712d0b613f3"
        },
        "item": {
          "id": "272cb344-16d4-4861-b36a-be1898d1dc39",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "13e4a57c-4a19-448a-b07b-c722854d90ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c703b6be-10b0-4936-a7a9-dbc50f68ba11",
        "cursor": {
          "ref": "6f00bfe0-481a-4ef4-8206-98dcabf773ce",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "347edf02-6872-4f65-8800-fea9e318b4ad"
        },
        "item": {
          "id": "c703b6be-10b0-4936-a7a9-dbc50f68ba11",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d8219cfc-e430-4b52-8b0e-39ef9bdcf86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9f3c99-66ed-46ec-a479-0fd23a2098f8",
        "cursor": {
          "ref": "553127d5-5fb8-40c6-aa7b-3ac9d673fb1d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "75f7e431-a999-4deb-a094-2189499fbfdb"
        },
        "item": {
          "id": "4c9f3c99-66ed-46ec-a479-0fd23a2098f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "58836dd8-ac56-4c32-92e7-ef61663e0a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a43e1e-4b21-4ecb-8271-37b432c9cb85",
        "cursor": {
          "ref": "14355956-61d7-47a8-808f-30aedbd23cb6",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7accaf85-e766-4280-bfa5-9b3bb86294ed"
        },
        "item": {
          "id": "a1a43e1e-4b21-4ecb-8271-37b432c9cb85",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ca6ad8e6-4a84-4321-bc22-505b8f44f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4d84c6-8c65-44cf-a241-155b20660c81",
        "cursor": {
          "ref": "4860e1aa-9378-429f-a983-e4128999fde7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "95e7c20a-ff8c-4c94-9690-c53619dd76ba"
        },
        "item": {
          "id": "6b4d84c6-8c65-44cf-a241-155b20660c81",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d374fb5d-158a-469b-82c4-6366f04e2cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08b2f3e-021e-4d8b-90c6-1ea1eb67e735",
        "cursor": {
          "ref": "f6e27cfb-f870-4860-9567-5eaaa5fc4ea9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3528823c-d6d6-4a6c-9a73-8c0e0abd999f"
        },
        "item": {
          "id": "c08b2f3e-021e-4d8b-90c6-1ea1eb67e735",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6cdee511-fd34-4727-866f-97b35c906891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2570ae1-a241-4078-93c4-ad1a2365426e",
        "cursor": {
          "ref": "c1cb30b6-9431-4ea6-9f0e-1d33b241dbd4",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c8bab274-9b08-4424-9e72-f8e5bd42016c"
        },
        "item": {
          "id": "b2570ae1-a241-4078-93c4-ad1a2365426e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c10e7080-0083-43f8-9647-e200313101ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3ac37e-fe72-4004-b5e0-62c6564ad899",
        "cursor": {
          "ref": "a36a9e04-1840-43b7-a045-4fa49e6f4567",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "89c791ab-512c-4da0-b09f-2932b541db14"
        },
        "item": {
          "id": "4b3ac37e-fe72-4004-b5e0-62c6564ad899",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "aec95ac5-9998-4897-9b0a-884c5c238b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121925a6-2999-436b-afa4-9e5ffbf10d3f",
        "cursor": {
          "ref": "cd41eebf-2654-41d3-af55-fb85c20dabca",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "087f97be-9f81-40cb-b657-0a88984c2a4d"
        },
        "item": {
          "id": "121925a6-2999-436b-afa4-9e5ffbf10d3f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5862db97-48f9-45d7-a205-5e6e2819f110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af67afd-350f-4f82-8203-5c2d5a0eda2e",
        "cursor": {
          "ref": "7137d9d6-7c79-43ec-8a3f-fffaa7c19277",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "109b94ec-2aa4-451a-9506-a71b13d04205"
        },
        "item": {
          "id": "2af67afd-350f-4f82-8203-5c2d5a0eda2e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "48d17448-c734-4d78-8ee3-df4f19a9cb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db221d38-2b4c-4a1b-9610-b3883747586b",
        "cursor": {
          "ref": "4c8ebbb4-49eb-4714-a40b-ce8c989b4e0e",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3d51660a-f8b8-455c-b765-3ba5dc5071ba"
        },
        "item": {
          "id": "db221d38-2b4c-4a1b-9610-b3883747586b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35bcd22e-0bad-45a4-b795-eba527ea8979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b554f1ca-6d84-49c6-bd35-094fee43710c",
        "cursor": {
          "ref": "6304b66f-3437-4ca5-8e73-7926e18202ee",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "923f8cab-5d39-4b5e-a711-4fb600738ecc"
        },
        "item": {
          "id": "b554f1ca-6d84-49c6-bd35-094fee43710c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "964aac08-d217-4010-939c-4e61cb766f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634bfc98-ede0-4cdd-91be-5fc4bd3c03ec",
        "cursor": {
          "ref": "7c901ef1-63f4-425e-88cd-59cc5d5c46c4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e16d87a5-65b9-4d5f-b139-bba71e50f0e3"
        },
        "item": {
          "id": "634bfc98-ede0-4cdd-91be-5fc4bd3c03ec",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a05d6883-4def-4f43-810f-58639e749bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a71abd0-1923-4e41-b7c8-b1c22a0e8b3e",
        "cursor": {
          "ref": "371ebd7a-a6be-470c-846f-6bee15abdfa7",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f76ef6ad-cb6c-461c-a703-8fd11d1ced8f"
        },
        "item": {
          "id": "9a71abd0-1923-4e41-b7c8-b1c22a0e8b3e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d37a7464-bf7a-4651-a19e-30c469d25a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad77aeb6-9461-48d3-bf97-f357520707db",
        "cursor": {
          "ref": "1e25db91-3841-44d4-866d-f68fbaa7277b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f56787f-5391-404d-a8c2-c300b1c67bea"
        },
        "item": {
          "id": "ad77aeb6-9461-48d3-bf97-f357520707db",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d8b7b5ee-ed0d-4f97-8f58-0782597c08ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d997df-389a-430b-9b5d-c68f21d9840b",
        "cursor": {
          "ref": "f9fd01d2-33f8-450a-8da7-97f59019dbec",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fef30ff2-6bf9-4152-9757-82d48a9c65ea"
        },
        "item": {
          "id": "f5d997df-389a-430b-9b5d-c68f21d9840b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1c8709d5-c207-4649-9d12-1055f3f73c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c757aaf8-19e4-4ec9-af1e-be8754b9bf17",
        "cursor": {
          "ref": "04387603-bd75-45e4-b205-3c230a0448c3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7e15c3e0-8f56-40a8-831c-6438d6c67d8b"
        },
        "item": {
          "id": "c757aaf8-19e4-4ec9-af1e-be8754b9bf17",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a2a38e2d-948c-4aef-959c-d74c001595fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b575ee1f-251e-4bcf-acfa-c925bfbb5873",
        "cursor": {
          "ref": "f1883177-5e0a-47b3-9e75-0c9e19326cfb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "62a1b255-a0f8-4f93-b5bb-9f769ed409cc"
        },
        "item": {
          "id": "b575ee1f-251e-4bcf-acfa-c925bfbb5873",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d2f92ce2-faf0-4351-9725-4fa350f78d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7e974d-8748-4ff9-991d-4bf8225385b9",
        "cursor": {
          "ref": "9ad066ab-2edd-47a5-aa52-8369959a0e8c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e9a61273-34fa-4ab2-8b1f-fdbe18278e03"
        },
        "item": {
          "id": "ad7e974d-8748-4ff9-991d-4bf8225385b9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ad48a092-f1a1-4fff-a017-ac2ada026e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4916360-9090-4c49-8fd8-2160d615bc38",
        "cursor": {
          "ref": "47f6eab4-bbd6-46da-8279-e13fc4558a81",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b893c779-3fb9-4b46-b475-86beaf52ba9e"
        },
        "item": {
          "id": "b4916360-9090-4c49-8fd8-2160d615bc38",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "52c8bc63-03f8-41c2-80b6-519e70c450d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3112e7-97b1-44a3-aece-7330b8524d3b",
        "cursor": {
          "ref": "7e4f3463-3c55-4aee-8217-d263e40a1f2f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "39fc9242-0b70-46dd-8a34-cedbfa398da3"
        },
        "item": {
          "id": "5e3112e7-97b1-44a3-aece-7330b8524d3b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1874313-8349-449f-85c6-ad8f4111a810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d727e49f-98ab-46fa-99b7-455b4b257f31",
        "cursor": {
          "ref": "14083f8c-037c-483b-b3a3-33525d1a8deb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cebfcee9-187f-4f4e-967c-d64a0d00b50e"
        },
        "item": {
          "id": "d727e49f-98ab-46fa-99b7-455b4b257f31",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2c237072-4449-4f65-b7e4-6bc3e994531c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5215fe73-3611-405e-b7e6-fcdd8d1a4145",
        "cursor": {
          "ref": "4848241b-15f0-4594-9b89-da83ee2d5af7",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f839867a-9836-4ad0-80c5-85e61b39d50b"
        },
        "item": {
          "id": "5215fe73-3611-405e-b7e6-fcdd8d1a4145",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2b2d6af2-da7b-4807-bc54-5185c1f88d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac96415-406d-458f-b607-b747bb40236f",
        "cursor": {
          "ref": "be039256-d876-4c5d-9baa-d29bfa30ee9f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0a2ef00e-cf44-4723-ade6-c358489a0a0a"
        },
        "item": {
          "id": "9ac96415-406d-458f-b607-b747bb40236f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5bb71adf-5ad9-49d2-8b4d-d2e78afe6ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cadfdf-8e2d-4585-9627-b3b64d48382e",
        "cursor": {
          "ref": "ff9ab396-84db-44ac-bd7e-f0aa867529ed",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20fffdeb-8fa2-4fc6-8fa1-a7c551362ce6"
        },
        "item": {
          "id": "51cadfdf-8e2d-4585-9627-b3b64d48382e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "97dc4500-ed1d-408f-969e-6279535c3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e7bfa3-cb1b-4fb0-8125-b9fc29a9f148",
        "cursor": {
          "ref": "c556eb23-0162-44a3-8cf2-a6e6d323ffd4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5168bd2b-5be7-4e92-949e-d98c8118b5ee"
        },
        "item": {
          "id": "e9e7bfa3-cb1b-4fb0-8125-b9fc29a9f148",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "37b7522e-a665-41ff-9315-0da629cb75d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b64b14-e6d4-48b4-9e78-777dae1e670c",
        "cursor": {
          "ref": "33808d1f-cf7b-4707-86d8-b6f4c8d2335d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4016697-e0c3-4b66-b5dd-274439f7002c"
        },
        "item": {
          "id": "b6b64b14-e6d4-48b4-9e78-777dae1e670c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d58b0234-d6ee-4aac-8d7e-b36a28c1fd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16955db2-c486-4188-9163-d7e707ab89c4",
        "cursor": {
          "ref": "ef1bc520-914a-47d1-8296-a71b69edc950",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "115a5e9c-71e2-4a7d-bf9e-c3674029f8c0"
        },
        "item": {
          "id": "16955db2-c486-4188-9163-d7e707ab89c4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c08c3e31-1285-4c96-a762-4f976bdbb699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22704738-c424-47c9-8fa5-2e0c1a65a140",
        "cursor": {
          "ref": "6ec5bc1d-00a6-42b0-bb13-f52eb9b40696",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d318657f-b75c-4dc5-9aa2-21f8fc349da2"
        },
        "item": {
          "id": "22704738-c424-47c9-8fa5-2e0c1a65a140",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "df74982d-f244-49aa-8428-100710dc7f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4665be0-fcbf-4678-9198-8603263b007f",
        "cursor": {
          "ref": "429288f4-87dd-4c6e-9156-01e343346282",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ee8314d9-ccfa-4136-9257-acc72d61e695"
        },
        "item": {
          "id": "b4665be0-fcbf-4678-9198-8603263b007f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4c385f77-1339-4a76-9180-560cd5f3ea05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd072555-4166-4b3b-8ece-e6125e062c48",
        "cursor": {
          "ref": "7c1bf2c0-bcfe-4a6d-85ec-b6e7e651dd46",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "672fe7a5-9e6f-47b7-be56-faa4c7f5bf41"
        },
        "item": {
          "id": "cd072555-4166-4b3b-8ece-e6125e062c48",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "650a2d7c-6b3f-4035-9f47-4f8fe811df46",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 68,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f81a11f-7d16-424a-9fd2-e776ba3bac6c",
        "cursor": {
          "ref": "1ad88378-9812-447b-976a-54c512c31cc3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "045ea6ce-3c3d-436d-ad6f-2fe8c6900b76"
        },
        "item": {
          "id": "3f81a11f-7d16-424a-9fd2-e776ba3bac6c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5bbc533b-9e74-42a0-931f-ee72ff7b2941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c037a1-0438-4461-9cde-32ca93715f78",
        "cursor": {
          "ref": "5e98e2db-e1c4-4109-98c4-29520238a980",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4978d01f-4a1f-4ad8-b140-80015f5c1ac3"
        },
        "item": {
          "id": "b4c037a1-0438-4461-9cde-32ca93715f78",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7bfbc361-77de-4899-8c8e-3b5bc70b0d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be88e4b0-5479-4147-afa1-7ba048003482",
        "cursor": {
          "ref": "17ac74dd-b550-4ecc-9646-6f2e8f154d5a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6dbf2434-9efd-450f-a1f4-e7535655b7cd"
        },
        "item": {
          "id": "be88e4b0-5479-4147-afa1-7ba048003482",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2368b93c-3af9-4ac1-8cb9-914a3502a2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bac5da-e7a4-45da-8ae0-d790d5b5f57a",
        "cursor": {
          "ref": "a5b034ed-fd22-4bd2-ba2d-664eb9fc562f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1a15a15e-1ee6-4234-b76c-0731f2e0921b"
        },
        "item": {
          "id": "70bac5da-e7a4-45da-8ae0-d790d5b5f57a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f69f2507-c858-48a2-ba8b-82fc77a20ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89512c8-b198-443a-aa19-3876f2bd121d",
        "cursor": {
          "ref": "dd12c34d-57f9-4f3f-b506-a2bcde145238",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "485e482c-b2fa-4d53-b0f3-340b67bab60c"
        },
        "item": {
          "id": "a89512c8-b198-443a-aa19-3876f2bd121d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "606c89c5-1436-4a74-80e6-d7394ff93b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a36d79-a63f-4510-aaa3-4eb5245708fa",
        "cursor": {
          "ref": "01a9be51-b575-42f0-bc90-7821a2cbf7ea",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a1474d9b-8199-40e6-9a75-ac6cfaa6851a"
        },
        "item": {
          "id": "73a36d79-a63f-4510-aaa3-4eb5245708fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4ed585cc-2bc8-4aae-affd-c022d08a240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed9b686-c22c-44da-99de-eaa0d190399e",
        "cursor": {
          "ref": "b49f6b9c-40eb-407d-a0bd-6a5f4b6c496f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e15e388b-ba4e-43a3-bb4f-64fd0e752575"
        },
        "item": {
          "id": "2ed9b686-c22c-44da-99de-eaa0d190399e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c0ad93c2-2de9-4200-a5c4-a58fcfe282a3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d42c54b-cf06-4475-9f69-0bacec9c93bd",
        "cursor": {
          "ref": "2688a2e9-cbe7-43ab-9dba-cdf2acfe5fb6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "749a92bd-212e-4cd4-aa58-83a4921284fe"
        },
        "item": {
          "id": "6d42c54b-cf06-4475-9f69-0bacec9c93bd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d1c17c95-4ccd-418c-a8c9-af92c8d9d487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b36358-8c80-4ea4-813d-5c57983ef787",
        "cursor": {
          "ref": "b80a60b8-2393-405c-a39c-4a80b3bfc069",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9bd6f515-646e-4e97-a3a4-c58c365d1e5b"
        },
        "item": {
          "id": "69b36358-8c80-4ea4-813d-5c57983ef787",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "89b6e973-85bb-4462-9f10-94945ae0ff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a1a94d-1468-4783-8de2-96f5d9e2179c",
        "cursor": {
          "ref": "0464adda-1224-49e9-af8c-7b4c9cbd5b43",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "011256e0-33fa-4b13-aee8-c5e59c392a22"
        },
        "item": {
          "id": "10a1a94d-1468-4783-8de2-96f5d9e2179c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "71a7bcac-9b26-4786-a671-c10e6ede5f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc475f2-624e-41e1-b887-f83def3bb1c6",
        "cursor": {
          "ref": "061f5aa9-727c-4c1f-a380-db1cfc066934",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b5d9d204-3ec1-4492-b058-117697387d51"
        },
        "item": {
          "id": "2bc475f2-624e-41e1-b887-f83def3bb1c6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "27a6ae6f-31b1-4106-9f3a-b8ffe958e240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f067739f-e55e-4a82-9fcb-c52c2af2fdf3",
        "cursor": {
          "ref": "b5fb652a-6401-4e27-bd57-c51923ab1c11",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e5b59678-fa25-49c5-8f79-6864517bde6f"
        },
        "item": {
          "id": "f067739f-e55e-4a82-9fcb-c52c2af2fdf3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "50e8ca4a-bce9-4178-8abc-13ce66ed75f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ad7536-4102-4944-be01-966819c44dcb",
        "cursor": {
          "ref": "973aed5e-8e69-47a2-98ac-239c43b4ac09",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7958455e-547c-465e-bcfb-f69407bbe0a8"
        },
        "item": {
          "id": "28ad7536-4102-4944-be01-966819c44dcb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69c241dc-10b6-4d76-85bc-21d9acc25ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a2151d-9302-46dd-8391-69b5bd5472d1",
        "cursor": {
          "ref": "6b9bbb46-c356-4261-90d9-cfda32fff600",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bde942fa-4a92-4129-840f-d4ab94a86012"
        },
        "item": {
          "id": "74a2151d-9302-46dd-8391-69b5bd5472d1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12a1f2ef-06c2-4213-bc79-8fad7e6cde4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150fadcd-b7c5-4695-96c1-a04f9c70f88b",
        "cursor": {
          "ref": "34c44d78-54d5-4e51-83ce-0f51ef0d21cd",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a6309701-8fad-4365-8d6d-a19d8914b88c"
        },
        "item": {
          "id": "150fadcd-b7c5-4695-96c1-a04f9c70f88b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "06ab30e6-e8b5-4e21-9e8e-be4c683bdf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1801c7-c116-4375-9117-6a9b5cc54904",
        "cursor": {
          "ref": "955a85e1-94ae-4f98-871b-e7ba8911aa15",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2b370447-8c62-46ab-b535-f38c8f36edc8"
        },
        "item": {
          "id": "ad1801c7-c116-4375-9117-6a9b5cc54904",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e314c9e4-2b33-4f34-83b0-c7da380cc757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d906c1a-0f80-4a3c-9d6a-abc80612c811",
        "cursor": {
          "ref": "56074f55-8c72-43e0-9372-3ceb1d5a4c01",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f02e987c-26c6-4489-ac48-9ef0200f2dca"
        },
        "item": {
          "id": "2d906c1a-0f80-4a3c-9d6a-abc80612c811",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f1f025df-2f81-4e37-9369-14082b5b748e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a95928-9f37-4894-9702-6c2544f50f33",
        "cursor": {
          "ref": "89507651-9dc5-42c1-8ed7-320d60793f06",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c2ec649-c6e3-4f23-803f-0f3fac5f1ab3"
        },
        "item": {
          "id": "d4a95928-9f37-4894-9702-6c2544f50f33",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bea2b16f-94d1-4d74-bfaa-b077ba5cef29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b1bf4c-2717-4738-b15b-405246b975d6",
        "cursor": {
          "ref": "e08ebd60-d967-4116-801d-6582175f7972",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4e082131-5be4-4161-ae06-149d7a173bc2"
        },
        "item": {
          "id": "10b1bf4c-2717-4738-b15b-405246b975d6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "517dfd15-8751-405d-afcd-e9c1e10f8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0230700f-0c22-4706-be0e-02f16982b7b6",
        "cursor": {
          "ref": "4c943c0b-99ba-4c6a-b2c2-09cc3fa40234",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "365d29bd-53f4-4bd2-923d-aef550789cf8"
        },
        "item": {
          "id": "0230700f-0c22-4706-be0e-02f16982b7b6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a0ce46ac-a43d-4649-8e10-7025dae8150a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c509a9fb-7604-4a6e-8cd8-c9038d4f2994",
        "cursor": {
          "ref": "40ded53d-267b-47a0-9240-9361a32cef37",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3574fd83-3a32-48cd-873d-435e80ac2c14"
        },
        "item": {
          "id": "c509a9fb-7604-4a6e-8cd8-c9038d4f2994",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eca89399-74fd-4b4f-b9ab-61d91c7a2cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e82a25-ebbc-4603-b869-2d38c9c8f597",
        "cursor": {
          "ref": "3ba3fc91-76a0-4f6e-8dbe-1c15d170245b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc60dcfa-e932-40cc-84be-797f19083a51"
        },
        "item": {
          "id": "68e82a25-ebbc-4603-b869-2d38c9c8f597",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "328c1b8c-6c33-472c-8a6a-1b762cc91148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccd79a7-4126-4234-a558-28ab0844b199",
        "cursor": {
          "ref": "fc918006-cf57-4401-9ee2-031a88f29bf0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5af546ef-3c1e-40e4-a327-526dd96f02d3"
        },
        "item": {
          "id": "4ccd79a7-4126-4234-a558-28ab0844b199",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b733e59d-f79d-44af-859f-bffd0861e405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bcc539-23e4-407d-9966-78d07c9ebb66",
        "cursor": {
          "ref": "5cf3190b-062d-46cc-9135-a08180e1c2b3",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ce51b2be-2913-4cb5-8983-ded0faa0d3b9"
        },
        "item": {
          "id": "07bcc539-23e4-407d-9966-78d07c9ebb66",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2622af82-15a5-496c-ac1d-63bc18e7b3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265770e4-777b-43d6-b95a-a5d0deb7256c",
        "cursor": {
          "ref": "73001f9c-03c3-49ad-b589-994ecfd0f4c2",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4623974f-d048-43cd-a60c-c994bff72337"
        },
        "item": {
          "id": "265770e4-777b-43d6-b95a-a5d0deb7256c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ef3c78d-d5c6-4441-916d-bca90648920a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cf7ab9-3fe1-4d07-beca-43e41810f43a",
        "cursor": {
          "ref": "88718a6c-e2e1-48e1-8271-50c59c16376f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4733ece9-3a11-433a-9749-5e950e7a6a4d"
        },
        "item": {
          "id": "a8cf7ab9-3fe1-4d07-beca-43e41810f43a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b416a118-257d-4cdf-84c2-e73a69c911d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73efe86-8027-4ee7-b2c5-ca1ed0e9f670",
        "cursor": {
          "ref": "73a3ffc7-40d8-4ca3-80f0-85e8ccd1bd13",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1961e7ad-dc51-4b36-a3ad-e596b303062f"
        },
        "item": {
          "id": "a73efe86-8027-4ee7-b2c5-ca1ed0e9f670",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "dafdb19b-9868-49a4-bb0a-5574c3f568ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9f29b8-8aff-467d-9334-bec5e8f399de",
        "cursor": {
          "ref": "8d99ba70-b558-4a46-8b76-4ffb4b967b06",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "84f18100-05e2-4e25-a23a-ce583efd32d6"
        },
        "item": {
          "id": "4a9f29b8-8aff-467d-9334-bec5e8f399de",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5f7b66b0-f551-4d7b-bf01-e58387f959ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a87e9e-04c8-4806-aff0-5658e8379c3e",
        "cursor": {
          "ref": "f058bef5-0ef2-452c-a44a-49b6f931cf1c",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e72abd05-fc07-41ac-a357-9c0010f269f1"
        },
        "item": {
          "id": "33a87e9e-04c8-4806-aff0-5658e8379c3e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "02f9a4ca-2eb8-454c-9f80-6f4e04970d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a27a38-516c-435c-b7c2-fbcb59561cac",
        "cursor": {
          "ref": "72722f2d-94e2-4796-8f64-41fdd34528ca",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ccf0762c-89fa-4804-9e32-a9c54f874438"
        },
        "item": {
          "id": "e0a27a38-516c-435c-b7c2-fbcb59561cac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9269d090-b1d8-4e89-97b2-5d15f302df9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb418b5-c803-483b-bebc-d523aebf5e6f",
        "cursor": {
          "ref": "2c7b1db1-4ecd-4422-9e75-b76266ce6f04",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "da8891b5-990d-4fac-ab82-7e4f311f7ac1"
        },
        "item": {
          "id": "6bb418b5-c803-483b-bebc-d523aebf5e6f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "83cb1680-b00a-461a-8b14-316123c8daaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4dbaf7-6887-4fc3-be27-e730ff7d5d9e",
        "cursor": {
          "ref": "14339dc6-930d-4265-b973-2dec40022b4c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3976d894-d15b-462d-8047-353a7e55c8fd"
        },
        "item": {
          "id": "9a4dbaf7-6887-4fc3-be27-e730ff7d5d9e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "13da1fd7-a5d8-454c-a2cb-151917a0dcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fd4a2a-d246-4ae9-8685-aeb723602dcb",
        "cursor": {
          "ref": "dd763063-228b-42a3-9e26-893a478a7cf0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "89b05149-36e0-4bed-8ac4-f035b40e328a"
        },
        "item": {
          "id": "c9fd4a2a-d246-4ae9-8685-aeb723602dcb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d9ed7b41-8228-4276-a4a7-bb4e93a8d141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b633e2b8-29c2-4fc4-b3c8-0e183bf5e69b",
        "cursor": {
          "ref": "bf825803-f278-449c-baf9-c7019d902b09",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "faebbe6e-6999-4d1b-b4e7-8bdad7efcb25"
        },
        "item": {
          "id": "b633e2b8-29c2-4fc4-b3c8-0e183bf5e69b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1e2f21d1-792c-4b41-9a18-699de4cddbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3f5127-2a38-4a43-b7d5-5b8874fcfda2",
        "cursor": {
          "ref": "915e3039-3d1c-45ed-9f12-942e21ba219f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a846345a-dd00-4378-999e-f70a17e14f28"
        },
        "item": {
          "id": "cb3f5127-2a38-4a43-b7d5-5b8874fcfda2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b05439ab-47c1-4235-ba68-4b8cc7e4f3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996786b-752e-4ff0-954d-29bd9c9fbbe7",
        "cursor": {
          "ref": "60dc6045-fcf1-4e31-a1f3-3dab447430bd",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4bbc1af1-29a6-48dc-8a50-b38876d4d595"
        },
        "item": {
          "id": "0996786b-752e-4ff0-954d-29bd9c9fbbe7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6d24c800-3889-449e-a5fc-c40511008123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e557ee48-31ec-4127-9f8e-11a80dfb9ddb",
        "cursor": {
          "ref": "db9b4ce2-ba07-48ad-939c-9329afefb525",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea0270bf-a6f8-4c4f-9274-30b331c82736"
        },
        "item": {
          "id": "e557ee48-31ec-4127-9f8e-11a80dfb9ddb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3beb120d-15e2-409a-b99d-545148a7d5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaab24db-dace-4811-8a25-e3b243af7239",
        "cursor": {
          "ref": "90338e03-7673-4fa9-a93c-7c7c460693e2",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d26087a9-fe1b-4e1d-910f-ae9e8ecc5b10"
        },
        "item": {
          "id": "aaab24db-dace-4811-8a25-e3b243af7239",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "651a71a0-8779-4a41-a229-af2fca267c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9802a2-66eb-4b47-9885-1cd2a5f76391",
        "cursor": {
          "ref": "53f1ba3b-73d6-4113-a235-7b75ca0998d1",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d2f50aa0-5da9-4e55-9113-579f72294e54"
        },
        "item": {
          "id": "dd9802a2-66eb-4b47-9885-1cd2a5f76391",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "79ada31c-5d9f-4943-84ac-a2aea912bc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a8564-dfa4-48a7-b67f-3c24735d30bd",
        "cursor": {
          "ref": "fa82b409-783c-47b9-96d7-d9831abf509d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b53d1a99-59f7-4bb7-9778-8a35479f1e8e"
        },
        "item": {
          "id": "bf5a8564-dfa4-48a7-b67f-3c24735d30bd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ea295115-2783-4a3f-92cd-684a78f01e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8159d8-73fb-4a31-a217-ac11ab251d30",
        "cursor": {
          "ref": "c6790a84-527c-4c39-8cf3-76c03ffc0b80",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9e1d4a63-7fdf-4dd1-bb92-537e75c79525"
        },
        "item": {
          "id": "9b8159d8-73fb-4a31-a217-ac11ab251d30",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "07833e2b-fcfc-48dd-afe9-3e087e076efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bd2efc-31d6-45a0-86e5-c9b69028734a",
        "cursor": {
          "ref": "96ae9028-1b8e-4663-aa4d-68564f0a0f8a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1cbf15bd-0164-4338-963a-a84ae5edc519"
        },
        "item": {
          "id": "88bd2efc-31d6-45a0-86e5-c9b69028734a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f9f497f9-cb28-4b97-8ae5-147251206658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7fa581-91a4-4d93-a8d0-4ee35d33701c",
        "cursor": {
          "ref": "94ccc38d-9690-4de5-86a6-021e18f1a230",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51f20976-89aa-45b6-80bf-3d5a2e98df4e"
        },
        "item": {
          "id": "ed7fa581-91a4-4d93-a8d0-4ee35d33701c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9c1e8a72-a2fe-4dbc-bc43-028390c0b605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceee9794-7685-4d48-bda0-c51a9f7bf999",
        "cursor": {
          "ref": "e6aec0fa-8f20-442e-8f9e-568c01fab5cc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "06370734-4c38-43ab-bef9-710ba78c9bb8"
        },
        "item": {
          "id": "ceee9794-7685-4d48-bda0-c51a9f7bf999",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "acb1ba28-4403-4423-9762-01a5953b2461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d665033-c781-4c7c-81c4-f17d71b541a4",
        "cursor": {
          "ref": "0c083685-ba0e-48b5-8a5b-d9bd19dac52c",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d580c87d-0e4f-4736-b2b7-0b13b89ad846"
        },
        "item": {
          "id": "6d665033-c781-4c7c-81c4-f17d71b541a4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f3f6bf2f-df20-42dc-b213-8782c62b0c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd11c49-3c56-447f-af14-4a5ecc4a6186",
        "cursor": {
          "ref": "abc990d5-cd12-4ad5-9dba-657cdcb94d6c",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3e73cccf-66b8-4ed8-9640-509a82d0553d"
        },
        "item": {
          "id": "4dd11c49-3c56-447f-af14-4a5ecc4a6186",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "61f35c80-446b-4ff8-9990-2cde84adfe93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881cbe75-52cb-48c4-83bd-34cf5fd1325e",
        "cursor": {
          "ref": "6f661a6e-7a92-48e5-95e4-ecc3ef2a5a2f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "887d7c3f-fad2-4932-9bb8-a7c3d73b2e6a"
        },
        "item": {
          "id": "881cbe75-52cb-48c4-83bd-34cf5fd1325e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a6b4be73-fb3e-478e-a037-e93f99c01fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1772cf55-7d11-4352-8a0b-346183578a50",
        "cursor": {
          "ref": "7f0069a9-07bc-4db9-afa0-088469c710e3",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "aab8f9d0-d9cc-45bf-a7c7-34795e51ccfb"
        },
        "item": {
          "id": "1772cf55-7d11-4352-8a0b-346183578a50",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ca294121-b1fb-4855-a995-7a2ed096cc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0006d317-b062-48cb-bca4-4de227bda3e5",
        "cursor": {
          "ref": "29e37966-68b0-415c-acde-a169a1967da6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d449cefc-9425-4b39-bda4-9b52526f842c"
        },
        "item": {
          "id": "0006d317-b062-48cb-bca4-4de227bda3e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "dbb083e2-bbeb-4121-81eb-2aaf36e793ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59503c0e-7199-41be-9ca0-bf030f476cc1",
        "cursor": {
          "ref": "6cb724a3-ee7e-4116-922c-93aa97ddb9d3",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3c8fbbc3-2799-4de8-aca3-da4b7c1620b7"
        },
        "item": {
          "id": "59503c0e-7199-41be-9ca0-bf030f476cc1",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "19408302-954e-40be-8b17-62fe4d66b5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e3f1f2-f6c1-43e3-b7ba-b5cc90546b44",
        "cursor": {
          "ref": "ecedcbd2-c816-40f2-9dc4-7a7d702e3c0e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c6faacad-e421-4b62-b223-e81255a61e1d"
        },
        "item": {
          "id": "a4e3f1f2-f6c1-43e3-b7ba-b5cc90546b44",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "da9c75fa-47c6-4636-b1c2-9db5115cf533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15148b4b-c29d-43f2-a081-3a786b3ea585",
        "cursor": {
          "ref": "2eed4605-a2de-4888-af90-73c291c1c8d6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "530439c0-33e0-40d3-a918-9796e5670144"
        },
        "item": {
          "id": "15148b4b-c29d-43f2-a081-3a786b3ea585",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "277c1797-25b4-484d-baed-86f8f36298a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cb8559-5406-49f2-971f-c3baff2d9308",
        "cursor": {
          "ref": "36fc63f6-672f-4d14-9bed-ed1f3900a773",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9f710975-7f8b-45eb-b931-687036492b49"
        },
        "item": {
          "id": "b5cb8559-5406-49f2-971f-c3baff2d9308",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4e8618c0-a415-4d2a-87c4-672cba85d1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234198c2-5e67-4b88-9db9-2888776f4747",
        "cursor": {
          "ref": "e087e4db-f226-4157-9ff3-0db81098a378",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e3a60a34-5f22-46dd-bc39-33a732b4e4fa"
        },
        "item": {
          "id": "234198c2-5e67-4b88-9db9-2888776f4747",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cfba458f-eea3-41dc-9ed6-15da8adaf39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73625dc4-6fe3-423e-88bf-9086d972a006",
        "cursor": {
          "ref": "12ec9578-ea35-4552-9e25-489dff57f14b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "80dedfdd-8ebb-4508-9290-12e1eba8e27c"
        },
        "item": {
          "id": "73625dc4-6fe3-423e-88bf-9086d972a006",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "97f197cd-a1af-4359-92ae-1531d975b24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828d1c9-3b8e-4347-9ad6-986a2923fa39",
        "cursor": {
          "ref": "d00dd22e-b3d2-4851-b5dd-6ed1eec6b1ed",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5f4fbee7-ce2a-4a82-812b-d3037b07a702"
        },
        "item": {
          "id": "d828d1c9-3b8e-4347-9ad6-986a2923fa39",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "77ebf520-004d-47e1-8dea-1ca9086391e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddb54b6-b52e-41c3-ad49-9f34c1abcad9",
        "cursor": {
          "ref": "6a347bda-b519-4a25-bf9a-953a7cce97e2",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cad55b6d-bfa3-4b71-bd73-0ad9b2e23904"
        },
        "item": {
          "id": "6ddb54b6-b52e-41c3-ad49-9f34c1abcad9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5c232580-cd6f-46ba-b3bf-37cbe1996c2c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5889f0-5769-4d72-9bf7-38db9631a3a9",
        "cursor": {
          "ref": "18e417c6-078e-4c96-ba09-f1e315f8e5a5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "357f7c7a-db7a-4977-90ce-12a81f061a00"
        },
        "item": {
          "id": "aa5889f0-5769-4d72-9bf7-38db9631a3a9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "50c29e94-1145-41a1-8670-af02b664f890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9bb07de4-6ba6-450c-a4ba-6d7b80dbd802",
        "cursor": {
          "ref": "ed3074c7-d3d7-4e08-aa8d-5a96f36ec743",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "31a567d6-b3a3-4ba2-8b94-5f9ad7dc5aec"
        },
        "item": {
          "id": "9bb07de4-6ba6-450c-a4ba-6d7b80dbd802",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2aee88f7-acbe-4900-ba35-94ddf5e32249",
          "status": "Created",
          "code": 201,
          "responseTime": 5415,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e567c1a0-97eb-48f4-916a-af59773313d0",
        "cursor": {
          "ref": "d6b28f1b-51e7-4502-b63a-ae66327f8fc6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0764d1fa-854a-4d53-b67e-cd29ccc3ffa0"
        },
        "item": {
          "id": "e567c1a0-97eb-48f4-916a-af59773313d0",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e9f4ada-aba7-4e56-ac56-1a56979419ce",
          "status": "Created",
          "code": 201,
          "responseTime": 5080,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e155c5-5f26-4094-808d-219147d5910c",
        "cursor": {
          "ref": "a2186fd5-63b1-4ca6-bf43-f1fb4983d6e5",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "546d36b9-7634-4f13-b124-c695da34a576"
        },
        "item": {
          "id": "16e155c5-5f26-4094-808d-219147d5910c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a24b2295-dcd3-4397-9158-1a7289c1c036",
          "status": "Created",
          "code": 201,
          "responseTime": 4950,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5622db-390f-41a5-ae9f-fa9a3381b9dd",
        "cursor": {
          "ref": "04d75824-cbad-428f-9ad7-9e3fb7e10abc",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fb8b386e-1c28-4f7d-8dee-e4781e276738"
        },
        "item": {
          "id": "9b5622db-390f-41a5-ae9f-fa9a3381b9dd",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c00f36d9-295f-4d51-89ec-400084ab930b",
          "status": "Created",
          "code": 201,
          "responseTime": 5185,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5fed28-a9c2-404c-907e-40ca4244e113",
        "cursor": {
          "ref": "8b872a1d-0ba4-41c8-93a5-c508d62679bf",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "854a8ffc-3fc2-438e-ac70-cd0f8f2b522d"
        },
        "item": {
          "id": "aa5fed28-a9c2-404c-907e-40ca4244e113",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c08139dd-e124-4e88-83b9-d7be39ce26b6",
          "status": "Created",
          "code": 201,
          "responseTime": 4440,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-31T00:38:06Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-31T00:38:06Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3bf94127-a5c9-417c-8ab9-a9d0e523857e",
        "cursor": {
          "ref": "7650956e-bf88-4a6c-aaa0-f06dd7f532dd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba9ecfd6-2881-4bee-a732-013452c8f676"
        },
        "item": {
          "id": "3bf94127-a5c9-417c-8ab9-a9d0e523857e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4978de8e-4d87-4233-8e6c-6cc543fdb3c5",
          "status": "Created",
          "code": 201,
          "responseTime": 4465,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4814eb15-4e07-4030-890f-ba281e2ed661",
        "cursor": {
          "ref": "7b8bc6e1-dbbc-4fcf-b18c-0707ed71ef2d",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ca4c2f1f-8e8d-4341-b911-efe25c0501b8"
        },
        "item": {
          "id": "4814eb15-4e07-4030-890f-ba281e2ed661",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6f04e9fb-19f7-4f1d-be35-f702200f17ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d325de-26fb-4b0f-80a3-acc26710fcb4",
        "cursor": {
          "ref": "ebb93fc2-e780-452f-8050-67a78d682161",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ba4a526f-b4c3-4fe1-ad3f-3fdf067976f6"
        },
        "item": {
          "id": "44d325de-26fb-4b0f-80a3-acc26710fcb4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5370e885-9122-402d-9d92-de94e729ec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b015fd-6b59-4394-ace7-95c08ddb0ec7",
        "cursor": {
          "ref": "736b99df-2319-4916-bd09-c0ce871931ea",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "24f4adec-a563-47f1-830b-771813bafe28"
        },
        "item": {
          "id": "00b015fd-6b59-4394-ace7-95c08ddb0ec7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "551aa63e-fc2a-453a-8ee1-4860f742e238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45af5070-e1e2-4ed9-87ef-b1716d4938eb",
        "cursor": {
          "ref": "e39b14aa-32dd-47d9-9317-21482283d8b8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3c8a0ebb-d79d-416b-8e5a-4b51529d5563"
        },
        "item": {
          "id": "45af5070-e1e2-4ed9-87ef-b1716d4938eb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "79b4a1d1-4f97-4b80-babe-79dced1b100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09667b85-7433-463f-a20a-19f9ee196a9e",
        "cursor": {
          "ref": "5375be6c-e679-4a49-910d-36c4bac10e7b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aceb35f6-d95d-4c9b-84c7-7bb9f9249543"
        },
        "item": {
          "id": "09667b85-7433-463f-a20a-19f9ee196a9e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a4e93bb9-a282-4288-8b3a-d58505b1ae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151dc1d6-d5a5-4e93-a83c-6d6924d232e4",
        "cursor": {
          "ref": "b911eacc-4dae-420a-82e7-31325a8e7249",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "70724a55-a1a6-448c-ac77-8f42dbc64ec1"
        },
        "item": {
          "id": "151dc1d6-d5a5-4e93-a83c-6d6924d232e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "335388be-57ba-4b49-8140-93ca4bc34390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e56c7b0-5163-405b-a3db-39d93d4a316d",
        "cursor": {
          "ref": "8da6b2af-d712-4700-aac9-88e8d5e1f257",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "215eb8a4-a573-4259-8d69-409772eba06e"
        },
        "item": {
          "id": "5e56c7b0-5163-405b-a3db-39d93d4a316d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9874784d-d109-4cbb-9a06-29cda7d74ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542a3714-d1ee-41df-b0be-30cf7c8f4534",
        "cursor": {
          "ref": "09f5663f-752b-405c-b973-52ceaf405c00",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "71690226-02ee-4e0b-a108-b82c05223a54"
        },
        "item": {
          "id": "542a3714-d1ee-41df-b0be-30cf7c8f4534",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4c8d310e-b1f1-4fb7-9697-c76c7de5a6d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139b7c9e-d698-419c-9183-bb04c96de2dc",
        "cursor": {
          "ref": "2062a1d1-a565-4e1d-9723-97520a2e38af",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a26f444a-edc1-4c62-bfa9-4a641eec9132"
        },
        "item": {
          "id": "139b7c9e-d698-419c-9183-bb04c96de2dc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "018a6485-178c-440f-a11f-a75cea95b4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79cf09e-d781-4f1f-8fb8-022f5c664eb2",
        "cursor": {
          "ref": "b93eefb2-0585-495b-a56e-1ac68dda980b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "16efb16c-8685-420c-aea3-4cba271b5687"
        },
        "item": {
          "id": "e79cf09e-d781-4f1f-8fb8-022f5c664eb2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9e8d60df-2069-440e-9e5b-5dc3d0f63c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d931c118-0ba0-4fbd-9839-a0e881d69ea3",
        "cursor": {
          "ref": "28f2b5c2-e9db-4e06-a914-cdb4ef3f8f69",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c144f035-bd57-4927-8e57-edeb7900b075"
        },
        "item": {
          "id": "d931c118-0ba0-4fbd-9839-a0e881d69ea3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "916b87d4-ecc9-4b4c-b483-ebc72c050676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c946148d-9c3c-4c7a-b2f1-21a591a9fb6b",
        "cursor": {
          "ref": "d4e8e5f4-c366-476c-9f51-6079249ea5ac",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c787cc87-fa61-4c96-b4dc-392385714bb3"
        },
        "item": {
          "id": "c946148d-9c3c-4c7a-b2f1-21a591a9fb6b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8faa08e2-21f7-46fd-b145-b0f8f5e5e3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad120d7-0b70-465f-80c7-06821a0d8f37",
        "cursor": {
          "ref": "fdf69f12-7ed6-46bb-bc26-9f47496c666e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "77d09b1f-8d27-44b6-8713-dbe798b10b69"
        },
        "item": {
          "id": "9ad120d7-0b70-465f-80c7-06821a0d8f37",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cf12157c-de2c-415e-9bdc-b5d5d3de6e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1986e374-824b-432e-936c-166460fd4541",
        "cursor": {
          "ref": "e7dcebf9-8592-4c75-a204-35f7ce615e10",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0db6da67-93fb-4720-864e-d175fcd67736"
        },
        "item": {
          "id": "1986e374-824b-432e-936c-166460fd4541",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0a4696f1-3469-40d0-868e-eb37a7006136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30d45fe-a43d-43ae-b204-19dcc7bef4ac",
        "cursor": {
          "ref": "245b2e1b-4839-4c69-acff-0e31d5ff793a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5e1617ee-5107-4f12-9bc0-101abcdde086"
        },
        "item": {
          "id": "a30d45fe-a43d-43ae-b204-19dcc7bef4ac",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bddaa7fc-510d-422b-9b40-c1d5b68c5b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587841e-da87-400a-91b5-269ecd386568",
        "cursor": {
          "ref": "3d358c3b-2f18-4dd4-9ac3-cf96cccfbc41",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "314f63dd-4b13-4af6-968b-427697e6bb48"
        },
        "item": {
          "id": "b587841e-da87-400a-91b5-269ecd386568",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b9fd53e9-4fd5-47b2-8f1a-4b077286fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9d9c7d-9c4a-4957-9fdf-78ae1536c56f",
        "cursor": {
          "ref": "83a36aa6-c0a1-4a7b-8011-356347417443",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "500d1e55-9bb5-4838-8788-7bdb3b6fecec"
        },
        "item": {
          "id": "2b9d9c7d-9c4a-4957-9fdf-78ae1536c56f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "34630d28-8770-44eb-8e29-c559a5bde20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c17c93f-a879-4030-a3cb-b9d27741317b",
        "cursor": {
          "ref": "d629c9ec-c7c4-4bb2-b384-af890bd13006",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0c8b03a0-f18a-458e-88ed-062d18854cde"
        },
        "item": {
          "id": "6c17c93f-a879-4030-a3cb-b9d27741317b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a1050d91-aa85-45a4-b866-e7a9cd0ef33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07890f3a-1397-457d-be90-21b5c48fa99e",
        "cursor": {
          "ref": "b0b222ba-939a-450d-ad54-a9ca41c86dad",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a617e077-1631-46a7-918c-293d0ee03ac5"
        },
        "item": {
          "id": "07890f3a-1397-457d-be90-21b5c48fa99e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a323979f-89ce-44f0-afe0-f8f76a1af337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4316798-2488-485a-a1c8-948df65ef7f5",
        "cursor": {
          "ref": "20e1aeb6-03d8-42a0-9843-5ed1c7f5d455",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d0f368e-8b9b-4067-b02f-d2aa3e9e545a"
        },
        "item": {
          "id": "b4316798-2488-485a-a1c8-948df65ef7f5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5b520908-97de-48d9-8640-4545470ca6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb803c80-b0f4-4f45-aa94-ae15d98829a3",
        "cursor": {
          "ref": "f78c8d35-715d-4ae3-85b4-1fee8787ea4b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cd98abfd-6270-44f9-ab21-085e5a869e1b"
        },
        "item": {
          "id": "eb803c80-b0f4-4f45-aa94-ae15d98829a3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "81e80c91-db1b-44b8-ad0f-c65cb0d93d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9d5881-fa00-43f5-b712-4e77ad196faf",
        "cursor": {
          "ref": "f313772b-7080-48f8-9c41-5d644131a496",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6ae75061-3ba8-44b7-aadd-618a4b3a3783"
        },
        "item": {
          "id": "3b9d5881-fa00-43f5-b712-4e77ad196faf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cee55e2a-ffc0-4402-9c1d-8226d5b5c18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990ea482-d532-4da6-ae81-28cc501c446c",
        "cursor": {
          "ref": "7c6cff68-8d62-4bca-9f6e-45f1789ecee5",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e8f91826-92a7-4569-9c75-f1737166882e"
        },
        "item": {
          "id": "990ea482-d532-4da6-ae81-28cc501c446c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66ac2b18-c8e9-432c-923e-c4267711bebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9af019-ee4a-4d52-b98e-498ea9cf3b81",
        "cursor": {
          "ref": "1df36d11-89f5-48d8-8087-17f309dcc0e7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b0ae3d6b-9c75-47c5-98c5-06a6be754156"
        },
        "item": {
          "id": "9c9af019-ee4a-4d52-b98e-498ea9cf3b81",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0ea14b40-eae1-40d1-a035-f3db07f44095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4182a07c-43c2-4041-ac97-5b1e55a0f6fb",
        "cursor": {
          "ref": "8f8c9c2e-4b54-45c3-9d6a-b8dd67ab97d4",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a946aad9-4a26-4f3d-9771-31fa19206fb0"
        },
        "item": {
          "id": "4182a07c-43c2-4041-ac97-5b1e55a0f6fb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9f90ef54-1f12-4fbd-86cf-059f2f59a988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2bef4d-8626-45d5-a681-5651e4a95720",
        "cursor": {
          "ref": "74a167cd-93a0-4d59-a55f-9906448df0ff",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c95e3213-bdc1-4a32-8931-8228490ea3f9"
        },
        "item": {
          "id": "4d2bef4d-8626-45d5-a681-5651e4a95720",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85944758-a972-4649-a3e2-98803a9f29ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23098a8d-a0a2-4fce-be66-9c7b18e600c0",
        "cursor": {
          "ref": "dfce68a2-8442-4d4d-b480-7a94d1ccf395",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5e1be932-30f9-4858-98c9-eb4bdae87731"
        },
        "item": {
          "id": "23098a8d-a0a2-4fce-be66-9c7b18e600c0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2512746-02b1-4d4c-aace-c3058ab66191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8db711d-a664-4e82-b246-81725fb267b2",
        "cursor": {
          "ref": "02b020ed-4791-4cda-bffb-bc155264d1e6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "29372203-c87f-4460-bbce-bb570fdb96a6"
        },
        "item": {
          "id": "e8db711d-a664-4e82-b246-81725fb267b2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2d911b25-05ce-48d1-897a-6971f3287a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9058d8-ca06-4ae0-aa6a-ba050a288bd7",
        "cursor": {
          "ref": "c1fc1ea0-cd73-460e-b1b1-14986e049707",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ee3a0d84-b674-4e63-83ac-4d2f94bb6170"
        },
        "item": {
          "id": "8a9058d8-ca06-4ae0-aa6a-ba050a288bd7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "62fe6a22-f2ea-40b4-8987-d4f39d805fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a778c-4a3f-4e79-9644-32faebde487b",
        "cursor": {
          "ref": "44ccd4b0-fe19-40da-b017-37ef39228b43",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6f5891c0-a785-4a3c-b220-f3053572a2cc"
        },
        "item": {
          "id": "c99a778c-4a3f-4e79-9644-32faebde487b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "798648e9-0d2f-4764-bc30-67cee5e9fea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff4c7ac-8df0-4286-8ba9-8c2e232382f3",
        "cursor": {
          "ref": "f242859b-8e30-4a4e-a78f-3a9a7f9298e5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1d06e784-d4bd-47c6-9c0f-de46082e0165"
        },
        "item": {
          "id": "2ff4c7ac-8df0-4286-8ba9-8c2e232382f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f781fdd-6c8f-4885-917f-3a48d5967bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5728f7d-9912-4ce9-8fb0-1ceb76413605",
        "cursor": {
          "ref": "9ac50433-3ba6-491e-ab30-c162c24e5927",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ed128483-9c18-4e84-9cd3-842a72ce069d"
        },
        "item": {
          "id": "e5728f7d-9912-4ce9-8fb0-1ceb76413605",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9e1ed4d3-2db0-4153-bf3f-5ac57b1ba4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c80168-02aa-4130-90a6-2f3f4a50eb18",
        "cursor": {
          "ref": "b2fdc4e1-4aa2-4811-a0dd-925a8df57239",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "26d5dcd0-e0a0-40e6-b923-1b86137701bf"
        },
        "item": {
          "id": "e6c80168-02aa-4130-90a6-2f3f4a50eb18",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "95bc2389-ce8e-43b5-b471-00b3fe2f38d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7a8b9b-a5a6-485a-adda-dcd3393e0a3e",
        "cursor": {
          "ref": "d84831c0-c070-4428-8b51-374c272efbb0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2a9dd519-5a53-446b-8026-cfcde71e3651"
        },
        "item": {
          "id": "3b7a8b9b-a5a6-485a-adda-dcd3393e0a3e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "db663f21-6ae7-4d12-8abf-540a52bf9eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417e1f35-74d8-44e1-ba29-28b3866957e3",
        "cursor": {
          "ref": "1e5f3c6b-bc46-4068-8fa5-ca568d5bd1b2",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ddb9e894-c473-4bf0-b92b-978a6c131225"
        },
        "item": {
          "id": "417e1f35-74d8-44e1-ba29-28b3866957e3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0d605da2-700d-4e95-98da-9ca6acec4e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcd881e-c22d-4e9e-a93c-69ba9a586e04",
        "cursor": {
          "ref": "b185aa2b-06ef-488c-bb83-3b565ea70b16",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "22775748-2adb-4f1a-a212-2316293b30b2"
        },
        "item": {
          "id": "1fcd881e-c22d-4e9e-a93c-69ba9a586e04",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "44bc1890-fa73-4f23-9b24-d344daedcd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90032a85-bd24-46f7-a831-0f1547d87079",
        "cursor": {
          "ref": "febbf4e2-44c0-43a1-82a5-0d7dfdbcecbc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "98949c9f-72f8-4b7c-8f99-0badc56c2153"
        },
        "item": {
          "id": "90032a85-bd24-46f7-a831-0f1547d87079",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "150e6a19-9445-4712-93d5-1fe1adaabccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f81075-c989-4856-a64a-6754cefb3999",
        "cursor": {
          "ref": "b6f55f3b-2b91-451b-82d4-1eb7b8afc607",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "06f9c8a7-bb7f-48a8-b393-b3f4909b7fc3"
        },
        "item": {
          "id": "91f81075-c989-4856-a64a-6754cefb3999",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0e7777ab-61a6-4936-82ad-b037f82db23e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d381ef-ea8d-4f54-a687-c37edc0c992b",
        "cursor": {
          "ref": "9585e5d3-3618-4033-bb88-710d5b21117b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "442d9c88-6e50-4cd7-bde9-7b623362ed60"
        },
        "item": {
          "id": "a7d381ef-ea8d-4f54-a687-c37edc0c992b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5770d0a3-89ad-4ec3-ad3b-c51d3bf1b7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821194e7-14fa-474a-aec3-83396d30a403",
        "cursor": {
          "ref": "767e7a5e-de52-4a0d-826f-2b62cec43def",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7755b1ef-cbe2-455b-ab06-513eec4dfb73"
        },
        "item": {
          "id": "821194e7-14fa-474a-aec3-83396d30a403",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3c91d182-eb97-429b-9962-d5531837efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b246b1-6b9e-476b-9246-e1244e96bc9a",
        "cursor": {
          "ref": "fc893403-2d85-41cf-96b6-9bae75115430",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6a59962e-bd4f-4467-a890-334a9919ec51"
        },
        "item": {
          "id": "a3b246b1-6b9e-476b-9246-e1244e96bc9a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "15b60337-04f9-4e01-ba1b-d2266da77fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b82db7-10b4-435c-bf5b-2820973e71e4",
        "cursor": {
          "ref": "30b4392a-7539-4268-8890-11e455241b4b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "878e90f0-4c05-4fe8-8bd5-90683b6b2c52"
        },
        "item": {
          "id": "86b82db7-10b4-435c-bf5b-2820973e71e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8aed958b-8dda-40b7-9133-23bd97e28d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7625e1-34ae-484f-a320-ae5600c0aceb",
        "cursor": {
          "ref": "15e4b86d-e895-4015-9677-c3bc3df5c3a0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cb59583e-3494-4b65-91ef-adbe1e624d61"
        },
        "item": {
          "id": "5d7625e1-34ae-484f-a320-ae5600c0aceb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "061fbedf-ad3f-46ed-aebc-0b2b28990836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e540bd9-8608-476d-8c97-b3602aac87b4",
        "cursor": {
          "ref": "32bf64a1-9a72-4eaf-bc1c-56628297a1cb",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "33fb52b5-1ee3-427f-a263-80b2389e8bf2"
        },
        "item": {
          "id": "2e540bd9-8608-476d-8c97-b3602aac87b4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8a3f5e50-de3b-4aa1-a460-c39e912c5e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df929457-b340-4b6a-b8e8-98a2f5877b81",
        "cursor": {
          "ref": "10ffaee7-9bb6-4c61-8659-9f366d57c804",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8eea3791-166c-4f75-b0cc-88de2d1e55b3"
        },
        "item": {
          "id": "df929457-b340-4b6a-b8e8-98a2f5877b81",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "82158475-b898-464a-bc35-5edfbad7a8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865fe267-8968-4ab6-89d1-2e6494788235",
        "cursor": {
          "ref": "e693a028-ad6f-4b43-8169-1211966d3ddf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e2e9b09f-3d88-461a-8d03-893192b266ac"
        },
        "item": {
          "id": "865fe267-8968-4ab6-89d1-2e6494788235",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c1aa68f2-2d41-4736-8b4c-f6a90c9e006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5e99ee-73d8-4f19-9a36-51e65d80b5c1",
        "cursor": {
          "ref": "03914d99-80c2-490e-8dca-c294204481ff",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1bfadd32-9b1b-4757-8503-8d9be6b7a64d"
        },
        "item": {
          "id": "bf5e99ee-73d8-4f19-9a36-51e65d80b5c1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9adf2228-6faa-4f46-9eac-706886350ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a3c920-323e-449b-ba94-cbad45b6a36a",
        "cursor": {
          "ref": "a477b272-f6e5-404b-9d18-6e17567fa7ba",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "106ff372-b76b-468a-b80a-6e9d9cd27731"
        },
        "item": {
          "id": "15a3c920-323e-449b-ba94-cbad45b6a36a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "de0a3eed-57f3-4fd9-a15f-7ac25f559500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1eda2-cffc-48de-81d4-fd3cc4527e3e",
        "cursor": {
          "ref": "c782d6a9-cb4c-4535-abb8-cf8133f69dac",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cbad3327-3383-4577-835d-3b9d4334bb0a"
        },
        "item": {
          "id": "4bc1eda2-cffc-48de-81d4-fd3cc4527e3e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "487348e7-085c-4dd1-949d-5c9ca7f9deca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47c287d-3ae9-4e71-9c60-63a6a7c936f8",
        "cursor": {
          "ref": "34b1cb42-da7b-4077-99e2-0a9239354fdc",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e861f19f-9ac7-4b20-9dee-55dc3e7de4aa"
        },
        "item": {
          "id": "b47c287d-3ae9-4e71-9c60-63a6a7c936f8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3224bbcc-d3a2-4a30-bc33-0599a7f936e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21fcc86-e227-453d-985b-8d7fe3f4a75d",
        "cursor": {
          "ref": "68fd07d4-8eb0-4d05-bf50-2a94a8b51850",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5efd053f-37a8-4711-a5d4-bb3d0131beb8"
        },
        "item": {
          "id": "e21fcc86-e227-453d-985b-8d7fe3f4a75d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7e15bf31-ce2e-45c7-bfdd-d3a5d7f7206f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9de3a945-57da-4768-81d2-65bc2bdd49fc",
        "cursor": {
          "ref": "87bebe15-b98b-4304-a7c1-91c4b5d1a9bd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "85e95850-18c2-4d4b-bc48-45c4c6352f86"
        },
        "item": {
          "id": "9de3a945-57da-4768-81d2-65bc2bdd49fc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95433146-054e-40ce-a501-6fcef2f3d8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a54915a-fc86-4c84-af57-754d37dbecc1",
        "cursor": {
          "ref": "5f3f0f90-a599-4b1b-bf43-853d9768611b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e8606380-f453-4c1c-8a73-9986c3af0ebd"
        },
        "item": {
          "id": "4a54915a-fc86-4c84-af57-754d37dbecc1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46b531d3-ce3d-46bf-9bc8-54022f50099b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a73c8-2e68-4d4f-8715-9d959130a4e2",
        "cursor": {
          "ref": "96d1f84e-a914-415a-9831-69c2dbda0ac4",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e6987ff5-d7d3-45d0-97e7-6152540bd6b7"
        },
        "item": {
          "id": "0c7a73c8-2e68-4d4f-8715-9d959130a4e2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "9638713d-bb1c-40fe-a40c-034148d7037f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a201637-5156-4c4b-a360-51fbaefbb9a2",
        "cursor": {
          "ref": "36da1541-0397-4846-8c8c-79afd8cb4ade",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a752e594-a5b6-41dc-aecf-89ce35565350"
        },
        "item": {
          "id": "5a201637-5156-4c4b-a360-51fbaefbb9a2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cdaecef0-f9cd-4692-a7c2-ba068d1e7993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae3730-165b-458a-8721-cedda27ccc8b",
        "cursor": {
          "ref": "c01f039f-c4ba-46fb-b3a1-bfc3604b0b45",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "539336f0-fcb9-4c3e-89e7-bc3b50580666"
        },
        "item": {
          "id": "9fae3730-165b-458a-8721-cedda27ccc8b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8bfd5312-73f8-49d1-ba46-c1beef9fbcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b4eb43-90aa-4031-8734-eb8d5de22ef8",
        "cursor": {
          "ref": "c79c3b31-e687-4b4f-ac9a-a1ed7c6c8363",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "245de044-3c6a-4af4-a2ea-e923b5d3e6cc"
        },
        "item": {
          "id": "60b4eb43-90aa-4031-8734-eb8d5de22ef8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2ce6824c-a444-4677-8695-8b34dec34be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b4c495-d270-4cb7-89f7-e6b3232c8a1d",
        "cursor": {
          "ref": "edbafb6f-7723-4210-ad5e-51075bc008c3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "93f1a0c4-1c40-487a-ab48-4954ca1eedd9"
        },
        "item": {
          "id": "45b4c495-d270-4cb7-89f7-e6b3232c8a1d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "31bda2fc-ac47-4212-9524-b8f5c8427877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8ea889-dfa9-4b8d-9443-fb4e63907a96",
        "cursor": {
          "ref": "b2cb709d-ac8e-41dc-8f5d-1857f980a80c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dfd0781e-a9c5-4589-a21a-f4031c588c66"
        },
        "item": {
          "id": "ee8ea889-dfa9-4b8d-9443-fb4e63907a96",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bc3db6b1-7eaf-49e2-babd-427fe55a8ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83283fb-10d9-42c4-ad0e-48a6e8f89563",
        "cursor": {
          "ref": "afe8b8b8-65bb-4e04-93c6-82c197c0ae97",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c09e8e8e-e6a9-4d70-99c4-bfb41dc5ee84"
        },
        "item": {
          "id": "c83283fb-10d9-42c4-ad0e-48a6e8f89563",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "13eea526-b345-46d7-b868-ed116d14f82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d2e4e4-914a-4103-9445-fef2d8e1d27f",
        "cursor": {
          "ref": "108f5743-1cbb-47ec-b5c7-474dd79c5430",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9e6d9060-7ae9-48c5-ac35-6d20e697f6df"
        },
        "item": {
          "id": "c2d2e4e4-914a-4103-9445-fef2d8e1d27f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d0b33fa-c8da-4646-bd4c-6b9f9e0a56dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8fa375-07d7-43af-ab1c-c2dcc41fb6bd",
        "cursor": {
          "ref": "03dd93e1-97f0-40b1-a462-90df062809cb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ab6cc611-e551-45c9-90da-e490172e26c7"
        },
        "item": {
          "id": "9b8fa375-07d7-43af-ab1c-c2dcc41fb6bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8a4531be-f3aa-4a01-85a3-54cb024003e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f123f64c-64b9-4563-bee1-02cc19534239",
        "cursor": {
          "ref": "f80cfd9b-8da1-45ef-9296-267a97badaf6",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0408599-2c58-4d04-993e-73ab67aa5a14"
        },
        "item": {
          "id": "f123f64c-64b9-4563-bee1-02cc19534239",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "24c02572-07ae-42d7-ab6b-04b86d4fefac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c7107e-e87a-4486-8a7a-626980ec936e",
        "cursor": {
          "ref": "763b891c-40aa-4239-a561-a9d73439ddd6",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8514f08f-3a8a-4eb2-8dd1-a641ace471b2"
        },
        "item": {
          "id": "78c7107e-e87a-4486-8a7a-626980ec936e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "3edb9f5f-a66f-4bf5-8fde-0afebab20737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ddad44-8909-4c49-b273-26eba5e94b48",
        "cursor": {
          "ref": "2572b983-90b7-495b-8b9a-5214943322a6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8eb14056-278b-4138-91cf-e887f9db1f0f"
        },
        "item": {
          "id": "f0ddad44-8909-4c49-b273-26eba5e94b48",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "97f66f60-71a1-46d0-be63-c13820232a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94202f90-5780-4515-9db6-d00ff980c056",
        "cursor": {
          "ref": "2afc68e9-24f9-4a09-a453-9861524efbb5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "538c5e51-4c65-4456-abb1-230eb00cdd65"
        },
        "item": {
          "id": "94202f90-5780-4515-9db6-d00ff980c056",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f0aae4a8-8f12-4056-aaec-15a8dd8df065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bee5415-6ec8-4970-b14e-6737a11d6ab1",
        "cursor": {
          "ref": "6c42e780-c051-4d11-87c6-ff4db66e1f55",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84cdd1ab-c045-49c2-9588-fbf5bd81fb82"
        },
        "item": {
          "id": "8bee5415-6ec8-4970-b14e-6737a11d6ab1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36f614de-e6c0-4810-ab0f-7369553f7ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98edf5c3-ec29-4517-b317-bc186ceec1d8",
        "cursor": {
          "ref": "1e2e519f-9519-46f5-8d27-2b651244d523",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9b140080-737e-41fd-8524-9c7c1a6b97f1"
        },
        "item": {
          "id": "98edf5c3-ec29-4517-b317-bc186ceec1d8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4e0ef796-b9ad-43f7-bc85-ea73aea375f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6902179a-1039-4ad1-a76f-01331df97cd2",
        "cursor": {
          "ref": "64abae2b-8ded-4681-b534-80464acaac7a",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f2cceb1a-9085-4671-8d21-1572264edee9"
        },
        "item": {
          "id": "6902179a-1039-4ad1-a76f-01331df97cd2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0e2832d0-ce3e-452e-a391-c66443ab7019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af18c2a-94a5-4ab3-9cd8-54ac30d1c228",
        "cursor": {
          "ref": "d629829b-81d6-4bfd-a503-7845a952cf95",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c997b95f-2f3c-42f1-8cdf-ca47ec918a76"
        },
        "item": {
          "id": "0af18c2a-94a5-4ab3-9cd8-54ac30d1c228",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f1523d6a-1b08-40c8-a6ea-b0f70c34fcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb59b34-6bd7-4f1e-ac53-27c68ca63e04",
        "cursor": {
          "ref": "0666b63c-6793-4286-8a4a-7057d33ccce5",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1f6f8ddd-5753-4146-a90f-f0e32be4c1e3"
        },
        "item": {
          "id": "9fb59b34-6bd7-4f1e-ac53-27c68ca63e04",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "73c3c534-f7e5-4163-ae78-2b20e25afa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f4825a-20d6-46bb-903c-c15c90812bd9",
        "cursor": {
          "ref": "63b4e78b-0bf3-4bf9-a1fa-4be5ad52a556",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "af9a01c7-c20b-4565-9c4e-66fbba451e50"
        },
        "item": {
          "id": "57f4825a-20d6-46bb-903c-c15c90812bd9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "080eab5f-6abc-4729-a19e-2552cde43f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8841bac-5e66-4390-8f18-e7d702036773",
        "cursor": {
          "ref": "a3445aa3-99a5-4b07-878c-e8e62a663c9e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8fa02bb4-df14-49c2-ad74-a0361883324c"
        },
        "item": {
          "id": "d8841bac-5e66-4390-8f18-e7d702036773",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e6ebd27e-a222-4dd2-98fd-d4f85af49f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebbc15b-e621-4a30-b789-876f8a0f1a7f",
        "cursor": {
          "ref": "4770be73-960d-4183-a3f3-b0bc5041f536",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7a3a2eac-87da-4763-967f-d818600a1f5c"
        },
        "item": {
          "id": "bebbc15b-e621-4a30-b789-876f8a0f1a7f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bba5b2da-8fe6-4309-82b9-a6630d04e841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7039c4ab-bfee-410d-a894-55c9dc9e2e70",
        "cursor": {
          "ref": "8a030ee5-e6b2-4382-8eaf-735e91ad6f18",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "801411f6-7918-40bc-b857-522ef2804ceb"
        },
        "item": {
          "id": "7039c4ab-bfee-410d-a894-55c9dc9e2e70",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2b034b2a-e9d4-4b53-a5ec-20532c853446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e78e3d7-6076-46b7-a3a3-acafc746a9c3",
        "cursor": {
          "ref": "603e429f-7ef4-4467-8746-0cd2506959e4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5d505968-7a80-4445-84cd-9cf5ff5cc05e"
        },
        "item": {
          "id": "4e78e3d7-6076-46b7-a3a3-acafc746a9c3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1fb2be23-609b-4241-9326-e02318fa6412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491d5059-80ef-41ae-9980-d86f4967058a",
        "cursor": {
          "ref": "f17dfa65-6ead-4996-a59f-d6338289cad8",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e47767f6-d7dd-4ebb-a457-cb4c88931e47"
        },
        "item": {
          "id": "491d5059-80ef-41ae-9980-d86f4967058a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bd90d548-f816-47aa-a603-a9933333dc39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0904de76-3895-48a2-a539-53760c8032ae",
        "cursor": {
          "ref": "879f5f17-0dd4-463d-a786-b07b0317058f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d12f5bd0-84e7-470e-b465-e510f450ed94"
        },
        "item": {
          "id": "0904de76-3895-48a2-a539-53760c8032ae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "96305bfe-1b28-45c6-bc3d-38e74d5c17f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974e01f7-7484-4227-9ed5-d2bb4d551099",
        "cursor": {
          "ref": "cf3840e9-3386-4a04-868a-28cfa29b76a8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c2b64b54-6d78-4210-8822-f0ada2fdfa91"
        },
        "item": {
          "id": "974e01f7-7484-4227-9ed5-d2bb4d551099",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7b342c4d-2545-4e3a-8fd1-5d2b099e1cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde5b371-fd5a-467d-b666-c54655acf75c",
        "cursor": {
          "ref": "5bf78ddc-1938-4788-92ff-4b0d08f47e57",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e38271bc-e53f-4927-910a-51fd06a5bfca"
        },
        "item": {
          "id": "fde5b371-fd5a-467d-b666-c54655acf75c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1799b4f4-3f04-4282-b703-becc66b0cca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a04674-b881-4fba-8339-b0575d53e128",
        "cursor": {
          "ref": "6f1d122d-fb5a-451d-b14c-f7f72f13d77d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7bc1f295-ec00-43aa-a411-353570234402"
        },
        "item": {
          "id": "f6a04674-b881-4fba-8339-b0575d53e128",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df1239fe-efd6-495a-a929-a43c56ce0d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a8c827-e2d7-4e2e-b9d8-d26d21ddd43a",
        "cursor": {
          "ref": "823fb4eb-59fb-4a51-9f88-47d01e0c2881",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d8ecb8f9-f4b7-486a-99db-a669d7254c5a"
        },
        "item": {
          "id": "18a8c827-e2d7-4e2e-b9d8-d26d21ddd43a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3255b627-393a-496b-b376-c4d1c57c9a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e569b7-e320-468f-b1a8-c099ff5be45c",
        "cursor": {
          "ref": "90a24c4c-3aa9-4f51-8206-20115a38dabf",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa7dbda9-61e9-4b8d-8a6f-19924fdb7cbf"
        },
        "item": {
          "id": "34e569b7-e320-468f-b1a8-c099ff5be45c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "019da6d2-e6d4-4cf8-9445-097f681e0882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def1f9ad-a2ec-43f6-b0de-cbf3a6f5c99c",
        "cursor": {
          "ref": "1a5d91be-8899-49d7-b998-cacd01f8a7b3",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f4ad3f3e-1860-41e2-bce7-cfed3395734a"
        },
        "item": {
          "id": "def1f9ad-a2ec-43f6-b0de-cbf3a6f5c99c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "825cefee-3194-4707-93df-6bec22917c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8e5466-598d-49cd-904e-517dc6fb645e",
        "cursor": {
          "ref": "af7f2865-976c-4649-b0b2-2e18a6fedca6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a246e2c2-6627-463d-a613-2735e4a32632"
        },
        "item": {
          "id": "be8e5466-598d-49cd-904e-517dc6fb645e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "830f848e-43e0-4a05-a699-de0463f7ded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40307f8-6a00-4893-92a4-9f5bc73567e0",
        "cursor": {
          "ref": "e0295738-a116-461f-bc74-a16372bed7aa",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bd31f260-4ef9-493c-81a0-ccad7d373614"
        },
        "item": {
          "id": "e40307f8-6a00-4893-92a4-9f5bc73567e0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "003b8a20-26bb-4e74-befd-cd64beeffccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a6202d-e937-4209-b613-06dad3e91908",
        "cursor": {
          "ref": "1ed11dff-04a3-4d27-ac82-ffe1a7f83a24",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c22e036e-c6cd-46f6-9e51-3013f9361261"
        },
        "item": {
          "id": "b7a6202d-e937-4209-b613-06dad3e91908",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "01c52793-8dee-4bd3-8ada-2633b787127c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235e0206-d844-4581-a24d-2b722216e01f",
        "cursor": {
          "ref": "7dbe38b3-3052-4a1b-b3c7-f59a12f83d60",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "46efeb16-e799-4778-928e-0c56f587cea4"
        },
        "item": {
          "id": "235e0206-d844-4581-a24d-2b722216e01f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d5df322f-710f-41af-9217-00ca4ece1e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110e762-10b9-49bb-9b03-d1c879680f28",
        "cursor": {
          "ref": "e81a435e-35b6-4150-a274-0028a6d0cca0",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f77bd40d-6e26-49e2-9745-183bcb12eba6"
        },
        "item": {
          "id": "d110e762-10b9-49bb-9b03-d1c879680f28",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d9d3ed51-6dec-4101-9c7d-f1650b5ffc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d84ece-3c3c-42ab-a09d-727293f0a3fa",
        "cursor": {
          "ref": "b50255f0-d924-4df9-a9c6-f5b4888a90ad",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "db1dd92e-299c-4a6f-aa50-569f39024ac9"
        },
        "item": {
          "id": "00d84ece-3c3c-42ab-a09d-727293f0a3fa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "244dfe16-fca8-4f7d-9332-a308ab7c6a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc74838c-d5cb-41e7-bde4-5e96657d8121",
        "cursor": {
          "ref": "db8b24a1-6d7c-46c4-8dea-e484d46de680",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9bc93f38-8dbd-4ee5-b1be-adc00281f3bc"
        },
        "item": {
          "id": "bc74838c-d5cb-41e7-bde4-5e96657d8121",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d863af55-5538-4050-9110-6aecfa101df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42352a9-2fd0-4a85-8452-fa7491b110fb",
        "cursor": {
          "ref": "b9168a62-60b8-4ea4-8862-5c6a9ddc867a",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7fef177f-7612-4358-8f39-cd8f29f6f42b"
        },
        "item": {
          "id": "b42352a9-2fd0-4a85-8452-fa7491b110fb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8872fb9a-bc5a-4ab7-81ea-4d03b6e96425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaf7c03-3841-404d-84e8-07c14e970f3f",
        "cursor": {
          "ref": "a39e61ec-a286-4a79-afdb-14091477fdec",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dc0b41cb-3269-4873-90be-6773277dbde9"
        },
        "item": {
          "id": "cdaf7c03-3841-404d-84e8-07c14e970f3f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e5c4ede7-49e5-48ee-b3e8-69d5d163ccc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24e6c2a-093c-4d08-80e5-ee16b8770fbf",
        "cursor": {
          "ref": "e1835c29-8435-459e-a41d-aac6bef3c90b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "911d3d82-daa6-48ea-995f-bab7419b1c72"
        },
        "item": {
          "id": "d24e6c2a-093c-4d08-80e5-ee16b8770fbf",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8446fc64-ec8c-42f2-b601-434c435ce183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f020a69-7f12-4858-b976-2d8ef7fe424c",
        "cursor": {
          "ref": "6cbdbd76-440a-40f3-952a-fbb7b5129ca1",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f82dc8a9-b200-405f-852a-aa4395253c0f"
        },
        "item": {
          "id": "3f020a69-7f12-4858-b976-2d8ef7fe424c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0c3de2eb-242b-4b3c-8fbd-c0c27d15f0c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d584f8-5856-4b93-9127-0f9f2f9dfc23",
        "cursor": {
          "ref": "f82f3831-b79e-4af3-a147-df8bf81949ff",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "96fe1854-ca4a-40e7-b042-716e09bf1de1"
        },
        "item": {
          "id": "90d584f8-5856-4b93-9127-0f9f2f9dfc23",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6983952d-223b-4a55-8c09-8beaedb662c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb0a47d-756f-459a-b573-7d2577afefdd",
        "cursor": {
          "ref": "856ece7b-8428-4a0c-8a45-ae25ea1256f9",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4018a0ef-dbf6-4459-a2f9-150064408add"
        },
        "item": {
          "id": "fcb0a47d-756f-459a-b573-7d2577afefdd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32cfa274-7e81-469a-b304-87194bff4a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d899f20f-359d-476e-b3d7-927a3051c759",
        "cursor": {
          "ref": "b4f08df4-5c00-4852-8abc-5c5ca54dd904",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6c2b0e55-18d1-41fb-9277-896bd71386bd"
        },
        "item": {
          "id": "d899f20f-359d-476e-b3d7-927a3051c759",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "83fa7673-5930-42b3-8da6-9e20e02b07ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3959f07d-465b-4bf6-a463-535052f19b42",
        "cursor": {
          "ref": "1913406c-f295-4b94-9ec0-7798b4640dfa",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0da0a322-0afa-4ed5-8c55-759a104d669c"
        },
        "item": {
          "id": "3959f07d-465b-4bf6-a463-535052f19b42",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1d0f4066-bc39-4445-bcc6-062bc342f080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571acf77-88bf-4765-aaba-4e3b76428f27",
        "cursor": {
          "ref": "dbca3751-e430-4495-bb5d-2bd355f7ff87",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6710e44d-329d-4d83-972e-ea9818ad6fc4"
        },
        "item": {
          "id": "571acf77-88bf-4765-aaba-4e3b76428f27",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40c2357c-2e75-4434-b2f7-33f0f46aff97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a03c3b-2466-4d08-8bc7-9e381c876701",
        "cursor": {
          "ref": "7e4d42ef-b558-4ad4-8d64-f7a5cedee886",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "838bcd2c-a1bb-4651-b9df-fc130cf07ca9"
        },
        "item": {
          "id": "d5a03c3b-2466-4d08-8bc7-9e381c876701",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1cdf7354-d5d7-4da7-b37f-75fa738d60c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ce03d7-24e4-461a-a9e5-238c7ba5fdfe",
        "cursor": {
          "ref": "d8191307-6abb-471e-ba8a-ef28ff13f6d0",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "67b07f21-bfb9-4462-b573-bd6f28341b77"
        },
        "item": {
          "id": "39ce03d7-24e4-461a-a9e5-238c7ba5fdfe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e9f263d-7738-4d76-adb6-1415ded045d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8fc28c-a8ac-413c-b165-8235eb4c93e0",
        "cursor": {
          "ref": "ad902735-64fc-469d-acc3-9bc697f292db",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cd4a2a7e-5473-40a5-a267-2882c08d1887"
        },
        "item": {
          "id": "df8fc28c-a8ac-413c-b165-8235eb4c93e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c4ab524f-4d06-451c-a4b5-bfb78f86dd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21123cf-9bf7-4ba5-8bba-3ad8ccf0d835",
        "cursor": {
          "ref": "8f7d1c12-402e-4099-80db-7ba37900344e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "86b26b13-561c-4164-9f10-dda57e343979"
        },
        "item": {
          "id": "b21123cf-9bf7-4ba5-8bba-3ad8ccf0d835",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f31fb2e8-2abe-4a3b-b790-60dd6fde302d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb657297-1453-423d-9063-c40ac34cf533",
        "cursor": {
          "ref": "26d32a0e-6a95-4b24-9200-b1d7064287bf",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "61aba0ec-5dea-4fa8-8050-16ac868a4c88"
        },
        "item": {
          "id": "cb657297-1453-423d-9063-c40ac34cf533",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "73cd6673-96ff-42d1-a8b5-8e0355a2e7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889478a8-c5d3-4162-81de-4d3f2025131c",
        "cursor": {
          "ref": "7e5bffa0-fb5d-4cf6-b5fa-7e224ddbe14b",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "adcef27d-00f0-4d70-a81e-c5f10ca407ae"
        },
        "item": {
          "id": "889478a8-c5d3-4162-81de-4d3f2025131c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "17496567-6eb4-4c65-84df-468cefd8f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2399a426-a741-4f6b-9987-15e314a09142",
        "cursor": {
          "ref": "f2052c2b-1dbf-4da1-beb1-3960bff771f0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fab7a25c-8f32-45e2-855e-85f422c4042b"
        },
        "item": {
          "id": "2399a426-a741-4f6b-9987-15e314a09142",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dfd3333d-ac09-4705-aee1-2179e2d05c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c89c6-c3ec-4aa1-ba1c-9bf1baca504d",
        "cursor": {
          "ref": "1a885223-9cc6-45c5-a77d-298189396ddc",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "838e2e1d-7fb1-4093-ba04-b62ca5922b64"
        },
        "item": {
          "id": "d33c89c6-c3ec-4aa1-ba1c-9bf1baca504d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fff6f9cf-8e5b-4fc1-b99d-b0a7746e4002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11905e25-6971-4b92-851f-13b701312639",
        "cursor": {
          "ref": "cb672027-64a6-4772-8eb0-3f9f8761f769",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7a014aae-5c48-495f-a2a2-4494263ac416"
        },
        "item": {
          "id": "11905e25-6971-4b92-851f-13b701312639",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4af4b4cd-9148-4407-a3e9-a0642f1067cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a320e5-0399-4651-b241-6854b34852fa",
        "cursor": {
          "ref": "99f7c206-38bc-42d3-b148-fb4ede7e1690",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e5b801ed-952a-40fd-8347-6bf362fee3dd"
        },
        "item": {
          "id": "13a320e5-0399-4651-b241-6854b34852fa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7cf29d07-a7d2-4247-accd-c30c6abd9fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9d8e02-0e20-40bc-b262-790cc24e0cc5",
        "cursor": {
          "ref": "f8bb3366-0766-4255-9949-dc14698b758f",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "08f5226a-fb4f-4120-a23c-32945960b04e"
        },
        "item": {
          "id": "2f9d8e02-0e20-40bc-b262-790cc24e0cc5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "232a88a7-d6da-436c-a634-6c54e2260dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2e6ac7-3345-426e-9cc6-67f256f1ca8b",
        "cursor": {
          "ref": "954750f1-4f2d-4cc4-9849-6323f728d152",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6b73e91a-046e-4d71-b8b4-aa043f4de8e7"
        },
        "item": {
          "id": "cf2e6ac7-3345-426e-9cc6-67f256f1ca8b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d564a25d-e57e-45c4-90ab-9fb1e97a64b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a32c49-59c3-4860-a732-961d67085f15",
        "cursor": {
          "ref": "cc0ff3e7-8463-46a5-9eaf-4dfca9e022ba",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dec7c735-eec4-4081-b188-be02dc127486"
        },
        "item": {
          "id": "33a32c49-59c3-4860-a732-961d67085f15",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "07f53459-b814-48d5-8ebd-6f594e92f402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f08f6a4-cda7-4f75-8b7a-2c48d7f758d1",
        "cursor": {
          "ref": "a3c963bf-b898-4db4-bd2c-772aaa80d23b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c93e7ad9-1e8a-4713-98fc-14ce87d2f360"
        },
        "item": {
          "id": "3f08f6a4-cda7-4f75-8b7a-2c48d7f758d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4012504d-fe2c-47f0-9ceb-b9faf8e078fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431c56be-8821-4d59-956c-e4a8179a0522",
        "cursor": {
          "ref": "dac08e14-f201-4a5d-9e95-93f36d8fdd33",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "856ef574-a15f-4786-8c9d-821ccba14a18"
        },
        "item": {
          "id": "431c56be-8821-4d59-956c-e4a8179a0522",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "978cc547-0d54-41bb-b7d8-f771c0f6e94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5f027-fa2e-47cd-8a71-021ea9556bd7",
        "cursor": {
          "ref": "da879945-24f6-4f9b-a315-8aec63ce6e32",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "344a37f9-a4bb-4b9a-b01a-899ddaeef93b"
        },
        "item": {
          "id": "d6f5f027-fa2e-47cd-8a71-021ea9556bd7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bfc71f6e-e2da-4362-bebb-43174cb15ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83fcb32-7ca5-471d-990a-4583db2f6beb",
        "cursor": {
          "ref": "464d0cd1-7b15-4ed5-9cbb-918333ee5902",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b5a2a223-b939-4d7b-8afc-67b90a3d5309"
        },
        "item": {
          "id": "d83fcb32-7ca5-471d-990a-4583db2f6beb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e6044227-6672-4882-86a8-c884c707d082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0073653-d060-4b2b-872d-27806ebcc20e",
        "cursor": {
          "ref": "16d2b9c8-5ff8-467f-885d-2409bf5e2428",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "29aa3f28-4be5-4f6f-b5c7-0fa20b94f270"
        },
        "item": {
          "id": "b0073653-d060-4b2b-872d-27806ebcc20e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9d1c6884-fcff-4d42-be15-1947e600ee04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7a6643-d50d-475d-89ad-70e3f90534b5",
        "cursor": {
          "ref": "89d58512-532d-4d79-b245-3a2cda4b2735",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ef9051a1-8dc0-4bc2-9c82-62b6a40ac482"
        },
        "item": {
          "id": "ad7a6643-d50d-475d-89ad-70e3f90534b5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d952145a-e6fd-4049-968b-f8e00b7f0c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef80fa1-c26e-4d2c-9e48-aa1086e306b9",
        "cursor": {
          "ref": "63930587-4c05-4cdb-9716-27ecfe3c6ff4",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "602746e7-247c-4f2d-bc0d-2664482ddbbc"
        },
        "item": {
          "id": "aef80fa1-c26e-4d2c-9e48-aa1086e306b9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6bc767e4-7fbf-4b92-9bd5-1433e3defa05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d050189-30a8-42f7-8be9-381c7d5f85c6",
        "cursor": {
          "ref": "c4fb33e1-c9e0-4113-b7c5-a65722d74dca",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "65a1bac6-aa1a-4ede-ac0d-1e494c4ab19d"
        },
        "item": {
          "id": "3d050189-30a8-42f7-8be9-381c7d5f85c6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bba2d972-0c5a-441c-b753-1c26158f2a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d2156b-958d-4961-95ac-ff4d41230625",
        "cursor": {
          "ref": "739ed48d-7b7b-4878-ac2a-c4edc1100f84",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "41e4052b-94b8-4897-8dc3-2f188b329403"
        },
        "item": {
          "id": "28d2156b-958d-4961-95ac-ff4d41230625",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "53384a98-9730-4c13-8bbf-d40d4b980ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d29483-5e16-4c64-ad69-f6b6fe71b2a2",
        "cursor": {
          "ref": "ba64e438-23ed-48cb-87f3-4c21f0b3ea1e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2653b2f5-8ac6-4014-8a8c-8ceddb897e92"
        },
        "item": {
          "id": "84d29483-5e16-4c64-ad69-f6b6fe71b2a2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "cc2f4a8b-ba76-4082-83f9-4f7214b77d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2f32cf-cb42-472c-8ce7-fb538e42b6da",
        "cursor": {
          "ref": "b8bcb4ae-10e1-42ed-9c3b-fb8bf78d7289",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d49f6187-46c0-4bb5-84ce-3d81a94e3751"
        },
        "item": {
          "id": "7c2f32cf-cb42-472c-8ce7-fb538e42b6da",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1ec0840e-0066-40f9-9380-7a5ef3f2943a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f063a3-9c3e-4cc1-96a7-8dbaf0dc1571",
        "cursor": {
          "ref": "220bf041-fddc-46ed-82ed-f0fcff8b569b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "99192ecb-1b03-4cbd-8cec-000208edab0a"
        },
        "item": {
          "id": "38f063a3-9c3e-4cc1-96a7-8dbaf0dc1571",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bb42c76f-07d5-4221-ab67-669da9a4b979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1487b845-8e7a-4ddd-bb01-19c88f07ccf4",
        "cursor": {
          "ref": "1e12b5ba-8e46-4eb5-b6a7-c6280cc0ac2e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e0ab8a24-3ede-4368-999a-671cf7eb5b7f"
        },
        "item": {
          "id": "1487b845-8e7a-4ddd-bb01-19c88f07ccf4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "94fda17e-5d85-46a3-a659-d294ebae9910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15da3b3b-3b44-4257-9455-563aeb0cdfc9",
        "cursor": {
          "ref": "fb9b3061-4867-4d47-bc7d-1cdc6008184d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "11816f71-bcd0-4ef8-85bc-44ef2edde46f"
        },
        "item": {
          "id": "15da3b3b-3b44-4257-9455-563aeb0cdfc9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bbc1994f-8643-42c4-8dc1-954f4d89e13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e56669-22c7-452a-be44-273f930fe703",
        "cursor": {
          "ref": "f464a385-b968-4d5a-9773-d7a7375ea1fd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a785ced9-f95a-4d69-b717-038b9bd03440"
        },
        "item": {
          "id": "e2e56669-22c7-452a-be44-273f930fe703",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6f0f9b6d-6e60-4869-aaaf-806110ada0b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8389307e-27c7-45f6-a88f-5b35f6b5e960",
        "cursor": {
          "ref": "befba849-3317-4c5e-bd60-3f0805095fdb",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c5245386-5799-4de2-aaa3-b092bd985187"
        },
        "item": {
          "id": "8389307e-27c7-45f6-a88f-5b35f6b5e960",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1b4319d2-60ac-477f-b4f2-2f1db12f6fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa872bdc-e68a-485d-9b85-97ac12af92b0",
        "cursor": {
          "ref": "aeb5dcca-910f-41c6-a018-06d786ed3289",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "96b4c8ac-ad91-4d25-b69f-fbf59d7d88d3"
        },
        "item": {
          "id": "aa872bdc-e68a-485d-9b85-97ac12af92b0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e8a3b910-f8b5-4a4f-8ad1-00929b5d2622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4be052-2fee-49b4-935d-890456a6cd15",
        "cursor": {
          "ref": "9e3ede5c-ec4a-4367-989e-540be72cd74a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2c18f8f5-9258-406a-86e4-e924e48e473c"
        },
        "item": {
          "id": "0f4be052-2fee-49b4-935d-890456a6cd15",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0c1805b8-5f8e-4077-a7a8-fbb7ea92fe46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1702e95e-e388-4242-ae0e-02068a0308ed",
        "cursor": {
          "ref": "bc5e737a-b4c0-4ba9-9fa6-b46548053e7f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "400f4374-bbc6-487a-84c8-a9ab6a629b09"
        },
        "item": {
          "id": "1702e95e-e388-4242-ae0e-02068a0308ed",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fb19150e-eee8-4812-9e4f-5ca41501bda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfeb8f3-6520-4348-a9a8-6c9bd0c5bdf7",
        "cursor": {
          "ref": "0436d3ff-66da-460b-9cb0-e3a3142ed41e",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea061cd0-1792-4de3-a14c-8af9bdb08bf6"
        },
        "item": {
          "id": "3bfeb8f3-6520-4348-a9a8-6c9bd0c5bdf7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1b90cd9a-7a27-4b7d-8f63-de39315d9f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b530a77-e577-4740-ab07-7e15de35b650",
        "cursor": {
          "ref": "6bb3f214-86bd-4ad0-ab3f-a8a8b6f7f524",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1587eca1-e683-4cfd-8171-d14bd23d3fc9"
        },
        "item": {
          "id": "1b530a77-e577-4740-ab07-7e15de35b650",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "94719879-edbd-4e7d-b8a1-9f2a710e35c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785fa16e-8d6a-4744-a36a-a93d515a701c",
        "cursor": {
          "ref": "c721547e-a0fb-4c7b-adb3-000fa25d3880",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "511fa425-7617-420b-84a0-a1b84d58278f"
        },
        "item": {
          "id": "785fa16e-8d6a-4744-a36a-a93d515a701c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "87d6ea42-eba9-4fac-844e-b73bca9ed12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd07ec41-446c-4766-b8d1-7f6edd6aff78",
        "cursor": {
          "ref": "9818c335-b70c-4ac9-9a35-cc8cc4207d70",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "32f58e0e-a1ea-4557-8278-5b8cc2291861"
        },
        "item": {
          "id": "dd07ec41-446c-4766-b8d1-7f6edd6aff78",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5ed27904-106a-4dc4-a1dc-490b3522f003",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f582692-2837-46a3-a211-4f78e535e328",
        "cursor": {
          "ref": "9f904b4a-8e5f-469a-8701-24a2f7e04f32",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bbaef34d-5848-4207-abe8-874b62e67c8c"
        },
        "item": {
          "id": "6f582692-2837-46a3-a211-4f78e535e328",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "135ec6ab-a395-419a-a07b-6558107be827",
          "status": "OK",
          "code": 200,
          "responseTime": 2288,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc0705a-45a6-415e-916a-2416af1b69da",
        "cursor": {
          "ref": "a955538e-7e64-4087-8e96-2ca61463889f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9367e795-e3fd-4b91-916c-da31d46b83c6"
        },
        "item": {
          "id": "0dc0705a-45a6-415e-916a-2416af1b69da",
          "name": "credentials_verify"
        },
        "response": {
          "id": "080002dc-e393-4290-95be-bdec14eb17c9",
          "status": "OK",
          "code": 200,
          "responseTime": 2870,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b5a54f-4cf9-4163-b239-80ce35df6605",
        "cursor": {
          "ref": "1bfcd6be-787f-47bf-be26-95018ec5461b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "af6e6093-3c64-4721-87eb-d8f65642d3f4"
        },
        "item": {
          "id": "03b5a54f-4cf9-4163-b239-80ce35df6605",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "227c73c9-9e46-4b79-94bf-7dc064a94dcf",
          "status": "OK",
          "code": 200,
          "responseTime": 2583,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa8750d-7ebd-4132-af4a-328c6c84f39c",
        "cursor": {
          "ref": "224e50cd-acf7-4b9a-b26b-d19b0b24a24b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97c2d813-91ce-4efb-a6eb-24d2955676dd"
        },
        "item": {
          "id": "7aa8750d-7ebd-4132-af4a-328c6c84f39c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1366386e-8207-4729-ac05-9ecaf5700e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa8750d-7ebd-4132-af4a-328c6c84f39c",
        "cursor": {
          "ref": "224e50cd-acf7-4b9a-b26b-d19b0b24a24b",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97c2d813-91ce-4efb-a6eb-24d2955676dd"
        },
        "item": {
          "id": "7aa8750d-7ebd-4132-af4a-328c6c84f39c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1366386e-8207-4729-ac05-9ecaf5700e90",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4611937b-1609-47b1-b46f-7558b799559f",
        "cursor": {
          "ref": "5afa80f1-daea-49e1-9bcb-bfcdfd3b534a",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "04dc9891-427f-47a9-97de-434938275915"
        },
        "item": {
          "id": "4611937b-1609-47b1-b46f-7558b799559f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7ec86ff8-9f03-4f6c-8f02-d21e1ac778b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78413c0-126a-4b65-9177-692681eb0718",
        "cursor": {
          "ref": "fdd3f8d0-f78a-4053-9948-15637d7533a8",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b66f701b-ae55-45d6-a72f-5803486282a3"
        },
        "item": {
          "id": "d78413c0-126a-4b65-9177-692681eb0718",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7e73a8db-4283-4373-aa28-1e4f0189f1f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}